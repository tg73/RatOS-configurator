"use strict";exports.id=2618,exports.ids=[2618],exports.modules={42618:(e,t,o)=>{o.r(t),o.d(t,{default:()=>handler,getDebugZipFiles:()=>getDebugZipFiles});var r=o(71017),n=o.n(r),a=o(74169),i=o(54230),s=o(9227),l=o.n(s),g=o(73292),c=o(97926),f=o(57147);let getDebugZipFiles=async()=>{if(null==process.env.RATOS_CONFIGURATION_PATH)throw Error("RATOS_CONFIGURATION_PATH environment variable not set");let e=a.Rz.parse(process.env),t="+(cfg|json|ndjson|conf|log)",o=await (0,i.glob)([`${e.RATOS_DATA_DIR}/*.+(cfg|json|conf|log)`,`${e.RATOS_DATA_DIR}/**/*.+(cfg|json|conf|log)`]);o=o.filter((e,t)=>o.indexOf(e)===t);let r=await (0,i.glob)([`${e.KLIPPER_CONFIG_PATH}/../logs/*.${t}`,`${e.LOG_FILE}`,"/var/log/kern.+(log|log.1)"]);r=r.filter((e,t)=>r.indexOf(e)===t);let s=await (0,i.glob)([`${e.KLIPPER_CONFIG_PATH}/+([a-z|A-Z]|-)+(+([0-9])*(_|-)*([0-9])).${t}`]),l=(await (0,i.glob)([`${e.KLIPPER_CONFIG_PATH}/*.${t}`,`${e.KLIPPER_CONFIG_PATH}/**/*.${t}`])).filter(e=>!s.includes(e)&&-1===e.indexOf("printer_data/config/RatOS/"));l=l.filter((e,t)=>l.indexOf(e)===t);let c=await (0,i.glob)(["/var/log/ratos-configurator.log"]),gatherInfo=async(e,t,o)=>{let r=await (0,g.stat)(e),a=e;return r.isSymbolicLink()&&(a=n().resolve(n().dirname(e),await (0,g.readlink)(e)),r=await (0,g.stat)(a)),{path:a,orgPath:e,name:n().basename(e),size:r.size,isFile:r.isFile(),dest:o,source:t}},f=(await Promise.all(o.map(e=>gatherInfo(e,"RatOS","RatOS")).concat(r.map(e=>gatherInfo(e,"logs","logs"))).concat(l.map(e=>gatherInfo(e,"configs","configs"))).concat(c.map(e=>gatherInfo(e,"var/log","var/log"))))).filter(e=>e.isFile);return f},getConsoleHistory=async()=>{let e=JSON.stringify({result:"error",msg:"Failed to fetch console history"});try{e=await (await fetch("http://localhost:7125/server/gcode_store?count=1000")).text()}catch(t){(0,c.j)().error(t,"Couldn't fetch console history: "+(t instanceof Error?t.message:"Unknown error while fetching console history")),e=JSON.stringify({result:"error",msg:t instanceof Error?t.message:"Unknown error while fetching console history"})}return e};async function handler(e,t){try{if("GET"===e.method){let e=await getDebugZipFiles(),o=new(l());e.map((t,r)=>{(0,c.j)().info(t,`Adding file to zip... (${e.length-(r+1)} remaining)`),o.file(n().join(t.dest,t.name),(0,f.createReadStream)(t.path))}),o.file("logs/console_history.json",await getConsoleHistory());try{t.setHeader("Content-Type","application/x-zip"),t.setHeader("Content-Disposition","attachment; filename=ratos-debug.zip"),(0,c.j)().info("Sending zip to client..."),o.generateNodeStream({type:"nodebuffer",streamFiles:!0,compression:"DEFLATE",compressionOptions:{level:1}}).pipe(t.status(200),{end:!0}).on("finish",()=>{t.end()});return}catch(e){return(0,c.j)().error(e instanceof Error?e.message:"Unknown error while generating debug zip"),t.status(200).json({result:"error",data:{message:"Something went wrong, the irony.."}})}}t.status(405).json({result:"error",data:{message:"Method not allowed"}})}catch(e){return(0,c.j)().error(e instanceof Error?e.message:"Unknown error while generating debug zip"),t.status(500).json({result:"error",data:{message:"Something went wrong, the irony.."}})}}}};