exports.id=4756,exports.ids=[4756],exports.modules={26004:(e,r,t)=>{var o={"./extras/sensorless-homing":[24851,4851],"./extras/sensorless-homing.ts":[24851,4851],"./prusa-mini":[35224,5224],"./prusa-mini.ts":[35224,5224],"./prusa-mk3s":[5155,5155],"./prusa-mk3s.ts":[5155,5155],"./v-chonk":[2422,2422],"./v-chonk-3z":[5309,5309],"./v-chonk-3z.ts":[5309,5309],"./v-chonk.ts":[2422,2422],"./v-core-3":[89321,9321],"./v-core-3-idex":[35085,5085],"./v-core-3-idex.ts":[35085,5085],"./v-core-3.ts":[89321,9321],"./v-core-4":[94231,4231],"./v-core-4-hybrid":[95024,5024],"./v-core-4-hybrid.ts":[95024,5024],"./v-core-4-idex":[40589,589],"./v-core-4-idex.ts":[40589,589],"./v-core-4.ts":[94231,4231],"./v-core-pro":[16264,6264],"./v-core-pro.ts":[16264,6264],"./v-minion":[93751,3751],"./v-minion.ts":[93751,3751],"./voron-v01":[19884,9884],"./voron-v01.ts":[19884,9884],"./voron-v24":[21788,1788],"./voron-v24.ts":[21788,1788]};function webpackAsyncContext(e){if(!t.o(o,e))return Promise.resolve().then(()=>{var r=Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r});var r=o[e],i=r[0];return t.e(r[1]).then(()=>t(i))}webpackAsyncContext.keys=()=>Object.keys(o),webpackAsyncContext.id=26004,e.exports=webpackAsyncContext},63902:(e,r,t)=>{"use strict";t.d(r,{S:()=>getDefaultNozzle});let getDefaultNozzle=()=>({diameter:.4,type:"Regular"})},64079:(e,r,t)=>{"use strict";t.d(r,{B:()=>n,a:()=>findPreset});var o=t(38316),i=t(65692);let findPreset=(e,r,t,o,i)=>e.presets?.slice().sort((e,r)=>i?r.run_current-e.run_current:e.run_current-r.run_current).find(e=>e.driver===r.type&&e.voltage===t&&("TMC2240"===r.type||"sense_resistor"in e&&e.sense_resistor===r.senseResistor)&&(null==o||e.run_current===o)),n=o.z.array(i.vF).parse([{id:"generic",title:"Generic Stepper",maxPeakCurrent:2.8},{id:"BONDTECH-42H025H-0704-002",title:"Bondtech LGX Stepper",maxPeakCurrent:.7},{id:"LDO-42STH48-2504AC",title:"LDO-42STH48-2504AC",maxPeakCurrent:2.5,presets:[{run_current:1.1,voltage:24,driver:"TMC2209",sense_resistor:.11,driver_TBL:1,driver_TOFF:3,driver_HEND:0,driver_HSTRT:0},{run_current:1.6,voltage:24,driver:"TMC2209",sense_resistor:.11,driver_TBL:2,driver_TOFF:3,driver_HEND:0,driver_HSTRT:6},{run_current:1.6,voltage:24,driver:"TMC5160",sense_resistor:.075,driver_TBL:2,driver_TOFF:3,driver_HEND:0,driver_HSTRT:6},{run_current:1.768,voltage:48,driver:"TMC5160",sense_resistor:.075,driver_TBL:0,driver_TOFF:4,driver_HEND:0,driver_HSTRT:4}]},{id:"LDO-42STH40-1684AC",title:"LDO-42STH40-1684AC",maxPeakCurrent:1.68,presets:[{run_current:.4,voltage:24,driver:"TMC2130",sense_resistor:.22,driver_IHOLDDELAY:8,driver_TPOWERDOWN:0,driver_TBL:2,driver_TOFF:3,driver_HEND:1,driver_HSTRT:5,driver_PWM_FREQ:2,driver_PWM_GRAD:2,driver_PWM_AMPL:230,driver_PWM_AUTOSCALE:!0,driver_SGT:5},{run_current:.52,voltage:24,driver:"TMC2130",sense_resistor:.22,driver_IHOLDDELAY:8,driver_TPOWERDOWN:0,driver_TBL:2,driver_TOFF:3,driver_HEND:1,driver_HSTRT:5,driver_PWM_FREQ:2,driver_PWM_GRAD:4,driver_PWM_AMPL:240,driver_PWM_AUTOSCALE:!0,driver_SGT:3},{run_current:.8,voltage:24,driver:"TMC2209",sense_resistor:.11,driver_TBL:1,driver_TOFF:3,driver_HEND:3,driver_HSTRT:0},{run_current:1.188,voltage:24,driver:"TMC2209",sense_resistor:.11,driver_TBL:0,driver_TOFF:3,driver_HEND:0,driver_HSTRT:0}]},{id:"LDO-42STH48-2004MAH",title:"LDO-42STH48-2004MAH",maxPeakCurrent:2,fullStepsPerRotation:400},{id:"LDO-42STH48-2004AC",title:"LDO-42STH48-2004AC",maxPeakCurrent:2},{id:"LDO-42STH25-1404MAC",title:"LDO-42STH25-1404MAC",maxPeakCurrent:1.4,fullStepsPerRotation:400,presets:[{voltage:24,driver:"TMC2209",sense_resistor:.11,run_current:.85,driver_TBL:1,driver_TOFF:3,driver_HEND:2,driver_HSTRT:0},{voltage:24,driver:"TMC2209",sense_resistor:.11,run_current:1,driver_TBL:2,driver_TOFF:3,driver_HEND:3,driver_HSTRT:0}]},{id:"LDO-42STH25-1004CL200E",title:"LDO-42STH25-1004CL200E",maxPeakCurrent:1},{id:"LDO-36STH20-1004AHG",title:"LDO-36STH20-1004AHG",maxPeakCurrent:1,presets:[{voltage:24,driver:"TMC2209",sense_resistor:.11,run_current:.707,driver_TBL:0,driver_HEND:6,driver_HSTRT:7,driver_TOFF:4}]},{id:"LDO-36STH17-1004AHG",title:"LDO-36STH17-1004AHG",maxPeakCurrent:1},{id:"LDO-35STH48-1684AH",title:"LDO-35STH48-1684AH",maxPeakCurrent:1.68}])},54517:(e,r,t)=>{"use strict";t.d(r,{e:()=>getBoardSerialPath,m:()=>getBoardChipId});let getBoardSerialPath=(e,r)=>e.isHost&&"serialPath"in e&&null!=e.serialPath?e.serialPath:"/dev/RatOS/"+getBoardChipId(e,r),getBoardChipId=(e,r)=>{if(e.isHost)throw Error("Cannot get chip ID for a host board");return e.id+(r?`-${r.getSerialSuffix()}`:"")}},1455:(e,r,t)=>{"use strict";t.d(r,{D:()=>ToolheadHelper});var o=t(52890),i=t(65692),n=t(84541),a=t(63902),s=t(56988),l=t.n(s);let ToolheadHelper=class ToolheadHelper{constructor(e){this.config=e}hasToolboard(){return null!=this.config.toolboard}getToolboard(){return this.config.toolboard}getMotionStepperName(){return this.config.axis===i.po.dual_carriage?"dual_carriage":`stepper_${this.getMotionAxis()}`}getToolboardName(){if(null==this.config.toolboard)throw Error(`Toolhead T${this.getTool()} does not have a toolboard`);return`toolboard_${this.getShortToolName()}`}getShortToolName(){return`t${this.getTool()}`}getDescription(){return this.config.description??"the printer's toolhead"}getMotionAxis(){return this.config.axis===i.po.dual_carriage?i.po.dual_carriage:i.po.x}getExtruderAxis(){return this.config.axis===i.po.dual_carriage?i.po.extruder1:i.po.extruder}getToolCommand(){return`T${this.getTool()}`}getTool(){return this.config.axis===i.po.dual_carriage?1:0}getSerialSuffix(){return`t${this.getTool()}`}getExtruder(){return this.config.extruder}getHotend(){return this.config.hotend}getNozzle(){return this.config.nozzle??(0,a.S)()}getThermistor(){return this.config.thermistor}getXEndstop(){return this.config.xEndstop}getYEndstop(){return this.config.yEndstop}getXAccelerometer(){return this.config.xAccelerometer}getYAccelerometer(){return this.config.yAccelerometer}getXAccelerometerName(){switch(this.getXAccelerometer()?.id){case"controlboard":return"controlboard";case"toolboard":if(this.hasToolboard())return this.getToolboardName();case"sbc":return"rpi";case"beacon":return"beacon";default:return"controlboard"}}getYAccelerometerName(){switch(this.getYAccelerometer()?.id){case"controlboard":return"controlboard";case"toolboard":if(this.hasToolboard())return this.getToolboardName();case"sbc":return"rpi";case"beacon":return"beacon";default:return"controlboard"}}getChangeSet(e){if(null==e)return null;let r={};Object.keys(e).forEach(t=>{let o=this.getConfig()[t],i=e[t];if(null!=o&&null==i||null==o&&null!=i){r[t]=i;return}o&&i&&("object"==typeof o&&"id"in o&&"object"==typeof i&&"id"in i?o.id!==i.id&&(r[t]=i):l()(o,i)||(r[t]=i))});let t=n.b2.safeParse(r);return t}getProbe(){return this.config.probe}getPartFan(){return this.config.partFan}getHotendFan(){return this.config.hotendFan}serialize(){return(0,o.m6)(this.config)}getConfig(){return{...this.config}}}},22042:(e,r,t)=>{"use strict";t.d(r,{ik:()=>cacheAsyncDirectoryFn,mw:()=>cacheAsyncMetadataFn,oA:()=>n,w1:()=>cacheMetadataFn,zo:()=>s});var o=t(24580),i=t.n(o);let n=new(i())({useClones:!1}),a=new Map,cacheAsyncDirectoryFn=(e,r)=>async(t,o)=>{let i=r.get(`${t}`);if(null==i){let i=a.get(`${t}`);null==i&&(i=e(t,o),a.set(`${t}`,i));let n=await i;return r.set(`${t}`,n),n}return i},s=new(i())({useClones:!1}),l=new Map,cacheAsyncMetadataFn=(e,r,t)=>async o=>{let i=t.get(`${r}-${o}`);if(null==i){let i=l.get(`${r}-${o}`);null==i&&(i=e(o),l.set(`${r}-${o}`,i));let n=await i;return t.set(`${r}-${o}`,n),n}return i},cacheMetadataFn=(e,r,t)=>o=>{let i=t.get(`${r}-${o}`);if(null==i){let i=e(o);return t.set(`${r}-${o}`,i),i}return i}},31452:(e,r,t)=>{"use strict";t.d(r,{M_:()=>searchFileByLine,Sw:()=>extractLinesFromFile,u5:()=>replaceInFileByLine,xg:()=>getScriptRoot});var o=t(57147),i=t(73292),n=t(22037),a=t(14521),s=t(97926);let getScriptRoot=()=>process.env.RATOS_SCRIPT_DIR??__dirname.split("configurator/")[0]+"configurator/scripts/",replaceInFileByLine=async(e,r,t)=>{if(!(0,o.existsSync)(e))throw Error("File does not exist: "+e);let l=(0,o.createReadStream)(e,{highWaterMark:1048576}),d=(0,o.createWriteStream)(e+".tmp",{flags:"w"}),p=(0,a.createInterface)({input:l,crlfDelay:1/0}),c=new Promise((e,r)=>{p.on("close",()=>{e(null)})}),u=0,h=0,g=0;try{for await(let o of p){g++;let i=o;r instanceof Function?i=r(o,g):null===t?(r instanceof RegExp?o.match(r):o.includes(r))&&(i=null):null==t?(0,s.j)().warn(`replaceInFileByLine (${e}): replacer wasn't provided, writing line as is`):i=o.replace(r,t),null!==i?(d.write(i+n.EOL),i!==o&&u++):h++}}catch(r){throw(0,s.j)().error(`replaceInFileByLine (${e}): error encountered during replace operation, original file will not be changed. ${r instanceof Error?r.message:r instanceof String?r:"Unknown error"}`),l.destroy(),d.destroy(),r}finally{p.close(),await c,await new Promise((e,r)=>{d.close(t=>{if(t)throw r(t);e(null)})}),await new Promise((e,r)=>{l.close(t=>{if(t)throw r(t);e(null)})})}return u+h>0&&await (0,i.copyFile)(e+".tmp",e),await (0,i.unlink)(e+".tmp"),{linesChanged:u,linesDeleted:h,linesTotal:g}},searchFileByLine=async(e,r)=>{if(!(0,o.existsSync)(e))throw Error("File does not exist: "+e);let t=(0,o.createReadStream)(e),i=(0,a.createInterface)({input:t,crlfDelay:1/0}),n=!1,s=0;for await(let e of i)!n&&(s++,(r instanceof RegExp?e.match(r):e.includes(r))&&(n=s));return await new Promise((e,r)=>{t.close(t=>{if(t)throw r(t);e(null)})}),n},extractLinesFromFile=async(e,r,t)=>{if(!(0,o.existsSync)(e))throw Error("File does not exist: "+e);let i=(0,o.createReadStream)(e),n=(0,a.createInterface)({input:i,crlfDelay:1/0}),s=[],l=0;for await(let e of n)++l>=r&&l<=(t??1/0)&&s.push(e);return await new Promise((e,r)=>{i.close(t=>{if(t)throw r(t);e(null)})}),s.join("\n")}},37868:(e,r,t)=>{"use strict";t.d(r,{W:()=>klipperRestart,z:()=>queryPrinterState});var o,i=t(38316),n=t(97926);let a=i.z.object({eventtime:i.z.number()}),s=a.extend({status:i.z.object({print_stats:i.z.object({state:i.z.union([i.z.literal("paused"),i.z.literal("printing"),i.z.literal("complete"),i.z.literal("error"),i.z.literal("canceled"),i.z.literal("standby")]).optional()})})}),l=i.z.object({result:a.passthrough()});!function(e){e[e.MOONRAKER_OFFLINE=0]="MOONRAKER_OFFLINE",e[e.MOONRAKER_INTERNAL_ERROR=1]="MOONRAKER_INTERNAL_ERROR"}(o||(o={}));let parseMoonrakerHTTPResponse=async(e,r)=>{if(200!==e.status){let r=await e.json();if((0,n.j)().error(r,"Moonraker internal error"),null!=r&&"object"==typeof r&&"error"in r&&"string"==typeof r.error){let e=Error(r.error);throw e.cause=1,e}let t=Error("Error fetching moonraker response");throw t.cause=0,t}let t=await e.json();try{let e=l.parse(t);return{...e,result:r.parse(e.result)}}catch(e){throw(0,n.j)().error("Error parsing moonraker response"),(0,n.j)().error(t),e}},queryPrinterState=async()=>{try{let e=await fetch("http://localhost:7125/printer/objects/query?print_stats");if(e)return(await parseMoonrakerHTTPResponse(e,s)).result.status.print_stats.state}catch(e){if(e instanceof Error&&(e.cause===o.MOONRAKER_OFFLINE||e.cause===o.MOONRAKER_INTERNAL_ERROR));else if(e instanceof i.ZodError);else throw e}return"error"},klipperRestart=async(e=!1)=>!!(e||["error","complete","canceled","standby",void 0].includes(await queryPrinterState()))&&(await fetch("http://localhost:7125/printer/restart",{method:"POST"}),!0)},33122:(e,r,t)=>{"use strict";t.d(r,{AU:()=>stripIncludes,BB:()=>parseMetadata,ND:()=>replaceLinesStartingWith,NH:()=>f,Qk:()=>parseBoardPinConfig,rc:()=>stripCommentLines,sV:()=>stripDriverSections,up:()=>readInclude});var o=t(32081),i=t(57147),n=t(71017),a=t.n(n),s=t(14521),l=t(73837),d=t(74169),p=t(35597),c=t(31452),u=t(97926),h=t(22042);let parseMetadata=async(e,r)=>{if(""===e.trim())return null;let t=await (0,l.promisify)(o.exec)(`sed -n '/^# {/{:a; N; /\\n# }/!ba; p}' ${e}`),i=t.stdout.split("\n").map(e=>e.trim()).filter(e=>""!==e).map(e=>0===e.indexOf("#")?e.substring(1):e);if(0===i.length)return null;try{let t=JSON.parse(i.join("\n"));t.path=e;let o=e.split("/").pop();if(null==o)throw Error("File name couldn't be parsed from path: "+e);return t.id=o.replace(/\.cfg$/g,""),r.parse(t)}catch(r){throw r instanceof Error&&(0,u.j)().error(r.message),Error("Failed to parse JSON from file: "+e+" with content: "+i.join("\n"))}},parsePinValue=e=>{if(!("null"===e||e.startsWith("<")&&e.endsWith(">")))return e},g=(0,h.mw)(async e=>{let r=(0,c.xg)(),t=await (0,l.promisify)(o.exec)(`python3 ${a().join(r,"initojson.py")} ${e}`),i=JSON.parse(t.stdout);if(null==i)throw Error("Failed to parse config file: "+e);let n=Object.keys(i).find(e=>e.startsWith("board_pins"));if(null==n)throw Error("Failed to find board pin section in config file: "+e);let s=i[n].aliases.map(e=>e.replace(",","")),d=i[n].aliases.filter(e=>!e.includes("="));if(d.length>0)throw Error('Board pin aliases do not parse correctly, got "'+d.join(", ")+'"');let p={};return s.forEach(e=>{let r=e.split("=");if(r.length>2)throw Error('Board pin aliases do not parse correctly, got "'+e+'"');p[r[0]]=parsePinValue(r[1])}),p},"parsePinAlias",h.zo),parseBoardPinConfig=async(e,r)=>{let t=a().join(e.path,e.isToolboard?"toolboard-config.cfg":r&&null!=e.extruderlessConfig?e.extruderlessConfig:"config.cfg"),o=e.isToolboard?p.Oy:r?p.Fh:p.MW;return o.parse(await g(t))};(0,h.mw)(async e=>{if(!(0,i.existsSync)(e))throw Error("Firmware config file does not exist: "+e);let r=(0,i.createReadStream)(e),t=(0,s.createInterface)({input:r,crlfDelay:1/0}),o='CONFIG_MCU="';for await(let e of t)if(e.startsWith(o))return e.substring(o.length,e.length-2);throw Error("Failed to find MCU in firmware config file: "+e)},"extractMcuFromFirmwareConfig",h.zo);let f=(0,h.w1)(e=>{let r=d.Rz.parse(process.env),t=a().join(r.RATOS_CONFIGURATION_PATH,"extruders",e+".cfg"),i=(0,c.xg)(),n=(0,o.execSync)(`python3 ${a().join(i,"initojson.py")} ${t}`),s=JSON.parse(n.toString());if(null==s)throw Error("Failed to parse config file: "+t);let l=Object.keys(s).find(e=>e.startsWith("extruder"));if(null==l)throw Error("Failed to find extruder section in config file: "+t);let p=s[l];if(null==p||null==p.rotation_distance)throw Error("Failed to find extruder rotation distance");return p.rotation_distance},"getExtruderRotationDistance",h.zo),readInclude=e=>{let r=d.Rz.parse(process.env),t=a().join(r.RATOS_CONFIGURATION_PATH,e);if(!(0,i.existsSync)(t))throw Error("Included file doesn't exist: "+e);return(0,i.readFileSync)(t,"utf-8")},stripIncludes=e=>stripLinesStartingWith(e,"[include"),stripCommentLines=e=>stripLinesStartingWith(e,"#"),stripLinesStartingWith=(e,r)=>e.split("\n").filter(e=>!e.trim().startsWith(r)).join("\n"),stripDriverSections=e=>{let r=!1;return e.split("\n").map(e=>{if(e.trim().startsWith("[tmc")&&(r=!0),r){if(!e.trim().startsWith("["))return null;r=!1}return e}).filter(e=>null!=e).join("\n")},replaceLinesStartingWith=(e,r,t)=>e.split("\n").map(e=>e.trim().startsWith(r)?t:e).filter(e=>null!==e).join("\n")},25716:(e,r,t)=>{"use strict";t.d(r,{$6:()=>savePrinterSettings,OR:()=>getLastPrinterSettings,PV:()=>hasLastPrinterSettings});var o=t(57147),i=t(74169),n=t(45227),a=t(71017),s=t.n(a),l=t(73292);let d=i.Rz.parse(process.env),p=s().join(d.RATOS_DATA_DIR,"last-printer-settings.json"),getLastPrinterSettings=async(e,r)=>{let t=e??p;if(!(0,o.existsSync)(t))throw Error("Couldn't find printer settings file: "+t);return r?await (0,n.uz)(t):await (0,n.fM)(t)},savePrinterSettings=async e=>await (0,l.writeFile)(s().join(d.RATOS_DATA_DIR,"last-printer-settings.json"),JSON.stringify(e)),hasLastPrinterSettings=()=>(0,o.existsSync)(p)},36029:(e,r,t)=>{"use strict";t.d(r,{$:()=>runSudoScript});var o=t(32081),i=t(71017),n=t.n(i),a=t(31452);let runSudoScript=(e,...r)=>{let t=(0,a.xg)();return new Promise((i,a)=>{try{let s=(0,o.spawn)("sudo",[n().join(t,e),...r]),l="",d="";s.stdout.on("data",e=>{l+=e}),s.stderr.on("data",e=>{d+=e}),s.on("error",e=>{a(e)}),s.on("exit",e=>{0===e?i({stdout:l,stderr:d}):a("An error occured while attempting to run script: \n"+l+"\n"+d)}),s.on("close",e=>{0===e?i({stderr:d,stdout:l}):a(d)})}catch(e){if(e instanceof Error)return a(e.message);a("An error occured while attempting to run script")}})}},82557:(e,r,t)=>{"use strict";t.d(r,{DC:()=>getBoards,Ok:()=>getToolboards,px:()=>E});var o=t(38316),i=t(57147),n=t.n(i),a=t(32081),s=t(73837),l=t(56368),d=t(36029),p=t(35597),c=t(23637),u=t(71017),h=t.n(u),g=t(54230),f=t(84541),_=t(54517),m=t(73292),b=t(74169),z=t(31452),x=t(1455),T=t(45227),P=t(22042),y=t(65692),v=t(33122),w=t(25716),C=t(37868);let $=o.z.object({boardPath:o.z.string().optional(),toolhead:f.Qk.optional(),controlboard:p.WQ.optional()}),detect=(e,r)=>n().existsSync((0,_.e)(e,r)),getBoards=async()=>{let e=P.oA.get("boards");if(null!=e&&e.length>0)return e.map(e=>(e.detected=detect(e),e));let r=await (0,g.glob)(`${process.env.RATOS_CONFIGURATION_PATH}/boards/*/board-definition.json`),t=r.map(e=>""===e.trim()?null:{...JSON.parse(n().readFileSync(e).toString()),path:p.Ui.parse(e.replace("board-definition.json",""))}).filter(Boolean).map(e=>{e.detected=detect(e);try{return p.Ai.parse(e)}catch(r){throw new l.TRPCError({code:"INTERNAL_SERVER_ERROR",message:`Invalid board definition for ${e.name} in ${e.path}`,cause:r})}});return P.oA.set("boards",t),t},updateDetectionStatus=async(e,r)=>e.map(e=>(e.detected=detect(e,r),e)),compileFirmware=async(e,r,t)=>{let o=null,n=b.Rz.parse(process.env);try{let a=h().join(n.KLIPPER_DIR,".config");if(await (0,m.copyFile)(h().join(e.path,"firmware.config"),a),e.isHost||await (0,z.u5)(a,/CONFIG_USB_SERIAL_NUMBER=".+"/g,`CONFIG_USB_SERIAL_NUMBER="${(0,_.m)(e,r)}"`),t)return(0,i.readFileSync)(a).toString();let s=e.firmwareBinaryName,l=h().extname(s),p=h().join(n.KLIPPER_DIR,"out",`klipper${l}`),c=h().join(n.RATOS_DATA_DIR,s);if((0,i.existsSync)(c)&&await (0,m.unlink)(c),o=await (0,d.$)("klipper-compile.sh"),(0,i.existsSync)(p))await (0,m.copyFile)(p,c);else if(!e.isHost)throw Error(`Could not find compiled firmware at ${p}`);return o}catch(t){let r=t instanceof Error?t.message:t;throw new l.TRPCError({code:"INTERNAL_SERVER_ERROR",message:`Could not compile firmware for ${e.name}: ${r} 

 ${o?.stdout}`,cause:t})}},getBoardsWithoutHost=e=>e.filter(e=>!e.isHost),getToolboards=e=>o.z.array(p.m9).parse(e.filter(e=>e.isToolboard)),getBoardsWithDriverCount=(e,r)=>e.filter(e=>e.driverCount>=r||null!=e.extruderlessConfig&&e.driverCount>=r-1),S=(0,c.qR)(async({ctx:e,next:r,meta:t,rawInput:i})=>{let n=null,a=null,s=$.safeParse(i);try{n=await getBoards();try{a=s.success&&s.data.toolhead?new x.D(await (0,T.dj)(s.data.toolhead,{controlboard:s.data.controlboard},n)):void 0,n=await updateDetectionStatus(n,a)}catch(e){if(e instanceof o.ZodError)throw new l.TRPCError({code:"INTERNAL_SERVER_ERROR",message:`Toolhead configuration cannot be deserialized, please check the configuration.
${Object.entries(e.flatten().fieldErrors).map(([e,r])=>`${e}: ${r}`).join("\n")}`,cause:e});throw new l.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Toolhead configuration cannot be deserialized, please check the configuration.",cause:e})}t?.includeHost!==!0&&(n=getBoardsWithoutHost(n))}catch(e){if(e instanceof l.TRPCError)throw e;throw new l.TRPCError({code:"INTERNAL_SERVER_ERROR",message:`Invalid board definition(s) in ${process.env.RATOS_CONFIGURATION_PATH}/boards.`,cause:e})}let d=null;if(t?.boardRequired&&(!s.success||null==s.data.boardPath))throw new l.TRPCError({code:"PRECONDITION_FAILED",message:"boardPath parameter missing."});if(s.success&&null!=s.data.boardPath&&null==(d=n.find(e=>e.path===s.data.boardPath)))throw new l.TRPCError({code:"PRECONDITION_FAILED",message:`No supported board exists for the path ${s.data.boardPath}`});return r({ctx:{...e,boards:n,board:d,toolhead:a}})}),R=c.$y.use(S),E=(0,c.Nd)({boards:R.input(o.z.object({boardFilters:o.z.object({toolboard:o.z.boolean().optional(),driverCountRequired:o.z.number().optional()}).optional(),toolhead:f.Qk.optional(),controlboard:p.WQ.optional()})).output(o.z.array(p.Ai)).query(({ctx:e,input:r})=>{let t=e.boards;return r.boardFilters?.toolboard===!0&&(t=getToolboards(t)),r.boardFilters?.driverCountRequired!=null&&(t=getBoardsWithDriverCount(t,r.boardFilters.driverCountRequired)),t}),detect:R.input($).meta({boardRequired:!0}).query(({ctx:e,input:r})=>{if(null==e.board)throw new l.TRPCError({code:"PRECONDITION_FAILED",message:`No supported board exists for the path ${r.boardPath}`});return detect(e.board,e.toolhead)}),unidentifiedDevices:R.input($).query(async({ctx:e})=>{let r=e.boards.filter(e=>e.detected).map(r=>n().realpathSync((0,_.e)(r,e.toolhead)));return(await (0,g.glob)("/dev/serial/by-id/usb-Klipper*")).filter(e=>!r.includes(n().realpathSync(e)))}),boardVersion:R.input($).meta({boardRequired:!0}).query(async({ctx:e,input:r})=>{if(null==e.board)throw new l.TRPCError({code:"PRECONDITION_FAILED",message:`No supported board exists for the path ${r.boardPath}`});if(null==process.env.KLIPPER_ENV||""===process.env.KLIPPER_ENV.trim())throw new l.TRPCError({code:"PRECONDITION_FAILED",message:"Environment variable KLIPPER_ENV is missing"});if(null==process.env.KLIPPER_DIR||""===process.env.KLIPPER_DIR.trim())throw new l.TRPCError({code:"PRECONDITION_FAILED",message:"Environment variable KLIPPER_DIR is missing"});let t=await (0,C.z)();if(!["error","complete","canceled","standby",void 0].includes(t))throw new l.TRPCError({code:"PRECONDITION_FAILED",message:`Printer is busy, board cannot be queried at this time without interrupting operations. Klipper print state reported as "${t}".`});let o=(0,z.xg)(),i={stdout:""},n=null;try{await fetch("http://127.0.0.1:7125/machine/services/stop?service=klipper",{method:"POST"}),i=await (0,s.promisify)(a.exec)(`${h().join(process.env.KLIPPER_ENV,"bin","python")} ${h().join(o,"check-version.py")} ${(0,_.e)(e.board,e.toolhead)}`,{env:{KLIPPER_DIR:process.env.KLIPPER_DIR,NODE_ENV:"production"}})}catch(e){n=e}finally{await fetch("http://127.0.0.1:7125/machine/services/start?service=klipper",{method:"POST"})}if(n)throw new l.TRPCError({code:"INTERNAL_SERVER_ERROR",cause:n});return i.stdout.match(/Version:\s(v\d+\.\d+\.\d+-\d+-\w+)/)?.[1]}),compile:R.input(o.z.object({boardPath:o.z.string(),toolhead:f.Qk.optional()})).meta({boardRequired:!0}).mutation(async({ctx:e,input:r})=>{if(null==e.board)throw new l.TRPCError({code:"PRECONDITION_FAILED",message:`No supported board exists for the path ${r.boardPath}`});return await compileFirmware(e.board,e.toolhead),"success"}),reversePinLookup:R.meta({boardRequired:!0}).input(o.z.object({axis:o.z.nativeEnum(y.po),canUseExtruderlessConfigs:o.z.boolean(),boardPath:o.z.string()})).query(async({ctx:e,input:r})=>{if(null==e.board)return;let t=null!=e.board.extruderlessConfig&&r.canUseExtruderlessConfigs,o=await (0,v.Qk)(e.board,t),i=r.axis===y.po.z?"z0":r.axis===y.po.extruder?"e":y.po.extruder1===r.axis?"e1":r.axis;return(0,p.MO)({step_pin:o[`${i}_step_pin`],dir_pin:o[`${i}_dir_pin`]},e.board)??null}),flashAllConnected:R.meta({boardRequired:!1,includeHost:!0}).mutation(async({ctx:e})=>{let r=await (0,w.OR)(),t=r.toolheads.map(e=>new x.D(e)),o=e.boards.flatMap(e=>{if(e.flashScript&&e.compileScript&&!0!==e.disableAutoFlash){if(detect(e))return{board:e,toolhead:null};let r=t.map(r=>detect(e,r)?{board:e,toolhead:r}:null).filter(Boolean);return r}return null}).filter(Boolean),i=[];for(let e of o)try{let r=p.AN.parse(e.board);await compileFirmware(e.board,e.toolhead);let t=null;try{let o=h().join(r.path.replace(`${process.env.RATOS_CONFIGURATION_PATH}/boards/`,""),r.flashScript);t=e.toolhead?await (0,d.$)("flash-path.sh",(0,_.e)(e.board,e.toolhead)):await (0,d.$)("board-script.sh",o)}catch(o){let r=o instanceof Error?o.message:o;throw new l.TRPCError({code:"INTERNAL_SERVER_ERROR",message:`Could not flash firmware to ${e.board.name}: 

 ${t?.stdout??r}`,cause:o})}i.push({board:e.board,result:"success",message:`${e.board.manufacturer} ${e.board.name} on ${e.toolhead?` ${e.toolhead.getToolCommand()}`:""} was successfully flashed.`})}catch(t){let r=t instanceof Error?t.message:t;i.push({board:e.board,result:"error",message:"string"==typeof r?r:`Unknown error occured while flashing ${e.board.manufacturer} ${e.board.name} on ${e.toolhead?` ${e.toolhead.getToolCommand}`:""}`})}let n=i.filter(e=>"success"===e.result).length,a=`${n}/${o.length} connected board(s) flashed successfully.
`;return i.map(e=>{"error"===e.result?a+=`${e.board.manufacturer} ${e.board.name} failed to flash: ${e.message}
`:a+=`${e.board.manufacturer} ${e.board.name} was successfully flashed.
`}),{report:a,flashResults:i}}),flashViaPath:R.input(o.z.object({boardPath:o.z.string(),flashPath:o.z.string().optional(),toolhead:f.Qk.optional()})).meta({boardRequired:!0}).mutation(async({ctx:e,input:r})=>{if(null==e.board)throw new l.TRPCError({code:"PRECONDITION_FAILED",message:`No supported board exists for the path ${r.boardPath}`});if(null==e.board.flashScript)throw new l.TRPCError({code:"PRECONDITION_FAILED",message:`${e.board.name} does not support automatic flashing via serial path.`});if(r.flashPath&&!n().existsSync(r.flashPath))throw new l.TRPCError({code:"PRECONDITION_FAILED",message:`The path ${r.flashPath} does not exist.`});await compileFirmware(e.board,e.toolhead);let t=null;try{let o=h().join(e.board.path.replace(`${process.env.RATOS_CONFIGURATION_PATH}/boards/`,""),e.board.flashScript);t=r.flashPath?await (0,d.$)("flash-path.sh",(0,_.e)(e.board,e.toolhead),r.flashPath):e.toolhead?await (0,d.$)("flash-path.sh",(0,_.e)(e.board,e.toolhead)):await (0,d.$)("board-script.sh",o)}catch(o){let r=o instanceof Error?o.message:o;throw new l.TRPCError({code:"INTERNAL_SERVER_ERROR",message:`Could not flash firmware to ${e.board.name}: 

 ${t?.stdout??r}`,cause:o})}if(!detect(e.board,e.toolhead))throw new l.TRPCError({code:"INTERNAL_SERVER_ERROR",message:`Could not flash firmware to ${e.board.name}, device did not show up at expected path.: 

 ${t.stdout}`});return"success"}),dfuDetect:R.input($).meta({boardRequired:!0}).query(async({ctx:e,input:r})=>{let t=parseInt((await (0,s.promisify)(a.exec)('lsusb | grep "0483:df11" | wc -l')).stdout,10);if(1===t)return!0;if(t>1)throw new l.TRPCError({code:"PRECONDITION_FAILED",message:"Multiple DFU devices detected, please disconnect the other devices."});return!1}),dfuFlash:R.input($).meta({boardRequired:!0}).mutation(async({ctx:e,input:r})=>{if(null!=e.board){if(null==e.board.dfu)throw new l.TRPCError({code:"PRECONDITION_FAILED",message:"Board does not support DFU."});try{await compileFirmware(e.board,e.toolhead)}catch(t){let r=t instanceof Error?t.message:t;throw new l.TRPCError({code:"INTERNAL_SERVER_ERROR",message:`Could not compile firmware for ${e.board.name}: 

 ${r}`,cause:t})}try{let r=await (0,d.$)("dfu-flash.sh",(0,_.e)(e.board,e.toolhead));return r.stdout}catch(e){throw new l.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to flash device",cause:e})}}})})},45227:(e,r,t)=>{"use strict";t.d(r,{dj:()=>deserializeToolheadConfiguration,VZ:()=>getPrinters,fM:()=>loadSerializedConfig,Cu:()=>ez,uz:()=>readSerializedConfig});var o=t(38316),i=t(97926),n=t(33122),a=t(89850),s=t(57147),l=t(74169),d=t(71017),p=t.n(d),c=t(65692),u=t(84541),h=t(35597);let g="";if(process.env.RATOS_CONFIGURATION_PATH){let e=l.Rz.parse(process.env);g=p().join(e.RATOS_CONFIGURATION_PATH,"printers")}let f=o.z.object({velocity:o.z.number().min(0).describe("Maximum velocity for this printer"),accel:o.z.number().min(0).describe("Maximum acceleration for this printer"),z_velocity:o.z.number().min(0).describe("Maximum z velocity for this printer"),z_accel:o.z.number().min(0).describe("Maximum z acceleration for this printer"),square_corner_velocity:o.z.number().min(0).default(5).describe("Maximum square corner velocity for this printer"),travel_velocity:o.z.number().min(0).default(200).describe("Maximum travel velocity for this printer"),travel_accel:o.z.number().min(0).default(3e3).describe("Maximum travel velocity for this printer")}).strict(),_=o.z.object({x:o.z.number().min(0).describe("The print volume in X"),y:o.z.number().min(0).describe("The print volume in Y"),z:o.z.number().min(0).describe("The print volume in Z")}).describe("The print volume of a printer"),m=o.z.object({id:o.z.string().transform(e=>"caramba-chonk"===e?"v-chonk":e.startsWith("caramba-")?e.replace("caramba-","v-core-4-"):e),name:o.z.string().describe("The name of the printer"),releaseDate:o.z.string().optional().describe("The release date of the printer in ISO 8601/RFC3339 eg. 2023-12-31"),description:o.z.string().describe("A description of the printer"),manufacturer:o.z.string().describe("The name of the manufacturer of this printer"),documentationLink:o.z.string().describe("Link to the RatOS documentation for this printer"),image:o.z.string().describe("Link to an image of the printer"),sizes:o.z.record(o.z.string(),_).describe("Size options for this printer"),template:o.z.string().describe("Printer.cfg template for this printer"),path:o.z.string().startsWith(g),driverCountRequired:o.z.number().describe("Number of drivers required for this printer"),kinematics:o.z.union([o.z.literal("cartesian"),o.z.literal("corexy"),o.z.literal("hybrid-corexy"),o.z.literal("hybrid-corexy-idex")]).optional(),bedMargin:o.z.object({x:o.z.tuple([o.z.number().default(0),o.z.number().default(0)]),y:o.z.tuple([o.z.number().default(0),o.z.number().default(0)])}).describe("Margin of available movement around the bed for this printer").default({x:[0,0],y:[0,0]}),speedLimits:o.z.object({basic:f,performance:f.optional()}).strict().describe("Speed limits for this printer"),defaults:o.z.object({toolheads:o.z.array(u.Qk).describe("Default toolheads for this printer"),board:h.WQ.describe("Default board for this printer. Should be the name of the board directory."),rails:o.z.array(c.r).describe("Default rails for this printer"),controllerFan:a.XG.shape.id.optional().describe("Default controller fan for this printer")}).strict().describe("Default hardware for this printer")}).describe("A RatOS supported 3d printer"),b=m.extend({defaults:m.shape.defaults.extend({toolheads:o.z.array(u.x8)}).strict()});var z=t(1455);let x=o.z.union([_,o.z.number(),o.z.string()]).nullable().optional(),T=o.z.object({printer:m,controlboard:h.$l,toolheads:o.z.array(u.x8).min(1).max(2),size:x,controllerFan:a.XG,performanceMode:o.z.boolean().default(!1),stealthchop:o.z.boolean().default(!1),standstillStealth:o.z.boolean().default(!1),rails:o.z.array(c.JQ)}).strict().transform((e,r)=>{if(null==e.size)e.size=e.printer.sizes[Object.keys(e.printer.sizes)[0]];else if("number"==typeof e.size||"string"==typeof e.size){let t=e.printer.sizes[e.size.toString()];if(null==t)return r.addIssue({code:o.z.ZodIssueCode.custom,message:`Size ${e.size} is not a valid size for a ${e.printer.name} config`}),o.z.NEVER;e.size=t}return e}),P=T.superRefine((e,r)=>{let t=e.toolheads.map(e=>e.toolboard).filter(Boolean).length;t+e.controlboard.driverCount<e.printer.driverCountRequired&&r.addIssue({code:o.z.ZodIssueCode.too_small,message:`Your combination of controlboard and toolboards do not have enough stepper drivers for a ${e.printer.name} config`,minimum:e.printer.driverCountRequired,inclusive:!0,type:"number"})}).superRefine((e,r)=>{let t=e.toolheads.map(e=>new z.D(e)),i=e.rails.map((i,n)=>{let a=t.find(e=>e.getExtruderAxis()===i.axis);if(null!=i.motorSlot){let s=e.rails.filter(e=>{let r=t.find(r=>r.getExtruderAxis()===e.axis);return e.axis!==i.axis&&a?.hasToolboard()==null&&r?.hasToolboard==null&&e.motorSlot===i.motorSlot}),railName=e=>"extruder"===e?"Extruder T0":e===c.po.extruder1?"Extruder T1":"Stepper "+e.toLocaleUpperCase();return 1===s.length?r.addIssue({code:o.z.ZodIssueCode.custom,message:`Motor slot ${i.motorSlot} is already in use on ${railName(s[0].axis)}`,path:["rails",n,"motorSlot"]}):s.length>1&&r.addIssue({code:o.z.ZodIssueCode.custom,message:`Motor slot ${i.motorSlot} is already in use on ${s.slice(0,-1).map(e=>railName(e.axis)).join(", ")} and ${railName(s[s.length-1].axis)}`,path:["rails",n,"motorSlot"]}),s.length>0?{rail:i,conflicts:s}:0}return null}).filter(Boolean);i.length>0&&r.addIssue({code:o.z.ZodIssueCode.custom,message:"Motor slot conflicts detected"})}),y=T.innerType().extend({printer:m.shape.id,controlboard:h.WQ,toolheads:o.z.array(u.Qk).min(1).max(2),controllerFan:a.XG.shape.id,rails:o.z.array(c.Ah)}).strict(),v=T.innerType().extend({toolheads:o.z.array(u.b2).min(1).max(2)}).strict().partial().optional(),w=y.extend({toolheads:o.z.array(u.ZF).min(1).max(2)}).strict().partial(),xEndstopOptions=(e,r)=>{let t=[];return r?.toolboard!=null&&t.push({id:"endstop-toolboard",title:"Physical Endstop",badge:[{color:"sky",children:`${r.toolboard.name}${null!=r.toolNumber&&` T${r.toolNumber}`}`}]}),r?.axis===c.po.x&&(t.push({id:"endstop",title:"Physical Endstop",badge:[{color:"purple",children:e?.controlboard?.name??"Control Board"}]}),t.push({id:"sensorless",title:"Sensorless Homing",badge:[{color:"purple",children:e?.controlboard?.name??"Control Board"}]})),t},yEndstopOptions=(e,r)=>[{id:"endstop",title:"Physical Endstop",badge:[{color:"purple",children:e?.controlboard?.name??"Control Board"}]},{id:"sensorless",title:"Sensorless Homing",badge:[{color:"purple",children:e?.controlboard?.name??"Control Board"}]}],sensorlessXTemplate=(e,r)=>`
# Sensorless homing.
#
# Tune the sensorless_x_current variable and the SGTHRS/SGT value in this file untill you get reliable homing.
# Beware of false instant triggering which can make it look like the homing procedure is skipping an axis, when in fact it's not.
# This is especially true for the Y axis on CoreXY machines.
#
# Read the klipper documentation for more info: https://www.klipper3d.org/TMC_Drivers.html#sensorless-homing
#
# Note: if your board has diag jumpers, you would need to insert them for the specific drivers you want to use for sensorless homing on.
# Note: Sensorless homing does NOT work if you drivers have a missing DIAG pins.    
# Check https://www.klipper3d.org/TMC_Drivers.html#sensorless-homing for tuning instructions.

[${r.getAxisDriverSectionName(c.po.x)}]
${r.getAxisDriverDiagConfig(c.po.x)}
${r.getAxisDriverStallGuardThreshold(c.po.x,.5)}

[${r.getAxisStepperName(c.po.x)}]
endstop_pin: ${r.getAxisVirtualEndstop(c.po.x)}
homing_retract_dist: 0

[gcode_macro RatOS]
variable_homing_x: "sensorless"
variable_sensorless_x_current: ${r.getAxisDriverHomingCurrent(c.po.x,.35)}
`,sensorlessYTemplate=(e,r)=>`
# Sensorless homing.
#
# Tune the current variable and the SGTHRS value in the included file(s) untill you get reliable homing.
# Beware of false instant triggering which can make it look like the homing procedure is skipping an axis, when in fact it's not.
# This is especially true for the Y axis on CoreXY machines.
#
# Read the klipper documentation for more info: https://www.klipper3d.org/TMC_Drivers.html#sensorless-homing
#
# Note: if your board has diag jumpers, you would need to insert them for the specific drivers you want to use for sensorless homing on.
# Note: Sensorless homing does NOT work if you drivers have a missing DIAG pins.
# Check https://www.klipper3d.org/TMC_Drivers.html#sensorless-homing for tuning instructions.

[${r.getAxisDriverSectionName(c.po.y)}]
${r.getAxisDriverDiagConfig(c.po.y)}
${r.getAxisDriverStallGuardThreshold(c.po.y,.5)}

[stepper_y]
endstop_pin: ${r.getAxisVirtualEndstop(c.po.y)}
homing_retract_dist: 0

[gcode_macro RatOS]
variable_homing_y: "sensorless"
variable_sensorless_y_current: ${r.getAxisDriverHomingCurrent(c.po.y,.51)}
`;var C=t(64079),$=t(52890),S=t(54517);let ToolheadGenerator=class ToolheadGenerator extends z.D{static async fromConfig(e,r,t,o){let i=e.toolboard?await (0,n.Qk)(e.toolboard):null;return new ToolheadGenerator(e,i,r,t,o)}constructor(e,r,t,o,i){super(e),this.toolboardPins=r,this.controlboardPins=t,this.printer=o,this.size=i}requireControlboardPin(e){if(this.controlboardPins?.[e]==null)throw Error(`Toolhead ${this.getTool()} is configured to use the controlboard for ${e}, but the controlboard does not define a pin with that name.`)}requireToolboardPin(e){if(this.toolboardPins?.[e]==null)throw Error(`Toolhead ${this.getTool()} is configured to use the toolboard for ${e}, but the toolboard does not define a pin with that name.`)}getExtruderToolAxisPinPrefix(){return 0===this.getTool()?"":this.getTool()}getToolboardPins(){if(null==this.toolboardPins)throw Error(`Toolboard pins not available for toolhead ${this.getToolCommand()}`);return this.toolboardPins}getToolheadPin(e,r){let t=e===this.getExtruderAxis()?this.getPinPrefix():"",o=e===c.po.z?"z0":e!==this.getExtruderAxis()?e:null!=this.getToolboard()?"e":"e"+this.getExtruderToolAxisPinPrefix(),i=o+r,n=null;try{n=this.getPinFromAlias(i)}catch(e){n=null}if(null==n)throw Error(`Pin name "${i}" constructed from axis "${e}" and alias "${r}" not found on toolhead ${this.getToolCommand()} with extruder axis ${this.getExtruderAxis()}. Resolved axis alias ${o}. Searched in ${this.getToolboard()?"toolboard":"controlboard"}`);return t+n}getPinFromAlias(e){let r=null;if(this.getToolboard()){if(this.toolboardPins?.[e]!=null)r=this.toolboardPins[e];else throw Error(`Alias "${e}" not found in toolboard pin definition.`)}else this.controlboardPins?.[e]!=null&&(r=this.controlboardPins[e]);if(null!=r)return r;throw Error(`Unknown pin alias ${e}`)}getPinFromToolboardAlias(e){let r=null,t="e1"===e.split("_")[0]?"e"+this.getExtruderToolAxisPinPrefix():e;if(!this.hasToolboard())throw Error(`Toolhead ${this.getTool()} is not configured to use a toolboard`);if(this.toolboardPins?.[t]!=null)r=this.toolboardPins[t];else throw Error(`Alias "${t}" not found in toolboard pin definition.`);if(null!=r)return r;throw Error(`Unknown pin alias ${t}`)}getXEndstopPin(){let e;switch(this.getXEndstop().id){case"endstop":if(this.controlboardPins?.x_endstop_pin==null)throw Error(`Toolhead ${this.getTool()} is configured to use the controlboard for the x endstop, but the controlboard has no x_endstop_pin`);e=this.controlboardPins.x_endstop_pin;break;case"endstop-toolboard":if(this.toolboardPins?.x_endstop_pin==null)throw Error(`Toolhead ${this.getTool()} is configured to use a toolboard for the x endstop, but the toolboard has no x_endstop_pin`);e=this.getPinPrefix()+this.toolboardPins.x_endstop_pin;break;default:throw Error(`Unknown endstop type ${this.getXEndstop().id}`)}return e}getYEndstopPin(){let e;switch(this.getYEndstop().id){case"endstop":if(this.controlboardPins?.y_endstop_pin==null)throw Error(`Toolhead ${this.getTool()} is configured to use the controlboard for the x endstop, but the controlboard has no y_endstop_pin`);e=this.controlboardPins.y_endstop_pin;break;case"endstop-toolboard":if(this.toolboardPins?.y_endstop_pin==null)throw Error(`Toolhead ${this.getTool()} is configured to use a toolboard for the x endstop, but the toolboard has no y_endstop_pin`);e=this.getPinPrefix()+this.toolboardPins.y_endstop_pin;break;default:throw Error(`Unknown endstop type ${this.getXEndstop().id}`)}return e}getPinPrefix(){return this.config.toolboard?`${this.getToolboardName()}:`:""}isToolboardPinInverted(e){return null!=e&&!!this.config.toolboard?.invertPinLogic.includes(e)}renderToolboard(e){let r=this.toolboardPins,t=this.config.toolboard;if(null==t||null==r)return"";if(null==e)throw Error("exportPinsFn is required when rendering toolboard");let o=["",e(this.getToolboardName(),t,this,this.getToolboardName()),"",`[mcu ${this.getToolboardName()}]`,`serial: ${(0,S.e)(t,this)}`];return t.hasMcuTempSensor&&(o.push(""),o.push(`[temperature_sensor ${t.name.replace(/\s/g,"_")}_${this.getToolCommand()}]`),o.push("sensor_type: temperature_mcu"),o.push(`sensor_mcu: ${this.getToolboardName()}`)),null!=t.ADXL345SPI&&(o.push(""),o.push(`[adxl345 ${this.getToolboardName()}]`),o.push("axes_map: x, z, y # Assumes back-facing vertical toolboard mounting"),o.push(`cs_pin: ${this.isToolboardPinInverted(t.ADXL345SPI.cs_pin)?"!":""}${this.getPinPrefix()}${t.ADXL345SPI.cs_pin}`),"hardware"in t.ADXL345SPI?o.push(`spi_bus: ${t.ADXL345SPI.hardware.bus}`):(o.push(`spi_software_mosi_pin: ${this.isToolboardPinInverted(t.ADXL345SPI.software.mosi)?"!":""}${this.getPinPrefix()}${t.ADXL345SPI.software.mosi}`),o.push(`spi_software_miso_pin: ${this.isToolboardPinInverted(t.ADXL345SPI.software.miso)?"!":""}${this.getPinPrefix()}${t.ADXL345SPI.software.miso}`),o.push(`spi_software_sclk_pin: ${this.isToolboardPinInverted(t.ADXL345SPI.software.sclk)?"!":""}${this.getPinPrefix()}${t.ADXL345SPI.software.sclk}`))),null!=t.LIS2DW&&(o.push(""),o.push(`[lis2dw ${this.getToolboardName()}]`),o.push("axes_map: x, z, y # Assumes back-facing vertical toolboard mounting"),o.push(`cs_pin: ${this.isToolboardPinInverted(t.LIS2DW.cs_pin)?"!":""}${this.getPinPrefix()}${t.LIS2DW.cs_pin}`),"hardware"in t.LIS2DW?o.push(`spi_bus: ${t.LIS2DW.hardware.bus}`):(o.push(`spi_software_mosi_pin: ${this.isToolboardPinInverted(t.LIS2DW.software.mosi)?"!":""}${this.getPinPrefix()}${t.LIS2DW.software.mosi}`),o.push(`spi_software_miso_pin: ${this.isToolboardPinInverted(t.LIS2DW.software.miso)?"!":""}${this.getPinPrefix()}${t.LIS2DW.software.miso}`),o.push(`spi_software_sclk_pin: ${this.isToolboardPinInverted(t.LIS2DW.software.sclk)?"!":""}${this.getPinPrefix()}${t.LIS2DW.software.sclk}`))),null!=t.outputPins&&t.outputPins.forEach(e=>{o.push(""),o.push(`[output_pin ${e.name}]`),o.push(`pin: ${this.isToolboardPinInverted(e.pin)?"!":""}${this.getPinPrefix()}${e.pin}`),o.push(`value: ${e.value}`)}),null!=t.customSections&&Object.keys(t.customSections).forEach(e=>{if(null==t.customSections)return;let r=t.customSections[e];o.push(""),o.push(`[${e}${r.name?` ${r.name}`:""}]`),null!=r.comments&&r.comments.forEach(e=>{o.push(`# ${e}`)}),Object.keys(r.parameters).forEach(t=>{if(null==this.toolboardPins)return;let i=r.parameters[t];if(null==i)throw Error(`Parameter "${t}" has no value in custom section "${e}"`);"string"==typeof i&&(t.endsWith("_pin")||"pin"===t||Object.values(this.toolboardPins).includes(i))?o.push(`${t}: ${this.isToolboardPinInverted(i)?"!":""}${this.getPinPrefix()}${i}`):"boolean"==typeof i||"true"===i.toString().trim().toLowerCase()||"false"===i.toString().trim().toLowerCase()?o.push(`${t}: ${!0===i||"true"===i.toString().trim().toLowerCase()?"True":"False"}`):o.push(`${t}: ${i}`)})}),o.join("\n")}renderHotend(e){let r=[],t=(0,n.up)(`hotends/${this.getHotend().id}.cfg`);t=(0,n.rc)(t),t=(0,n.AU)(t),t=(0,n.ND)(t,"[extruder]",`[${this.getExtruderAxis()}]`),t=(0,n.ND)(t,"heater_pin",`heater_pin: ${this.getToolheadPin(this.getExtruderAxis(),"_heater_pin")}`),t=(0,n.ND)(t,"sensor_pin",`sensor_pin: ${this.getToolheadPin(this.getExtruderAxis(),"_sensor_pin")}`);let o=this.getToolboard()?.alternativePT1000Resistor??e.alternativePT1000Resistor,i=this.getToolboard()?.thermistorPullup??e.thermistorPullup,a="PT1000"===this.getThermistor()&&null!=o?o:i;return t=t.split("\n").some(e=>e.trim().startsWith("pullup_resistor"))?(0,n.ND)(t,"pullup_resistor",`pullup_resistor: ${a}`):(0,n.ND)(t,"sensor_type",`sensor_type: ${this.getThermistor()}
pullup_resistor: ${a}`),4700===a&&(t=(0,n.ND)(t,"pullup_resistor: 4700",null)),t=t.split("\n").some(e=>e.trim().startsWith("nozzle_diameter"))?(0,n.ND)(t,"nozzle_diameter",`nozzle_diameter: ${this.getNozzle().diameter}`):(0,n.ND)(t,`[${this.getExtruderAxis()}]`,`[${this.getExtruderAxis()}]
nozzle_diameter: ${this.getNozzle().diameter}`),r.push(`# ${this.getToolCommand()} ${this.getHotend().title} definition (from RatOS/hotends/${this.getHotend().id}.cfg)`),r.push(t.trim()),r.join("\n")}renderExtruder(){let e=[];e.push(`# ${this.getToolCommand()} ${this.getExtruder().title} definition (from RatOS/extruders/${this.getExtruder().id}.cfg)`);let r=(0,n.rc)((0,n.AU)((0,n.sV)((0,n.up)(`extruders/${this.getExtruder().id}.cfg`))));return e.push((r=(0,n.ND)(r,"[extruder]",`[${this.getExtruderAxis()}]`)).trim()),e.join("\n")}renderPartFan(e=!1,r){let t=[];if(e){let e=`part_fan_${this.getShortToolName()}`;t.push(`[fan_generic ${e}]`)}else t.push("[fan]");switch(this.getPartFan().id){case"2pin":this.requireControlboardPin("fan_part_cooling_pin"),t.push(`# 2-pin fan connected to 2-pin header on ${r.name} - input voltage pwm`),t.push(`pin: ${this.controlboardPins?.fan_part_cooling_pin}`);break;case"4pin":this.requireControlboardPin("fan_part_cooling_pin"),t.push(`# 4-pin fan connected to 2-pin header on ${r.name} - digital pwm`),t.push(`pin: !${this.controlboardPins?.fan_part_cooling_pin}`),t.push("cycle_time:  0.00004");break;case"4pin-dedicated":this.requireControlboardPin("4p_fan_part_cooling_pin"),t.push(`# 4-pin fan connected to 4-pin header on ${r.name} - digital pwm`),t.push(`pin: ${this.controlboardPins?.["4p_fan_part_cooling_pin"]}`),t.push("cycle_time:  0.00004"),this.controlboardPins?.["4p_fan_part_cooling_tach_pin"]!=null&&(t.push(`tachometer_pin: ^${this.controlboardPins?.["4p_fan_part_cooling_tach_pin"]}`),t.push("tachometer_poll_interval: 0.0005"));break;case"2pin-toolboard":this.requireToolboardPin("fan_part_cooling_pin"),t.push(`# 2-pin fan connected to 2-pin header on T${this.getTool()} (${this.getToolboard()?.name}) - input voltage pwm`),t.push(`pin: ${this.isToolboardPinInverted(this.toolboardPins?.fan_part_cooling_pin)?"!":""}${this.getPinPrefix()}${this.toolboardPins?.fan_part_cooling_pin}`);break;case"4pin-toolboard":this.requireToolboardPin("fan_part_cooling_pin"),t.push(`# 4-pin fan connected to 2-pin header on T${this.getTool()} (${this.getToolboard()?.name}) - digital pwm`),t.push(`pin: ${this.isToolboardPinInverted(this.toolboardPins?.fan_part_cooling_pin)?"":"!"}${this.getPinPrefix()}${this.toolboardPins?.fan_part_cooling_pin}`),t.push("cycle_time:  0.00004");break;case"4pin-dedicated-toolboard":this.requireToolboardPin("4p_fan_part_cooling_pin"),t.push(`# 4-pin fan connected to 4-pin header on T${this.getTool()} (${this.getToolboard()?.name}) - digital pwm`),t.push(`pin: ${this.isToolboardPinInverted(this.toolboardPins?.["4p_fan_part_cooling_pin"])?"!":""}${this.getPinPrefix()}${this.toolboardPins?.["4p_fan_part_cooling_pin"]}`),t.push("cycle_time:  0.00004"),this.toolboardPins?.["4p_fan_part_cooling_tach_pin"]!=null&&(t.push(`tachometer_pin: ^${this.isToolboardPinInverted(this.toolboardPins?.["4p_fan_part_cooling_tach_pin"])?"!":""}${this.toolboardPins?.["4p_fan_part_cooling_tach_pin"]}`),t.push("tachometer_poll_interval: 0.0005"));break;default:throw Error(`Unsupported part cooling fan option "${this.getHotendFan().title}"`)}return t.join("\n")}renderHotendFan(e){let r=[`[heater_fan toolhead_cooling_fan${this.getTool()>0?`_${this.getShortToolName()}`:""}]`,`heater: ${this.getExtruderAxis().toLocaleLowerCase()}`];switch(this.getHotendFan().id){case"2pin":this.requireControlboardPin("fan_toolhead_cooling_pin"),r.push(`# 2-pin fan connected to 2-pin header on ${e.name} - input voltage pwm`),r.push(`pin: ${this.controlboardPins?.fan_toolhead_cooling_pin}`);break;case"4pin":this.requireControlboardPin("fan_toolhead_cooling_pin"),r.push(`# 4-pin fan connected to 2-pin header on ${e.name} - digital pwm`),r.push(`pin: !${this.controlboardPins?.fan_toolhead_cooling_pin}`),r.push("cycle_time:  0.00004");break;case"4pin-dedicated":this.requireControlboardPin("4p_toolhead_cooling_tach_pin"),r.push(`# 4-pin fan connected to 4-pin header on ${e.name} - digital pwm`),r.push(`pin: ${this.controlboardPins?.["4p_toolhead_cooling_tach_pin"]}`),r.push("cycle_time:  0.00004"),this.controlboardPins?.["4p_toolhead_cooling_tach_pin"]!=null&&(r.push(`tachometer_pin: ^${this.controlboardPins?.["4p_toolhead_cooling_tach_pin"]}`),r.push("tachometer_poll_interval: 0.0005"));break;case"2pin-toolboard":this.requireToolboardPin("fan_toolhead_cooling_pin"),r.push(`# 2-pin fan connected to 2-pin header on T${this.getTool()} (${this.getToolboard()?.name}) - input voltage pwm`),r.push(`pin: ${this.isToolboardPinInverted(this.toolboardPins?.fan_toolhead_cooling_pin)?"!":""}${this.getPinPrefix()}${this.toolboardPins?.fan_toolhead_cooling_pin}`);break;case"4pin-toolboard":this.requireToolboardPin("fan_toolhead_cooling_pin"),r.push(`# 4-pin fan connected to 2-pin header on T${this.getTool()} (${this.getToolboard()?.name}) - digital pwm`),r.push(`pin: ${this.isToolboardPinInverted(this.toolboardPins?.fan_toolhead_cooling_pin)?"":"!"}${this.getPinPrefix()}${this.toolboardPins?.fan_toolhead_cooling_pin}`),r.push("cycle_time:  0.00004");break;case"4pin-dedicated-toolboard":this.requireToolboardPin("4p_toolhead_cooling_pin"),r.push(`# 4-pin fan connected to 4-pin header on T${this.getTool()} (${this.getToolboard()?.name}) - digital pwm`),r.push(`pin: ${this.isToolboardPinInverted(this.toolboardPins?.["4p_toolhead_cooling_pin"])?"!":""}${this.getPinPrefix()}${this.toolboardPins?.["4p_toolhead_cooling_pin"]}`),r.push("cycle_time:  0.00004"),this.toolboardPins?.["4p_toolhead_cooling_tach_pin"]!=null&&(r.push(`tachometer_pin: ^${this.isToolboardPinInverted(this.toolboardPins?.["4p_toolhead_cooling_tach_pin"])?"!":""}${this.toolboardPins?.["4p_toolhead_cooling_tach_pin"]}`),r.push("tachometer_poll_interval: 0.0005"));break;default:throw Error(`Unsupported hotend fan option "${this.getHotendFan().title}"`)}return r.join("\n")}renderToolheadMacro(){let e=null;if(this.getMotionAxis()===c.po.x?e=-1*this.printer.bedMargin.x[0]+2:this.getMotionAxis()===c.po.dual_carriage&&(e=this.size.x+this.printer.bedMargin.x[1]-2),null==e||isNaN(e))throw(0,i.j)().debug("renderToolheadMacro:",this.printer.bedMargin.x[0],this.size,this.printer.bedMargin.x[1]),Error(`Failed to generate parking position for toolhead ${this.getToolCommand()}. Generated: ${e}`);let r=[`[gcode_macro ${this.getToolCommand()}]`,"variable_join: 0","variable_remap: 0",'variable_alert: ""','variable_filament_name: ""','variable_filament_type: ""',"variable_filament_temp: 0",'variable_runout_sensor: ""',`variable_active: ${0===this.getTool()?"True":"False"}`,`variable_color: "${0===this.getTool()?"7bff33":"0ea5e9"}"              # Used in frontends`,`variable_hotend_type: "${this.getHotend().flowType.toUpperCase()}"`,`variable_has_cht_nozzle: ${"CHT"===this.getNozzle().type?"True":"False"}`,"variable_cooling_position_to_nozzle_distance: 40                             # heatbreak length from cold zone to nozzle","variable_tooolhead_sensor_to_extruder_gear_distance: 15                      # distance in mm from the sensor to the extruder gear","variable_extruder_gear_to_cooling_position_distance: 30                      # distance in mm from the extruder gear to the end of the hotend cold zone","variable_filament_loading_nozzle_offset: -5","variable_filament_grabbing_length: 5","variable_filament_grabbing_speed: 1","variable_enable_insert_detection: True                                       # enables filament sensor insert detection ","variable_enable_runout_detection: True                                       # enables filament sensor runout detection ","variable_enable_clog_detection: True                                         # enables filament sensor clog detection ","variable_unload_after_runout: True                                           # unload filament after a runout has been detected","variable_purge_after_load: 0","variable_purge_before_unload: 0","variable_extruder_load_speed: 60","variable_filament_load_speed: 10","variable_standby: False","variable_temperature_offset: 0                                               # hotend temperature offset","variable_has_oozeguard: False                                                # toolhead has a oozeguard","variable_has_front_arm_nozzle_wiper: False                                   # toolhead has front arm nozzle wipers"];return"hybrid-corexy-idex"==this.printer.kinematics?r.push(`variable_loading_position: ${0===this.getTool()?e+25:e-25} # filament load x position`,`variable_parking_position: ${e} # parking x position`,"variable_resume_after_insert: True                                           # resumes the print after inserting new filament"):r.push("variable_resume_after_insert: False                                          # resumes the print after inserting new filament"),r.push("gcode:",`	{% set x = params.X|default(-1.0)|float %}`,`	{% set y = params.Y|default(-1.0)|float %}`,`	{% set z = params.Z|default(0.0)|float %}`,`	{% set s = params.S|default(1)|int %}`,`	{% if printer["gcode_macro _SELECT_TOOL"] is defined %}`,`		_SELECT_TOOL T=${this.getTool()} X={x} Y={y} Z={z} TOOLSHIFT={s}`,`	{% endif %}`),r.join("\n")}};let constructKlipperConfigUtils=async e=>{let r=e.toolheads.reduce((e,r)=>e+(r.toolboard?.driverCount??0),0),t=null!=e.controlboard.extruderlessConfig?1:0,o=e.printer.driverCountRequired>e.controlboard.driverCount,i=await (0,n.Qk)(e.controlboard,o),s=await Promise.all(e.toolheads.map(async r=>{if(null==r.toolboard&&o)throw Error("A toolboard is required when using an extruderless controlboard configuration (your controlboard alone does not have enough drivers for this printer). Please add a toolboard to your configuration.");return await ToolheadGenerator.fromConfig(r,i,e.printer,e.size)}));return{extruderLessConfigBonus:t,isExtruderlessBoard:o,toolboardDriverCount:r,getControlboardPins:()=>({...i}),requireControlboardPin(e){if(null==this.getControlboardPins()[e])throw Error(`The controlboard has no "${e}" defined in its config.`)},isExtruderToolheadAxis:e=>s.some(r=>r.getExtruderAxis()===e),getToolhead:e=>{let r="number"==typeof e?s.find(r=>r.getTool()===e):s.find(r=>r.getExtruderAxis()===e||r.getMotionAxis()===e);if(null==r)throw Error(`No toolhead found for tool/axis ${e}`);return r},renderCommentHeader(e,r=[]){let t="------------------------------------------------------------------------------------------------------------",o=(t.length-e.length-2)/2,i=`#${"-".repeat(Math.floor(o))} ${e} ${"-".repeat(Math.ceil(o))}`;return[i,...r.length?r.concat(`#${t}`):[]]},getToolheads:()=>s.slice(),getRail(r){let t=e.rails.find(e=>e.axis===r);if(null==t)throw Error(`No rail found for axis ${r}`);return t},getRailPinValue(r,t,o=["controlboard","toolboard"],n=!0){let a=this.printerAxisToPinAliasPrefix(r)+"_"+(t.startsWith("_")?t.substring(1):t),s=null,l=this.getRail(r),d=this.isExtruderToolheadAxis(r)?this.getToolhead(r):null;if(this.isExtruderToolheadAxis(r)&&o.includes("toolboard")&&d?.hasToolboard())s=n?d.getToolheadPin(r,t):d.getPinFromToolboardAlias(a);else if(o.includes("controlboard")){let r=t.startsWith("_")?t.substring(1):t;if(null!=e.controlboard.motorSlots&&null!=l.motorSlot&&r in e.controlboard.motorSlots[l.motorSlot]){if(null==(s=e.controlboard.motorSlots[l.motorSlot][r]))throw Error(`Motor slot was selected, but pin ${r} wasn't found in motor slot config.`)}else s=i[a]}if(null==s)throw Error(`Pin name "${a}" constructed from axis "${r}" and alias "${t}" not found in board pin configs.`);return s},getAxisStepperName:e=>e===c.po.extruder?"extruder":e===c.po.extruder1?"extruder1":e===c.po.dual_carriage?"dual_carriage":"stepper_"+e,getAxisDriverType(e){return this.getRail(e).driver.type.toLowerCase()},getAxisDriverVariables(r,t=!1,o=[]){let i=e.rails.filter(e=>(t?e.axis.startsWith(r):e.axis===r)||o.includes(e.axis)),n=[];return n.push(`variable_${r}_driver_types: [${i.map(e=>`"${e.driver.type.toLowerCase()}"`).join(", ")}]`),n.push(`variable_${r}_axes: [${i.map(e=>`"${e.axis}"`).join(", ")}]`),n.join("\n")},isSensorless:e=>s.find(r=>r.getMotionAxis()===e)?.getXEndstop().id==="sensorless"||e===c.po.y&&s.some(e=>"sensorless"===e.getYEndstop().id),getAxisHomingSpeed(e){let r=this.getRail(e),t=this.isSensorless(e)?50:r.homingSpeed;return t},getAxisDriverSectionName(e){return`${this.getAxisDriverType(e)} ${this.getAxisStepperName(e)}`},getAxisVirtualEndstop(e){return`${this.getAxisDriverType(e)}_${this.getAxisStepperName(e)}:virtual_endstop`},getAxisDriverStallGuardThreshold(e,r){let t=this.getRail(e);return(r=Math.max(0,Math.min(1,r)),["TMC2130","TMC5160","TMC2240"].includes(t.driver.type))?`driver_SGT: ${Math.round(127*r)-64} # Lower value = higher sensitity, range -64 to 63`:`driver_SGTHRS: ${Math.round(255*r)} # Lower value = lower sensitivity, range 0 to 255`},getAxisDriverDiagConfig(e){return"UART"===this.getRail(e).driver.protocol?`diag_pin: ^${this.printerAxisToPinAliasPrefix(e)}_diag_pin`:"SPI"===this.getRail(e).driver.protocol?`diag1_pin: ^!${this.printerAxisToPinAliasPrefix(e)}_diag_pin`:""},getAxisDriverHomingCurrent(e,r){let t=this.getRail(e);return r=Math.max(0,Math.min(1,r)),.71*t.stepper.maxPeakCurrent*r},getExtruderPinPrefix(e=0){let r=this.getToolhead(e);if(null==r)throw Error(`No toolhead found for tool ${e}`);return r.getPinPrefix()},formatInlineComments(e,r="#"){let t=e.reduce((e,t)=>Math.max(e,t.substring(0,t.indexOf(r)).trim().length),0);return e.map(e=>{let o=e.indexOf(r),i=e.lastIndexOf(r);if((-1===o||e.trim().startsWith(r))&&i===o)return e;o!==i&&(o=e.indexOf(r,o+1));let n=e.substring(o),a=e.substring(0,o).trim(),s=t-a.length+2;return a+" ".repeat(s)+" "+n})},isPrinterAxis:e=>Object.values(c.po).includes(e),pinAliasPrefixToPrinterAxis(e){let r=h.tN.safeParse(e);return r.success?r.data:null},printerAxisToPinAliasPrefix(e){let r=h.d9.safeParse(e);if(r.success){if("e1"===r.data){if(this.getToolhead(1).hasToolboard())return"e";throw Error("No toolboard found for T1, e1 prefix is not supported")}return r.data}return null},getMotorComments(r,t,o){let i="object"==typeof r?r:e.rails.find(e=>e.axis===r);if(null==i)throw Error(`No rail found for axis ${r}`);let n=[`# ${i.axisDescription}`];if(!o){let r=this.isExtruderToolheadAxis(i.axis)?this.getToolhead(i.axis):null;r?.hasToolboard()?n.push(`# Connected to ${(r.getToolboard()||e.controlboard).name}`):i.motorSlot&&e.controlboard.motorSlots&&n.push(`# Connected to ${e.controlboard.motorSlots[i.motorSlot].title} on ${e.controlboard.manufacturer} ${e.controlboard.name}`),n.push(`# Driver: ${i.driver.title}`),n.push(`# Motor: ${i.stepper.title}`),n.push(`# Voltage: ${i.voltage}`)}return this.renderCommentHeader(t??i.axis.toUpperCase(),n)},getMotorPinComments(r,t,o){let i="object"==typeof r?r:e.rails.find(e=>e.axis===r);if(null==i)throw Error(`No rail found for axis ${r}`);let n=[];return i.motorSlot&&t.motorSlots&&n.push(`# Assigned to slot: "${t.motorSlots[i.motorSlot].title}"`),this.renderCommentHeader(o??i.axis.toUpperCase(),n)},getAccelWithType(r){let t="adxl345";if("controlboard"===r&&(e.controlboard?.ADXL345SPI!=null&&(t="adxl345"),e.controlboard?.LIS2DW!=null&&(t="lis2dw")),"toolboard_t0"===r||"toolboard_t1"===r){let e=s.find(e=>e.getToolboardName()===r)?.getToolboard();if(null==e)throw Error("No toolboard found for T0");null!=e.ADXL345SPI&&(t="adxl345"),null!=e.LIS2DW&&(t="lis2dw")}return"beacon"===r&&(t="beacon"),a.U9.parse({name:r,type:t})}}},constructKlipperConfigExtrasGenerator=(e,r)=>{let t=[],o=[];return{getFilesToWrite:()=>t.slice(),addFileToRender(e){t.push(e)},getReminders:()=>o.slice(),generateSaveVariables(r){let t=l.Rz.parse(process.env),o=["[Variables]"];return o.push("idex_applied_offset = 1",`idex_xcontrolpoint = ${r?.xcontrolpoint??e.size.x/2}`,"idex_xoffset = 0.0",`idex_ycontrolpoint = ${r?.ycontrolpoint??50}`,"idex_yoffset = 0.0",`idex_zcontrolpoint = ${r?.zcontrolpoint??50}`,"idex_zoffset = 0.0",`idex_zoffsetcontrolpoint = ${r?.zoffsetcontrolpoint??25}`,"nozzle_expansion_applied_offset = 0","nozzle_expansion_coefficient_t0 = 0.06","nozzle_expansion_coefficient_t1 = 0.06"),[{fileName:"ratos-variables.cfg",content:o.join("\n"),overwrite:!1}].map(e=>(this.addFileToRender(e),`[save_variables]
filename: ${p().join(t.KLIPPER_CONFIG_PATH,e.fileName)}`))},generateSensorlessHomingIncludes(){let t=[];if(r.isSensorless(c.po.x)&&t.push({fileName:"sensorless-homing-x.cfg",content:sensorlessXTemplate(e,r),overwrite:!1}),r.isSensorless(c.po.y)&&t.push({fileName:"sensorless-homing-y.cfg",content:sensorlessYTemplate(e,r),overwrite:!1}),t.length>0){let e=[];e.push("# REMEMBER TO TUNE SENSORLESS HOMING BEFORE ATTEMPTING TO PRINT!"),e.push("# You'll find instructions in the generated sensorless-homing-*.cfg file(s),","# where you should keep your sensorless homing settings."),this.addReminder(e.join("\n"))}return t.map(e=>(this.addFileToRender(e),`[include ${e.fileName}]`)).join("\n")},addReminder(e){o.push(e)}}},constructKlipperConfigHelpers=async(e,r,t)=>({renderToolboards(){return t.getToolheads().map(e=>e.renderToolboard(this.renderBoardPinAlias)).join("\n")},renderControlboard(){let r=["",this.renderBoardPinAlias(e.controlboard.id,e.controlboard),"","[mcu]",`serial: ${(0,S.e)(e.controlboard)}`];return e.controlboard.hasMcuTempSensor&&(r.push(""),r.push(`[temperature_sensor ${e.controlboard.name.replace(/\s/g,"_")}]`),r.push("sensor_type: temperature_mcu")),null!=e.controlboard.ADXL345SPI&&(r.push(""),r.push("[adxl345 controlboard]"),r.push(`cs_pin: ${e.controlboard.ADXL345SPI.cs_pin}`),"hardware"in e.controlboard.ADXL345SPI?r.push(`spi_bus: ${e.controlboard.ADXL345SPI.hardware.bus}`):(r.push(`spi_software_mosi_pin: ${e.controlboard.ADXL345SPI.software.mosi}`),r.push(`spi_software_miso_pin: ${e.controlboard.ADXL345SPI.software.miso}`),r.push(`spi_software_sclk_pin: ${e.controlboard.ADXL345SPI.software.sclk}`))),null!=e.controlboard.LIS2DW&&(r.push(""),r.push("[lis2dw controlboard]"),r.push(`cs_pin: ${e.controlboard.LIS2DW.cs_pin}`),"hardware"in e.controlboard.LIS2DW?r.push(`spi_bus: ${e.controlboard.LIS2DW.hardware.bus}`):(r.push(`spi_software_mosi_pin: ${e.controlboard.LIS2DW.software.mosi}`),r.push(`spi_software_miso_pin: ${e.controlboard.LIS2DW.software.miso}`),r.push(`spi_software_sclk_pin: ${e.controlboard.LIS2DW.software.sclk}`))),null!=e.controlboard.outputPins&&e.controlboard.outputPins.forEach(e=>{r.push(""),r.push(`[output_pin ${e.name}]`),r.push(`pin: ${e.pin}`),r.push(`value: ${e.value}`)}),r.join("\n")},renderBoards(){if(e.printer.driverCountRequired>e.controlboard.driverCount&&e.controlboard.driverCount+t.toolboardDriverCount+t.extruderLessConfigBonus<e.printer.driverCountRequired)throw Error("Your control and toolboard combination does not make up enough drivers for this printer.");let r=["[include RatOS/boards/rpi/config.cfg]",this.renderControlboard(),this.renderToolboards()];return r.join("\n")},renderStepperSections(){return e.rails.map(e=>this.renderStepperSection(e)).join("\n")},renderMotorSections(){let r=e.rails.map(e=>t.getMotorComments(e).join("\n")+"\n"+this.renderDriverSection(e,!0)+"\n"+this.renderStepperSection(e,!0));return r.push(this.renderBoardQuirks()),r.join("\n")},renderStepperSection(r,o=!1){let i="object"==typeof r?r:e.rails.find(e=>e.axis===r);if(null==i)throw Error(`No rail found for axis ${r}`);let a=o?[]:t.getMotorComments(i);if(a.push(`[${t.getAxisStepperName(i.axis)}]`,`step_pin: ${t.getRailPinValue(i.axis,"_step_pin")}`,`dir_pin: ${t.getRailPinValue(i.axis,"_dir_pin")}`,`enable_pin: !${t.getRailPinValue(i.axis,"_enable_pin")}`,`microsteps: ${i.microstepping}`,`full_steps_per_rotation: ${i.stepper.fullStepsPerRotation}`),i.axis===c.po.extruder||i.axis===c.po.extruder1){let e=t.getToolhead(i.axis);if(null==e)throw Error(`No toolhead found for ${i.axis}`);a.push(`rotation_distance: ${(0,n.NH)(e.getExtruder().id)}`)}else a.push(`rotation_distance: ${i.rotationDistance}`);if(i.axis===c.po.z&&a.push("position_min: -5"),[c.po.x,c.po.y,c.po.z,c.po.dual_carriage].includes(i.axis)&&a.push(`homing_speed: ${t.getAxisHomingSpeed(i.axis)}`),null!=i.gearRatio&&a.push(`gear_ratio: ${i.gearRatio}`),i.axis===c.po.z){let r=e.toolheads.find(e=>null!=e.probe);r?.probe!=null&&a.push("endstop_pin: probe:z_virtual_endstop")}return a.join("\n")+"\n"},renderUserStepperSections(r){return t.formatInlineComments(e.rails.map(e=>{let t=r[e.axis],{directionInverted:o,rotationComment:i,additionalLines:n}=t??{},a=null!=t&&"limits"in t?t.limits:null,s=null!=t&&"safeDistance"in t?t.safeDistance:void 0;return this.renderUserStepperSection(e.axis,o,a,s,i,n)}).join("\n").split("\n")).join("\n")},renderUserStepperSection(r,o=!1,i,a,s,l){let d="object"==typeof r?r:e.rails.find(e=>e.axis===r);if(null==d)throw Error(`No rail found for axis ${r}`);let p=o?`# Remove ! in front of pin name to reverse the direction of ${t.getAxisStepperName(d.axis)}`:`# Add ! in front of pin name to reverse the direction of ${t.getAxisStepperName(d.axis)}`,u="";(d.axis===c.po.extruder||d.axis===c.po.extruder1)&&(u=t.getExtruderPinPrefix(d.axis));let h=t.getMotorComments(d,void 0,!0).concat([`[${t.getAxisStepperName(d.axis)}]`,`dir_pin: ${o?"!":""}${u}${t.printerAxisToPinAliasPrefix(d.axis)}_dir_pin ${p}`]);if(d.axis===c.po.extruder||d.axis===c.po.extruder1){let e=t.getToolhead(d.axis);if(null==e)throw Error(`No toolhead found for ${d.axis}`);h.push(`rotation_distance: ${(0,n.NH)(e.getExtruder().id)} # ${e.getExtruder().title} default`)}else h.push(`rotation_distance: ${d.rotationDistance} ${s?`# ${s}`:""}`);if([c.po.x,c.po.y,c.po.z].includes(d.axis)&&h.push(`homing_speed: ${t.getAxisHomingSpeed(d.axis)}`),i){let r=d.axis!==c.po.y?e.printer.bedMargin.x[0]:e.printer.bedMargin.y[0],t=d.axis!==c.po.y?e.printer.bedMargin.x[1]:e.printer.bedMargin.y[1];Object.entries("function"==typeof i?i({min:r,max:t}):i).forEach(([e,r])=>{h.push(`position_${e}: ${d.axis===c.po.z&&"min"===e?Math.min(r,-5):r}`)})}return a&&h.push(`safe_distance: ${a}`),null!=l&&h.push(...l),h.join("\n")+"\n"},renderDriverSections(){let r=e.rails.map(e=>this.renderDriverSection(e));return r.push(this.renderBoardQuirks()),r.join("\n")},renderDriverSection(r,o=!1){let i="object"==typeof r?r:e.rails.find(e=>e.axis===r);if(null==i)throw Error(`No rail found for axis ${r}`);let n=(0,C.a)(i.stepper,i.driver,i.voltage,i.current),a=o?[]:t.getMotorComments(i);if(a.push(`[${t.getAxisDriverSectionName(i.axis)}]`,`stealthchop_threshold: ${e.stealthchop?"9999999":e.standstillStealth?"1":"0"}`,`interpolate: ${i.microstepping<64||e.stealthchop?"True":"False"}`),"UART"===i.driver.protocol){if(i.motorSlot&&!(t.isExtruderToolheadAxis(i.axis)&&t.getToolhead(i.axis).hasToolboard())){let r=e.controlboard.motorSlots?.[i.motorSlot];if(null==r||!(0,h.uh)(e.controlboard.motorSlots?.[i.motorSlot]))throw Error(`No controlboard motor slot UART pins defined for motor slot ${i.motorSlot}`);Object.entries(h.X2.parse(r)).forEach(([e,r])=>{a.push(`${e}: ${r}`)})}else a.push(`uart_pin: ${t.getRailPinValue(i.axis,"_uart_pin")}`)}if("SPI"===i.driver.protocol){if(i.motorSlot){let r=e.controlboard.motorSlots?.[i.motorSlot];if(null==r||!(0,h._u)(e.controlboard.motorSlots?.[i.motorSlot]))throw Error(`No controlboard motor slot SPI pins defined for motor slot ${i.motorSlot}`);Object.entries(h.WX.parse(r)).forEach(([e,r])=>{a.push(`${e}: ${r}`)})}else{let r=t.getRailPinValue(i.axis,"_uart_pin");try{r=t.getRailPinValue(i.axis,"_cs_pin")}catch{}if(a.push(`cs_pin: ${r}`),t.isExtruderToolheadAxis(i.axis)){let e=t.getToolhead(i.axis).getToolboard();e?.stepperSPI!=null?"hardware"in e.stepperSPI?a.push(`spi_bus: ${e.stepperSPI.hardware.bus}`):(a.push(`spi_software_mosi_pin: ${t.getToolhead(i.axis).getPinPrefix()}${e.stepperSPI.software.mosi}`),a.push(`spi_software_miso_pin: ${t.getToolhead(i.axis).getPinPrefix()}${e.stepperSPI.software.miso}`),a.push(`spi_software_sclk_pin: ${t.getToolhead(i.axis).getPinPrefix()}${e.stepperSPI.software.sclk}`)):(a.push(`spi_software_mosi_pin: ${t.getToolhead(i.axis).getPinPrefix()}stepper_spi_mosi_pin`),a.push(`spi_software_miso_pin: ${t.getToolhead(i.axis).getPinPrefix()}stepper_spi_miso_pin`),a.push(`spi_software_sclk_pin: ${t.getToolhead(i.axis).getPinPrefix()}stepper_spi_sclk_pin`))}else null!=e.controlboard.stepperSPI?"hardware"in e.controlboard.stepperSPI?a.push(`spi_bus: ${e.controlboard.stepperSPI.hardware.bus}`):(a.push(`spi_software_mosi_pin: ${e.controlboard.stepperSPI.software.mosi}`),a.push(`spi_software_miso_pin: ${e.controlboard.stepperSPI.software.miso}`),a.push(`spi_software_sclk_pin: ${e.controlboard.stepperSPI.software.sclk}`)):(a.push("spi_software_mosi_pin: stepper_spi_mosi_pin"),a.push("spi_software_miso_pin: stepper_spi_miso_pin"),a.push("spi_software_sclk_pin: stepper_spi_sclk_pin"))}}if(n){let{driver:e,voltage:r,...t}=n;Object.entries(t).forEach(([e,r])=>{a.push(`${e}: ${r}`)})}else a.push(`run_current: ${i.current}`),"senseResistor"in i.driver&&a.push(`sense_resistor: ${i.driver.senseResistor}`);return a.join("\n")+"\n"},renderSpeedLimits(){let r=e.performanceMode&&e.printer.speedLimits.performance?e.printer.speedLimits.performance:e.printer.speedLimits.basic;return`[printer]
max_velocity: ${e.stealthchop?"135":r.velocity}
max_accel: ${r.accel/(e.stealthchop?2:1)}
minimum_cruise_ratio: ${e.stealthchop?.25:.5}
max_z_velocity: ${r.z_velocity}
max_z_accel: ${r.z_accel}
square_corner_velocity: ${r.square_corner_velocity}

[gcode_macro RatOS]
variable_macro_travel_speed: ${this.getMacroTravelSpeed()}
variable_macro_travel_accel: ${this.getMacroTravelAccel()}`},getMacroTravelSpeed(){let r=e.performanceMode&&e.printer.speedLimits.performance?e.printer.speedLimits.performance:e.printer.speedLimits.basic;return e.stealthchop?"135":r.travel_velocity},getMacroTravelAccel(){let r=e.performanceMode&&e.printer.speedLimits.performance?e.printer.speedLimits.performance:e.printer.speedLimits.basic;return e.stealthchop?"1000":r.travel_accel},renderBoardQuirks(){let r=[];return e.controlboard.hasQuirksFiles&&(r.push("# Include controlboard quirk file"),t.getToolhead(c.po.extruder)?.getToolboard()!=null?r.push(`[include RatOS/boards/${e.controlboard.id}/quirks-toolboard.cfg]`):r.push(`[include RatOS/boards/${e.controlboard.id}/quirks.cfg]`)),t.getToolheads().forEach(e=>{let t=e.getToolboard();t?.hasQuirksFiles&&(r.push("# Include toolboard quirk file"),r.push(`[include RatOS/boards/${t.id}/quirks.cfg]`))}),r.join("\n")},renderHotend:()=>t.getToolheads().map(r=>r.renderHotend(e.controlboard)).join("\n"),renderExtruder:()=>t.getToolheads().map(e=>e.renderExtruder()).join("\n"),renderInputShaper(e){let r=[],o=t.getToolhead(c.po.x);[o.getYAccelerometerName(),o.getXAccelerometerName()].includes("rpi")&&(r.push("[include RatOS/sensors/rpi-adxl345.cfg]"),r.push(""));let i=t.getAccelWithType(o.getXAccelerometerName()),n=t.getAccelWithType(o.getYAccelerometerName());return r.push("[resonance_tester]"),"beacon"===i.type?r.push(`accel_chip_x: ${i.type}`):r.push(`accel_chip_x: ${i.type} ${i.name}`),"beacon"===n.type?r.push(`accel_chip_y: ${n.type}`):r.push(`accel_chip_y: ${n.type} ${n.name}`),r.push("probe_points:"),r.push(`	${e.x/2},${e.y/2},20`),r.join("\n")},renderProbeIncludes(){let e=[],r=t.getToolheads().find(e=>null!=e.getProbe());return r&&e.push(`[include RatOS/z-probe/${r.getProbe()?.id+".cfg"}]`),e.push(this.renderProbePinSection(!0)),e.join("\n")},renderProbePinSection(e=!1){let o=[],i=t.getToolheads().find(e=>null!=e.getProbe());if(i)switch(i.getProbe()?.id){case"bltouch":let n=i.getPinPrefix()+(e?i.getPinFromAlias("bltouch_control_pin"):"bltouch_control_pin"),a=i.getPinPrefix()+(e?i.getPinFromAlias("bltouch_sensor_pin"):"bltouch_sensor_pin");o.push("# BLTouch configuration"),o.push("[bltouch]"),o.push("control_pin: "+n),o.push("sensor_pin: ^"+a),e||o.push("z_offset: 0");break;case"beacon":if(!e){let e=[];e.push("# REMEMBER TO CALIBRATE YOUR BEACON!"),e.push("# Run BEACON_RATOS_CALIBRATE for automatic calibration."),r.addReminder(e.join("\n"))}break;default:let s=i.getPinPrefix()+(e?i.getPinFromAlias("probe_pin"):"probe_pin");o.push("# Probe configuration"),o.push("[probe]"),e||o.push("z_offset: 0.0 # Will be commented out after a successful PROBE_CALIBRATE and SAVE_CONFIG"),o.push(`pin: ^${s}# For NPN NC probes such as the Super Pinda / Vinda / SupCR / Decoprobe probes.`),e||(o.push(`#pin: ^!${s} # NPN NO (refer to the specs of your probe)`),o.push(`#pin: ${s} # PNP NO (refer to the specs of your probe)`),o.push(`#pin: !${s} # PNP NC (refer to the specs of your probe)`))}return o.join("\n")},renderZOffsetGuidance(r=""){let t=[];return e.toolheads.some(e=>e.probe?.id==="beacon")?(t.push("Z-offset calibration: run BEACON_RATOS_CALIBRATE to automatically calibrate your beacon for scan and contact."),t.push(`${r}IMPORTANT: Ensure the beacon is properly mounted and the nozzle and meltzone is clean by unloading`),t.push(`${r}the filament (if it's loaded) and make sure there's no ooze or gunk on the nozzle when the hotend is at printing temperature.`)):t.push("Z-offset calibration: https://www.klipper3d.org/Probe_Calibrate.html#calibrating-probe-z-offset"),t.join("\n")},renderEndstopSection(o){let i=[],n=t.getToolheads(),a="sensorless";if(n.forEach(e=>{if("sensorless"!==e.getXEndstop().id&&(i.push(""),i.push("# Physical X endstop configuration"),i.push(`[${e.getMotionStepperName()}]`),i.push(`endstop_pin: ${e.getXEndstopPin()}`),i.push("[gcode_macro RatOS]"),i.push('variable_homing_x: "endstop"')),"sensorless"!==e.getYEndstop().id){if("sensorless"==a)a=e.getYEndstopPin();else if(a!==e.getYEndstopPin())throw Error("Multiple toolheads configured with different y endstops is currently not supported.")}}),"sensorless"!==a&&(i.push(""),i.push("# Physical Y endstop configuration"),i.push("[stepper_y]"),i.push(`endstop_pin: ${a}`),i.push("[gcode_macro RatOS]"),i.push('variable_homing_y: "endstop"')),n.some(e=>"sensorless"===e.getXEndstop().id||"sensorless"===e.getYEndstop().id)){let n=e.printer.defaults.rails.find(e=>e.axis===c.po.x),a=e.printer.defaults.rails.find(e=>e.axis===c.po.dual_carriage),s=e.printer.defaults.rails.find(e=>e.axis===c.po.y);i.push(""),n&&s&&null!=o&&(0,c.R_)(t.getRail(c.po.x),(0,$.Oj)(n),e.performanceMode)&&(0,c.R_)(t.getRail(c.po.y),(0,$.Oj)(s),e.performanceMode)&&(null==a||(0,c.R_)(t.getRail(c.po.dual_carriage),(0,$.Oj)(a),e.performanceMode))?i.push(`[include ${o}]`):i.push(r.generateSensorlessHomingIncludes())}if(t.getToolheads().every(e=>null==e.getProbe())){i.push(""),i.push("# Physical Z endstop configuration"),i.push("[stepper_z]");try{i.push(`endstop_pin: ${t.getRailPinValue(c.po.z,"_endstop_pin")}`)}catch(e){try{i.push(`endstop_pin: ${t.getRailPinValue(c.po.z,"_diag_pin")}`)}catch(e){i.push("# endstop_pin: <pin> # Override this with the correct pin in printer.cfg")}}i.push("position_endstop: -0.1"),i.push("second_homing_speed: 3.0"),i.push("homing_retract_dist: 3.0")}return i.join("\n")},renderMacroVariableOverrides(r){let o=[`variable_bed_margin_x: [${e.printer.bedMargin.x[0]}, ${e.printer.bedMargin.x[1]}]`,`variable_bed_margin_y: [${e.printer.bedMargin.y[0]}, ${e.printer.bedMargin.y[1]}]`],i=t.getToolheads(),n=i.some(e=>e.getMotionAxis()===c.po.dual_carriage);if(n){let e=i.find(e=>null!=e.getProbe())?.getTool();o.push(`variable_default_toolhead: ${e}                             # the toolhead with the z-probe, 0=left 1=right toolhead`);let r=t.getToolhead(0).getXAccelerometerName(),n=t.getToolhead(1).getXAccelerometerName();o.push(`variable_adxl_chip: ["${r}", "${n}"]           # toolheads adxl chip names`),o.push(`variable_toolchange_travel_speed: ${this.getMacroTravelSpeed()}     # parking travel speed`),o.push(`variable_toolchange_travel_accel: ${this.getMacroTravelAccel()}     # parking travel accel`),o.push("variable_shaper_x_freq: [0, 0, 0, 0]                    # shaper frequency [T0, T1, COPY, MIRROR]"),o.push("variable_shaper_y_freq: [0, 0, 0, 0]                    # shaper frequency [T0, T1, COPY, MIRROR]"),o.push('variable_shaper_x_type: ["mzv", "mzv", "mzv", "mzv"]    # shaper frequency algorythm [T0, T1, COPY, MIRROR]'),o.push('variable_shaper_y_type: ["mzv", "mzv", "mzv", "mzv"]    # shaper frequency algorythm [T0, T1, COPY, MIRROR]')}return o.push(t.getAxisDriverVariables(c.po.x,"hybrid-corexy"!==e.printer.kinematics)),o.push(t.getAxisDriverVariables(c.po.y,!0,"hybrid-corexy"===e.printer.kinematics?[c.po.x1]:[])),o.push(t.getAxisDriverVariables(c.po.z,!0)),t.formatInlineComments(o).join("\n")},renderSaveVariables:e=>r.generateSaveVariables(e).join("\n"),renderUserMacroVariableOverrides(e){let r=[`variable_macro_travel_speed: ${this.getMacroTravelSpeed()}`,`variable_macro_travel_accel: ${this.getMacroTravelAccel()}`],o=t.getToolheads(),i=o.some(e=>e.getMotionAxis()===c.po.dual_carriage);return i&&(r.push(`variable_toolchange_travel_speed: ${this.getMacroTravelSpeed()}     # parking travel speed`),r.push(`variable_toolchange_travel_accel: ${this.getMacroTravelAccel()}     # parking travel accel`),r.push("variable_shaper_x_freq: [0, 0, 0, 0]                    # shaper frequency [T0, T1, COPY, MIRROR]"),r.push("variable_shaper_y_freq: [0, 0, 0, 0]                    # shaper frequency [T0, T1, COPY, MIRROR]"),r.push('variable_shaper_x_type: ["mzv", "mzv", "mzv", "mzv"]    # shaper frequency algorythm [T0, T1, COPY, MIRROR]'),r.push('variable_shaper_y_type: ["mzv", "mzv", "mzv", "mzv"]    # shaper frequency algorythm [T0, T1, COPY, MIRROR]')),t.formatInlineComments(r).join("\n")},renderControllerFan(){let r=[];if("none"===e.controllerFan.id)return r.push("# No controller fan configured"),r.join("\n");switch(r.push("[controller_fan controller_fan]"),e.controllerFan.id){case"2pin":t.requireControlboardPin("fan_controller_board_pin"),r.push(`# 2-pin fan connected to 2-pin header on ${e.controlboard.name} - input voltage pwm`),r.push(`pin: ${t.getControlboardPins().fan_controller_board_pin}`);break;case"4pin":t.requireControlboardPin("fan_controller_board_pin"),r.push(`# 4-pin fan connected to 2-pin header on ${e.controlboard.name} - digital pwm`),r.push(`pin: !${t.getControlboardPins().fan_controller_board_pin}`),r.push("cycle_time:  0.00004");break;case"4pin-dedicated":t.requireControlboardPin("4p_controller_board_pin"),r.push(`# 4-pin fan connected to 4-pin header on ${e.controlboard.name} - digital pwm`),r.push(`pin: ${t.getControlboardPins()["4p_controller_board_pin"]}`),r.push("cycle_time:  0.00004"),null!=t.getControlboardPins()["4p_controller_board_tach_pin"]&&(r.push(`tachometer_pin: ^${t.getControlboardPins()["4p_controller_board_tach_pin"]}`),r.push("tachometer_poll_interval: 0.0005"));break;default:throw Error(`Unsupported controller fan option "${e.controllerFan.title}"`)}return r.join("\n")},renderFans(){let r=[],o=t.getToolheads().filter(e=>e.getPartFan()).length>1;return r.push("# Part cooling fan"),o&&(r.push("# Multiple toolheads with part cooling fans configured"),r.push("# [fan] will use an unused io pin, proxy m106 settings to active toolhead via macro."),r.push("[fan]"),r.push("pin: rpi:gpio4         # sacrifical part fan, use this to independently control your both toolhead part fans")),r.push(t.getToolheads().map(r=>r.renderPartFan(o,e.controlboard)).join("\n")),r.push(""),r.push("# Hotend cooling fan"),r.push(t.getToolheads().map(r=>r.renderHotendFan(e.controlboard)).join("\n")),r.push(""),r.push("# Controller cooling fan"),r.push(this.renderControllerFan()),r.join("\n")},renderBoardPinAlias(e,r,o,i){let n=r.isToolboard?"toolboard":"controlboard",a=r.isToolboard?o?.getToolboardPins():t.getControlboardPins();if(null==a)throw Error(`No pins found for ${r.name}.`);let s={},l=Object.keys(h.oL).map(e=>{let r=e.split("_"),o="dual"===r[0]?r[0]+"_"+r[1]:r[0],i=t.pinAliasPrefixToPrinterAxis(o);if(t.isPrinterAxis(i)&&-1!==Object.keys(h.X6.shape).indexOf(e.replace(o+"_","")))try{let r=t.getRailPinValue(i,e.replace(o,""),[n],!1);return null==s[i]&&(s[i]=[]),s[i]?.push(`${e}=${r}`),null}catch(e){return null}return null==a[e]?e+"=null":e+"="+a[e]}).filter(Boolean),d=[`[board_pins ${e}]`];null!=i&&d.push(`mcu: ${i}`);let p=[];return Object.entries(s).forEach(([e,o])=>{null!=o&&t.isPrinterAxis(e)&&(p.push(t.getMotorPinComments(e,r,`${e.toUpperCase()} motor pins`).join("\n	")),p.push(o.join(",\n	")+","))}),d.push("aliases:",`	${p.join("\n	")}
	${t.renderCommentHeader("GENERAL PINS")}
	${l.join(",\n	")}`),d.join("\n")},renderBase:()=>"[include RatOS/homing.cfg]\n[include RatOS/macros.cfg]\n[include RatOS/shell-macros.cfg]",renderReminders:()=>r.getReminders().join("\n"),renderMacros:()=>t.formatInlineComments(t.getToolheads().flatMap(e=>e.renderToolheadMacro().split("\n"))).join("\n"),uncommentIf:e=>!0===e?"":"#"});var R=t(20997),E=t(68103),A=t(5873),N=t(16689),O=t.n(N);let k=O().forwardRef(({className:e,...r},t)=>R.jsx("strong",{ref:t,className:function(...e){return(0,A.twMerge)((0,E.clsx)(e))}("font-semibold",e),...r}));k.displayName="Strong",R.Fragment;let partFanOptions=(e,r)=>{let t=[];return(null==r||r?.axis===c.po.x||r?.axis===null)&&(t.push({id:"2pin",title:"Input Voltage PWM",badge:[{color:"purple",children:e?.controlboard?.name??"Control Board"}]}),t.push({id:"4pin",title:"Digital PWM on 2-pin port",badge:[{color:"purple",children:e?.controlboard?.name??"Control Board"}]})),e?.controlboard?.fourPinFanConnectorCount!=null&&e.controlboard.fourPinFanConnectorCount>0&&t.push({id:"4pin-dedicated",title:"Digital PWM on 4-pin port",badge:[{color:"purple",children:e.controlboard.name}]}),r?.toolboard!=null&&(t.push({id:"2pin-toolboard",title:"Input Voltage PWM",badge:[{color:"sky",children:`${r.toolboard.name}${null!=r.toolNumber&&` T${r.toolNumber}`}`}]}),t.push({id:"4pin-toolboard",title:"Digital PWM on 2-pin port",badge:[{color:"sky",children:`${r.toolboard.name}${null!=r.toolNumber&&` T${r.toolNumber}`}`}]}),r?.toolboard.fourPinFanConnectorCount!=null&&r.toolboard.fourPinFanConnectorCount>0&&t.push({id:"4pin-dedicated-toolboard",title:"Digital PWM on 4-pin port",badge:[{color:"sky",children:`${r.toolboard.name}${null!=r.toolNumber&&` T${r.toolNumber}`}`}]})),t},hotendFanOptions=(e,r)=>{let t=[];return(null==r||r?.axis===c.po.x)&&(t.push({id:"2pin",title:"Input Voltage PWM",badge:[{color:"purple",children:e?.controlboard?.name??"Control Board"}]}),t.push({id:"4pin",title:"Digital PWM on 2-pin port",badge:[{color:"purple",children:e?.controlboard?.name??"Control Board"}]})),(e?.controlboard?.fourPinFanConnectorCount!=null&&e.controlboard.fourPinFanConnectorCount>2||e?.controlboard?.fourPinFanConnectorCount!=null&&e.controlboard.fourPinFanConnectorCount>1&&e.controllerFan?.id!=="4pin-dedicated")&&t.push({id:"4pin-dedicated",title:"Digital PWM on 4-pin port",badge:[{color:"purple",children:e?.controlboard?.name??"Control Board"}]}),r?.toolboard!=null&&(t.push({id:"2pin-toolboard",title:"Input Voltage PWM",badge:[{color:"sky",children:`${r.toolboard.name}${null!=r.toolNumber&&` T${r.toolNumber}`}`}]}),t.push({id:"4pin-toolboard",title:"Digital PWM on 2-pin port",badge:[{color:"sky",children:`${r.toolboard.name}${null!=r.toolNumber&&` T${r.toolNumber}`}`}]}),r?.toolboard.fourPinFanConnectorCount!=null&&r.toolboard.fourPinFanConnectorCount>1&&t.push({id:"4pin-dedicated-toolboard",title:"Digital PWM on 4-pin port",badge:[{color:"sky",children:`${r.toolboard.name}${null!=r.toolNumber&&` T${r.toolNumber}`}`}]})),t},controllerFanOptions=(e,r)=>{let t=[{id:"2pin",title:"Input Voltage PWM",badge:[{color:"purple",children:e?.controlboard?.name??"Control Board"}]},{id:"4pin",title:"Digital PWM on 2-pin port",badge:[{color:"purple",children:e?.controlboard?.name??"Control Board"}]}];return(e?.controlboard?.fourPinFanConnectorCount!=null&&e.controlboard.fourPinFanConnectorCount>2||e?.controlboard?.fourPinFanConnectorCount!=null&&e.controlboard.fourPinFanConnectorCount>1&&!r?.some(e=>e?.hotendFan?.id==="4pin-dedicated"))&&t.push({id:"4pin-dedicated",title:"Digital PWM on 4-pin port",badge:[{color:"purple",children:e?.controlboard?.name??"Control Board"}]}),t.push({id:"none",title:"No fan"}),t};var I=t(82557),F=t(32081);let hasBeaconAccel=()=>{try{let e=(0,s.existsSync)("/dev/beacon")?(0,F.execSync)('udevadm info /dev/beacon | grep "ID_MODEL="').toString().trim():null;if(e&&e.endsWith("RevH"))return!0}catch(e){}return!1},xAccelerometerOptions=(e,r)=>{let t=[{id:"none",title:"None"},{id:"sbc",title:"Wired to Host Computer"}];return(e?.controlboard?.ADXL345SPI!=null||e?.controlboard?.LIS2DW!=null)&&t.push({id:"controlboard",title:"Wired to Controlboard"}),r?.toolboard!=null&&(null!=r.toolboard.ADXL345SPI||null!=r.toolboard.LIS2DW)&&t.push({id:"toolboard",title:"Integrated on toolboard"}),hasBeaconAccel()&&t.push({id:"beacon",title:"Beacon"}),t},yAccelerometerOptions=(e,r)=>{let t=[{id:"none",title:"None"},{id:"sbc",title:"Wired to Host Computer"}];return(e?.controlboard?.ADXL345SPI!=null||e?.controlboard?.LIS2DW!=null)&&t.push({id:"controlboard",title:"Wired to Controlboard"}),r?.toolboard!=null&&(null!=r.toolboard.ADXL345SPI||null!=r.toolboard.LIS2DW)&&t.push({id:"toolboard",title:"Integrated on toolboard"}),hasBeaconAccel()&&t.push({id:"beacon",title:"Beacon"}),t};var D=t(54230),M=t(23637),L=t(29755),j=t(44101),H=t(15140),B=t(85337);function getBaseUrl(){return process.env.RENDER_INTERNAL_HOSTNAME?`http://${process.env.RENDER_INTERNAL_HOSTNAME}:${process.env.PORT}/configure`:`http://127.0.0.1:${process.env.PORT??3e3}/configure`}(0,t(4129).createTRPCNext)({config:()=>({links:[(0,B.httpBatchLink)({url:`${getBaseUrl()}/api/trpc`,maxURLLength:2083})]}),overrides:{useMutation:{async onSuccess(e){await e.originalFn(),await e.queryClient.invalidateQueries()}}},ssr:!1});let W=(0,B.createTRPCProxyClient)({links:[(0,B.httpBatchLink)({url:`${getBaseUrl()}/api/trpc`,maxURLLength:2083})]});t(18910),t(7636),t(53489),t(56988);var U=t(58545),q=t.n(U),V=t(68171),G=t(44439);let send=async function(e,r){W.clientLog.mutate({level:e,logEvent:G.s.parse(r)})},X=null,logger_getLogger=()=>null!=X?X:X=q()({...V.N,browser:{transmit:{send}}}),K=new EventTarget,DispatchSaveAtomEvent=(e,r)=>{K.dispatchEvent(new CustomEvent("saveAtom",{detail:{itemKey:e,value:r}}))},moonrakerWriteEffect=()=>e=>{e.onSet(r=>{DispatchSaveAtomEvent(e.node.key,null==r?"null":r)})},Y={},readPrinterAtom=async({read:e})=>{let r=await e(Z.key);if(null!=r){let e=o.z.object({id:b.shape.id}).safeParse(r);if(e.success||(e=o.z.object({id:b.shape.id}).safeParse({id:r})),e.success){let r=Y[e.data.id];return null==r&&(r=await W.printer.printer.query(e.data.id,{}))&&(Y[e.data.id]=r),r??null}}return null},readPrinterRailAtom=e=>async({read:r})=>{let t=await r(ee(e).key);if(null!=t){let o=c.Ah.safeParse(t);if(o.success)return o.data;let i=await readPrinterAtom({read:r}),n=i?.defaults.rails.find(r=>r.axis===e);if(null!=n){let e=c.Ah.safeParse({...n,...t});if(e.success)return e.data}}return null},Z=(0,L.atom)({key:"Printer",default:null,effects:[moonrakerWriteEffect(),(0,j.syncEffect)({read:readPrinterAtom,write:async({write:e},r)=>{await new Promise(t=>{r instanceof L.DefaultValue?e(Z.key,null):e(Z.key,r??null),setTimeout(()=>{},500)})},refine:(0,H.getRefineCheckerForZodSchema)(b.nullable())})]});(0,L.selector)({key:"LoadablePrinterState",get:async({get:e})=>{let r=e((0,L.noWait)(Z));return({hasValue:()=>r.contents,hasError:()=>[],loading:()=>[]})[r.state]()}});let Q=(0,L.atom)({key:"PrinterOption",default:null,effects:[moonrakerWriteEffect(),(0,j.syncEffect)({refine:(0,H.getRefineCheckerForZodSchema)(x.nullable())})]}),J=(0,L.atom)({key:"Controlboard",default:null,effects:[moonrakerWriteEffect(),(0,j.syncEffect)({read:async({read:e})=>{let r=await e(J.key);if(null!=r){let e=o.z.object({id:h.WQ}).safeParse(r);if(e.success){let r=await W.mcu.boards.query({boardFilters:{toolboard:!1}}),t=r.find(r=>r.id===e.data.id);return t??null}}return null},refine:(0,H.getRefineCheckerForZodSchema)(h.$l.nullable())})]}),ee=(0,L.atomFamily)({key:"PrinterRail",default:null,effects:e=>[moonrakerWriteEffect(),(0,j.syncEffect)({read:readPrinterRailAtom(e),refine:(0,H.getRefineCheckerForZodSchema)(c.Ah.nullable())})]}),er=(0,L.selector)({key:"PrinterRails",get:({get:e})=>{let r=e(Z),t=r?.defaults.rails.map(r=>{let t=e(ee(r.axis));return $.Ak(t??r)});return t??[]},set:({set:e},r)=>{if(r instanceof L.DefaultValue){Object.values(c.po).forEach(r=>{e(ee(r),null)});return}r.forEach(r=>{e(ee(r.axis),(0,$.Yz)(r))})}});(0,L.selector)({key:"LoadablePrinterRailsState",get:async({get:e})=>{let r=e((0,L.noWait)(er));return({hasValue:()=>r.contents,hasError:()=>[],loading:()=>[]})[r.state]()}});let et=(0,L.atomFamily)({key:"PrinterToolhead",default:null,effects:e=>[moonrakerWriteEffect(),(0,j.syncEffect)({read:async({read:r})=>{let t=await r(et(e).key);if("object"!=typeof t||null==t)return null;let{toolNumber:i,...n}=t;if(null!=n){let r=u.x8.safeParse(n);if(r.success){let t=r.data.toolboard;if(t&&null!=t){let e=o.z.object({id:h.WQ}).safeParse(t);if(e.success){let r=await W.mcu.boards.query({boardFilters:{toolboard:!0}}),o=r.find(r=>r.id===e.data.id);o&&(t=h.MG.parse(o))}}return{...r.data,toolboard:t,toolNumber:e}}logger_getLogger().debug("RecoilSync: failed to read toolhead!",et(e).key,r.error,n)}return null},refine:(0,H.getRefineCheckerForZodSchema)(u.PY.extend({toolNumber:u.Qr}).nullable())})]});(0,L.selectorFamily)({key:"DeserializeToolheadQuery",get:e=>async({get:r})=>{let t=u.x8.safeParse(await W.printer.deserializeToolheadConfiguration.query({config:e.th,printerConfig:{controlboard:e.boardId}}));return t.success?{...t.data,toolNumber:e.toolNumber}:null}});let eo=(0,L.selector)({key:"PrinterToolheadsState",get:({get:e})=>{let r=e(Z);return null==r?[]:e((0,L.waitForAll)(r.defaults.toolheads.map((e,r)=>et(r)))).filter(Boolean)},set:({set:e,reset:r},t)=>{if(t instanceof L.DefaultValue)throw Error("ToolheadsState cannot be reset, please reset the individual ToolheadState instead");t.forEach(r=>{e(et(r.toolNumber),{...r,toolNumber:r.toolNumber})})}});(0,L.selector)({key:"LoadablePrinterToolheadsState",get:async({get:e})=>{let r=e((0,L.noWait)(eo));return({hasValue:()=>r.contents,hasError:()=>[],loading:()=>[]})[r.state]()}});let ei=(0,L.atom)({key:"PerformanceMode",default:!1,effects:[moonrakerWriteEffect(),(0,j.syncEffect)({refine:(0,H.getRefineCheckerForZodSchema)(o.z.boolean().optional().nullable())})]}),en=(0,L.atom)({key:"Stealchop",default:!1,effects:[moonrakerWriteEffect(),(0,j.syncEffect)({refine:(0,H.getRefineCheckerForZodSchema)(o.z.boolean().optional().nullable())})]}),ea=(0,L.atom)({key:"StandstillStealth",default:!1,effects:[moonrakerWriteEffect(),(0,j.syncEffect)({refine:(0,H.getRefineCheckerForZodSchema)(o.z.boolean().optional().nullable())})]}),es=(0,L.atom)({key:"ControllerFan",default:{id:"2pin",title:"Input Voltage PWM",badge:[{color:"purple",children:"Control Board"}]},effects:[moonrakerWriteEffect(),(0,j.syncEffect)({refine:(0,H.getRefineCheckerForZodSchema)(a.XG.nullable())})]}),el=(0,L.selector)({key:"PrinterConfiguration",get:async({get:e})=>{let{printer:r,printerSize:t,performanceMode:o,stealthchop:i,standstillStealth:n,rails:a,controlboard:s,controllerFan:l,toolheads:d}=e((0,L.waitForAll)({printer:Z,printerSize:Q,performanceMode:ei,stealthchop:en,standstillStealth:ea,rails:er,controlboard:J,controllerFan:es,toolheads:eo})),p={printer:null==r?null:{...r,defaults:{...r.defaults,toolheads:r?.defaults.toolheads.map(e=>$.m6(e))}},size:t,performanceMode:o,stealthchop:i,standstillStealth:n,rails:a,controlboard:s,controllerFan:l,toolheads:d.length>0?d:void 0},c=v.safeParse(p);return!1===c.success&&logger_getLogger().error({errors:c.error.flatten().fieldErrors,data:p},"Couldn't parse printer configuration"),c.success?c.data:null}});(0,L.selector)({key:"LoadablePrinterConfigurationState",get:async({get:e})=>{let r=e((0,L.noWait)(el));return({hasValue:()=>r.contents,hasError:()=>null,loading:()=>null})[r.state]()}});let serializePrinterConfiguration=e=>{let r={printer:e.printer.id,toolheads:e.toolheads.map(e=>(0,$.m6)(e)),size:e.size,controlboard:e.controlboard.id,controllerFan:e.controllerFan.id,performanceMode:e.performanceMode,stealthchop:e.stealthchop,standstillStealth:e.standstillStealth,rails:e.rails.map(e=>(0,$.Yz)(e))};return y.parse(r)};var ed=t(25716),ep=t(22042),ec=t(37868),eu=t(73292),eh=t(71569),eg=t.n(eh),ef=t(63902),e_=t(31452),em=t(36029);function isNodeError(e){return e instanceof Error}let eb=(0,ep.ik)(async(e,r)=>{let t=ep.oA.get(e);if(null!=t)return o.z.array(r).parse(t);let a=await (0,D.glob)(`${process.env.RATOS_CONFIGURATION_PATH}/${e}/*.cfg`),s=(await Promise.all(a.map(e=>e.trim()).filter(e=>""!==e).map(async e=>{let t=await (0,n.BB)(e,r);return null==t?((0,i.j)().warn(`No metadata present in ${e} skipping..`),null):t}))).filter(e=>null!=e);return ep.oA.set(e,s),s},ep.oA),serializedPartialConfigFromPrinterDefinition=e=>w.parse({printer:e.id,controlboard:e.defaults.board}),getPrinters=async(e=!1)=>{let r=(0,D.glob)(`${process.env.RATOS_CONFIGURATION_PATH}/printers/*/printer-definition.json`),t=await eb("hotends",a.Uy),i=await (0,I.DC)(),n={},s=(await Promise.all((await r).map(async e=>""===e.trim()?null:{...JSON.parse((await (0,eu.readFile)(e)).toString()),path:e.replace("printer-definition.json",""),id:e.replace("/printer-definition.json","").split("/").pop()}))).filter(Boolean);s.forEach(r=>{let o=serializedPartialConfigFromPrinterDefinition(r);n[r.id]=r.defaults.toolheads.map(async r=>{let n=(await t).find(e=>e.id===r.hotend);if(null==r.thermistor&&null!=n&&(r.thermistor=n.thermistor),null==r.nozzle&&(r.nozzle=(0,ef.S)()),e){let e=await deserializeToolheadConfiguration(r,o,i);r=e}return r})});let l={};return await Promise.all(Object.keys(n).map(async e=>{let r=n[e];l[e]=await Promise.all(r)})),o.z.array(e?b:m).parse(s.map(e=>(e.defaults.toolheads=l[e.id],e)))},isPrinterCfgInitialized=async()=>{let e=l.Rz.parse(process.env);try{await (0,eu.access)(p().join(e.KLIPPER_CONFIG_PATH,"printer.cfg"),s.constants.F_OK)}catch(e){if(isNodeError(e)&&"ENOENT"===e.code)return!1;throw e}let r=await (0,eu.readFile)(p().join(e.KLIPPER_CONFIG_PATH,"printer.cfg"));return -1===r.indexOf("[include RatOS/printers/initial-setup.cfg]")},deserializeToolheadConfiguration=async(e,r,t)=>{let o=null==t?await (0,I.DC)():t,i=o.find(e=>e.id===r.controlboard),n=(0,I.Ok)(o),s=await eb("hotends",a.Uy),l=await eb("extruders",a.U3),d=await eb("z-probe",a.lV),p=n.find(r=>r.id===e.toolboard)??null,c=xAccelerometerOptions({controlboard:i},{toolboard:p}),h=yAccelerometerOptions({controlboard:i},{toolboard:p}),g={...e,toolboard:p,hotend:s.find(r=>r.id===e.hotend),extruder:l.find(r=>r.id===e.extruder),probe:d.find(r=>r.id===e.probe),thermistor:a.b6.find(r=>r===e.thermistor),xEndstop:xEndstopOptions({controlboard:i},{toolboard:p,axis:e.axis}).find(r=>r.id===e.xEndstop),yEndstop:yEndstopOptions({controlboard:i},{toolboard:p,axis:e.axis}).find(r=>r.id===e.yEndstop),xAccelerometer:c.find(r=>r.id===e.xAccelerometer)??(p&&(null!=p.ADXL345SPI||p.LIS2DW)?c.find(e=>"toolboard"===e.id):null),yAccelerometer:h.find(r=>r.id===e.yAccelerometer)??(p&&(null!=p.ADXL345SPI||p.LIS2DW)?h.find(e=>"toolboard"===e.id):null),partFan:partFanOptions({controlboard:i},{toolboard:p,axis:e.axis}).find(r=>r.id===e.partFan),hotendFan:hotendFanOptions({controlboard:i},{toolboard:p,axis:e.axis}).find(r=>r.id===e.hotendFan)};return u.x8.parse(g)},deserializePartialToolheadConfiguration=async(e,r,t)=>{t=t??await (0,I.DC)();let o=t.find(e=>e.id===r?.controlboard),i=(0,I.Ok)(t),n=await eb("hotends",a.Uy),s=await eb("extruders",a.U3),l=await eb("z-probe",a.lV),d=i.find(r=>r.id===e?.toolboard);return u.b2.parse({...e,toolboard:d??null,hotend:n.find(r=>r.id===e?.hotend),extruder:s.find(r=>r.id===e?.extruder),probe:l.find(r=>r.id===e?.probe),thermistor:a.b6.find(r=>r===e?.thermistor),xEndstop:xEndstopOptions({controlboard:o},{toolboard:d,axis:e?.axis??c.po.x}).find(r=>r.id===e?.xEndstop),yEndstop:yEndstopOptions({controlboard:o},{toolboard:d,axis:e?.axis??c.po.x}).find(r=>r.id===e?.yEndstop),xAccelerometer:xAccelerometerOptions({controlboard:o},{toolboard:d}).find(r=>r.id===e?.xAccelerometer),yAccelerometer:yAccelerometerOptions({controlboard:o},{toolboard:d}).find(r=>r.id===e?.yAccelerometer),partFan:partFanOptions({controlboard:o},{toolboard:d,axis:e?.axis??c.po.x}).find(r=>r.id===e?.partFan),hotendFan:hotendFanOptions({controlboard:o},{toolboard:d,axis:e?.axis??c.po.x}).find(r=>r.id===e?.hotendFan)})},deserializePartialPrinterConfiguration=async e=>{let r=await (0,I.DC)(),t=r.find(r=>r.id===e?.controlboard),o=e?.toolheads==null?void 0:await Promise.all(e.toolheads.map(async t=>await deserializePartialToolheadConfiguration(t,e,r)));return v.parse({toolheads:o,printer:(await getPrinters()).find(r=>r.id===e?.printer),size:e?.size,controllerFan:controllerFanOptions({controlboard:t}).find(r=>r.id===e?.controllerFan),controlboard:t,performanceMode:e?.performanceMode,stealthchop:e?.stealthchop,standstillStealth:e?.standstillStealth,rails:e?.rails?.map(e=>$.Ak(e))})},deserializePrinterConfiguration=async e=>{let r=await (0,I.DC)(),t=r.find(r=>r.id===e?.controlboard),o=null==e.toolheads?void 0:await Promise.all(e.toolheads.map(t=>deserializeToolheadConfiguration(t,e,r)));return P.parse({toolheads:o,printer:(await getPrinters()).find(r=>r.id===e?.printer),size:e?.size,controllerFan:controllerFanOptions({controlboard:t}).find(r=>r.id===e?.controllerFan),controlboard:t,performanceMode:e?.performanceMode,stealthchop:e?.stealthchop,standstillStealth:e?.standstillStealth,rails:e?.rails.map(e=>$.Ak(e))})},getTimeStamp=()=>{let e=new Date,r=String(e.getDate()).padStart(2,"0"),t=String(e.getMonth()+1).padStart(2,"0"),o=e.getFullYear(),i=String(e.getHours()).padStart(2,"0"),n=String(e.getMinutes()).padStart(2,"0"),a=String(e.getSeconds()).padStart(2,"0");return`${o}${t}${r}_${i}${n}${a}`},portModifications=async(e,r)=>{if((0,s.existsSync)(e)){let t=await (0,e_.M_)(e,"#*# <---------------------- SAVE_CONFIG ---------------------->");!1!==t&&(r+="\n\n"+await (0,e_.Sw)(e,t)+"\n")}return r},getFilesToWrite=async(e,r)=>{let o=await constructKlipperConfigUtils(e),i=constructKlipperConfigExtrasGenerator(e,o),n=await constructKlipperConfigHelpers(e,i,o),a=l.Rz.parse(process.env),{template:d,initialPrinterCfg:c}=await t(26004)(`./${e.printer.template.replace("-printer.template.cfg",".ts")}`),u=d(e,n).trim(),h=await portModifications(p().join(a.KLIPPER_CONFIG_PATH,"printer.cfg"),c(e,n).trim()),g=i.getFilesToWrite();return[{fileName:"RatOS.cfg",content:u,overwrite:!0,order:0},{fileName:"printer.cfg",order:1,content:h,overwrite:!await isPrinterCfgInitialized()}].concat(g).map(e=>{let t={...e,exists:!1,diskContent:null};return(r?.includes(t.fileName)||r?.includes("*"))&&(t.overwrite=!0),t.exists=(0,s.existsSync)(p().join(a.KLIPPER_CONFIG_PATH,t.fileName)),t.exists&&(t.diskContent=(0,s.readFileSync)(p().join(a.KLIPPER_CONFIG_PATH,t.fileName),"utf-8"),(0,s.existsSync)(p().join(a.RATOS_DATA_DIR,`last-${t.fileName}`))&&(t.lastSavedContent=(0,s.readFileSync)(p().join(a.RATOS_DATA_DIR,`last-${t.fileName}`),"utf-8"))),t})},generateKlipperConfiguration=async(e,r,t)=>{let o=l.Rz.parse(process.env),n=await getFilesToWrite(e,r),a=await Promise.all(n.map(async e=>{let r="created",n=p().join(o.KLIPPER_CONFIG_PATH,e.fileName),a=p().join(o.RATOS_DATA_DIR,`last-${e.fileName}`);try{if(await (0,eu.access)(n,s.constants.F_OK),!e.overwrite)return{fileName:e.fileName,action:"skipped"};{if(e.exists&&e.diskContent===e.content)return{fileName:e.fileName,action:"unchanged"};let t=`${e.fileName.split(".").slice(0,-1).join(".")}-${getTimeStamp()}.cfg`;try{await (0,eu.copyFile)(n,p().join(o.KLIPPER_CONFIG_PATH,t));let r=await (0,D.glob)(p().join(o.KLIPPER_CONFIG_PATH,`${e.fileName.split(".").slice(0,-1).join(".")}-+([0-9])_+([0-9]).cfg`));if(r.length>0){let e=r.sort((e,r)=>{let t=new Date(e.split("-").slice(-1)[0].split(".cfg")[0]),o=new Date(r.split("-").slice(-1)[0].split(".cfg")[0]);return t.getTime()-o.getTime()});e.length>5&&await Promise.all(e.reverse().slice(0,e.length-5).map(e=>((0,i.j)().info(`Removing old backup: ${e}`),(0,eu.unlink)(e))))}}catch(r){return{fileName:e.fileName,action:"error",err:r}}r="overwritten"}}catch(r){if(!isNodeError(r)||"ENOENT"!==r.code)return{fileName:e.fileName,action:"error",err:r}}try{if(t?.includes(e.fileName))return{fileName:e.fileName,action:"skipped"};return await (0,eu.writeFile)(n,e.content),await (0,eu.writeFile)(a,e.content),{fileName:e.fileName,action:r}}catch(r){return{fileName:e.fileName,action:"error",err:r}}})),d=a.filter(e=>"error"===e.action);if(d.length>0)throw d.map(e=>(0,i.j)().error(e)),Error("Something went wrong when saving the configuration. The following files couldn't be written: "+d.map(e=>e.fileName).join(", "));try{await (0,ed.$6)(serializePrinterConfiguration(e))}catch(e){throw Error("Couldn't backup your current printer settings to disk, but your klipper configuration has been generated.")}return a},compareSettings=async e=>{let r=l.Rz.parse(process.env),t=(0,ed.PV)()?await getFilesToWrite(await (0,ed.OR)()):[],o=await getFilesToWrite(await deserializePrinterConfiguration(e)),i=await Promise.all(o.filter(e=>!e.exists||!t.some(r=>r.fileName===e.fileName)).map(async e=>{let r=new Date().getTime()+eg()(e);await (0,eu.writeFile)(`/tmp/ratos-added-new-${r}.cfg`,e.content);let t=await new Promise((e,t)=>{(0,F.exec)(`git diff --minimal --no-index /dev/null /tmp/ratos-added-new-${r}.cfg`,(r,o,i)=>{""==o.trim()&&t(i),e(o)})});return{fileName:e.fileName,diff:t,exists:e.exists,diskContent:e.diskContent??null,overwrite:e.overwrite,order:e.order,state:"created"}})),n=await Promise.all(t.filter(e=>e.exists&&!o.some(r=>r.fileName===e.fileName)).map(async e=>{let r=new Date().getTime()+eg()(e);await (0,eu.writeFile)(`/tmp/ratos-removed-old-${r}.cfg`,e.content);let t=await new Promise((e,t)=>{(0,F.exec)(`git diff --minimal --no-index /tmp/ratos-removed-old-${r}.cfg /dev/null`,(r,o,i)=>{""==o.trim()&&t(i),e(o)})});return{fileName:e.fileName,diff:t,exists:e.exists,diskContent:e.diskContent??null,overwrite:e.overwrite,order:e.order,state:"removed"}})),a=await Promise.all(o.filter(e=>e.exists&&t.some(r=>r.fileName===e.fileName&&(r.content!==e.content||null!=e.lastSavedContent&&r.content!==e.lastSavedContent))).map(async e=>{let o=t.find(r=>r.fileName===e.fileName);if(null==o)throw Error("This should never happen.");let i=new Date().getTime()+eg()(e),n=p().resolve(p().join(r.KLIPPER_CONFIG_PATH,o.fileName));o.exists||(n=`/tmp/ratos-changed-old-${i}.cfg`,await (0,eu.writeFile)(n,o.content)),await (0,eu.writeFile)(`/tmp/ratos-changed-new-${i}.cfg`,e.content);let a=await new Promise((e,r)=>{(0,F.exec)(`git diff --minimal --no-index ${n} /tmp/ratos-changed-new-${i}.cfg`,(t,o,i)=>{""==o.trim()&&r(i),e(o)})});return{fileName:e.fileName,diff:a,exists:e.exists,overwrite:e.overwrite,diskContent:e.diskContent??null,changedOnDisk:o.diskContent!==o.content,changedFromConfig:o.content!==e.content||null!=e.lastSavedContent&&o.content!==e.lastSavedContent,order:e.order,state:"changed"}})),s=await Promise.all(o.filter(e=>e.exists&&t.some(r=>r.fileName===e.fileName&&r.content===e.content&&(null==e.lastSavedContent||r.content===e.lastSavedContent))).map(async e=>{let o=t.find(r=>r.fileName===e.fileName);if(null==o)throw Error("This should never happen.");let i=null;if(o.diskContent!==o.content){let t=new Date().getTime()+eg()(e),n=p().resolve(p().join(r.KLIPPER_CONFIG_PATH,o.fileName));o.exists||(n=`/tmp/ratos-changed-old-${t}.cfg`,await (0,eu.writeFile)(n,o.content)),await (0,eu.writeFile)(`/tmp/ratos-changed-new-${t}.cfg`,e.content),i=await new Promise((e,r)=>{(0,F.exec)(`git diff --minimal --no-index ${n} /tmp/ratos-changed-new-${t}.cfg`,(t,o,i)=>{""==o.trim()&&r(i),e(o)})})}return{fileName:e.fileName,diff:i,exists:e.exists,overwrite:e.overwrite,diskContent:e.diskContent??null,changedOnDisk:o.diskContent!==o.content,changedFromConfig:o.content!==e.content||null!=e.lastSavedContent&&o.content!==e.lastSavedContent,order:e.order,state:"unchanged"}})),d=i.concat(n).concat(a).concat(s).sort((e,r)=>{if(null!=e.order||null!=r.order){if((e.order??9999)>(r.order??9999))return 1;if((e.order??9999)<(r.order??9999))return -1}return o.findIndex(r=>r.fileName===e.fileName)<o.findIndex(e=>e.fileName===r.fileName)?-1:o.findIndex(r=>r.fileName===e.fileName)>o.findIndex(e=>e.fileName===r.fileName)?1:e.fileName<r.fileName?-1:e.fileName>r.fileName?1:0});return d},loadSerializedConfig=async e=>{let r=await deserializePrinterConfiguration(await readSerializedConfig(e));return r},readSerializedConfig=async e=>{let r=await (0,eu.readFile)(e),t=y.parse(JSON.parse(r.toString()));return t},regenerateKlipperConfiguration=async(e,r,t)=>await generateKlipperConfiguration(await (0,ed.OR)(e),r,t),getToolhead=async(e,r,t)=>{let o=(0,$.Pw)(r,await deserializePartialPrinterConfiguration(e??{}))??null;return null==o?null:!0===t?o.serialize():o},getToolheads=async(e,r)=>{let t=(0,$.s)(await deserializePartialPrinterConfiguration(e??{}))??null;return null==t?null:!0===r?t.map(e=>e.serialize()):t},ez=(0,M.Nd)({getSavedConfig:M.$y.output(y.nullable()).query(async e=>{let r=await (0,ed.OR)(void 0,!0);return r}),getSavedPrinterName:M.$y.output(o.z.string().nullable()).query(async e=>{let r=await (0,ed.OR)(void 0,!0),t=(await getPrinters()).find(e=>e.id===r.printer);return null==t?null:t.manufacturer+" "+t.name}),printers:M.$y.output(o.z.array(b)).query(async()=>(await getPrinters(!0)).sort((e,r)=>"Rat Rig"===e.manufacturer&&("Rat Rig"!==r.manufacturer||r.description.indexOf("Discontinued")>-1)?-1:e.name.localeCompare(r.name))),printer:M.$y.input(o.z.string()).output(b.nullable()).query(async e=>{let r=(await getPrinters()).find(r=>r.id===e.input);return r?(r.defaults.toolheads=await Promise.all(r.defaults.toolheads.map(e=>deserializeToolheadConfiguration(e,serializedPartialConfigFromPrinterDefinition(r)))),b.parse(r)):null}),hotends:M.$y.output(o.z.array(a.Uy)).query(()=>eb("hotends",a.Uy)),extruders:M.$y.output(o.z.array(a.U3)).query(()=>eb("extruders",a.U3)),probes:M.$y.output(o.z.array(a.lV)).query(()=>eb("z-probe",a.lV)),thermistors:M.$y.query(()=>a.b6.map($.DX)),xEndstops:M.$y.input(o.z.object({config:w.nullable(),toolOrAxis:u.bi})).output(o.z.array(a.ws)).query(async e=>xEndstopOptions(await deserializePartialPrinterConfiguration(e.input.config??{}),(await getToolhead(e.input.config,e.input.toolOrAxis))?.getConfig())),yEndstops:M.$y.input(o.z.object({config:w.nullable(),toolOrAxis:u.bi})).output(o.z.array(a.ws)).query(async e=>yEndstopOptions(await deserializePartialPrinterConfiguration(e.input.config??{}),(await getToolhead(e.input.config,e.input.toolOrAxis))?.getConfig())),partFanOptions:M.$y.input(o.z.object({config:w.nullable(),toolOrAxis:u.bi})).output(o.z.array(a.XG)).query(async e=>partFanOptions(await deserializePartialPrinterConfiguration(e.input.config??{}),(await getToolhead(e.input.config,e.input.toolOrAxis))?.getConfig())),hotendFanOptions:M.$y.input(o.z.object({config:w.nullable(),toolOrAxis:u.bi})).output(o.z.array(a.XG)).query(async e=>hotendFanOptions(await deserializePartialPrinterConfiguration(e.input.config??{}),(await getToolhead(e.input.config,e.input.toolOrAxis))?.getConfig())),controllerFanOptions:M.$y.input(o.z.object({config:w.nullable()})).output(o.z.array(a.XG)).query(async e=>controllerFanOptions(await deserializePartialPrinterConfiguration(e.input.config??{}),(await getToolheads(e.input.config))?.map(e=>e.getConfig()))),xAccelerometerOptions:M.$y.input(o.z.object({config:w.nullable(),toolOrAxis:u.bi})).output(o.z.array(a.M3)).query(async e=>xAccelerometerOptions(await deserializePartialPrinterConfiguration(e.input.config??{}),(await getToolhead(e.input.config,e.input.toolOrAxis))?.getConfig())),yAccelerometerOptions:M.$y.input(o.z.object({config:w.nullable(),toolOrAxis:u.bi})).output(o.z.array(a.M3)).query(async e=>yAccelerometerOptions(await deserializePartialPrinterConfiguration(e.input.config??{}),(await getToolhead(e.input.config,e.input.toolOrAxis))?.getConfig())),deserializeToolheadConfiguration:M.$y.input(o.z.object({config:u.Qk,printerConfig:w.optional()})).query(async e=>await deserializeToolheadConfiguration(e.input.config,e.input.printerConfig??{})),printercfgStatus:M.$y.query(async()=>({isInitialized:await isPrinterCfgInitialized()})),regenerateConfiguration:M.$y.input(o.z.object({overwriteFiles:o.z.array(o.z.string()).optional(),skipFiles:o.z.array(o.z.string()).optional()})).mutation(async({input:e})=>{let r=await regenerateKlipperConfiguration(void 0,e.overwriteFiles,e.skipFiles);return r.some(e=>"created"===e.action||"overwritten"===e.action)&&(0,ec.W)(),r}),getFilesToWrite:M.$y.input(o.z.object({config:y})).mutation(async e=>{let{config:r}=e.input;return await compareSettings(r)}),saveConfiguration:M.$y.input(o.z.object({config:y,overwriteFiles:o.z.array(o.z.string()).optional(),skipFiles:o.z.array(o.z.string()).optional()})).mutation(async e=>{let{config:r,overwriteFiles:t,skipFiles:o}=e.input,i=await deserializePrinterConfiguration(r),n=await generateKlipperConfiguration(i,t,o);return(0,ec.W)(),n}),flashBeacon:M.$y.mutation(async()=>{let e=l.Rz.parse(process.env),r=await (0,em.$)(p().relative((0,e_.xg)(),p().join(e.RATOS_CONFIGURATION_PATH,"scripts","beacon-update.sh")));if(r.stderr)throw Error(r.stderr);return r.stdout})})},23637:(e,r,t)=>{"use strict";t.d(r,{$y:()=>a,Nd:()=>n,qR:()=>s});var o=t(56368);let i=o.initTRPC.context().meta().create(),n=i.router,a=i.procedure,s=i.middleware},52890:(e,r,t)=>{"use strict";t.d(r,{Ak:()=>deserializePrinterRail,Oj:()=>deserializePrinterRailDefinition,Pw:()=>extractToolheadFromPrinterConfiguration,s:()=>extractToolheadsFromPrinterConfiguration,Yz:()=>serializePrinterRail,m6:()=>serializeToolheadConfiguration,DX:()=>stringToTitleObject});var o=t(38316),i=t(65692);let n=o.z.array(i.HB).parse([{id:"LDO-TMC2209",title:"LDO TMC2209",type:"TMC2209",protocol:"UART",senseResistor:.11,coolingCurrentThreshold:1.1,voltages:[24],maxCurrent:2},{id:"LDO-NITEHAWK-TMC2209",title:"LDO TMC2209",type:"TMC2209",protocol:"UART",senseResistor:.1,coolingCurrentThreshold:1.1,voltages:[24],maxCurrent:2},{id:"LDO-TMC5160-HV",title:"LDO TMC5160 HV",type:"TMC5160",protocol:"SPI",senseResistor:.075,voltages:[24,36,48],maxCurrent:3,coolingCurrentThreshold:1.5},{id:"BTT-KRAKEN-2160-PLUS",title:"BTT TMC2160 PLUS",type:"TMC5160",protocol:"SPI",senseResistor:.022,voltages:[24,36,48,56,60],maxCurrent:8,coolingCurrentThreshold:3},{id:"BTT-KRAKEN-2160",title:"BTT TMC2160",type:"TMC5160",protocol:"SPI",senseResistor:.075,voltages:[24,36,48,56,60],maxCurrent:3,coolingCurrentThreshold:1.5},{id:"BTT-TMC2209-13",title:"BTT TMC2209 v1.3",type:"TMC2209",protocol:"UART",senseResistor:.11,coolingCurrentThreshold:1.1,voltages:[24],maxCurrent:2},{id:"BTT-TMC2226-10",title:"BTT TMC2226 v1.0",type:"TMC2209",protocol:"UART",senseResistor:.11,coolingCurrentThreshold:1.1,voltages:[24],maxCurrent:2},{id:"BTT-TMC5160-PRO-11",title:"BTT TMC5160(T) Pro v1.1",type:"TMC5160",protocol:"SPI",senseResistor:.075,voltages:[24,36,48,56],maxCurrent:3,coolingCurrentThreshold:1.5},{id:"BTT-TMC5160T-PLUS-10",title:"BTT TMC5160T Plus v1.0",type:"TMC5160",protocol:"SPI",senseResistor:.022,voltages:[24,36,48,56,60],maxCurrent:10.6,coolingCurrentThreshold:3,external:!0},{id:"BTT-EZ2209",title:"BTT EZ2209",type:"TMC2209",protocol:"UART",senseResistor:.11,coolingCurrentThreshold:1.3,voltages:[24],maxCurrent:2},{id:"BTT-EZ2226",title:"BTT EZ2226",type:"TMC2209",protocol:"UART",senseResistor:.11,coolingCurrentThreshold:1.3,voltages:[24],maxCurrent:2},{id:"BTT-EZ2130",title:"BTT EZ2130",type:"TMC2130",protocol:"SPI",senseResistor:.11,coolingCurrentThreshold:.9,voltages:[24],maxCurrent:2},{id:"BTT-EZ5160-PRO",title:"BTT EZ5160 Pro",type:"TMC5160",protocol:"SPI",senseResistor:.075,coolingCurrentThreshold:1.6,voltages:[24,36,48],maxCurrent:2.5},{id:"BTT-EZ5160-RGB",title:"BTT EZ5160 RGB",type:"TMC5160",protocol:"SPI",senseResistor:.05,coolingCurrentThreshold:3,voltages:[24,48,36,56],maxCurrent:4.7},{id:"BTT-TMC2240-10",title:"BTT TMC2240 v1.0",type:"TMC2240",protocol:"SPI",coolingCurrentThreshold:1.1,voltages:[24,36],maxCurrent:2.1},{id:"LDO-2240-UART",title:"LDO TMC2240 UART",type:"TMC2240",protocol:"UART",coolingCurrentThreshold:1.1,voltages:[24,36],maxCurrent:2.1},{id:"MELLOW-FLY-HV-TMC5160-PRO-12",title:"Mellow FLY HV TMC5160 Pro v1.2",type:"TMC5160",protocol:"SPI",senseResistor:.033,coolingCurrentThreshold:3,voltages:[24,36,48],maxCurrent:4.25,external:!0},{id:"MELLOW-FLY-TMC2209",title:"Mellow FLY TMC2209",type:"TMC2209",protocol:"UART",senseResistor:.11,coolingCurrentThreshold:1.1,voltages:[24],maxCurrent:2},{id:"PRUSA-EINSY-RAMBO-TMC2130",title:"Prusa Einsy Rambo TMC2130",type:"TMC2130",protocol:"SPI",senseResistor:.22,coolingCurrentThreshold:.9,voltages:[24],maxCurrent:2},{id:"PRUSA-BUDDY-TMC2209",title:"Prusa Buddy TMC2209",type:"TMC2209",protocol:"UART",senseResistor:.11,coolingCurrentThreshold:1.1,voltages:[24],maxCurrent:2}]);var a=t(64079),s=t(84541),l=t(1455);let deserializeDriver=e=>n.find(r=>r.id===e)??null,deserializeStepper=e=>a.B.find(r=>r.id===e)??null,deserializePrinterRail=e=>{let r=deserializeStepper(e.stepper),t=deserializeDriver(e.driver);if(null==r)throw Error(`Stepper ${e.stepper} not found in database`);if(null==t)throw Error(`Driver ${e.driver} not found in database`);return i.g6.parse({...e,stepper:r,driver:t})},deserializePrinterRailDefinition=e=>{let r=deserializeStepper(e.stepper),t=deserializeDriver(e.driver);if(null==r)throw Error(`Stepper ${e.stepper} not found in database`);if(null==t)throw Error(`Driver ${e.driver} not found in database`);return i.P6.parse({...e,stepper:r,driver:t})},stringToTitleObject=e=>({id:e,title:e}),serializePrinterRail=e=>i.Ah.parse({...e,driver:e.driver.id,stepper:e.stepper.id}),serializeToolheadConfiguration=e=>({...e,toolboard:e.toolboard?.id,hotend:e.hotend.id,thermistor:e.thermistor,extruder:e.extruder.id,probe:e.probe?.id,xEndstop:e.xEndstop.id,yEndstop:e.yEndstop.id,partFan:e.partFan.id,hotendFan:e.hotendFan.id,xAccelerometer:e.xAccelerometer?.id,yAccelerometer:e.yAccelerometer?.id}),extractToolheadsFromPrinterConfiguration=e=>{let r=e?.toolheads?.map(e=>{if(null==e)throw Error("Toolhead can not be null");return new l.D(s.x8.parse(e))}).filter(Boolean);if(null==r)throw Error("No toolheads found");return r},extractToolheadFromPrinterConfiguration=(e,r)=>{if(r?.toolheads==null||0===r.toolheads.length)throw Error("No toolheads preset in supplied printer config");let t=extractToolheadsFromPrinterConfiguration(r),o="number"==typeof e?t.find(r=>r.getTool()===e):t.find(r=>r.getExtruderAxis()===e||r.getMotionAxis()===e);return o}},35597:(e,r,t)=>{"use strict";t.d(r,{$l:()=>v,AN:()=>C,Ai:()=>w,Fh:()=>u,MG:()=>$,MO:()=>reversePinLookup,MW:()=>c,Oy:()=>h,Ui:()=>x,WQ:()=>z,WX:()=>f,X2:()=>g,X6:()=>_,_u:()=>hasSPI,d9:()=>p,m9:()=>S,oL:()=>a,tN:()=>d,uh:()=>hasUART});var o,i=t(38316),n=t(65692);let a={x_step_pin:i.z.string().optional(),x_dir_pin:i.z.string().optional(),x_enable_pin:i.z.string().optional(),x_uart_pin:i.z.string().optional(),x_diag_pin:i.z.string().optional(),x_endstop_pin:i.z.string().optional(),x1_step_pin:i.z.string().optional(),x1_dir_pin:i.z.string().optional(),x1_enable_pin:i.z.string().optional(),x1_uart_pin:i.z.string().optional(),x1_diag_pin:i.z.string().optional(),x1_endstop_pin:i.z.string().optional(),dual_carriage_step_pin:i.z.string().optional(),dual_carriage_dir_pin:i.z.string().optional(),dual_carriage_enable_pin:i.z.string().optional(),dual_carriage_uart_pin:i.z.string().optional(),dual_carriage_diag_pin:i.z.string().optional(),dual_carriage_endstop_pin:i.z.string().optional(),y_step_pin:i.z.string().optional(),y_dir_pin:i.z.string().optional(),y_enable_pin:i.z.string().optional(),y_uart_pin:i.z.string().optional(),y_diag_pin:i.z.string().optional(),y_endstop_pin:i.z.string().optional(),y1_step_pin:i.z.string().optional(),y1_dir_pin:i.z.string().optional(),y1_enable_pin:i.z.string().optional(),y1_uart_pin:i.z.string().optional(),y1_diag_pin:i.z.string().optional(),y1_endstop_pin:i.z.string().optional(),y2_step_pin:i.z.string().optional(),y2_dir_pin:i.z.string().optional(),y2_enable_pin:i.z.string().optional(),y2_uart_pin:i.z.string().optional(),y2_diag_pin:i.z.string().optional(),y2_endstop_pin:i.z.string().optional(),z0_step_pin:i.z.string().optional(),z0_dir_pin:i.z.string().optional(),z0_enable_pin:i.z.string().optional(),z0_uart_pin:i.z.string().optional(),z0_diag_pin:i.z.string().optional(),z1_step_pin:i.z.string().optional(),z1_dir_pin:i.z.string().optional(),z1_enable_pin:i.z.string().optional(),z1_uart_pin:i.z.string().optional(),z1_diag_pin:i.z.string().optional(),z2_step_pin:i.z.string().optional(),z2_dir_pin:i.z.string().optional(),z2_enable_pin:i.z.string().optional(),z2_uart_pin:i.z.string().optional(),z2_diag_pin:i.z.string().optional(),z3_step_pin:i.z.string().optional(),z3_dir_pin:i.z.string().optional(),z3_enable_pin:i.z.string().optional(),z3_uart_pin:i.z.string().optional(),z3_diag_pin:i.z.string().optional(),e_step_pin:i.z.string().optional(),e_dir_pin:i.z.string().optional(),e_enable_pin:i.z.string().optional(),e_uart_pin:i.z.string().optional(),e_diag_pin:i.z.string().optional(),e_heater_pin:i.z.string().optional(),e_sensor_pin:i.z.string().optional(),stepper_spi_mosi_pin:i.z.string().optional(),stepper_spi_miso_pin:i.z.string().optional(),stepper_spi_sclk_pin:i.z.string().optional(),adxl345_cs_pin:i.z.string().optional(),bltouch_sensor_pin:i.z.string().optional(),bltouch_control_pin:i.z.string().optional(),probe_pin:i.z.string().optional(),fan_part_cooling_pin:i.z.string().optional(),fan_toolhead_cooling_pin:i.z.string().optional(),fan_controller_board_pin:i.z.string().optional(),heater_bed_heating_pin:i.z.string().optional(),heater_bed_sensor_pin:i.z.string().optional(),"4p_fan_part_cooling_pin":i.z.string().optional(),"4p_fan_part_cooling_tach_pin":i.z.string().optional(),"4p_toolhead_cooling_pin":i.z.string().optional(),"4p_toolhead_cooling_tach_pin":i.z.string().optional(),"4p_controller_board_pin":i.z.string().optional(),"4p_controller_board_tach_pin":i.z.string().optional()},s=i.z.object(a);!function(e){e.x="x",e.x1="x1",e.y="y",e.y1="y1",e.y2="y2",e.z0="z0",e.z1="z1",e.z2="z2",e.z3="z3",e.e="e",e.e1="e1",e.dual_carriage="dual_carriage"}(o||(o={}));let l={x:n.po.x,x1:n.po.x1,y:n.po.y,y1:n.po.y1,y2:n.po.y2,z0:n.po.z,z1:n.po.z1,z2:n.po.z2,z3:n.po.z3,e:n.po.extruder,e1:n.po.extruder1,dual_carriage:n.po.dual_carriage},d=i.z.nativeEnum(o).transform(e=>l[e]??null),p=i.z.nativeEnum(n.po).transform(e=>Object.keys(l).find(r=>l[r]===e)??null),c=s.extend({x_step_pin:i.z.string(),x_dir_pin:i.z.string(),x_enable_pin:i.z.string(),x_uart_pin:i.z.string(),x_endstop_pin:i.z.string(),y_step_pin:i.z.string(),y_dir_pin:i.z.string(),y_enable_pin:i.z.string(),y_uart_pin:i.z.string(),y_endstop_pin:i.z.string(),z0_step_pin:i.z.string(),z0_dir_pin:i.z.string(),z0_enable_pin:i.z.string(),z0_uart_pin:i.z.string(),e_step_pin:i.z.string(),e_dir_pin:i.z.string(),e_enable_pin:i.z.string(),e_uart_pin:i.z.string(),e_heater_pin:i.z.string(),e_sensor_pin:i.z.string(),probe_pin:i.z.string(),heater_bed_heating_pin:i.z.string(),heater_bed_sensor_pin:i.z.string()}).and(i.z.object({fan_part_cooling_pin:i.z.string(),fan_toolhead_cooling_pin:i.z.string()}).or(i.z.object({"4p_fan_part_cooling_pin":i.z.string(),"4p_fan_part_cooling_tach_pin":i.z.string(),"4p_toolhead_cooling_pin":i.z.string(),"4p_toolhead_cooling_tach_pin":i.z.string()}))),u=s.extend({x_step_pin:i.z.string(),x_dir_pin:i.z.string(),x_enable_pin:i.z.string(),x_uart_pin:i.z.string(),x_endstop_pin:i.z.string(),y_step_pin:i.z.string(),y_dir_pin:i.z.string(),y_enable_pin:i.z.string(),y_uart_pin:i.z.string(),y_endstop_pin:i.z.string(),z0_step_pin:i.z.string(),z0_dir_pin:i.z.string(),z0_enable_pin:i.z.string(),z0_uart_pin:i.z.string(),z1_step_pin:i.z.string(),z1_dir_pin:i.z.string(),z1_enable_pin:i.z.string(),z1_uart_pin:i.z.string(),z2_step_pin:i.z.string(),z2_dir_pin:i.z.string(),z2_enable_pin:i.z.string(),z2_uart_pin:i.z.string(),probe_pin:i.z.string(),heater_bed_heating_pin:i.z.string(),heater_bed_sensor_pin:i.z.string()}).and(i.z.object({fan_part_cooling_pin:i.z.string(),fan_toolhead_cooling_pin:i.z.string()}).or(i.z.object({"4p_fan_part_cooling_pin":i.z.string(),"4p_fan_part_cooling_tach_pin":i.z.string(),"4p_toolhead_cooling_pin":i.z.string(),"4p_toolhead_cooling_tach_pin":i.z.string()}))),h=s.extend({e_step_pin:i.z.string(),e_dir_pin:i.z.string(),e_enable_pin:i.z.string(),e_uart_pin:i.z.string(),e_heater_pin:i.z.string(),e_sensor_pin:i.z.string(),adxl345_cs_pin:i.z.string(),probe_pin:i.z.string()}).and(i.z.object({fan_part_cooling_pin:i.z.string(),fan_toolhead_cooling_pin:i.z.string()}).or(i.z.object({"4p_fan_part_cooling_pin":i.z.string(),"4p_fan_part_cooling_tach_pin":i.z.string(),"4p_toolhead_cooling_pin":i.z.string(),"4p_toolhead_cooling_tach_pin":i.z.string()}))),g=i.z.object({uart_pin:i.z.string(),uart_address:i.z.string().optional(),rx_pin:i.z.string().optional(),tx_pin:i.z.string().optional()}),f=i.z.object({cs_pin:i.z.string()}).and(i.z.object({spi_bus:i.z.string()}).or(i.z.object({spi_software_mosi_pin:i.z.string().optional(),spi_software_miso_pin:i.z.string().optional(),spi_software_sclk_pin:i.z.string().optional()}))),hasSPI=e=>f.safeParse(e).success,hasUART=e=>g.safeParse(e).success,_=i.z.object({step_pin:i.z.string(),dir_pin:i.z.string(),enable_pin:i.z.string(),diag_pin:i.z.string().optional(),endstop_pin:i.z.string().optional(),uart_pin:i.z.string().optional(),rx_pin:i.z.string().optional(),tx_pin:i.z.string().optional(),cs_pin:i.z.string().optional()}),m=_.extend({title:i.z.string(),uart_address:i.z.string().optional(),spi_bus:i.z.string().optional(),spi_software_mosi_pin:i.z.string().optional(),spi_software_miso_pin:i.z.string().optional(),spi_software_sclk_pin:i.z.string().optional()}).refine(e=>hasSPI(e)||hasUART(e),{message:"Motor slot must have either SPI or UART pins"});m.innerType().omit({title:!0}).partial();let b=i.z.string(),reversePinLookup=(e,r)=>{let t=Object.entries(r.motorSlots??{});for(let[r,o]of t)if(Object.entries(e).every(([e,r])=>o[e]===r))return r},z=i.z.string().brand("BoardID"),x=i.z.string().brand("BoardPath"),T=i.z.string().brand("BoardSerialPath"),P=i.z.record(i.z.nativeEnum(n.po).or(i.z.string()),n.MI),y=i.z.record(b,m),v=i.z.object({id:z,isToolboard:i.z.boolean().optional(),isHost:i.z.boolean().optional(),serialPath:T.optional(),boardImageFileName:i.z.string().optional(),manualFileName:i.z.string().optional(),wireDiagramFileName:i.z.string().optional(),name:i.z.string(),manufacturer:i.z.string(),firmwareBinaryName:i.z.string(),compileScript:i.z.string(),flashScript:i.z.string().optional(),flashInstructions:i.z.string().optional(),disableAutoFlash:i.z.boolean().optional(),documentationLink:i.z.string().optional(),hasQuirksFiles:i.z.boolean().optional(),driverCount:i.z.number(),integratedDrivers:P.optional(),extruderlessConfig:i.z.string().optional(),fourPinFanConnectorCount:i.z.number().optional(),driverVoltages:n.v6.array().default([24]),hasMcuTempSensor:i.z.boolean().default(!0),thermistorPullup:i.z.number().default(4700),alternativePT1000Resistor:i.z.number().optional(),invertPinLogic:i.z.array(i.z.string()).default([]),customSections:i.z.record(i.z.string().regex(/^\S+$/),i.z.object({name:i.z.string().optional(),parameters:i.z.record(i.z.string().regex(/^\S+$/),i.z.string().or(i.z.number()).or(i.z.boolean())),comments:i.z.array(i.z.string()).default([])})).optional(),motorSlots:i.z.record(b,m).optional(),outputPins:i.z.array(i.z.object({pin:i.z.string(),name:i.z.string(),value:i.z.number().min(0).max(1)})).optional(),dfu:i.z.object({dfuBootImage:i.z.string(),flashDevice:i.z.string(),instructions:i.z.array(i.z.string()),reminder:i.z.string().optional(),hasBoot0Jumper:i.z.boolean()}).optional(),stepperSPI:i.z.object({software:i.z.object({sclk:i.z.string(),mosi:i.z.string(),miso:i.z.string()})}).or(i.z.object({hardware:i.z.object({bus:i.z.string()})})).optional(),ADXL345SPI:i.z.object({cs_pin:i.z.string()}).and(i.z.object({software:i.z.object({sclk:i.z.string(),mosi:i.z.string(),miso:i.z.string()})}).or(i.z.object({hardware:i.z.object({bus:i.z.string()})}))).optional(),LIS2DW:i.z.object({cs_pin:i.z.string()}).and(i.z.object({software:i.z.object({sclk:i.z.string(),mosi:i.z.string(),miso:i.z.string()})}).or(i.z.object({hardware:i.z.object({bus:i.z.string()})}))).optional(),path:x}).and(i.z.object({isToolboard:i.z.literal(!0),motorSlots:i.z.undefined()}).or(i.z.object({motorSlots:y})).or(i.z.object({isHost:i.z.literal(!0),motorSlots:i.z.undefined()}))),w=v.and(i.z.object({detected:i.z.boolean()})),C=i.z.object({id:i.z.string(),disableAutoFlash:i.z.literal(!1).optional(),isToolboard:i.z.boolean().optional(),compileScript:i.z.string(),flashScript:i.z.string(),path:x}),$=v.and(i.z.object({isToolboard:i.z.literal(!0),isHost:i.z.literal(!1).optional(),integratedDrivers:P.and(i.z.object({[n.po.extruder]:i.z.string()}))})),S=$.and(i.z.object({detected:i.z.boolean()}))},89850:(e,r,t)=>{"use strict";t.d(r,{M3:()=>P,ws:()=>z,U3:()=>m,XG:()=>v,Uy:()=>f,Yx:()=>x,ow:()=>_,lV:()=>b,Mf:()=>g,U9:()=>y,b6:()=>c});var o=t(38316),i=t(74169),n=t(65692);t(20997);var a=t(41169);t(5873);let s=o.z.union([o.z.literal("rose"),o.z.literal("red"),o.z.literal("yellow"),o.z.literal("orange"),o.z.literal("green"),o.z.literal("lime"),o.z.literal("blue"),o.z.literal("sky"),o.z.literal("indigo"),o.z.literal("purple"),o.z.literal("pink"),o.z.literal("brand"),o.z.literal("gray"),o.z.literal("plain")]),l=(0,a.cva)("",{variants:{color:{rose:"text-rose-700 dark:text-rose-400",red:"text-red-700 dark:text-red-400",yellow:"text-yellow-800 dark:text-yellow-500",orange:"text-orange-800 dark:text-orange-500",green:"text-green-700 dark:text-green-400",lime:"text-lime-700 dark:text-lime-400",blue:"text-blue-700 dark:text-blue-400",sky:"text-sky-700 dark:text-sky-400",indigo:"text-indigo-700 dark:text-indigo-400",purple:"text-purple-700 dark:text-purple-400",pink:"text-pink-700 dark:text-pink-400",brand:"text-brand-700 dark:text-brand-400",gray:"text-zinc-600 dark:text-zinc-400",plain:"text-zinc-900 dark:text-zinc-100"}}}),d=(0,a.cva)("",{variants:{color:{rose:"bg-rose-50 dark:bg-rose-400/10",red:"bg-red-50 dark:bg-red-400/10",yellow:"bg-yellow-50 dark:bg-yellow-400/10",orange:"bg-orange-50 dark:bg-orange-400/10",green:"bg-green-50 dark:bg-green-500/10",lime:"bg-lime-50 dark:bg-lime-500/10",blue:"bg-blue-50 dark:bg-blue-400/10",sky:"bg-sky-50 dark:bg-sky-400/10",indigo:"bg-indigo-50 dark:bg-indigo-400/10",purple:"bg-purple-50 dark:bg-purple-400/10",pink:"bg-pink-50 dark:bg-pink-400/10",brand:"bg-brand-100 dark:bg-brand-400/10",gray:"bg-zinc-50 dark:bg-zinc-400/10",plain:"bg-zinc-900/10 dark:bg-zinc-100/10"}}}),p=(0,a.cva)("",{variants:{color:{rose:"border-rose-600/10 dark:border-rose-400/20 ring-rose-600/10 dark:ring-rose-400/20",red:"border-red-600/10 dark:border-red-400/20 ring-red-600/10 dark:ring-red-400/20",yellow:"border-yellow-600/20 dark:border-yellow-400/20 ring-yellow-600/20 dark:ring-yellow-400/20",orange:"border-orange-600/20 dark:border-orange-400/20 ring-orange-600/20 dark:ring-orange-400/20",green:"border-green-600/20 dark:border-green-500/20 ring-green-600/20 dark:ring-green-500/20",lime:"border-lime-600/20 dark:border-lime-500/20 ring-lime-600/20 dark:ring-lime-500/20",blue:"border-blue-700/10 dark:border-blue-400/30 ring-blue-700/10 dark:ring-blue-400/30",sky:"border-sky-700/10 dark:border-sky-400/30 ring-sky-700/10 dark:ring-sky-400/30",indigo:"border-indigo-700/10 dark:border-indigo-400/30 ring-indigo-700/10 dark:ring-indigo-400/30",purple:"border-purple-700/10 dark:border-purple-400/30 ring-purple-700/10 dark:ring-purple-400/30",pink:"border-pink-700/10 dark:border-pink-400/20 ring-pink-700/10 dark:ring-pink-400/20",brand:"border-brand-600/40 dark:border-brand-400/30 ring-brand-600/40 dark:ring-brand-400/30",gray:"border-zinc-500/10 dark:border-zinc-400/20 ring-zinc-500/10 dark:ring-zinc-400/20",plain:"border-zinc-900 dark:border-zinc-100 ring-zinc-900 dark:ring-zinc-100"}}});(0,a.cva)("flex-0 inline-flex w-auto items-center rounded-md font-medium ring-1 ring-inset",{variants:{size:{sm:"px-1.5 gap-1.5 py-1 text-2xs leading-3",md:"px-2 gap-2 py-1 text-xs leading-4",lg:"px-2 gap-2 py-1 text-xs leading-6"},color:{rose:[d({color:"rose"}),p({color:"rose"}),l({color:"rose"})],red:[d({color:"red"}),p({color:"red"}),l({color:"red"})],yellow:[d({color:"yellow"}),p({color:"yellow"}),l({color:"yellow"})],orange:[d({color:"orange"}),p({color:"orange"}),l({color:"orange"})],green:[d({color:"green"}),p({color:"green"}),l({color:"green"})],lime:[d({color:"lime"}),p({color:"lime"}),l({color:"lime"})],blue:[d({color:"blue"}),p({color:"blue"}),l({color:"blue"})],sky:[d({color:"sky"}),p({color:"sky"}),l({color:"sky"})],indigo:[d({color:"indigo"}),p({color:"indigo"}),l({color:"indigo"})],purple:[d({color:"purple"}),p({color:"purple"}),l({color:"purple"})],pink:[d({color:"pink"}),p({color:"pink"}),l({color:"pink"})],brand:[d({color:"brand"}),p({color:"brand"}),l({color:"brand"})],gray:[d({color:"gray"}),p({color:"gray"}),l({color:"gray"})],plain:[d({color:"plain"}),p({color:"plain"}),l({color:"plain"})]}},defaultVariants:{size:"md",color:"gray"}});let c=["EPCOS 100K B57560G104F","ATC Semitec 104GT-2","ATC Semitec 104NT-4-R025H42G","Generic 3950","Honeywell 100K 135-104LAG-J01","NTC 100K MGB18-104F39050L32","SliceEngineering 450","TDK NTCG104LH104JT1","PT1000"],u="";if(process.env.RATOS_CONFIGURATION_PATH){let e=i.Rz.parse(process.env);u=e.RATOS_CONFIGURATION_PATH}let h=o.z.object({path:o.z.string().startsWith(u).endsWith(".cfg"),id:o.z.string()}),g=o.z.enum(c),f=h.extend({type:o.z.literal("hotend"),title:o.z.string(),thermistor:o.z.enum(c),flowType:o.z.union([o.z.literal("sf"),o.z.literal("hf"),o.z.literal("uhf")])}),_=o.z.object({type:o.z.enum(["Regular","CHT"]),diameter:o.z.number().min(.2).max(1.8)}),m=h.extend({type:o.z.literal("extruder"),stepper:n.vF.shape.id.optional(),current:n.P6.shape.current.optional(),title:o.z.string()}),b=h.extend({type:o.z.literal("static-probe").or(o.z.literal("stowable-probe")),title:o.z.string()}),z=o.z.object({id:o.z.enum(["endstop","endstop-toolboard","sensorless"]),title:o.z.string(),badge:o.z.array(o.z.object({children:o.z.string(),color:s})).optional()}),x=o.z.union([o.z.literal("toolboard_t0"),o.z.literal("toolboard_t1"),o.z.literal("controlboard"),o.z.literal("rpi"),o.z.literal("beacon")]),T=o.z.union([o.z.literal("adxl345"),o.z.literal("lis2dw"),o.z.literal("beacon")]),P=o.z.object({id:o.z.enum(["toolboard","controlboard","sbc","none","beacon"]),title:o.z.string(),accelerometerType:T.default("adxl345").optional()}),y=o.z.object({name:x,type:T});P.extend({accelerometerType:T});let v=o.z.object({id:o.z.enum(["2pin","4pin","4pin-dedicated","2pin-toolboard","4pin-toolboard","4pin-dedicated-toolboard","none"]),title:o.z.string(),badge:o.z.array(o.z.object({children:o.z.string(),color:s})).optional()})},65692:(e,r,t)=>{"use strict";t.d(r,{Ah:()=>_,HB:()=>l,JQ:()=>f,MI:()=>s,P6:()=>h,R_:()=>matchesDefaultRail,g6:()=>u,po:()=>i,r:()=>g,v6:()=>a,vF:()=>c});var o,i,n=t(38316);!function(e){e[e["24V"]=24]="24V",e[e["36V"]=36]="36V",e[e["48V"]=48]="48V",e[e["56V"]=56]="56V",e[e["60V"]=60]="60V"}(o||(o={}));let matchesDefaultRail=(e,r,t)=>e.axis===r.axis&&e.driver.id===r.driver.id&&e.stepper.id===r.stepper.id&&(t&&r.performanceMode&&e.voltage===r.performanceMode?.voltage&&e.current===r.performanceMode?.current||!t&&e.voltage===r.voltage&&e.current===r.current),a=n.nativeEnum(o),s=n.string(),l=n.object({id:s,title:n.string(),protocol:n.enum(["SPI","UART"]),coolingCurrentThreshold:n.number(),voltages:a.array(),maxCurrent:n.number().min(0),external:n.boolean().optional()}).and(n.object({type:n.enum(["TMC2209","TMC2226","TMC5160","TMC2130"]),senseResistor:n.number().min(0)}).or(n.object({type:n.enum(["TMC2240"])}))),d=n.object({voltage:a,run_current:n.number(),driver:s}),p=d.extend({driver_MSLUT0:n.number().optional(),driver_MSLUT1:n.number().optional(),driver_MSLUT2:n.number().optional(),driver_MSLUT3:n.number().optional(),driver_MSLUT4:n.number().optional(),driver_MSLUT5:n.number().optional(),driver_MSLUT6:n.number().optional(),driver_MSLUT7:n.number().optional(),driver_W0:n.number().optional(),driver_W1:n.number().optional(),driver_W2:n.number().optional(),driver_W3:n.number().optional(),driver_X1:n.number().optional(),driver_X2:n.number().optional(),driver_X3:n.number().optional(),driver_START_SIN:n.number().optional(),driver_START_SIN90:n.number().optional(),driver_IHOLDDELAY:n.number().optional(),driver_TPOWERDOWN:n.number().optional(),driver_TBL:n.number().optional(),driver_TOFF:n.number().optional(),driver_HEND:n.number().optional(),driver_HSTRT:n.number().optional(),driver_PWM_AUTOSCALE:n.boolean().optional(),driver_PWM_FREQ:n.number().optional(),driver_PWM_GRAD:n.number().optional(),driver_PWM_AMPL:n.number().optional(),driver_SGT:n.number().optional()}),c=n.object({id:n.string(),title:n.string(),fullStepsPerRotation:n.number().default(200),maxPeakCurrent:n.number().min(0),presets:n.array(n.discriminatedUnion("driver",[p.extend({driver:n.enum(["TMC2130","TMC5160"]),sense_resistor:n.number()}),p.extend({driver:n.enum(["TMC2240"])}),d.extend({driver:n.enum(["TMC2209"]),driver_TBL:n.number().optional(),driver_TOFF:n.number().optional(),driver_HEND:n.number().optional(),driver_HSTRT:n.number().optional(),sense_resistor:n.number()})])).optional().describe("Stepper presets are tightly coupled to the driver type, sense_resistor, stepper, voltage and current.")});!function(e){e.x="x",e.dual_carriage="dual_carriage",e.x1="x1",e.y="y",e.y1="y1",e.y2="y2",e.z="z",e.z1="z1",e.z2="z2",e.z3="z3",e.extruder="extruder",e.extruder1="extruder1"}(i||(i={}));let u=n.object({axis:n.nativeEnum(i).describe("Axis of the rail"),axisDescription:n.string().optional().describe("Description of the axis"),driver:l.describe("Stepper driver used on this axis"),voltage:a.default(24).describe("Voltage of the stepper driver"),stepper:c.describe("Stepper motor connected to this axis"),invertStepperDirection:n.boolean().default(!1).describe("Invert the default direction of the stepper motor"),axisMinimum:n.number().optional().describe("Minimum position of the axis in mm"),axisMaximum:n.number().optional().describe("Maximum position of the axis in mm"),axisEndstop:n.number().optional().describe("Endstop position of the axis in mm"),motorSlot:n.string().optional().describe("Optional board motor slot of the stepper driver"),current:n.number().min(0),rotationDistance:n.number().min(0).describe("Distance in mm the axis travels per stepper rotation"),gearRatio:n.string().regex(/^\d+:\d+$/).optional().describe("Optional gear ratio of the axis"),homingSpeed:n.number().min(0).default(10).describe("Axis speed during homing in mm/s"),microstepping:n.number().min(16).max(256).default(64).describe("Microstepping of the stepper driver, higher values increase resolution and lower noise but increases load on the MCU")}),h=u.extend({motorSlot:n.undefined(),performanceMode:n.object({current:n.number().min(0),voltage:a.default(24).describe("Voltage of the stepper driver in performance mode"),homingSpeed:n.number().min(0).optional().describe("Axis speed during homing in mm/s in performance mode")}).optional()}),g=h.extend({driver:s,stepper:c.shape.id}),f=u.refine(e=>e.current<=e.driver.maxCurrent,"Current must be less than max current of the driver"),_=u.extend({driver:s,stepper:c.shape.id});n.object({min:n.number(),max:n.number(),endstop:n.number()})},84541:(e,r,t)=>{"use strict";t.d(r,{PY:()=>l,Qk:()=>g,Qr:()=>d,ZF:()=>f,b2:()=>h,bi:()=>c,x8:()=>u});var o=t(38316),i=t(35597),n=t(89850),a=t(65692),s=t(63902);let l=o.z.object({hotend:n.Uy,thermistor:n.Mf,extruder:n.U3,xEndstop:n.ws,yEndstop:n.ws,hotendFan:n.XG,partFan:n.XG,nozzle:n.ow.default((0,s.S)()),xAccelerometer:n.M3.optional().nullable(),yAccelerometer:n.M3.optional().nullable(),toolboard:i.MG.nullable(),probe:n.lV.optional(),axis:o.z.literal(a.po.x).or(o.z.literal(a.po.dual_carriage)),description:o.z.string().optional(),toolNumber:o.z.number().optional()}).strict(),d=o.z.union([o.z.literal(0),o.z.literal(1)]),p=o.z.union([o.z.literal(a.po.x),o.z.literal(a.po.dual_carriage),o.z.literal(a.po.extruder),o.z.literal(a.po.extruder1)]),c=o.z.union([p,d]),u=l.refine(e=>null!==e.toolboard||"endstop-toolboard"!==e.xEndstop.id,"Cannot use toolboard endstop without a toolboard").refine(e=>null!==e.toolboard||!["2pin-toolboard","4pin-toolboard","4pin-dedicated-toolboard"].includes(e.hotendFan.id),"Cannot use toolboard hotend fan without a toolboard").refine(e=>null!==e.toolboard||!["2pin-toolboard","4pin-toolboard","4pin-dedicated-toolboard"].includes(e.partFan.id),"Cannot use toolboard part cooling fan without a toolboard"),h=l.partial().optional(),g=l.extend({hotend:n.Uy.shape.id,extruder:n.U3.shape.id,thermistor:n.Mf,xEndstop:n.ws.shape.id,yEndstop:n.ws.shape.id,hotendFan:n.XG.shape.id,partFan:n.XG.shape.id,xAccelerometer:n.M3.shape.id.optional().nullable(),yAccelerometer:n.M3.shape.id.optional().nullable(),toolboard:i.WQ.optional().nullable(),probe:n.lV.shape.id.optional().nullable()}).strict(),f=g.partial().optional()},44439:(e,r,t)=>{"use strict";t.d(r,{s:()=>n});var o=t(38316);let i=o.z.enum(["trace","debug","info","warn","error","fatal"]),n=o.z.object({ts:o.z.number(),messages:o.z.array(o.z.any()),bindings:o.z.array(o.z.record(o.z.string(),o.z.any())),level:o.z.object({label:i,value:o.z.number()})})}};