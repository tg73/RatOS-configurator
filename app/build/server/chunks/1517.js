"use strict";exports.id=1517,exports.ids=[1517],exports.modules={51517:(r,e,t)=>{t.d(e,{klipperRestart:()=>klipperRestart,z:()=>queryPrinterState});var o,a=t(38316),s=t(36523);let n=a.z.object({eventtime:a.z.number()}),i=n.extend({status:a.z.object({print_stats:a.z.object({state:a.z.union([a.z.literal("paused"),a.z.literal("printing"),a.z.literal("complete"),a.z.literal("error"),a.z.literal("canceled"),a.z.literal("standby")]).optional()})})}),l=a.z.object({result:n.passthrough()});!function(r){r[r.MOONRAKER_OFFLINE=0]="MOONRAKER_OFFLINE",r[r.MOONRAKER_INTERNAL_ERROR=1]="MOONRAKER_INTERNAL_ERROR"}(o||(o={}));let parseMoonrakerHTTPResponse=async(r,e)=>{if(200!==r.status){let e=await r.json();if((0,s.getLogger)().error(e,"Moonraker internal error"),null!=e&&"object"==typeof e&&"error"in e&&"string"==typeof e.error){let r=Error(e.error);throw r.cause=1,r}let t=Error("Error fetching moonraker response");throw t.cause=0,t}let t=await r.json();try{let r=l.parse(t);return{...r,result:e.parse(r.result)}}catch(r){throw(0,s.getLogger)().error("Error parsing moonraker response"),(0,s.getLogger)().error(t),r}},queryPrinterState=async()=>{try{let r=await fetch("http://localhost:7125/printer/objects/query?print_stats");if(r)return(await parseMoonrakerHTTPResponse(r,i)).result.status.print_stats.state}catch(r){if(r instanceof Error&&(r.cause===o.MOONRAKER_OFFLINE||r.cause===o.MOONRAKER_INTERNAL_ERROR));else if(r instanceof a.ZodError);else throw r}return"error"},klipperRestart=async(r=!1)=>!!(r||["error","complete","canceled","standby",void 0].includes(await queryPrinterState()))&&(await fetch("http://localhost:7125/printer/restart",{method:"POST"}),!0)}};