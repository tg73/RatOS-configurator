{"version":3,"file":"static/chunks/726.33386206929ecf4c.js","mappings":"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AG,GACAG,GACAG,GACAS,GACAH,GACAM,GACAG,GACAG,GACAQ,GACAK,GACA5jB,GACA+jB,GACAE,GACAY,GACAV,GACAK,GACAU,GACA/kB,GACAolB,GACAG,GACAU,GACAG,GACAW,GACAzQ,GACA+Q,GACAE,GACAW,GACAthB,GACA8hB,GACAO,GACAG,GACAY,GACAI,GACAE,GACAE,GACAE,GACA3jB,GACA8jB,GACAG,GACAG,GACAG,GACA97B,EACAm8B,GACAQ,GACAc,GACAG,GACAI,GACAQ,GACAW,GACAG,GACAgB,GACAS,GACAS,GACAG,GACAG,GACAG,GACAE,GACAG,GACAhuB,GACAwyB,GACAK,GACAiB,GACA/Q,GACAoL,GACAM,GACAwB,GACAE,GACAU,GACAc,GACAM,GACAE,GACAG,GACAsC,GACAliB,GACAqiB,GACAG,GACAE,GACAzE,GACAiF,GACAqB,GACA//B,GACAugC,GACAI,GACA5S,GACJ,CAEI,GAAA3jD,EAAA62D,GAAA,EAAcD,ECzVlB;;;;;;;;;;;;;;;CAeA","sources":["webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/flags_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/adapter_info.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/buffer_manager.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/texture_manager.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/shader_util.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/webgpu_program.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/webgpu_util.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/backend_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/base.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/binary_op_util.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/unary_op_util.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/activation_util.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/matmul_packed_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/matmul_reduce_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/matmul_small_output_size_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/matmul_splitK_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/fill_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Fill.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Reshape.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/BatchMatMul_impl.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/_FusedMatMul.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/binary_op_complex_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/binary_op_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Identity.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Complex.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/unary_op_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernel_utils/kernel_funcs_utils.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernel_utils/shared.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Abs.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Acos.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Acosh.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Add.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/addn_packed_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/AddN.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/transpose_shared_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/transpose_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Transpose.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/reduce_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernel_utils/reduce.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/All.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Any.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/argminmax_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/ArgMax.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/ArgMin.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Asin.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Asinh.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Atan.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Atan2.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Atanh.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/pool_filtersizeone_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/pool_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Max.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Mean.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Pool_impl.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/AvgPool.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/AvgPool3D.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/avg_pool_backprop_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/AvgPool3DGrad.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/AvgPoolGrad.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/BatchMatMul.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/slice_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Slice.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/BatchToSpaceND.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/bincount_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Bincount.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/broadcast_args_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/BroadcastArgs.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/NotEqual.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Real.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernel_utils/int.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Cast.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Ceil.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/clip_vec4_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/clip_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/ClipByValue.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/complex_abs_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/ComplexAbs.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/concat_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Imag.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Concat_impl.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Concat.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/conv2d_mm_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/conv2d_naive_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/im2col_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Conv2D_impl.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Conv2D.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/conv_backprop_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Conv2DBackpropFilter.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/conv_backprop_mm_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Conv2DBackpropInput.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/conv3d_naive_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Conv3D.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Conv3DBackpropFilterV2.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Conv3DBackpropInputV2.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Cos.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Cosh.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/crop_and_resize_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/CropAndResize.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/cum_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Cum_impl.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Cumprod.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Cumsum.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/DenseBincount.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/depth_to_space_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/DepthToSpace.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/depthwise_conv2d_nchw_shared_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/depthwise_conv2d_vec4_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/depthwise_conv2d_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/DepthwiseConv2dNative.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/conv_backprop_depthwise_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/DepthwiseConv2dNativeBackpropFilter.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/DepthwiseConv2dNativeBackpropInput.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/diag_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Diag.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/dilation_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Dilation2D.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/dilation_backprop_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Dilation2DBackpropFilter.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Dilation2DBackpropInput.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/draw_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Draw.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Multiply.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Sum.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Einsum.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Elu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/EluGrad.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Equal.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Erf.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Exp.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/ExpandDims.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Expm1.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/fft_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/FFT_impl.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/FFT.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/flip_left_right_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/FlipLeftRight.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Floor.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/FloorDiv.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/from_pixels_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/FromPixels.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/batchnorm_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/FusedBatchNorm.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/FusedConv2D.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/FusedDepthwiseConv2D.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/gather_nd_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/GatherNd.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/gather_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/GatherV2.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Greater.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/GreaterEqual.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/IFFT.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/IsFinite.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/IsInf.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/IsNaN.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/LeakyRelu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Less.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/LessEqual.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/lin_space_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/LinSpace.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Log.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Log1p.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/LogicalAnd.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/LogicalNot.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/LogicalOr.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/lrn_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/LRN.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/lrn_grad_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/LRNGrad.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Maximum.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/MaxPool.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/MaxPool3D.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/max_pool_backprop_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/MaxPool3DGrad.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/MaxPoolGrad.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/MaxPoolWithArgmax.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Min.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Minimum.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/mirror_pad_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/MirrorPad.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Mod.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/multinomial_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/softmax_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Softmax.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Multinomial.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Neg.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/NonMaxSuppressionV3.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/NonMaxSuppressionV5.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/onehot_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/OneHot.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/ZerosLike.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/OnesLike.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Pack.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/pad_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/PadV2.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Pow.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Prelu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Prod.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Range.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/RealDiv.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Reciprocal.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Relu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Relu6.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/resize_bilinear_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/ResizeBilinear.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/resize_bilinear_backprop_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/ResizeBilinearGrad.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/resize_nearest_neighbor_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/ResizeNearestNeighbor.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/resize_nearest_neighbor_backprop_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/ResizeNearestNeighborGrad.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/reverse_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Reverse.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/rotate_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/RotateWithOffset.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Round.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Rsqrt.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/scatter_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/ScatterNd.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/search_sorted_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/SearchSorted.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/select_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Select.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Selu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Sigmoid.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Sign.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Sin.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Sinh.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Softplus.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/space_to_batchND_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/SpaceToBatchND.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/sparse_segment_reduce_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernel_utils/sparse_segment_reduce.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/SparseSegmentMean.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/SparseSegmentSum.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/tile_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Tile.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/SparseToDense.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/SplitV.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Sqrt.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Square.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/SquaredDifference.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Step.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/strided_slice_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/StridedSlice.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/StringNGrams.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Sub.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Tan.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Tanh.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/TensorScatterUpdate.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/top_k_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/TopK.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/transform_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Transform.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/Unpack.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/unsorted_segment_sum_webgpu.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/kernels/UnsortedSegmentSum.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/register_all_kernels.js","webpack://_N_E/./node_modules/.pnpm/@tensorflow+tfjs-backend-webgpu@4.20.0_@tensorflow+tfjs-core@4.20.0_encoding@0.1.13_/node_modules/@tensorflow/tfjs-backend-webgpu/dist/index.js","webpack://_N_E/<anon>"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from '@tensorflow/tfjs-core';\nconst ENV = env();\n/** The batched dispatching calls size in the device queue. */\nENV.registerFlag('WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE', () => 15);\n/**\n * Whether we forward execution to the CPU backend if tensors are small and\n * reside on the CPU.\n */\nENV.registerFlag('WEBGPU_CPU_FORWARD', () => true);\n/**\n * This flag is used to test different types of matmul programs.\n *\n * See MatMulProgramType in webgpu_util.ts for a list of available values.\n */\nENV.registerFlag('WEBGPU_MATMUL_PROGRAM_TYPE', () => -1);\n/**\n * Whether to use conv2dTranspose_naive which directly implement the\n * conv2dTranspose logic rather than using a matmul to simulate.\n */\nENV.registerFlag('WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE', () => true);\n/**\n * Whether we use low power GPU. Otherwise, a high performance GPU will be\n * requested.\n */\nENV.registerFlag('WEBGPU_USE_LOW_POWER_GPU', () => false);\n/**\n * Threshold for input tensor size that determines whether WebGPU backend will\n * delegate computation to CPU.\n *\n * Default value is 1000.\n */\nENV.registerFlag('WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD', () => 1000);\n/**\n * Whether to use a dummy canvas to make profiling tools like PIX work with\n * TFJS webgpu backend.\n */\nENV.registerFlag('WEBGPU_USE_PROFILE_TOOL', () => false);\n/**\n * Whether to use import API.\n */\nENV.registerFlag('WEBGPU_IMPORT_EXTERNAL_TEXTURE', () => true);\n/**\n * Whether to use conv2dNaive for debugging.\n */\nENV.registerFlag('WEBGPU_USE_NAIVE_CONV2D_DEBUG', () => false);\n/**\n * Threshold to increase dispatched workgroups for matmul. If too few workgroups\n * are dispatched, it means the hardware may be in low occupancy.\n * -1 means it's not set by the user. A default strategy will be applied.\n */\nENV.registerFlag('WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL', () => -1);\n/**\n * Whether we will run im2col as a separate shader for convolution.\n */\nENV.registerFlag('WEBGPU_CONV_SEPARATE_IM2COL_SHADER', () => false);\n/**\n * A string used to match shader key. If any matches, print the related shader.\n * Seperated by comma. 'all' to print all. 'binary' to print binary(add, mul,\n * etc.). 'unary,conv2d' to print both unary and conv2d.\n */\nENV.registerFlag('WEBGPU_PRINT_SHADER', () => '');\n/** Experimental flag, whether enter compile only phase. */\nENV.registerFlag('WEBGPU_ENGINE_COMPILE_ONLY', () => false);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmxhZ3Nfd2ViZ3B1LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMvZmxhZ3Nfd2ViZ3B1LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxHQUFHLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUUxQyxNQUFNLEdBQUcsR0FBRyxHQUFHLEVBQUUsQ0FBQztBQUVsQiw4REFBOEQ7QUFDOUQsR0FBRyxDQUFDLFlBQVksQ0FBQyxtQ0FBbUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUVoRTs7O0dBR0c7QUFDSCxHQUFHLENBQUMsWUFBWSxDQUFDLG9CQUFvQixFQUFFLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBRW5EOzs7O0dBSUc7QUFDSCxHQUFHLENBQUMsWUFBWSxDQUFDLDRCQUE0QixFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFFekQ7OztHQUdHO0FBQ0gsR0FBRyxDQUFDLFlBQVksQ0FBQyxtQ0FBbUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUVsRTs7O0dBR0c7QUFDSCxHQUFHLENBQUMsWUFBWSxDQUFDLDBCQUEwQixFQUFFLEdBQUcsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBRTFEOzs7OztHQUtHO0FBQ0gsR0FBRyxDQUFDLFlBQVksQ0FBQyxtQ0FBbUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUVsRTs7O0dBR0c7QUFDSCxHQUFHLENBQUMsWUFBWSxDQUFDLHlCQUF5QixFQUFFLEdBQUcsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBRXpEOztHQUVHO0FBQ0gsR0FBRyxDQUFDLFlBQVksQ0FBQyxnQ0FBZ0MsRUFBRSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUUvRDs7R0FFRztBQUNILEdBQUcsQ0FBQyxZQUFZLENBQUMsK0JBQStCLEVBQUUsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUM7QUFFL0Q7Ozs7R0FJRztBQUNILEdBQUcsQ0FBQyxZQUFZLENBQ1osb0RBQW9ELEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUVwRTs7R0FFRztBQUNILEdBQUcsQ0FBQyxZQUFZLENBQUMsb0NBQW9DLEVBQUUsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUM7QUFFcEU7Ozs7R0FJRztBQUNILEdBQUcsQ0FBQyxZQUFZLENBQUMscUJBQXFCLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7QUFFbEQsMkRBQTJEO0FBQzNELEdBQUcsQ0FBQyxZQUFZLENBQUMsNEJBQTRCLEVBQUUsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7ZW52fSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5jb25zdCBFTlYgPSBlbnYoKTtcblxuLyoqIFRoZSBiYXRjaGVkIGRpc3BhdGNoaW5nIGNhbGxzIHNpemUgaW4gdGhlIGRldmljZSBxdWV1ZS4gKi9cbkVOVi5yZWdpc3RlckZsYWcoJ1dFQkdQVV9ERUZFUlJFRF9TVUJNSVRfQkFUQ0hfU0laRScsICgpID0+IDE1KTtcblxuLyoqXG4gKiBXaGV0aGVyIHdlIGZvcndhcmQgZXhlY3V0aW9uIHRvIHRoZSBDUFUgYmFja2VuZCBpZiB0ZW5zb3JzIGFyZSBzbWFsbCBhbmRcbiAqIHJlc2lkZSBvbiB0aGUgQ1BVLlxuICovXG5FTlYucmVnaXN0ZXJGbGFnKCdXRUJHUFVfQ1BVX0ZPUldBUkQnLCAoKSA9PiB0cnVlKTtcblxuLyoqXG4gKiBUaGlzIGZsYWcgaXMgdXNlZCB0byB0ZXN0IGRpZmZlcmVudCB0eXBlcyBvZiBtYXRtdWwgcHJvZ3JhbXMuXG4gKlxuICogU2VlIE1hdE11bFByb2dyYW1UeXBlIGluIHdlYmdwdV91dGlsLnRzIGZvciBhIGxpc3Qgb2YgYXZhaWxhYmxlIHZhbHVlcy5cbiAqL1xuRU5WLnJlZ2lzdGVyRmxhZygnV0VCR1BVX01BVE1VTF9QUk9HUkFNX1RZUEUnLCAoKSA9PiAtMSk7XG5cbi8qKlxuICogV2hldGhlciB0byB1c2UgY29udjJkVHJhbnNwb3NlX25haXZlIHdoaWNoIGRpcmVjdGx5IGltcGxlbWVudCB0aGVcbiAqIGNvbnYyZFRyYW5zcG9zZSBsb2dpYyByYXRoZXIgdGhhbiB1c2luZyBhIG1hdG11bCB0byBzaW11bGF0ZS5cbiAqL1xuRU5WLnJlZ2lzdGVyRmxhZygnV0VCR1BVX1VTRV9OQUlWRV9DT05WMkRfVFJBTlNQT1NFJywgKCkgPT4gdHJ1ZSk7XG5cbi8qKlxuICogV2hldGhlciB3ZSB1c2UgbG93IHBvd2VyIEdQVS4gT3RoZXJ3aXNlLCBhIGhpZ2ggcGVyZm9ybWFuY2UgR1BVIHdpbGwgYmVcbiAqIHJlcXVlc3RlZC5cbiAqL1xuRU5WLnJlZ2lzdGVyRmxhZygnV0VCR1BVX1VTRV9MT1dfUE9XRVJfR1BVJywgKCkgPT4gZmFsc2UpO1xuXG4vKipcbiAqIFRocmVzaG9sZCBmb3IgaW5wdXQgdGVuc29yIHNpemUgdGhhdCBkZXRlcm1pbmVzIHdoZXRoZXIgV2ViR1BVIGJhY2tlbmQgd2lsbFxuICogZGVsZWdhdGUgY29tcHV0YXRpb24gdG8gQ1BVLlxuICpcbiAqIERlZmF1bHQgdmFsdWUgaXMgMTAwMC5cbiAqL1xuRU5WLnJlZ2lzdGVyRmxhZygnV0VCR1BVX0NQVV9IQU5ET0ZGX1NJWkVfVEhSRVNIT0xEJywgKCkgPT4gMTAwMCk7XG5cbi8qKlxuICogV2hldGhlciB0byB1c2UgYSBkdW1teSBjYW52YXMgdG8gbWFrZSBwcm9maWxpbmcgdG9vbHMgbGlrZSBQSVggd29yayB3aXRoXG4gKiBURkpTIHdlYmdwdSBiYWNrZW5kLlxuICovXG5FTlYucmVnaXN0ZXJGbGFnKCdXRUJHUFVfVVNFX1BST0ZJTEVfVE9PTCcsICgpID0+IGZhbHNlKTtcblxuLyoqXG4gKiBXaGV0aGVyIHRvIHVzZSBpbXBvcnQgQVBJLlxuICovXG5FTlYucmVnaXN0ZXJGbGFnKCdXRUJHUFVfSU1QT1JUX0VYVEVSTkFMX1RFWFRVUkUnLCAoKSA9PiB0cnVlKTtcblxuLyoqXG4gKiBXaGV0aGVyIHRvIHVzZSBjb252MmROYWl2ZSBmb3IgZGVidWdnaW5nLlxuICovXG5FTlYucmVnaXN0ZXJGbGFnKCdXRUJHUFVfVVNFX05BSVZFX0NPTlYyRF9ERUJVRycsICgpID0+IGZhbHNlKTtcblxuLyoqXG4gKiBUaHJlc2hvbGQgdG8gaW5jcmVhc2UgZGlzcGF0Y2hlZCB3b3JrZ3JvdXBzIGZvciBtYXRtdWwuIElmIHRvbyBmZXcgd29ya2dyb3Vwc1xuICogYXJlIGRpc3BhdGNoZWQsIGl0IG1lYW5zIHRoZSBoYXJkd2FyZSBtYXkgYmUgaW4gbG93IG9jY3VwYW5jeS5cbiAqIC0xIG1lYW5zIGl0J3Mgbm90IHNldCBieSB0aGUgdXNlci4gQSBkZWZhdWx0IHN0cmF0ZWd5IHdpbGwgYmUgYXBwbGllZC5cbiAqL1xuRU5WLnJlZ2lzdGVyRmxhZyhcbiAgICAnV0VCR1BVX1RIUkVTSE9MRF9UT19JTkNSRUFTRV9XT1JLR1JPVVBTX0ZPUl9NQVRNVUwnLCAoKSA9PiAtMSk7XG5cbi8qKlxuICogV2hldGhlciB3ZSB3aWxsIHJ1biBpbTJjb2wgYXMgYSBzZXBhcmF0ZSBzaGFkZXIgZm9yIGNvbnZvbHV0aW9uLlxuICovXG5FTlYucmVnaXN0ZXJGbGFnKCdXRUJHUFVfQ09OVl9TRVBBUkFURV9JTTJDT0xfU0hBREVSJywgKCkgPT4gZmFsc2UpO1xuXG4vKipcbiAqIEEgc3RyaW5nIHVzZWQgdG8gbWF0Y2ggc2hhZGVyIGtleS4gSWYgYW55IG1hdGNoZXMsIHByaW50IHRoZSByZWxhdGVkIHNoYWRlci5cbiAqIFNlcGVyYXRlZCBieSBjb21tYS4gJ2FsbCcgdG8gcHJpbnQgYWxsLiAnYmluYXJ5JyB0byBwcmludCBiaW5hcnkoYWRkLCBtdWwsXG4gKiBldGMuKS4gJ3VuYXJ5LGNvbnYyZCcgdG8gcHJpbnQgYm90aCB1bmFyeSBhbmQgY29udjJkLlxuICovXG5FTlYucmVnaXN0ZXJGbGFnKCdXRUJHUFVfUFJJTlRfU0hBREVSJywgKCkgPT4gJycpO1xuXG4vKiogRXhwZXJpbWVudGFsIGZsYWcsIHdoZXRoZXIgZW50ZXIgY29tcGlsZSBvbmx5IHBoYXNlLiAqL1xuRU5WLnJlZ2lzdGVyRmxhZygnV0VCR1BVX0VOR0lORV9DT01QSUxFX09OTFknLCAoKSA9PiBmYWxzZSk7XG4iXX0=","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class AdapterInfo {\n    constructor(adapterInfo) {\n        if (adapterInfo) {\n            this.vendor = adapterInfo.vendor;\n            this.architecture = adapterInfo.architecture;\n            this.intelGPUGeneration = this.getIntelGPUGeneration();\n        }\n    }\n    getIntelGPUGeneration() {\n        if (this.isIntel()) {\n            if (this.architecture.startsWith('gen')) {\n                return Number(this.architecture.match(/\\d+/));\n            }\n            else if (this.architecture.startsWith('xe')) {\n                return 12;\n            }\n        }\n        return 0;\n    }\n    isIntel() {\n        return this.vendor === 'intel';\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRhcHRlcl9pbmZvLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMvYWRhcHRlcl9pbmZvLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE1BQU0sT0FBTyxXQUFXO0lBS3RCLFlBQVksV0FBMkI7UUFDckMsSUFBSSxXQUFXLEVBQUU7WUFDZixJQUFJLENBQUMsTUFBTSxHQUFHLFdBQVcsQ0FBQyxNQUFNLENBQUM7WUFDakMsSUFBSSxDQUFDLFlBQVksR0FBRyxXQUFXLENBQUMsWUFBWSxDQUFDO1lBQzdDLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxJQUFJLENBQUMscUJBQXFCLEVBQUUsQ0FBQztTQUN4RDtJQUNILENBQUM7SUFFTyxxQkFBcUI7UUFDM0IsSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFLEVBQUU7WUFDbEIsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsRUFBRTtnQkFDdkMsT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQzthQUMvQztpQkFBTSxJQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUM3QyxPQUFPLEVBQUUsQ0FBQzthQUNYO1NBQ0Y7UUFDRCxPQUFPLENBQUMsQ0FBQztJQUNYLENBQUM7SUFFRCxPQUFPO1FBQ0wsT0FBTyxJQUFJLENBQUMsTUFBTSxLQUFLLE9BQU8sQ0FBQztJQUNqQyxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmV4cG9ydCBjbGFzcyBBZGFwdGVySW5mbyB7XG4gIHByaXZhdGUgdmVuZG9yOiBzdHJpbmc7XG4gIHByaXZhdGUgYXJjaGl0ZWN0dXJlOiBzdHJpbmc7XG4gIHB1YmxpYyBpbnRlbEdQVUdlbmVyYXRpb246IG51bWJlcjtcblxuICBjb25zdHJ1Y3RvcihhZGFwdGVySW5mbzogR1BVQWRhcHRlckluZm8pIHtcbiAgICBpZiAoYWRhcHRlckluZm8pIHtcbiAgICAgIHRoaXMudmVuZG9yID0gYWRhcHRlckluZm8udmVuZG9yO1xuICAgICAgdGhpcy5hcmNoaXRlY3R1cmUgPSBhZGFwdGVySW5mby5hcmNoaXRlY3R1cmU7XG4gICAgICB0aGlzLmludGVsR1BVR2VuZXJhdGlvbiA9IHRoaXMuZ2V0SW50ZWxHUFVHZW5lcmF0aW9uKCk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBnZXRJbnRlbEdQVUdlbmVyYXRpb24oKSB7XG4gICAgaWYgKHRoaXMuaXNJbnRlbCgpKSB7XG4gICAgICBpZiAodGhpcy5hcmNoaXRlY3R1cmUuc3RhcnRzV2l0aCgnZ2VuJykpIHtcbiAgICAgICAgcmV0dXJuIE51bWJlcih0aGlzLmFyY2hpdGVjdHVyZS5tYXRjaCgvXFxkKy8pKTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5hcmNoaXRlY3R1cmUuc3RhcnRzV2l0aCgneGUnKSkge1xuICAgICAgICByZXR1cm4gMTI7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiAwO1xuICB9XG5cbiAgaXNJbnRlbCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy52ZW5kb3IgPT09ICdpbnRlbCc7XG4gIH1cbn1cbiJdfQ==","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class BufferManager {\n    constructor(device) {\n        this.device = device;\n        this.numUsedBuffers = 0;\n        this.numFreeBuffers = 0;\n        this.freeBuffers = new Map();\n        this.usedBuffers = new Map();\n        this.numBytesUsed = 0;\n        this.numBytesAllocated = 0;\n    }\n    acquireBuffer(size, usage, mappedAtCreation = false, reuse = true) {\n        let buffer;\n        const key = getBufferKey(size, usage);\n        if (reuse) {\n            if (!this.freeBuffers.has(key)) {\n                this.freeBuffers.set(key, []);\n            }\n            if (this.freeBuffers.get(key).length > 0) {\n                buffer = this.freeBuffers.get(key).pop();\n                this.numFreeBuffers--;\n            }\n            else {\n                buffer = this.device.createBuffer({ size, usage, mappedAtCreation });\n                this.numBytesAllocated += size;\n            }\n        }\n        else {\n            buffer = this.device.createBuffer({ size, usage, mappedAtCreation });\n            this.numBytesAllocated += size;\n        }\n        if (!this.usedBuffers.has(key)) {\n            this.usedBuffers.set(key, []);\n        }\n        this.usedBuffers.get(key).push(buffer);\n        this.numUsedBuffers++;\n        this.numBytesUsed += size;\n        return buffer;\n    }\n    releaseBuffer(buffer, reuse = true) {\n        if (this.freeBuffers.size === 0) {\n            return;\n        }\n        const size = buffer.size;\n        const usage = buffer.usage;\n        const key = getBufferKey(size, usage);\n        const bufferArray = this.usedBuffers.get(key);\n        const index = bufferArray.indexOf(buffer);\n        if (index < 0) {\n            throw new Error('Cannot find the buffer in buffer manager');\n        }\n        bufferArray[index] = bufferArray[bufferArray.length - 1];\n        bufferArray.pop();\n        this.numUsedBuffers--;\n        this.numBytesUsed -= size;\n        if (reuse) {\n            this.freeBuffers.get(key).push(buffer);\n            this.numFreeBuffers++;\n        }\n        else {\n            buffer.destroy();\n            this.numBytesAllocated -= size;\n        }\n    }\n    getNumUsedBuffers() {\n        return this.numUsedBuffers;\n    }\n    getNumFreeBuffers() {\n        return this.numFreeBuffers;\n    }\n    dispose() {\n        this.freeBuffers.forEach((buffers, key) => {\n            buffers.forEach(buffer => {\n                buffer.destroy();\n            });\n        });\n        this.usedBuffers.forEach((buffers, key) => {\n            buffers.forEach(buffer => {\n                buffer.destroy();\n            });\n        });\n        this.freeBuffers = new Map();\n        this.usedBuffers = new Map();\n        this.numUsedBuffers = 0;\n        this.numFreeBuffers = 0;\n        this.numBytesUsed = 0;\n        this.numBytesAllocated = 0;\n    }\n}\nfunction getBufferKey(size, usage) {\n    return `${size}_${usage}`;\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class TextureManager {\n    constructor(device) {\n        this.device = device;\n        this.numUsedTextures = 0;\n        this.numFreeTextures = 0;\n        this.freeTextures = new Map();\n        this.usedTextures = new Map();\n        this.numBytesUsed = 0;\n        this.numBytesAllocated = 0;\n    }\n    acquireTexture(width, height, format, usage) {\n        const bytesPerElement = getBytesPerElement(format);\n        const byteSize = width * height * bytesPerElement;\n        const key = getTextureKey(width, height, format, usage);\n        if (!this.freeTextures.has(key)) {\n            this.freeTextures.set(key, []);\n        }\n        if (!this.usedTextures.has(key)) {\n            this.usedTextures.set(key, []);\n        }\n        this.numBytesUsed += byteSize;\n        this.numUsedTextures++;\n        if (this.freeTextures.get(key).length > 0) {\n            this.numFreeTextures--;\n            const newTexture = this.freeTextures.get(key).shift();\n            this.usedTextures.get(key).push(newTexture);\n            return newTexture;\n        }\n        this.numBytesAllocated += byteSize;\n        const newTexture = this.device.createTexture({\n            size: [width, height],\n            format,\n            usage,\n        });\n        this.usedTextures.get(key).push(newTexture);\n        return newTexture;\n    }\n    releaseTexture(texture) {\n        if (this.freeTextures.size === 0) {\n            return;\n        }\n        const width = texture.width;\n        const height = texture.height;\n        const format = texture.format;\n        const usage = texture.usage;\n        const key = getTextureKey(width, height, format, usage);\n        if (!this.freeTextures.has(key)) {\n            this.freeTextures.set(key, []);\n        }\n        this.freeTextures.get(key).push(texture);\n        this.numFreeTextures++;\n        this.numUsedTextures--;\n        const textureList = this.usedTextures.get(key);\n        const textureIndex = textureList.indexOf(texture);\n        if (textureIndex < 0) {\n            throw new Error('Cannot release a texture that was never provided by this ' +\n                'texture manager');\n        }\n        textureList.splice(textureIndex, 1);\n        const bytesPerElement = getBytesPerElement(format);\n        const byteSize = width * height * bytesPerElement;\n        this.numBytesUsed -= byteSize;\n    }\n    getNumUsedTextures() {\n        return this.numUsedTextures;\n    }\n    getNumFreeTextures() {\n        return this.numFreeTextures;\n    }\n    dispose() {\n        this.freeTextures.forEach((textures, key) => {\n            textures.forEach(texture => {\n                texture.destroy();\n            });\n        });\n        this.usedTextures.forEach((textures, key) => {\n            textures.forEach(texture => {\n                texture.destroy();\n            });\n        });\n        this.freeTextures = new Map();\n        this.usedTextures = new Map();\n        this.numUsedTextures = 0;\n        this.numFreeTextures = 0;\n        this.numBytesUsed = 0;\n        this.numBytesAllocated = 0;\n    }\n}\nfunction getTextureKey(width, height, format, usage) {\n    return `${width}_${height}_${format}_${usage}`;\n}\nfunction getBytesPerElement(format) {\n    if (format === 'rgba8unorm') {\n        return 16;\n    }\n    else {\n        throw new Error(`${format} is not supported!`);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Generates WGSL that computes strides.\nexport function symbolicallyComputeStrides(indicesArr, variableName) {\n    if (Math.max(...indicesArr) > 5) {\n        throw new Error('Cannot symbolically compute strides for rank > 6 tensor.');\n    }\n    const numCoords = indicesArr.length;\n    const indicesStr = 'xyzwuv';\n    const shape = indicesArr.map(d => `${variableName}.${indicesStr[d]}`);\n    const strides = new Array(numCoords - 1);\n    strides[numCoords - 2] = shape[numCoords - 1];\n    for (let i = numCoords - 3; i >= 0; --i) {\n        strides[i] = `(${strides[i + 1]} * ${shape[i + 1]})`;\n    }\n    return strides;\n}\nexport const atomicAddSnippet = (ptr, v, type) => {\n    if (type === 'int32') {\n        return `atomicAdd(${ptr}, bitcast<i32>(${v}));`;\n    }\n    else {\n        // atomicAdd only supports uint/int type. For float, we use\n        // atomicCompareExchangeWeak to simulate.\n        return `\n          {\n            var oldValue = 0;\n            loop {\n              let newValueF32 = bitcast<f32>(oldValue) + (${v});\n              let newValue = bitcast<i32>(newValueF32);\n              let res = atomicCompareExchangeWeak(${ptr}, oldValue, newValue);\n              if res.exchanged {\n                break;\n              }\n              oldValue = res.old_value;\n            }\n          }`;\n    }\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhZGVyX3V0aWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9zaGFkZXJfdXRpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCx3Q0FBd0M7QUFDeEMsTUFBTSxVQUFVLDBCQUEwQixDQUN0QyxVQUFvQixFQUFFLFlBQW9CO0lBQzVDLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLFVBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRTtRQUMvQixNQUFNLElBQUksS0FBSyxDQUFDLDBEQUEwRCxDQUFDLENBQUM7S0FDN0U7SUFFRCxNQUFNLFNBQVMsR0FBRyxVQUFVLENBQUMsTUFBTSxDQUFDO0lBQ3BDLE1BQU0sVUFBVSxHQUFHLFFBQVEsQ0FBQztJQUM1QixNQUFNLEtBQUssR0FBRyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsR0FBRyxZQUFZLElBQUksVUFBVSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUN0RSxNQUFNLE9BQU8sR0FBRyxJQUFJLEtBQUssQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDekMsT0FBTyxDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzlDLEtBQUssSUFBSSxDQUFDLEdBQUcsU0FBUyxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFO1FBQ3ZDLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLE9BQU8sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDO0tBQ3REO0lBRUQsT0FBTyxPQUFPLENBQUM7QUFDakIsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUN6QixDQUFDLEdBQVcsRUFBRSxDQUFTLEVBQUUsSUFBdUIsRUFBRSxFQUFFO0lBQ2xELElBQUksSUFBSSxLQUFLLE9BQU8sRUFBRTtRQUNwQixPQUFPLGFBQWEsR0FBRyxrQkFBa0IsQ0FBQyxLQUFLLENBQUM7S0FDakQ7U0FBTTtRQUNMLDJEQUEyRDtRQUMzRCx5Q0FBeUM7UUFDekMsT0FBTzs7Ozs0REFJNkMsQ0FBQzs7b0RBRVQsR0FBRzs7Ozs7O1lBTTNDLENBQUM7S0FDTjtBQUNILENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuLy8gR2VuZXJhdGVzIFdHU0wgdGhhdCBjb21wdXRlcyBzdHJpZGVzLlxuZXhwb3J0IGZ1bmN0aW9uIHN5bWJvbGljYWxseUNvbXB1dGVTdHJpZGVzKFxuICAgIGluZGljZXNBcnI6IG51bWJlcltdLCB2YXJpYWJsZU5hbWU6IHN0cmluZyk6IHN0cmluZ1tdIHtcbiAgaWYgKE1hdGgubWF4KC4uLmluZGljZXNBcnIpID4gNSkge1xuICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IHN5bWJvbGljYWxseSBjb21wdXRlIHN0cmlkZXMgZm9yIHJhbmsgPiA2IHRlbnNvci4nKTtcbiAgfVxuXG4gIGNvbnN0IG51bUNvb3JkcyA9IGluZGljZXNBcnIubGVuZ3RoO1xuICBjb25zdCBpbmRpY2VzU3RyID0gJ3h5end1dic7XG4gIGNvbnN0IHNoYXBlID0gaW5kaWNlc0Fyci5tYXAoZCA9PiBgJHt2YXJpYWJsZU5hbWV9LiR7aW5kaWNlc1N0cltkXX1gKTtcbiAgY29uc3Qgc3RyaWRlcyA9IG5ldyBBcnJheShudW1Db29yZHMgLSAxKTtcbiAgc3RyaWRlc1tudW1Db29yZHMgLSAyXSA9IHNoYXBlW251bUNvb3JkcyAtIDFdO1xuICBmb3IgKGxldCBpID0gbnVtQ29vcmRzIC0gMzsgaSA+PSAwOyAtLWkpIHtcbiAgICBzdHJpZGVzW2ldID0gYCgke3N0cmlkZXNbaSArIDFdfSAqICR7c2hhcGVbaSArIDFdfSlgO1xuICB9XG5cbiAgcmV0dXJuIHN0cmlkZXM7XG59XG5cbmV4cG9ydCBjb25zdCBhdG9taWNBZGRTbmlwcGV0ID1cbiAgICAocHRyOiBzdHJpbmcsIHY6IHN0cmluZywgdHlwZTogJ2ludDMyJ3wnZmxvYXQzMicpID0+IHtcbiAgICAgIGlmICh0eXBlID09PSAnaW50MzInKSB7XG4gICAgICAgIHJldHVybiBgYXRvbWljQWRkKCR7cHRyfSwgYml0Y2FzdDxpMzI+KCR7dn0pKTtgO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gYXRvbWljQWRkIG9ubHkgc3VwcG9ydHMgdWludC9pbnQgdHlwZS4gRm9yIGZsb2F0LCB3ZSB1c2VcbiAgICAgICAgLy8gYXRvbWljQ29tcGFyZUV4Y2hhbmdlV2VhayB0byBzaW11bGF0ZS5cbiAgICAgICAgcmV0dXJuIGBcbiAgICAgICAgICB7XG4gICAgICAgICAgICB2YXIgb2xkVmFsdWUgPSAwO1xuICAgICAgICAgICAgbG9vcCB7XG4gICAgICAgICAgICAgIGxldCBuZXdWYWx1ZUYzMiA9IGJpdGNhc3Q8ZjMyPihvbGRWYWx1ZSkgKyAoJHt2fSk7XG4gICAgICAgICAgICAgIGxldCBuZXdWYWx1ZSA9IGJpdGNhc3Q8aTMyPihuZXdWYWx1ZUYzMik7XG4gICAgICAgICAgICAgIGxldCByZXMgPSBhdG9taWNDb21wYXJlRXhjaGFuZ2VXZWFrKCR7cHRyfSwgb2xkVmFsdWUsIG5ld1ZhbHVlKTtcbiAgICAgICAgICAgICAgaWYgcmVzLmV4Y2hhbmdlZCB7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgb2xkVmFsdWUgPSByZXMub2xkX3ZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1gO1xuICAgICAgfVxuICAgIH07XG4iXX0=","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, env, util } from '@tensorflow/tfjs-core';\nimport { symbolicallyComputeStrides } from './shader_util';\nexport var PixelsOpType;\n(function (PixelsOpType) {\n    PixelsOpType[PixelsOpType[\"FROM_PIXELS\"] = 0] = \"FROM_PIXELS\";\n    PixelsOpType[PixelsOpType[\"DRAW\"] = 1] = \"DRAW\";\n})(PixelsOpType || (PixelsOpType = {}));\nexport const compileProgram = (device, program, inputsData, output, parallelCompilation) => {\n    const outputData = { dtype: output.dtype, shape: output.shape };\n    const source = makeShader(inputsData, outputData, program);\n    const module = device.createShaderModule({ code: source, label: program.constructor.name });\n    let printShaderString = env().get('WEBGPU_PRINT_SHADER');\n    if (printShaderString !== '') {\n        printShaderString = printShaderString.toLowerCase();\n        const printShaderArray = printShaderString.split(',');\n        if (printShaderString === 'all' ||\n            printShaderArray.some(item => program.shaderKey.toLowerCase().includes(item))) {\n            console.group(program.shaderKey);\n            console.debug(source);\n            console.groupEnd();\n        }\n    }\n    if (parallelCompilation) {\n        return device.createComputePipelineAsync({\n            compute: { module, entryPoint: '_start' },\n            label: program.constructor.name,\n            layout: 'auto'\n        });\n    }\n    else {\n        return device.createComputePipeline({\n            compute: { module, entryPoint: '_start' },\n            label: program.constructor.name,\n            layout: 'auto'\n        });\n    }\n};\nexport const typeSnippet = (component, type = 'f32') => {\n    switch (component) {\n        case 1:\n            return `${type}`;\n        case 2:\n            return `vec2<${type}>`;\n        case 3:\n            return `vec3<${type}>`;\n        case 4:\n            return `vec4<${type}>`;\n        default:\n            throw new Error(`${component}-component ${type} is not supported.`);\n    }\n};\nexport function getCoordsDataType(rank) {\n    if (rank <= 1) {\n        return 'i32';\n    }\n    else if (rank === 2) {\n        return `vec2<i32>`;\n    }\n    else if (rank === 3) {\n        return `vec3<i32>`;\n    }\n    else if (rank === 4) {\n        return `vec4<i32>`;\n    }\n    else if (rank === 5) {\n        return `vec5`;\n    }\n    else if (rank === 6) {\n        return `vec6`;\n    }\n    else {\n        throw Error(`GPU for rank ${rank} is not yet supported`);\n    }\n}\nexport function getCoordsXYZ(index) {\n    if (index === 0) {\n        return 'x';\n    }\n    else if (index === 1) {\n        return 'y';\n    }\n    else if (index === 2) {\n        return 'z';\n    }\n    else if (index === 3) {\n        return 'w';\n    }\n    else if (index === 4) {\n        return 'u';\n    }\n    else if (index === 5) {\n        return 'v';\n    }\n    else {\n        throw Error(`Index ${index} is not yet supported`);\n    }\n}\nexport function getMainHeaderString(...params) {\n    let snippet;\n    switch (params.length) {\n        case 0:\n            snippet = `\n        fn main()\n      `;\n            break;\n        case 1:\n            snippet = `\n        fn main(${params[0]} : i32)\n      `;\n            break;\n        default:\n            throw Error('Unreachable');\n    }\n    return snippet;\n}\nexport function getStartHeaderString(useGlobalIndex, program) {\n    let snippet;\n    snippet = `\n     ${getWorkgroupSizeString(program)}\n      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,\n                @builtin(global_invocation_id) GlobalId : vec3<u32>,\n                @builtin(local_invocation_index) LocalIndex: u32,\n                @builtin(workgroup_id) WorkgroupId : vec3<u32>,\n                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {\n        localId = LocalId;\n        localIndex = LocalIndex;\n        globalId = GlobalId;\n        numWorkgroups = NumWorkgroups;\n        workgroupId = WorkgroupId;\n        ${useGlobalIndex ? `main(getGlobalIndex());` : `main();`};\n      }\n    `;\n    return snippet;\n}\nexport function getWorkgroupSizeString(program) {\n    return `\n  @compute @workgroup_size(${program.workgroupSize[0]}, ${program.workgroupSize[1]}, ${program.workgroupSize[2]})\n`;\n}\nfunction makeShader(inputInfo, outputData, program) {\n    const prefixSnippets = [];\n    const flatWorkgroupSize = program.workgroupSize[0] *\n        program.workgroupSize[1] * program.workgroupSize[2];\n    program.outputComponent =\n        program.outputComponent ? program.outputComponent : 1;\n    prefixSnippets.push(`\n\n      var<private> localId: vec3<u32>;\n      var<private> localIndex: u32;\n      var<private> globalId: vec3<u32>;\n      var<private> numWorkgroups: vec3<u32>;\n      var<private> workgroupId: vec3<u32>;\n\n      // Only used when the y/z dimension of workgroup size is 1.\n      fn getGlobalIndex() -> i32 {\n        ${isFlatDispatch(program) ?\n        `  return i32(globalId.x);` :\n        `  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +\n                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${flatWorkgroupSize}u +\n                localIndex);\n        `}\n      }\n    `);\n    if (program.pixelsOpType != null) {\n        const inoutSnippet = program.pixelsOpType === PixelsOpType.FROM_PIXELS ?\n            `@group(0) @binding(0) var<storage, read_write> result: array<${dataTypeToGPUType(outputData.dtype, program.outputComponent)}>;` :\n            `@group(0) @binding(1) var<storage, read> inBuf : array<${dataTypeToGPUType(inputInfo[0].dtype, program.outputComponent)}>;`;\n        const outShapeStridesType = outputData.shape.length === 3 ? 'vec2<i32>' : 'i32';\n        prefixSnippets.push(`\n        struct Uniform {\n          outShapeStrides : ${outShapeStridesType},\n          size            : i32,\n          numChannels     : i32,\n          alpha           : f32,\n        };\n\n        ${inoutSnippet}\n        @group(0) @binding(2) var<uniform> uniforms: Uniform;\n      `);\n        const useGlobalIndex = isFlatDispatchLayout(program);\n        return [\n            commonSnippet,\n            prefixSnippets.join('\\n'),\n            getCoordsFromIndexSnippet(outputData.shape),\n            program.getUserCode(),\n            getStartHeaderString(useGlobalIndex, program),\n        ].join('\\n');\n    }\n    let stridesLength;\n    let stridesDataType;\n    let uniformDeclaration = 'struct Uniforms { NAN : f32, INFINITY : f32, ';\n    program.variableNames.forEach((x, i) => {\n        const perDataType = getCoordsDataType(inputInfo[i].shape.length);\n        uniformDeclaration +=\n            `${x.charAt(0).toLowerCase() + x.slice(1)}Shape : ${perDataType}, `;\n        stridesLength = inputInfo[i].shape.length - 1;\n        stridesDataType = getCoordsDataType(stridesLength);\n        uniformDeclaration +=\n            `${x.charAt(0).toLowerCase() + x.slice(1)}ShapeStrides: ${stridesDataType}, `;\n    });\n    const outputDataType = getCoordsDataType(outputData.shape.length);\n    uniformDeclaration += `outShape : ${outputDataType}, `;\n    stridesLength = outputData.shape.length - 1;\n    stridesDataType = getCoordsDataType(stridesLength);\n    uniformDeclaration += `\n         outShapeStrides: ${stridesDataType}, `;\n    if (program.size) {\n        uniformDeclaration += 'size : i32, ';\n    }\n    if (program.uniforms) {\n        uniformDeclaration += program.uniforms;\n    }\n    uniformDeclaration += '};';\n    uniformDeclaration = insertAlignment(uniformDeclaration);\n    prefixSnippets.push(uniformDeclaration);\n    // Output buffer.\n    if (program.atomic) {\n        prefixSnippets.push(`\n      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;\n    `);\n    }\n    else {\n        prefixSnippets.push(`\n      @group(0) @binding(0) var<storage, read_write> result: array<${dataTypeToGPUType(outputData.dtype, program.outputComponent)}>;\n    `);\n    }\n    program.variableNames.forEach((x, i) => {\n        prefixSnippets.push(`\n      @group(0) @binding(${1 + i}) var<storage, read> ${x}: array<${program.variableComponents ?\n            dataTypeToGPUType(inputInfo[i].dtype, program.variableComponents[i]) :\n            dataTypeToGPUType(inputInfo[i].dtype, program.outputComponent)}>;\n        `);\n    });\n    if (uniformDeclaration !== '') {\n        prefixSnippets.push(`\n      @group(0) @binding(${1 + program.variableNames.length}) var<uniform> uniforms: Uniforms;\n      `);\n    }\n    const coordsSnippet = getOutputCoordsSnippet(outputData.shape, program.dispatchLayout);\n    const sources = [\n        commonSnippet, prefixSnippets.join('\\n') + isInfSnippet,\n        getCoordsFromIndexSnippet(outputData.shape), coordsSnippet,\n        getOutputIndexFromCoordsSnippet(outputData.shape.length)\n    ];\n    if (!program.atomic) {\n        sources.push(setOutputSnippet(outputData.shape, outputData.dtype, program.outputComponent));\n    }\n    program.variableNames.forEach((x, i) => {\n        sources.push(`${getCoordsFromIndexSnippet(inputInfo[i].shape, x)}`);\n    });\n    const inputSnippet = inputInfo\n        .map((x, i) => getInputSnippet(x, outputData.shape, program.variableComponents ? program.variableComponents[i] :\n        program.outputComponent, program.dispatchLayout.x.length === outputData.shape.length))\n        .join('\\n');\n    sources.push(inputSnippet);\n    sources.push(program.getUserCode());\n    const useGlobalIndex = isFlatDispatchLayout(program);\n    sources.push(getStartHeaderString(useGlobalIndex, program));\n    const source = sources.join('\\n');\n    return source;\n}\nexport function makeShaderKey(program, inputsData, output) {\n    let key = program.shaderKey;\n    if (program.pixelsOpType != null) {\n        return key;\n    }\n    const shapes = [];\n    const types = [];\n    inputsData.forEach(element => {\n        shapes.push(element.shape);\n        types.push(element.dtype);\n    });\n    shapes.push(output.shape);\n    types.push(output.dtype);\n    const broadcastDims = inputsData.map(d => backend_util.getBroadcastDims(d.shape, output.shape));\n    const inputShapesEqualsOutShape = inputsData.map(d => util.arraysEqual(d.shape, output.shape)).join('_');\n    const broadcastDimsKey = broadcastDims.map(d => d.join('_')).join(';');\n    const flatDispatchString = isFlatDispatch(program) ? 'flatDispatch' : '';\n    key += '_' + (program.workgroupSize ? program.workgroupSize.join(',') : '') +\n        shapes.map(shape => shape.length).join(',') + types.join(',') +\n        program.variableNames.join(',') + broadcastDimsKey +\n        inputShapesEqualsOutShape + flatDispatchString;\n    return key;\n}\nconst commonSnippet = `\n  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};\n  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};\n\n  // Checks whether coordinates lie within the bounds of the shape.\n  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {\n    return all(coord >= vec2<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {\n    return all(coord >= vec3<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {\n    return all(coord >= vec4<i32>(0)) && all(coord < shape);\n  }\n\n  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {\n    return coord;\n  }\n  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {\n    return dot(coords, vec2<i32>(shape.y, 1));\n  }\n  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {\n    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));\n  }\n  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n    return dot(coords, vec4<i32>(\n        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n  }\n  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {\n    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);\n    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;\n  }\n  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {\n    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);\n    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;\n  }\n\n  // NaN defination in IEEE 754-1985 is :\n  //   - sign = either 0 or 1.\n  //   - biased exponent = all 1 bits.\n  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).\n  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers\n  fn isnan(val: f32) -> bool {\n    let floatToUint: u32 = bitcast<u32>(val);\n    return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n  }\n  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {\n    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);\n    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);\n  }\n`;\nconst isInfSnippet = `\n  fn isinf(val: f32) -> bool {\n    return abs(val) == uniforms.INFINITY;\n  }\n`;\n/**\n * Derives logical coordinates from a flat index. Performs integer division\n * with each stride and decrements the index until the index equals the final\n * dimension coordinate.\n */\nexport function getCoordsFromIndexSnippet(shape, name = '') {\n    const rank = shape.length;\n    const funcName = name !== '' ?\n        `get${name.charAt(0).toUpperCase() + name.slice(1)}CoordsFromIndex` :\n        'getCoordsFromIndex';\n    const stridesName = name !== '' ?\n        `${name.charAt(0).toLowerCase() + name.slice(1)}ShapeStrides` :\n        `outShapeStrides`;\n    if (rank <= 1) {\n        return `fn ${funcName}(index : i32) -> i32 { return index; }`;\n    }\n    const strides = util.computeStrides(shape);\n    const dtype = getCoordsDataType(rank);\n    const coords = [];\n    for (let i = 0; i < rank; i++) {\n        coords.push(`d${i}`);\n    }\n    if (strides.length === 1) {\n        return `    fn ${funcName}(index : i32) -> vec2<i32> {\n      let d0 = index / uniforms.${stridesName}; let d1 = index - d0 * uniforms.${stridesName};\n      return vec2<i32>(d0, d1);\n    }`;\n    }\n    let snippet;\n    snippet = 'var index2 = index;' +\n        strides\n            .map((_, i) => {\n            const line1 = `let ${coords[i]} = index2 / uniforms.${stridesName}.${getCoordsXYZ(i)}`;\n            const line2 = i === strides.length - 1 ?\n                `let ${coords[i + 1]} = index2 - ${coords[i]} * uniforms.${stridesName}.${getCoordsXYZ(i)}` :\n                `index2 = index2 - ${coords[i]} * uniforms.${stridesName}.${getCoordsXYZ(i)}`;\n            return `${line1}; ${line2};`;\n        })\n            .join('');\n    return `\n    fn ${funcName}(index : i32) -> ${dtype} {\n      ${snippet}\n      return ${dtype}(${coords.join(',')});\n    }\n  `;\n}\nfunction getInputAtCoordsSnippet(inputInfo, component) {\n    const texName = inputInfo.name;\n    const rank = inputInfo.shape.length;\n    const type = getCoordsDataType(rank);\n    const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    const dims = ['d0', 'd1', 'd2', 'd3', 'd4', 'd5'].slice(0, rank);\n    const inputs = dims.map(d => `${d} : i32`).join(', ');\n    if (rank < 1) {\n        return `\n      fn ${funcName}() -> ${typeSnippet(component)} {\n        return ${typeSnippet(component)}(${texName}[0]);\n      }\n    `;\n    }\n    const shapeStr = `uniforms.${texName.charAt(0).toLowerCase() + texName.slice(1)}Shape`;\n    let rankStr = `${rank}D`;\n    if (rank === 0) {\n        rankStr = '1D';\n    }\n    return `\n    fn ${funcName}(${inputs}) -> ${typeSnippet(component)} {\n      return ${typeSnippet(component)}(${texName}[getIndexFromCoords${rankStr}(${type}(${dims.join(',')}),\n        ${shapeStr})${component === 1 ? '' : ` / ${component}`}]);\n    }\n   `;\n}\nfunction getInputByOutputSnippet(inputInfo, outShape, component, isFlatDispatchLayout) {\n    const texName = inputInfo.name;\n    const texFuncSnippet = texName.charAt(0).toUpperCase() + texName.slice(1);\n    const funcName = 'get' + texFuncSnippet + 'ByOutput';\n    const inRank = inputInfo.shape.length;\n    const outRank = outShape.length;\n    const type = getCoordsDataType(outRank);\n    // If the inShape equals the outShape and the dispatch layout is flat, we can\n    // directly use |gl_GlobalInvocationID.x| as the index and don't need coords\n    // conversion between these two shapes.\n    if (util.arraysEqual(inputInfo.shape, outShape) && isFlatDispatchLayout) {\n        return `\n    fn ${funcName}Index(globalIndex : i32) -> ${typeSnippet(component)} {\n      return ${typeSnippet(component)}(${texName}[globalIndex]);\n    }\n\n    fn ${funcName}Coords(coords : ${type}) -> ${typeSnippet(component)} {\n      return ${typeSnippet(component)}(${texName}[${outRank > 1 ? 'getOutputIndexFromCoords(coords)' :\n            'coords'}${component === 1 ? '' : ` / ${component}`}]);\n    }\n    `;\n    }\n    const broadcastDims = backend_util.getBroadcastDims(inputInfo.shape, outShape);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet = '';\n    if (inRank === 0) {\n        return `\n    fn ${funcName}Index(globalIndex : i32) -> ${typeSnippet(component)}{\n      return get${texFuncSnippet}();\n    }\n\n    fn ${funcName}Coords(coords : ${type}) -> ${typeSnippet(component)}{\n      return get${texFuncSnippet}();\n    }\n  `;\n    }\n    else {\n        if (outRank < 2 && broadcastDims.length >= 1) {\n            coordsSnippet = 'coords = 0;';\n        }\n        else {\n            coordsSnippet =\n                broadcastDims.map(d => `coords.${getCoordsXYZ(d + rankDiff)} = 0;`)\n                    .join('\\n');\n        }\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n        unpackedCoordsSnippet = 'coords';\n    }\n    else {\n        if (outRank > 1) {\n            const coordsType = getCoordsDataType(inRank);\n            const coordsValues = inputInfo.shape.map((s, i) => `coords.${getCoordsXYZ(i + rankDiff)}`)\n                .join(', ');\n            unpackedCoordsSnippet = `${coordsType}(${coordsValues})`;\n        }\n        else {\n            unpackedCoordsSnippet = 'coords';\n        }\n    }\n    const shapeStr = `uniforms.${texName.charAt(0).toLowerCase() + texName.slice(1)}Shape`;\n    const rankStr = `${inRank}D`;\n    return `\n  fn ${funcName}Index(globalIndex : i32) -> ${typeSnippet(component)} {\n    var coords = getCoordsFromIndex(globalIndex);\n    ${coordsSnippet}\n    return ${typeSnippet(component)}(${texName}[getIndexFromCoords${rankStr}(${unpackedCoordsSnippet}, ${shapeStr})${component === 1 ? '' : ` / ${component}`}]);\n  }\n\n  fn ${funcName}Coords(coordsIn : ${type}) -> ${typeSnippet(component)} {\n    var coords = coordsIn;\n    ${coordsSnippet}\n    return ${typeSnippet(component)}(${texName}[getIndexFromCoords${rankStr}(${unpackedCoordsSnippet}, ${shapeStr})${component === 1 ? '' : ` / ${component}`}]);\n  }\n`;\n}\nfunction getInputSnippet(inputInfo, outShape, component, isFlatDispatchLayout) {\n    let res = getInputAtCoordsSnippet(inputInfo, component);\n    const inShape = inputInfo.shape;\n    if (inShape.length <= outShape.length) {\n        res += getInputByOutputSnippet(inputInfo, outShape, component, isFlatDispatchLayout);\n    }\n    return res;\n}\n/**\n * Generates getOutputCoords() function that computes output coordinates\n * from dispatch geometry to reduce arithmetic.\n */\nfunction getOutputCoordsSnippet(outShape, dispatchLayout) {\n    const { x, y = [], z = [] } = dispatchLayout;\n    const outRank = outShape.length;\n    const rank = x.length + y.length + z.length;\n    // getOutputCoords is only meaningful when the output rank is same with\n    // dispatch layout rank.\n    if (rank !== outRank) {\n        return '';\n    }\n    if (x.length === outRank) {\n        const dtype = getCoordsDataType(outRank);\n        const snippet = `fn getOutputCoords() -> ${dtype}{\n    let globalIndex = getGlobalIndex();\n    return getCoordsFromIndex(globalIndex);\n  }\n  `;\n        return snippet;\n    }\n    let gatherDimensionsStr = '';\n    const dims = [x, y, z];\n    for (let i = 0; i < dims.length; i++) {\n        const arr = dims[i];\n        if (arr.length === 0) {\n            continue;\n        }\n        if (arr.length === 1) {\n            gatherDimensionsStr += `let d${arr[0]} = i32(globalId[${i}]);`;\n        }\n        else {\n            const strides = symbolicallyComputeStrides(arr, 'uniforms.outShape');\n            gatherDimensionsStr += `var index${i} = i32(globalId[${i}]);`;\n            for (let j = 0; j < strides.length; j++) {\n                gatherDimensionsStr += `let d${arr[j]} = index${i} / ${strides[j]};`;\n                if (j === strides.length - 1) {\n                    gatherDimensionsStr += `let d${arr[j + 1]} = ` +\n                        `index${i} - d${arr[j]} * ${strides[j]};`;\n                }\n                else {\n                    gatherDimensionsStr +=\n                        `index${i} = index${i} - d${arr[j]} * ${strides[j]};`;\n                }\n            }\n        }\n    }\n    const dimensions = [];\n    for (let i = 0; i < rank; i++) {\n        dimensions.push(`d${i}`);\n    }\n    const dtype = getCoordsDataType(rank);\n    let snippet = `fn getOutputCoords() -> ${dtype} {\n  ${gatherDimensionsStr}\n`;\n    if (dimensions.length === 0) {\n        snippet += `return ${dtype}(0); }`;\n    }\n    else {\n        snippet += `return ${dtype}(${dimensions.join(',')}); }`;\n    }\n    return snippet;\n}\nfunction getOutputIndexFromCoordsSnippet(outRank) {\n    let snippet = '';\n    switch (outRank) {\n        case 0:\n        case 1:\n            snippet += `\n        fn getOutputIndexFromCoords(coords : i32) -> i32 {\n          return coords;\n        }\n        `;\n            break;\n        case 2:\n            snippet += `\n        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {\n          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));\n        }\n        `;\n            break;\n        case 3:\n            snippet += `\n        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {\n          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));\n        }\n        `;\n            break;\n        case 4:\n            snippet += `\n        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n          return dot(coords, vec4<i32>(\n            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));\n        }\n        `;\n            break;\n        case 5:\n            snippet += `\n        fn getOutputIndexFromCoords(coords : vec5) -> i32 {\n          return coords.x * uniforms.outShapeStrides.x +\n              coords.y * uniforms.outShapeStrides.y +\n              coords.z * uniforms.outShapeStrides.z +\n              coords.w * uniforms.outShapeStrides.w +\n              coords.u;\n        }\n        `;\n            break;\n        case 6:\n            snippet += `\n        fn getOutputIndexFromCoords(coords : vec6) -> i32 {\n          return coords.x * uniforms.outShapeStrides.x +\n              coords.y * uniforms.outShapeStrides.y +\n              coords.z * uniforms.outShapeStrides.z +\n              coords.w * uniforms.outShapeStrides.w +\n              coords.u * uniforms.outShapeStrides.u +\n              coords.v;\n        }\n        `;\n            break;\n        default:\n            util.assert(false, () => `Unsupported ${outRank}D shape`);\n            break;\n    }\n    return snippet;\n}\nfunction isFlatDispatch(program) {\n    return program.dispatch[1] === 1 && program.dispatch[2] === 1;\n}\nexport function dataTypeToGPUType(type, component = 1) {\n    if (type === 'float32') {\n        return typeSnippet(component, 'f32');\n    }\n    else if (type === 'int32' || type === 'bool') {\n        return typeSnippet(component, 'i32');\n    }\n    throw new Error(`type ${type} is not supported.`);\n}\nfunction setOutputSnippet(outShape, outBufferType, component) {\n    const outRank = outShape.length;\n    const gpuType = dataTypeToGPUType(outBufferType, component);\n    let snippet = `fn setOutputAtIndex(flatIndex : i32, value : ${typeSnippet(component)}) {\n      result[flatIndex] = ${gpuType}(value);\n    }\n\n    fn setOutputAtIndexI32(flatIndex : i32, value : ${typeSnippet(component, 'i32')}) {\n      result[flatIndex] = ${gpuType}(value);\n    }\n    `;\n    if (outRank >= 2) {\n        const dims = ['d0', 'd1', 'd2', 'd3', 'd4', 'd5'].slice(0, outRank);\n        const type = getCoordsDataType(outRank);\n        snippet += `\n      fn setOutputAtCoords(${dims.map(d => `${d} : i32`).join(', ')}, value : ${typeSnippet(component)}) {\n        let flatIndex = getOutputIndexFromCoords(${type}(${dims.join(', ')}));\n        setOutputAtIndex(flatIndex${component === 1 ? '' : ` / ${component}`}, value);\n      }\n      fn setOutputAtCoordsI32(${dims.map(d => `${d} : i32`).join(', ')}, value : ${typeSnippet(component, 'i32')}) {\n        let flatIndex = getOutputIndexFromCoords(${type}(${dims.join(', ')}));\n        setOutputAtIndexI32(flatIndex${component === 1 ? '' : ` / ${component}`}, value);\n      }\n    `;\n    }\n    return snippet;\n}\nfunction insertAlignment(uniformShader) {\n    // insert alignment when current pattern is vec5 or vec6\n    const curInsertRe = /(\\w+)\\s*:\\s*vec(5|6)/g;\n    uniformShader = uniformShader.replace(curInsertRe, (match) => {\n        return '@align(16) ' + match;\n    });\n    // insert alignment when previous pattern is vec5 or vec6\n    const preInsertRe = /vec(5|6)\\s*,\\s*(\\w+)/g;\n    uniformShader = uniformShader.replace(preInsertRe, (_, p1, p2) => {\n        return `vec${p1}, @align(16) ${p2}`;\n    });\n    return uniformShader;\n}\nfunction isFlatDispatchLayout(program) {\n    if (program.dispatchLayout.hasOwnProperty('y') &&\n        program.dispatchLayout.y.length !== 0) {\n        return false;\n    }\n    if (program.dispatchLayout.hasOwnProperty('z') &&\n        program.dispatchLayout.z.length !== 0) {\n        return false;\n    }\n    return true;\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nconst arrayProduct = (arr) => {\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n    }\n    return product;\n};\nexport function tilesFitEvenlyIntoShape(tileSize, shape) {\n    if (tileSize.length !== shape.length) {\n        throw new Error(`Cannot compute whether rank ${tileSize.length}` +\n            ` tiles fit evenly into rank ${shape.length} shape` +\n            ` - ranks must match.`);\n    }\n    return shape.every((dim, dimIdx) => dim % tileSize[dimIdx] === 0);\n}\n// Computes dispatch geometry based on layout of output dimensions and\n// workgroupSize.\nexport function computeDispatch(layout, outputShape, workgroupSize = [1, 1, 1], elementsPerThread = [1, 1, 1]) {\n    const [dispatchX, dispatchY, dispatchZ] = [\n        Math.ceil(arrayProduct(layout.x.map(d => outputShape[d])) /\n            (workgroupSize[0] * elementsPerThread[0])),\n        layout.y ? Math.ceil(arrayProduct(layout.y.map(d => outputShape[d])) /\n            (workgroupSize[1] * elementsPerThread[1])) :\n            1,\n        layout.z ? Math.ceil(arrayProduct(layout.z.map(d => outputShape[d])) /\n            (workgroupSize[2] * elementsPerThread[2])) :\n            1\n    ];\n    return [dispatchX, dispatchY, dispatchZ];\n}\nexport function computeWorkgroupInfoForMatMul(dimAOuter, dimInner, dimBOuter, transposeA = false) {\n    // These are experimental values. Usually, we need to adjust the work group\n    // size based on the input shapes to improve the EU occupancy.\n    // TODO: WebGPU limits the maximum allowed shared memory size as 16K. To make\n    // sure it doesn't exceed this limitations. Temporarily reduce the work group\n    // size to [8, 8, 1] and the work per thread size is [4, 4, 1]. But we should\n    // revisit it and find the balance between work group size and work per thread\n    // size.\n    const workgroupSize = [8, 8, 1];\n    const elementsPerThread = [4, 4, 1];\n    if (!transposeA) {\n        if (dimAOuter <= 8) {\n            elementsPerThread[1] = 1;\n        }\n        if (dimInner <= 16 && dimBOuter <= 16) {\n            workgroupSize[0] = 4;\n        }\n    }\n    return { workgroupSize, elementsPerThread };\n}\nexport function computeWorkgroupSizeForConv2d(layout, outputShape, isVec4 = false) {\n    if (isVec4) {\n        return [8, 8, 1];\n    }\n    const dim0 = arrayProduct(layout.x.map(d => outputShape[d]));\n    const dim1 = arrayProduct(layout.y.map(d => outputShape[d]));\n    // TODO(jiajia.qin@intel.com): More fine tune based on outputShape.\n    // These are experimental values. Usually, we need to adjust the work group\n    // size based on the output shape. For example, when one dimension is smaller\n    // than 4, it will be wasteful if we assign a larger size for this dimension,\n    // which results lots of threads doing useless work and reduces parallelism\n    // of hardware threads. But it is always a balance between work group size\n    // and shared memory. If one dimension is too small, such as 1, shared memory\n    // will won't be fully utilized.\n    if (dim0 <= 4) {\n        return [4, 16, 1];\n    }\n    if (dim1 <= 4) {\n        return [16, 4, 1];\n    }\n    return [16, 16, 1];\n}\nexport function computeWorkPerThreadForConv2d(layout, outputShape, isVec4 = false) {\n    if (isVec4) {\n        return [4, 4, 1];\n    }\n    const dim0 = arrayProduct(layout.x.map(d => outputShape[d]));\n    const dim1 = arrayProduct(layout.y.map(d => outputShape[d]));\n    // TODO(jiajia.qin@intel.com): More fine tune based on outputShape.\n    // The following conditions correspond to the values set in\n    // computeWorkgroupSizeForConv2d.\n    if (dim0 <= 4) {\n        return [1, 2, 1];\n    }\n    if (dim1 <= 4) {\n        return [2, 1, 1];\n    }\n    return [2, 2, 1];\n}\nexport function flatDispatchLayout(shape) {\n    return { x: shape.map((d, i) => i) };\n}\nexport function GPUBytesPerElement(dtype) {\n    if (dtype === 'float32' || dtype === 'int32' || dtype === 'bool' ||\n        dtype === 'string') {\n        return 4;\n    }\n    else if (dtype === 'complex64') {\n        return 8;\n    }\n    else {\n        throw new Error(`Unknown dtype ${dtype}`);\n    }\n}\nexport function isWebGPUSupported() {\n    return !!(typeof globalThis !== 'undefined' && (globalThis.navigator)\n        && (globalThis.navigator.gpu));\n}\nexport function assertNotComplex(tensor, opName) {\n    if (!Array.isArray(tensor)) {\n        tensor = [tensor];\n    }\n    tensor.forEach(t => {\n        if (t != null) {\n            util.assert(t.dtype !== 'complex64', () => `${opName} does not support complex64 tensors ` +\n                'in the WebGPU backend.');\n        }\n    });\n}\nexport var MatMulProgramType;\n(function (MatMulProgramType) {\n    MatMulProgramType[MatMulProgramType[\"MatMulReduceProgram\"] = 0] = \"MatMulReduceProgram\";\n    MatMulProgramType[MatMulProgramType[\"MatMulSplitKProgram\"] = 1] = \"MatMulSplitKProgram\";\n    MatMulProgramType[MatMulProgramType[\"MatMulSmallOutputSizeProgram\"] = 2] = \"MatMulSmallOutputSizeProgram\";\n    MatMulProgramType[MatMulProgramType[\"MatMulPackedProgram\"] = 3] = \"MatMulPackedProgram\";\n    MatMulProgramType[MatMulProgramType[\"MatMulMax\"] = 4] = \"MatMulMax\";\n})(MatMulProgramType || (MatMulProgramType = {}));\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport './flags_webgpu';\nimport { backend_util, buffer, DataStorage, engine, env, KernelBackend, util } from '@tensorflow/tfjs-core';\nimport { AdapterInfo } from './adapter_info';\nimport { BufferManager } from './buffer_manager';\nimport { TextureManager } from './texture_manager';\nimport * as webgpu_program from './webgpu_program';\nimport * as webgpu_util from './webgpu_util';\n// Empirically determined constant used to determine size threshold for handing\n// off execution to the CPU.\nconst CPU_HANDOFF_SIZE_THRESHOLD = env().getNumber('WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD');\n// Reshape dispatch, not to exceed device limits.\nconst reshapeDispatch = (device, program) => {\n    const MAX_COMPUTE_PER_DIMENSION_DISPATCH_SIZE = device.limits.maxComputeWorkgroupsPerDimension;\n    const layout = program['dispatchLayout'];\n    const dispatch = program['dispatch'];\n    if (dispatch.every((d) => d <= MAX_COMPUTE_PER_DIMENSION_DISPATCH_SIZE)) {\n        return dispatch;\n    }\n    util.assert(dispatch[0] > MAX_COMPUTE_PER_DIMENSION_DISPATCH_SIZE &&\n        layout.y === undefined && layout.z === undefined, () => 'Dispatch size exceeds WebGPU limits in Y or Z dimension.');\n    let dispatchAverage = Math.ceil(Math.sqrt(dispatch[0]));\n    if (dispatchAverage > MAX_COMPUTE_PER_DIMENSION_DISPATCH_SIZE) {\n        dispatchAverage = Math.ceil(Math.cbrt(dispatch[0]));\n        util.assert(dispatchAverage <= MAX_COMPUTE_PER_DIMENSION_DISPATCH_SIZE, () => 'Total dispatch size exceeds WebGPU maximum.');\n        return [dispatchAverage, dispatchAverage, dispatchAverage];\n    }\n    else {\n        return [dispatchAverage, dispatchAverage, 1];\n    }\n};\nclass WebGPUBackend extends KernelBackend {\n    nextDataId() {\n        return WebGPUBackend.nextDataId++;\n    }\n    constructor(device, adapterInfo) {\n        super();\n        this.commandQueueOwnedIds = new WeakSet();\n        this.dispatchCountInPass = 0;\n        this.disposed = false;\n        this.downloadWaitMs = 0;\n        this.tensorDataPendingDisposal = [];\n        this.queryResolveBuffer = null;\n        this.querySet = null;\n        this.querySetCount = 2;\n        this.stagingPendingDisposal = [];\n        this.uniformPendingDisposal = [];\n        this.uploadWaitMs = 0;\n        this.hasReadSyncWarned = false;\n        this.hasTimestampQueryWarned = false;\n        if (!webgpu_util.isWebGPUSupported()) {\n            throw new Error('WebGPU is not supported on this device');\n        }\n        this.pipelineCache = {};\n        this.device = device;\n        this.queue = device.queue;\n        this.commandEncoder = null;\n        this.computePassEncoder = null;\n        this.adapterInfo = new AdapterInfo(adapterInfo);\n        this.supportTimestampQuery = this.device.features.has('timestamp-query');\n        this.thresholdToIncreaseWorkgroups =\n            this.adapterInfo.intelGPUGeneration >= 12 ? 16 : 8;\n        this.bufferManager = new BufferManager(this.device);\n        this.textureManager = new TextureManager(this.device);\n        this.tensorMap = new DataStorage(this, engine());\n        // Profiling tools like PIX needs this dummy canvas to\n        // trigger capturing a frame.\n        if (env().getBool('WEBGPU_USE_PROFILE_TOOL')) {\n            this.dummyCanvas = document.createElement('canvas');\n            this.dummyCanvas.width = 1;\n            this.dummyCanvas.height = 1;\n            this.dummyContext = this.dummyCanvas.getContext('webgpu');\n            this.dummyContext.configure({\n                device,\n                format: 'bgra8unorm',\n            });\n            document.body.appendChild(this.dummyCanvas);\n        }\n    }\n    floatPrecision() {\n        return 32;\n    }\n    /**\n     * Dispose the memory if the dataId has 0 refCount. Return true if the memory\n     * is released or delayed in this backend, false if there are still\n     * references.\n     * @param dataId\n     * @oaram force Optional, remove the data regardless of refCount\n     */\n    disposeData(dataId, force = false) {\n        // No-op if already disposed.\n        if (!this.tensorMap.has(dataId)) {\n            return true;\n        }\n        const tensorData = this.tensorMap.get(dataId);\n        if (force) {\n            tensorData.refCount = 0;\n        }\n        else {\n            tensorData.refCount--;\n        }\n        if (tensorData.refCount > 0) {\n            return false;\n        }\n        if (tensorData.complexTensorInfos != null) {\n            this.disposeData(tensorData.complexTensorInfos.real.dataId);\n            this.disposeData(tensorData.complexTensorInfos.imag.dataId);\n        }\n        if (this.commandQueueOwnedIds.has(dataId)) {\n            this.tensorDataPendingDisposal.push(dataId);\n            return true;\n        }\n        this.releaseResource(dataId);\n        this.tensorMap.delete(dataId);\n        return true;\n    }\n    memory() {\n        return {\n            numBytesInGPU: this.bufferManager.numBytesUsed,\n            numBytesAllocatedInGPU: this.bufferManager.numBytesAllocated,\n            unreliable: false\n        };\n    }\n    releaseResource(dataId) {\n        const tensorData = this.tensorMap.get(dataId);\n        if (!tensorData || !tensorData.resource) {\n            return;\n        }\n        // If tensor's resource is from external, do not release.\n        if (tensorData.external) {\n            tensorData.resource = null;\n            return;\n        }\n        if (tensorData.resource instanceof GPUBuffer) {\n            this.bufferManager.releaseBuffer(tensorData.resource);\n        }\n        else if (tensorData.resource instanceof GPUTexture) {\n            this.textureManager.releaseTexture(tensorData.resource);\n        }\n        tensorData.resource = null;\n    }\n    /** Return refCount of a `TensorData`. */\n    refCount(dataId) {\n        if (this.tensorMap.has(dataId)) {\n            const tensorData = this.tensorMap.get(dataId);\n            return tensorData.refCount;\n        }\n        return 0;\n    }\n    /** Increase refCount of a `TensorData`. */\n    incRef(dataId) {\n        const tensorData = this.tensorMap.get(dataId);\n        tensorData.refCount++;\n    }\n    /** Decrease refCount of a `TensorData`. */\n    decRef(dataId) {\n        if (this.tensorMap.has(dataId)) {\n            const tensorData = this.tensorMap.get(dataId);\n            tensorData.refCount--;\n        }\n    }\n    write(values, shape, dtype) {\n        if (dtype === 'complex64' && values != null) {\n            throw new Error(`Cannot write to a complex64 dtype. ` +\n                `Please use tf.complex(real, imag).`);\n        }\n        const dataId = { id: this.nextDataId() };\n        this.tensorMap.set(dataId, { dtype, shape, values, refCount: 1 });\n        return dataId;\n    }\n    move(dataId, values, shape, dtype, refCount) {\n        if (dtype === 'complex64') {\n            throw new Error(`Cannot write to a complex64 dtype. ` +\n                `Please use tf.complex(real, imag).`);\n        }\n        this.tensorMap.set(dataId, { dtype, shape, values, refCount });\n    }\n    submitQueue() {\n        this.queue.submit([this.commandEncoder.finish()]);\n        this.commandEncoder = null;\n        this.dispatchCountInPass = 0;\n        this.commandQueueOwnedIds = new WeakSet();\n        this.tensorDataPendingDisposal.forEach(d => {\n            this.releaseResource(d);\n            this.tensorMap.delete(d);\n        });\n        this.uniformPendingDisposal.forEach(b => this.bufferManager.releaseBuffer(b));\n        this.stagingPendingDisposal.forEach(b => this.bufferManager.releaseBuffer(b, false));\n        this.tensorDataPendingDisposal = [];\n        this.uniformPendingDisposal = [];\n        this.stagingPendingDisposal = [];\n    }\n    ensureCommandEncoderReady() {\n        if (!this.commandEncoder) {\n            this.commandEncoder = this.device.createCommandEncoder();\n        }\n    }\n    endComputePassEncoder() {\n        if (this.computePassEncoder) {\n            this.computePassEncoder.end();\n            this.computePassEncoder = null;\n        }\n    }\n    // Check if parallel compilation is done.\n    async checkCompileCompletionAsync() {\n        let pipelines;\n        try {\n            pipelines = await Promise.all(Object.values(this.pipelineCache));\n        }\n        catch (e) {\n            // TODO: Add test case to catch this exception.\n            throw new Error(e.message);\n        }\n        Object.keys(this.pipelineCache).map((key, i) => {\n            this.pipelineCache[key] = pipelines[i];\n        });\n    }\n    async getBufferData(buffer) {\n        if (env().getBool('WEBGPU_ENGINE_COMPILE_ONLY')) {\n            console.warn('The data may be invalid since WEBGPU_ENGINE_COMPILE_ONLY is true, this can only be called when WEBGPU_ENGINE_COMPILE_ONLY is false');\n            return null;\n        }\n        const size = buffer.size;\n        const stagingBuffer = this.bufferManager.acquireBuffer(size, GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ);\n        this.ensureCommandEncoderReady();\n        this.endComputePassEncoder();\n        this.commandEncoder.copyBufferToBuffer(buffer, 0, stagingBuffer, 0, size);\n        this.submitQueue();\n        await stagingBuffer.mapAsync(GPUMapMode.READ);\n        const values = stagingBuffer.getMappedRange().slice(0);\n        stagingBuffer.unmap();\n        if (stagingBuffer != null) {\n            this.bufferManager.releaseBuffer(stagingBuffer);\n        }\n        // Need to get texture from swapChain to enable profiling tool\n        // to capture a frame\n        if (env().getBool('WEBGPU_USE_PROFILE_TOOL')) {\n            util.assert(this.dummyContext !== undefined, () => `Fail to get context for profiling tool`);\n            this.dummyContext.getCurrentTexture();\n        }\n        return values;\n    }\n    convertAndCacheOnCPU(dataId, data) {\n        const tensorData = this.tensorMap.get(dataId);\n        tensorData.values = data;\n        return tensorData.values;\n    }\n    readSync(dataId) {\n        const tensorData = this.tensorMap.get(dataId);\n        const { values, complexTensorInfos } = tensorData;\n        if (values != null || tensorData.dtype === 'string') {\n            return values;\n        }\n        if (tensorData.dtype === 'complex64') {\n            const realValues = this.readSync(complexTensorInfos.real.dataId);\n            const imagValues = this.readSync(complexTensorInfos.imag.dataId);\n            const complexVals = util.convertBackendValuesAndArrayBuffer(backend_util.mergeRealAndImagArrays(realValues, imagValues).buffer, 'float32');\n            this.convertAndCacheOnCPU(dataId, complexVals);\n            return complexVals;\n        }\n        if (!this.hasReadSyncWarned) {\n            this.hasReadSyncWarned = true;\n            console.warn(`The performance of synchronously reading data from GPU to CPU is ` +\n                `poor on the webgpu backend, please use asynchronous APIs instead.`);\n        }\n        const alphaModes = ['opaque', 'premultiplied'];\n        const buffer = tensorData.resource;\n        const bufferSize = buffer.size;\n        util.assert(bufferSize % 4 === 0, () => 'Because there is 4 bytes for ' +\n            'one pixel, buffer size must be multiple of 4.');\n        const pixelsSize = bufferSize / 4;\n        const valsGPU = new ArrayBuffer(bufferSize);\n        // TODO: adjust the reading window size according the `bufferSize`.\n        const canvasWidth = 256, canvasHeight = 256;\n        const stagingDeviceStorage = alphaModes.map(_ => new OffscreenCanvas(canvasWidth, canvasHeight));\n        const stagingHostStorage = new OffscreenCanvas(canvasWidth, canvasHeight);\n        this.endComputePassEncoder();\n        stagingDeviceStorage\n            .map((storage, index) => {\n            const context = storage.getContext('webgpu');\n            // TODO: use rgba8unorm format when this format is supported on Mac.\n            // https://bugs.chromium.org/p/chromium/issues/detail?id=1298618\n            context.configure({\n                device: this.device,\n                format: 'bgra8unorm',\n                usage: GPUTextureUsage.COPY_DST,\n                alphaMode: alphaModes[index],\n            });\n            return context.getCurrentTexture();\n        })\n            .map((texture, index) => {\n            const bytesPerRow = canvasWidth * 4;\n            const readDataGPUToCPU = (width, height, offset) => {\n                this.ensureCommandEncoderReady();\n                this.commandEncoder.copyBufferToTexture({\n                    buffer,\n                    bytesPerRow,\n                    offset,\n                }, {\n                    texture,\n                }, {\n                    width,\n                    height,\n                });\n                this.submitQueue();\n                const context = stagingHostStorage.getContext('2d', {\n                    willReadFrequently: true,\n                });\n                context.clearRect(0, 0, width, height);\n                context.drawImage(stagingDeviceStorage[index], 0, 0);\n                const stagingValues = context.getImageData(0, 0, width, height).data;\n                const alphaMode = alphaModes[index];\n                const span = new Uint8ClampedArray(valsGPU, offset, width * height * 4);\n                for (let k = 0; k < span.length; k += 4) {\n                    if (alphaMode === 'premultiplied') {\n                        span[k + 3] = stagingValues[k + 3];\n                    }\n                    else {\n                        const value = stagingValues[k];\n                        span[k] = stagingValues[k + 2];\n                        span[k + 1] = stagingValues[k + 1];\n                        span[k + 2] = value;\n                    }\n                }\n            };\n            const fullyReadCount = Math.floor(pixelsSize / (canvasWidth * canvasHeight));\n            let width = canvasWidth, height = canvasHeight, offset = 0;\n            for (let i = 0; i < fullyReadCount; i++) {\n                // Read the buffer data, which fully fill the whole canvas.\n                readDataGPUToCPU(width, height, offset);\n                offset += canvasWidth * canvasHeight * 4;\n            }\n            const remainSize = pixelsSize % (canvasWidth * canvasHeight);\n            height = Math.floor(remainSize / canvasWidth);\n            if (height > 0) {\n                // Read the buffer data, which fully fill certain rows of canvas.\n                readDataGPUToCPU(width, height, offset);\n                offset += height * (canvasWidth * 4);\n            }\n            width = remainSize % canvasWidth;\n            if (width > 0) {\n                // Read the buffer data, which not fully fill one row of canvas.\n                readDataGPUToCPU(width, 1, offset);\n            }\n        });\n        const vals = util.convertBackendValuesAndArrayBuffer(valsGPU, tensorData.dtype);\n        this.convertAndCacheOnCPU(dataId, vals);\n        return vals;\n    }\n    async read(dataId) {\n        if (!this.tensorMap.has(dataId)) {\n            throw new Error(`Tensor ${dataId} was not registered!`);\n        }\n        const tensorData = this.tensorMap.get(dataId);\n        const { values } = tensorData;\n        if (values != null) {\n            return values;\n        }\n        // Download the values from the GPU.\n        let vals;\n        if (tensorData.dtype === 'complex64') {\n            const ps = await Promise.all([\n                this.read(tensorData.complexTensorInfos.real.dataId),\n                this.read(tensorData.complexTensorInfos.imag.dataId)\n            ]);\n            const realValues = ps[0];\n            const imagValues = ps[1];\n            vals = backend_util.mergeRealAndImagArrays(realValues, imagValues);\n        }\n        else {\n            const data = await this.getBufferData(tensorData.resource);\n            vals = util.convertBackendValuesAndArrayBuffer(data, tensorData.dtype);\n        }\n        this.convertAndCacheOnCPU(dataId, vals);\n        return vals;\n    }\n    // The source GPUBuffer and destination GPUBuffer have the same size and\n    // usage.\n    copyBuffer(srcBuffer) {\n        const size = srcBuffer.size;\n        const usage = srcBuffer.usage;\n        const dstBuffer = this.bufferManager.acquireBuffer(size, usage);\n        this.ensureCommandEncoderReady();\n        this.endComputePassEncoder();\n        this.commandEncoder.copyBufferToBuffer(srcBuffer, 0, dstBuffer, 0, size);\n        this.submitQueue();\n        return dstBuffer;\n    }\n    /**\n     * Create a TF.js tensor out of an existing WebGPU buffer.\n     */\n    createTensorFromGPUData(webGPUData, shape, dtype) {\n        let buffer = webGPUData.buffer;\n        if (dtype === 'complex64') {\n            throw new Error(`Cannot write to a complex64 dtype. `);\n        }\n        const dataId = { id: this.nextDataId() };\n        this.tensorMap.set(dataId, {\n            dtype,\n            shape,\n            values: null,\n            refCount: 1,\n            external: webGPUData.zeroCopy\n        });\n        const tensorData = this.tensorMap.get(dataId);\n        const size = webgpu_util.GPUBytesPerElement(tensorData.dtype) *\n            util.sizeFromShape(tensorData.shape);\n        if (webGPUData.buffer.size < size) {\n            throw new Error(`GPUBuffer size(${webGPUData.buffer.size}) is smaller than tensor size(${size})!`);\n        }\n        else if ((webGPUData.buffer.usage &\n            (GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC)) !==\n            (GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC)) {\n            throw new Error('GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!');\n        }\n        // Do buffer copy by default.\n        if (webGPUData.zeroCopy !== true) {\n            buffer = this.copyBuffer(buffer);\n        }\n        tensorData.resource = buffer;\n        return engine().makeTensorFromDataId(dataId, shape, dtype, this);\n    }\n    /**\n     * Read tensor to a new GPUBuffer.\n     * @param dataId The source tensor.\n     */\n    readToGPU(dataId) {\n        const srcTensorData = this.tensorMap.get(dataId);\n        const { values, dtype, shape, resource } = srcTensorData;\n        if (dtype === 'complex64') {\n            throw new Error('Does not support reading buffer for complex64 dtype.');\n        }\n        if (resource == null) {\n            if (values != null) {\n                throw new Error('Data is not on GPU but on CPU.');\n            }\n            else {\n                throw new Error('There is no data on GPU or CPU.');\n            }\n        }\n        const srcBuffer = resource;\n        const size = srcBuffer.size;\n        const usage = srcBuffer.usage;\n        const buffer = this.bufferManager.acquireBuffer(size, usage);\n        this.ensureCommandEncoderReady();\n        this.endComputePassEncoder();\n        this.commandEncoder.copyBufferToBuffer(resource, 0, buffer, 0, size);\n        this.submitQueue();\n        const tensorInfo = this.makeTensorInfo(shape, dtype);\n        // Make engine track this tensor, so that we can dispose it later.\n        const tensorRef = engine().makeTensorFromTensorInfo(tensorInfo);\n        const tensorData = this.tensorMap.get(tensorInfo.dataId);\n        tensorData.resource = buffer;\n        return { tensorRef, buffer };\n    }\n    bufferSync(t) {\n        const data = this.readSync(t.dataId);\n        if (t.dtype === 'string') {\n            try {\n                // Decode the bytes into string.\n                const strings = data.map(d => util.decodeString(d));\n                return buffer(t.shape, t.dtype, strings);\n            }\n            catch (_a) {\n                throw new Error('Failed to decode encoded string bytes into utf-8');\n            }\n        }\n        return buffer(t.shape, t.dtype, data);\n    }\n    async time(f) {\n        if (!this.supportTimestampQuery && !this.hasTimestampQueryWarned) {\n            console.warn(`This device doesn't support timestamp-query extension. ` +\n                `Start Chrome browser with flag ` +\n                `--enable-dawn-features=allow_unsafe_apis to try it again. ` +\n                `Otherwise, zero will be shown for the kernel time when profiling ` +\n                `mode is enabled.`);\n            this.hasTimestampQueryWarned = true;\n        }\n        const oldActiveTimers = this.activeTimers;\n        const newActiveTimers = [];\n        let outerMostTime = false;\n        if (this.programTimersStack == null) {\n            this.programTimersStack = newActiveTimers;\n            outerMostTime = true;\n        }\n        else {\n            this.activeTimers.push(newActiveTimers);\n        }\n        this.activeTimers = newActiveTimers;\n        f();\n        const flattenedActiveTimerQueries = util.flatten(this.activeTimers.map((d) => d.query))\n            .filter(d => d != null);\n        const flattenedActiveTimerNames = util.flatten(this.activeTimers.map((d) => d.name))\n            .filter(d => d != null);\n        this.activeTimers = oldActiveTimers;\n        if (outerMostTime) {\n            this.programTimersStack = null;\n        }\n        const res = {\n            uploadWaitMs: this.uploadWaitMs,\n            downloadWaitMs: this.downloadWaitMs,\n            kernelMs: null,\n            wallMs: null\n        };\n        const kernelMs = await Promise.all(flattenedActiveTimerQueries);\n        res['kernelMs'] = util.sum(kernelMs);\n        res['getExtraProfileInfo'] = () => kernelMs.map((d, i) => ({ name: flattenedActiveTimerNames[i], ms: d }))\n            .map(d => `${d.name}: ${d.ms}`)\n            .join(', ');\n        this.uploadWaitMs = 0;\n        this.downloadWaitMs = 0;\n        return res;\n    }\n    makeTensorInfo(shape, dtype, values) {\n        if (dtype === 'string' && values != null && values.length > 0 &&\n            util.isString(values[0])) {\n            values = values.map(d => util.encodeString(d));\n        }\n        const dataId = this.write(values, shape, dtype);\n        return { dataId, shape, dtype };\n    }\n    tensorToBinding(tensor) {\n        if (!tensor) {\n            return null;\n        }\n        const tensorData = this.tensorMap.get(tensor.dataId);\n        const resource = tensorData.resource;\n        if (resource instanceof GPUBuffer) {\n            return { buffer: resource };\n        }\n        if (resource instanceof GPUTexture) {\n            return resource.createView();\n        }\n        // GPUExternalTexture\n        return resource;\n    }\n    uploadToGPU(dataId) {\n        const tensorData = this.tensorMap.get(dataId);\n        // Already on the GPU.\n        if (tensorData.resource != null) {\n            return;\n        }\n        const size = webgpu_util.GPUBytesPerElement(tensorData.dtype) *\n            util.sizeFromShape(tensorData.shape);\n        let buffer;\n        const usage = GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC |\n            GPUBufferUsage.COPY_DST;\n        if (tensorData.values) {\n            buffer = this.bufferManager.acquireBuffer(size, usage, true);\n            if (buffer.mapState === 'unmapped') {\n                const stagingBuffer = this.bufferManager.acquireBuffer(size, GPUBufferUsage.MAP_WRITE | GPUBufferUsage.COPY_SRC, true, false);\n                const arrayBuffer = stagingBuffer.getMappedRange();\n                if (tensorData.dtype === 'int32' || tensorData.dtype === 'bool') {\n                    new Int32Array(arrayBuffer).set(tensorData.values);\n                }\n                else {\n                    new Float32Array(arrayBuffer).set(tensorData.values);\n                }\n                stagingBuffer.unmap();\n                this.ensureCommandEncoderReady();\n                this.endComputePassEncoder();\n                this.commandEncoder.copyBufferToBuffer(stagingBuffer, 0, buffer, 0, size);\n                this.stagingPendingDisposal.push(stagingBuffer);\n            }\n            else {\n                const arrayBuffer = buffer.getMappedRange();\n                if (tensorData.dtype === 'int32' || tensorData.dtype === 'bool') {\n                    new Int32Array(arrayBuffer).set(tensorData.values);\n                }\n                else {\n                    new Float32Array(arrayBuffer).set(tensorData.values);\n                }\n                buffer.unmap();\n            }\n            // Once uploaded, don't store the values on cpu.\n            tensorData.values = null;\n        }\n        else {\n            buffer = this.bufferManager.acquireBuffer(size, usage);\n        }\n        tensorData.resource = buffer;\n    }\n    makeUniforms(programUniform) {\n        let currentOffset = 0;\n        let preLength = 0;\n        const offsets = [];\n        let maxAlignmentOfField = 1;\n        programUniform.forEach((d) => {\n            if (d.data.length === 0) {\n                d.data = [1];\n            }\n            // https://www.w3.org/TR/WGSL/#alignof\n            let baseAlignment;\n            switch (d.data.length) {\n                case 1:\n                    baseAlignment = 4;\n                    break;\n                case 2:\n                    baseAlignment = 8;\n                    break;\n                case 3:\n                    baseAlignment = 16;\n                    break;\n                case 4:\n                    baseAlignment = 16;\n                    break;\n                case 5:\n                    baseAlignment = 16;\n                    break;\n                case 6:\n                    baseAlignment = 16;\n                    break;\n                default:\n                    util.assert(false, () => `Unsupported ${d.data.length}D shape`);\n            }\n            if (preLength === 5 || preLength === 6) {\n                baseAlignment = 16;\n            }\n            if (baseAlignment > maxAlignmentOfField) {\n                maxAlignmentOfField = baseAlignment;\n            }\n            currentOffset = Math.ceil(currentOffset / baseAlignment) * baseAlignment;\n            preLength = d.data.length;\n            offsets.push(currentOffset);\n            currentOffset += d.data.length * 4;\n        });\n        currentOffset =\n            Math.ceil(currentOffset / maxAlignmentOfField) * maxAlignmentOfField;\n        const arrayBuffer = new ArrayBuffer(currentOffset);\n        programUniform.forEach((d, i) => {\n            const offset = offsets[i];\n            if (d.type === 'int32') {\n                new Int32Array(arrayBuffer, offset, d.data.length).set(d.data);\n            }\n            else if (d.type === 'uint32') {\n                new Uint32Array(arrayBuffer, offset, d.data.length).set(d.data);\n            }\n            else {\n                new Float32Array(arrayBuffer, offset, d.data.length).set(d.data);\n            }\n        });\n        const uniformBuffer = this.bufferManager.acquireBuffer(currentOffset, GPUBufferUsage.COPY_DST | GPUBufferUsage.UNIFORM);\n        this.queue.writeBuffer(uniformBuffer, 0, arrayBuffer, 0, currentOffset);\n        this.uniformPendingDisposal.push(uniformBuffer);\n        return { offset: 0, size: currentOffset, buffer: uniformBuffer };\n    }\n    runWebGPUProgram(program, inputs, outputDtype, programDefinedUniform, output) {\n        if (!output) {\n            output = this.makeTensorInfo(program.outputShape, outputDtype);\n        }\n        if (util.sizeFromShape(output.shape) === 0) {\n            // Short-circuit the computation since the result is empty (has 0 in its\n            // shape).\n            this.tensorMap.get(output.dataId).values =\n                util.getTypedArrayFromDType(output.dtype, 0);\n            return output;\n        }\n        this.uploadToGPU(output.dataId);\n        program.dispatch = reshapeDispatch(this.device, program);\n        const inputsData = inputs.map((input, i) => {\n            if (input.dtype === 'complex64') {\n                throw new Error(`GPGPUProgram does not support complex64 input. For complex64 ` +\n                    `dtypes, please separate the program into real and imaginary ` +\n                    `parts.`);\n            }\n            this.uploadToGPU(input.dataId);\n            return {\n                // Returning dtype from tensorMap because it reflects dtype\n                // of underlying buffer, rather than abstract dtype.\n                dtype: this.tensorMap.get(input.dataId).dtype,\n                shape: input.shape,\n                name: program.variableNames[i]\n            };\n        });\n        program.shaderKey =\n            webgpu_program.makeShaderKey(program, inputsData, output);\n        const parallelCompilation = env().getBool('WEBGPU_ENGINE_COMPILE_ONLY');\n        if (!(program.shaderKey in this.pipelineCache)) {\n            this.pipelineCache[program.shaderKey] = webgpu_program.compileProgram(this.device, program, inputsData, output, parallelCompilation);\n        }\n        program.pipeline = this.pipelineCache[program.shaderKey];\n        if (!parallelCompilation) {\n            this.recordAndSubmit(program, output, inputs, programDefinedUniform);\n        }\n        return output;\n    }\n    recordAndSubmit(program, output, inputs, programDefinedUniform) {\n        if (program.pipeline instanceof Promise) {\n            throw new Error('Please call checkCompileCompletionAsync to ensure parallel compilation is done!');\n        }\n        // There are six kinds of uniforms: NAN, INFINITY, shapes, shape strides,\n        // program size, program defined uniforms.\n        let programUniform = [];\n        let bufferShapes = [];\n        const uniformsType = 'int32';\n        if (program.pixelsOpType == null) {\n            programUniform.push({ type: 'float32', data: [NaN] }, { type: 'float32', data: [Infinity] });\n            bufferShapes = inputs.concat(output).map(d => d.shape);\n            const uniformsType = 'int32';\n            bufferShapes.map(d => {\n                programUniform.push({ type: uniformsType, data: d });\n                const strides = util.computeStrides(d);\n                programUniform.push({ type: uniformsType, data: strides });\n            });\n        }\n        else {\n            const strides = util.computeStrides(output.shape);\n            programUniform.push({ type: uniformsType, data: strides });\n        }\n        if (program.size) {\n            const size = util.sizeFromShape(program.outputShape);\n            programUniform.push({\n                type: uniformsType,\n                data: [program.outputComponent ? size / program.outputComponent : size]\n            });\n        }\n        if (programDefinedUniform) {\n            programUniform = [...programUniform, ...programDefinedUniform];\n        }\n        const bindings = [\n            this.tensorToBinding(output), ...inputs.map(t => this.tensorToBinding(t)),\n            this.makeUniforms(programUniform)\n        ];\n        inputs.forEach(input => {\n            this.commandQueueOwnedIds.add(input.dataId);\n        });\n        this.commandQueueOwnedIds.add(output.dataId);\n        const bindGroup = this.device.createBindGroup({\n            layout: program.pipeline.getBindGroupLayout(0),\n            entries: bindings.map((b, i) => ({ binding: i, resource: b })),\n        });\n        const shouldTimeProgram = this.activeTimers != null;\n        this.ensureCommandEncoderReady();\n        const computePassDescriptor = {};\n        if (shouldTimeProgram && this.supportTimestampQuery) {\n            this.endComputePassEncoder();\n            if (this.querySet == null) {\n                this.querySet = this.device.createQuerySet({\n                    type: 'timestamp',\n                    count: this.querySetCount,\n                });\n            }\n            computePassDescriptor.timestampWrites = {\n                querySet: this.querySet,\n                beginningOfPassWriteIndex: 0,\n                endOfPassWriteIndex: 1,\n            };\n            this.computePassEncoder =\n                this.commandEncoder.beginComputePass(computePassDescriptor);\n        }\n        else if (!this.computePassEncoder) {\n            this.computePassEncoder =\n                this.commandEncoder.beginComputePass(computePassDescriptor);\n        }\n        this.computePassEncoder.setPipeline(program.pipeline);\n        this.computePassEncoder.setBindGroup(0, bindGroup);\n        this.computePassEncoder.dispatchWorkgroups(program.dispatch[0], program.dispatch[1], program.dispatch[2]);\n        this.dispatchCountInPass++;\n        if (shouldTimeProgram ||\n            env().get('WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE') <= this.dispatchCountInPass ||\n            program.pixelsOpType === webgpu_program.PixelsOpType.DRAW) {\n            this.endComputePassEncoder();\n            if (shouldTimeProgram) {\n                this.activeTimers.push({ name: program.constructor.name, query: this.getQueryTime() });\n            }\n            else {\n                this.submitQueue();\n            }\n        }\n    }\n    async getQueryTime() {\n        if (!this.supportTimestampQuery) {\n            return 0;\n        }\n        if (this.queryResolveBuffer == null) {\n            this.queryResolveBuffer = this.bufferManager.acquireBuffer(this.querySetCount * 8, GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST |\n                GPUBufferUsage.QUERY_RESOLVE);\n        }\n        this.commandEncoder.resolveQuerySet(this.querySet, 0, this.querySetCount, this.queryResolveBuffer, 0);\n        const queryStagingBuffer = this.bufferManager.acquireBuffer(this.querySetCount * 8, GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST);\n        this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer, 0, queryStagingBuffer, 0, this.querySetCount * 8);\n        this.submitQueue();\n        await queryStagingBuffer.mapAsync(GPUMapMode.READ);\n        const arrayBuffer = new BigUint64Array(queryStagingBuffer.getMappedRange());\n        const time = Number(arrayBuffer[1] - arrayBuffer[0]) / 1000000;\n        queryStagingBuffer.unmap();\n        this.bufferManager.releaseBuffer(queryStagingBuffer);\n        return time;\n    }\n    shouldExecuteOnCPU(inputs, sizeThreshold = CPU_HANDOFF_SIZE_THRESHOLD) {\n        return env().getBool('WEBGPU_CPU_FORWARD') &&\n            inputs.every(input => this.tensorMap.get(input.dataId).resource == null &&\n                util.sizeFromShape(input.shape) < sizeThreshold);\n    }\n    numDataIds() {\n        return this.tensorMap.numDataIds() - this.tensorDataPendingDisposal.length;\n    }\n    dispose() {\n        if (this.disposed) {\n            return;\n        }\n        if (this.querySet != null) {\n            this.querySet.destroy();\n        }\n        this.bufferManager.dispose();\n        this.textureManager.dispose();\n        this.disposed = true;\n    }\n}\nWebGPUBackend.nextDataId = 0;\nexport { WebGPUBackend };\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as webgpu_util from './webgpu_util';\nexport { WebGPUBackend } from './backend_webgpu';\nexport { webgpu_util };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2ViZ3B1LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMvd2ViZ3B1LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sS0FBSyxXQUFXLE1BQU0sZUFBZSxDQUFDO0FBQzdDLE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUUvQyxPQUFPLEVBQUMsV0FBVyxFQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCAqIGFzIHdlYmdwdV91dGlsIGZyb20gJy4vd2ViZ3B1X3V0aWwnO1xuZXhwb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuL2JhY2tlbmRfd2ViZ3B1JztcbmV4cG9ydCB0eXBlIHtXZWJHUFVQcm9ncmFtfSBmcm9tICcuL3dlYmdwdV9wcm9ncmFtJztcbmV4cG9ydCB7d2ViZ3B1X3V0aWx9O1xuIl19","/**\n * @license\n * Copyright 2022 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport './flags_webgpu';\nimport { env, registerBackend } from '@tensorflow/tfjs-core';\nimport { WebGPUBackend } from './backend_webgpu';\nimport { isWebGPUSupported } from './webgpu_util';\nif (isWebGPUSupported()) {\n    registerBackend('webgpu', async () => {\n        const gpuDescriptor = {\n            powerPreference: env().get('WEBGPU_USE_LOW_POWER_GPU') ?\n                'low-power' :\n                'high-performance'\n        };\n        const adapter = await navigator.gpu.requestAdapter(gpuDescriptor);\n        const deviceDescriptor = {};\n        const requiredFeatures = [];\n        if (adapter.features.has('timestamp-query')) {\n            requiredFeatures.push('timestamp-query');\n        }\n        if (adapter.features.has('bgra8unorm-storage')) {\n            requiredFeatures.push(['bgra8unorm-storage']);\n        }\n        deviceDescriptor.requiredFeatures =\n            requiredFeatures;\n        const adapterLimits = adapter.limits;\n        deviceDescriptor.requiredLimits = {\n            'maxComputeWorkgroupStorageSize': adapterLimits.maxComputeWorkgroupStorageSize,\n            'maxComputeWorkgroupsPerDimension': adapterLimits.maxComputeWorkgroupsPerDimension,\n            'maxStorageBufferBindingSize': adapterLimits.maxStorageBufferBindingSize,\n            'maxBufferSize': adapterLimits.maxBufferSize,\n            'maxComputeWorkgroupSizeX': adapterLimits.maxComputeWorkgroupSizeX,\n            'maxComputeInvocationsPerWorkgroup': adapterLimits.maxComputeInvocationsPerWorkgroup,\n        };\n        const device = await adapter.requestDevice(deviceDescriptor);\n        const adapterInfo = await adapter.requestAdapterInfo();\n        return new WebGPUBackend(device, adapterInfo);\n    }, 3 /*priority*/);\n}\n// Export webgpu utilities\nexport * from './webgpu';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2Jhc2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxnQkFBZ0IsQ0FBQztBQUV4QixPQUFPLEVBQUMsR0FBRyxFQUFFLGVBQWUsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRTNELE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUMvQyxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFaEQsSUFBSSxpQkFBaUIsRUFBRSxFQUFFO0lBQ3ZCLGVBQWUsQ0FBQyxRQUFRLEVBQUUsS0FBSyxJQUFJLEVBQUU7UUFDbkMsTUFBTSxhQUFhLEdBQTZCO1lBQzlDLGVBQWUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUMsMEJBQTBCLENBQUMsQ0FBQyxDQUFDO2dCQUNwRCxXQUFXLENBQUMsQ0FBQztnQkFDYixrQkFBa0I7U0FDdkIsQ0FBQztRQUVGLE1BQU0sT0FBTyxHQUFHLE1BQU0sU0FBUyxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDbEUsTUFBTSxnQkFBZ0IsR0FBd0IsRUFBRSxDQUFDO1FBRWpELE1BQU0sZ0JBQWdCLEdBQUcsRUFBRSxDQUFDO1FBQzVCLElBQUksT0FBTyxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsaUJBQWlCLENBQUMsRUFBRTtZQUMzQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQztTQUMxQztRQUNELElBQUksT0FBTyxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsb0JBQW9CLENBQUMsRUFBRTtZQUM5QyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLENBQUM7U0FDL0M7UUFDRCxnQkFBZ0IsQ0FBQyxnQkFBZ0I7WUFDN0IsZ0JBQTRDLENBQUM7UUFFakQsTUFBTSxhQUFhLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQztRQUNyQyxnQkFBZ0IsQ0FBQyxjQUFjLEdBQUc7WUFDaEMsZ0NBQWdDLEVBQzVCLGFBQWEsQ0FBQyw4QkFBOEI7WUFDaEQsa0NBQWtDLEVBQzlCLGFBQWEsQ0FBQyxnQ0FBZ0M7WUFDbEQsNkJBQTZCLEVBQUUsYUFBYSxDQUFDLDJCQUEyQjtZQUN4RSxlQUFlLEVBQUUsYUFBYSxDQUFDLGFBQWE7WUFDNUMsMEJBQTBCLEVBQUUsYUFBYSxDQUFDLHdCQUF3QjtZQUNsRSxtQ0FBbUMsRUFDL0IsYUFBYSxDQUFDLGlDQUFpQztTQUNwRCxDQUFDO1FBRUYsTUFBTSxNQUFNLEdBQWMsTUFBTSxPQUFPLENBQUMsYUFBYSxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFDeEUsTUFBTSxXQUFXLEdBQUcsTUFBTSxPQUFPLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztRQUN2RCxPQUFPLElBQUksYUFBYSxDQUFDLE1BQU0sRUFBRSxXQUFXLENBQUMsQ0FBQztJQUNoRCxDQUFDLEVBQUUsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO0NBQ3BCO0FBRUQsMEJBQTBCO0FBQzFCLGNBQWMsVUFBVSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjIgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQgJy4vZmxhZ3Nfd2ViZ3B1JztcblxuaW1wb3J0IHtlbnYsIHJlZ2lzdGVyQmFja2VuZH0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuL2JhY2tlbmRfd2ViZ3B1JztcbmltcG9ydCB7aXNXZWJHUFVTdXBwb3J0ZWR9IGZyb20gJy4vd2ViZ3B1X3V0aWwnO1xuXG5pZiAoaXNXZWJHUFVTdXBwb3J0ZWQoKSkge1xuICByZWdpc3RlckJhY2tlbmQoJ3dlYmdwdScsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBncHVEZXNjcmlwdG9yOiBHUFVSZXF1ZXN0QWRhcHRlck9wdGlvbnMgPSB7XG4gICAgICBwb3dlclByZWZlcmVuY2U6IGVudigpLmdldCgnV0VCR1BVX1VTRV9MT1dfUE9XRVJfR1BVJykgP1xuICAgICAgICAgICdsb3ctcG93ZXInIDpcbiAgICAgICAgICAnaGlnaC1wZXJmb3JtYW5jZSdcbiAgICB9O1xuXG4gICAgY29uc3QgYWRhcHRlciA9IGF3YWl0IG5hdmlnYXRvci5ncHUucmVxdWVzdEFkYXB0ZXIoZ3B1RGVzY3JpcHRvcik7XG4gICAgY29uc3QgZGV2aWNlRGVzY3JpcHRvcjogR1BVRGV2aWNlRGVzY3JpcHRvciA9IHt9O1xuXG4gICAgY29uc3QgcmVxdWlyZWRGZWF0dXJlcyA9IFtdO1xuICAgIGlmIChhZGFwdGVyLmZlYXR1cmVzLmhhcygndGltZXN0YW1wLXF1ZXJ5JykpIHtcbiAgICAgIHJlcXVpcmVkRmVhdHVyZXMucHVzaCgndGltZXN0YW1wLXF1ZXJ5Jyk7XG4gICAgfVxuICAgIGlmIChhZGFwdGVyLmZlYXR1cmVzLmhhcygnYmdyYTh1bm9ybS1zdG9yYWdlJykpIHtcbiAgICAgIHJlcXVpcmVkRmVhdHVyZXMucHVzaChbJ2JncmE4dW5vcm0tc3RvcmFnZSddKTtcbiAgICB9XG4gICAgZGV2aWNlRGVzY3JpcHRvci5yZXF1aXJlZEZlYXR1cmVzID1cbiAgICAgICAgcmVxdWlyZWRGZWF0dXJlcyBhcyBJdGVyYWJsZTxHUFVGZWF0dXJlTmFtZT47XG5cbiAgICBjb25zdCBhZGFwdGVyTGltaXRzID0gYWRhcHRlci5saW1pdHM7XG4gICAgZGV2aWNlRGVzY3JpcHRvci5yZXF1aXJlZExpbWl0cyA9IHtcbiAgICAgICdtYXhDb21wdXRlV29ya2dyb3VwU3RvcmFnZVNpemUnOlxuICAgICAgICAgIGFkYXB0ZXJMaW1pdHMubWF4Q29tcHV0ZVdvcmtncm91cFN0b3JhZ2VTaXplLFxuICAgICAgJ21heENvbXB1dGVXb3JrZ3JvdXBzUGVyRGltZW5zaW9uJzpcbiAgICAgICAgICBhZGFwdGVyTGltaXRzLm1heENvbXB1dGVXb3JrZ3JvdXBzUGVyRGltZW5zaW9uLFxuICAgICAgJ21heFN0b3JhZ2VCdWZmZXJCaW5kaW5nU2l6ZSc6IGFkYXB0ZXJMaW1pdHMubWF4U3RvcmFnZUJ1ZmZlckJpbmRpbmdTaXplLFxuICAgICAgJ21heEJ1ZmZlclNpemUnOiBhZGFwdGVyTGltaXRzLm1heEJ1ZmZlclNpemUsXG4gICAgICAnbWF4Q29tcHV0ZVdvcmtncm91cFNpemVYJzogYWRhcHRlckxpbWl0cy5tYXhDb21wdXRlV29ya2dyb3VwU2l6ZVgsXG4gICAgICAnbWF4Q29tcHV0ZUludm9jYXRpb25zUGVyV29ya2dyb3VwJzpcbiAgICAgICAgICBhZGFwdGVyTGltaXRzLm1heENvbXB1dGVJbnZvY2F0aW9uc1Blcldvcmtncm91cCxcbiAgICB9O1xuXG4gICAgY29uc3QgZGV2aWNlOiBHUFVEZXZpY2UgPSBhd2FpdCBhZGFwdGVyLnJlcXVlc3REZXZpY2UoZGV2aWNlRGVzY3JpcHRvcik7XG4gICAgY29uc3QgYWRhcHRlckluZm8gPSBhd2FpdCBhZGFwdGVyLnJlcXVlc3RBZGFwdGVySW5mbygpO1xuICAgIHJldHVybiBuZXcgV2ViR1BVQmFja2VuZChkZXZpY2UsIGFkYXB0ZXJJbmZvKTtcbiAgfSwgMyAvKnByaW9yaXR5Ki8pO1xufVxuXG4vLyBFeHBvcnQgd2ViZ3B1IHV0aWxpdGllc1xuZXhwb3J0ICogZnJvbSAnLi93ZWJncHUnO1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var BinaryOpType;\n(function (BinaryOpType) {\n    BinaryOpType[BinaryOpType[\"ADD\"] = 0] = \"ADD\";\n    BinaryOpType[BinaryOpType[\"ATAN2\"] = 1] = \"ATAN2\";\n    BinaryOpType[BinaryOpType[\"COMPLEX_MULTIPLY_IMAG\"] = 2] = \"COMPLEX_MULTIPLY_IMAG\";\n    BinaryOpType[BinaryOpType[\"COMPLEX_MULTIPLY_REAL\"] = 3] = \"COMPLEX_MULTIPLY_REAL\";\n    BinaryOpType[BinaryOpType[\"DIV\"] = 4] = \"DIV\";\n    BinaryOpType[BinaryOpType[\"ELU_DER\"] = 5] = \"ELU_DER\";\n    BinaryOpType[BinaryOpType[\"EQUAL\"] = 6] = \"EQUAL\";\n    BinaryOpType[BinaryOpType[\"FLOOR_DIV\"] = 7] = \"FLOOR_DIV\";\n    BinaryOpType[BinaryOpType[\"GREATER\"] = 8] = \"GREATER\";\n    BinaryOpType[BinaryOpType[\"GREATER_EQUAL\"] = 9] = \"GREATER_EQUAL\";\n    BinaryOpType[BinaryOpType[\"LESS\"] = 10] = \"LESS\";\n    BinaryOpType[BinaryOpType[\"LESS_EQUAL\"] = 11] = \"LESS_EQUAL\";\n    BinaryOpType[BinaryOpType[\"LOGICAL_AND\"] = 12] = \"LOGICAL_AND\";\n    BinaryOpType[BinaryOpType[\"LOGICAL_OR\"] = 13] = \"LOGICAL_OR\";\n    BinaryOpType[BinaryOpType[\"MAX\"] = 14] = \"MAX\";\n    BinaryOpType[BinaryOpType[\"MIN\"] = 15] = \"MIN\";\n    BinaryOpType[BinaryOpType[\"MOD\"] = 16] = \"MOD\";\n    BinaryOpType[BinaryOpType[\"MUL\"] = 17] = \"MUL\";\n    BinaryOpType[BinaryOpType[\"NOT_EQUAL\"] = 18] = \"NOT_EQUAL\";\n    BinaryOpType[BinaryOpType[\"POW\"] = 19] = \"POW\";\n    BinaryOpType[BinaryOpType[\"PRELU\"] = 20] = \"PRELU\";\n    BinaryOpType[BinaryOpType[\"SQUARED_DIFFERENCE\"] = 21] = \"SQUARED_DIFFERENCE\";\n    BinaryOpType[BinaryOpType[\"SUB\"] = 22] = \"SUB\";\n})(BinaryOpType || (BinaryOpType = {}));\nconst ADD = 'let resultTemp = a + b;';\nconst ATAN2 = 'let resultTemp = atan2(a, b);';\n// (Ar + Ai)(Br + Bi) =\n// ArBr + ArBi + AiBr + AiBi = ArBr - AB + ArBi + AiBr\n// Yr = ArBr - AB\n// Yi = ArBi + AiBr\nconst COMPLEX_MULTIPLY_REAL = 'let resultTemp = areal * breal - aimag * bimag;';\nconst COMPLEX_MULTIPLY_IMAG = 'let resultTemp = areal * bimag + aimag * breal;';\nconst DIV = 'let resultTemp = a / b;';\nconst ELU_DER = 'let resultTemp = select(a * (b + 1.0), a, b >= b - b);';\nconst EQUAL = `\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a == b);\n`;\nconst FLOOR_DIV = `\n  let remainder =\n      select(a % b, round(a % b), (round(a) == a) & (round(b) == b));\n  let quotient = (a - remainder) / b;\n  let resultTemp =\n      round(select(quotient, quotient - 1, sign(remainder) == -sign(b)));\n`;\nconst GREATER = `\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a > b);\n`;\nconst GREATER_EQUAL = `\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a >= b);\n`;\nconst LESS = `\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a < b);\n`;\nconst LESS_EQUAL = `\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a <= b);\n`;\nconst LOGICAL_AND = 'return f32(a >= 1.0 && b >= 1.0);';\nconst LOGICAL_AND_VEC4 = `return (vec4<f32>(a >= vec4<f32>(1.0)) *\n  vec4<f32>(b >= vec4<f32>(1.0)));`;\nconst LOGICAL_OR = 'return f32(a >= 1.0 || b >= 1.0);';\nconst LOGICAL_OR_VEC4 = `return min(vec4<f32>(a >= vec4<f32>(1.0)) +\n  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));`;\nconst MAX = 'let resultTemp = max(a, b);';\nconst MIN = 'let resultTemp = min(a, b);';\nconst MOD = `\n  let isNaN = b == 0.;\n  var resultTemp = a % b;\n  resultTemp = select((resultTemp + b) % b, resultTemp,\n      (a < 0. && b < 0.) || (a >= 0. && b > 0.));\n`;\nconst MOD_VEC4 = `\n  let isNaN = !vec4<bool>(b);\n  var resultTemp = vec4<f32>(a % b);\n  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {\n    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];\n  }\n  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {\n    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];\n  }\n  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {\n    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];\n  }\n  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {\n    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];\n  }\n`;\nconst MUL = 'let resultTemp = a * b;';\nconst NOT_EQUAL = `\n  var resultTemp = f32(a != b);\n  let valueForNaN = 1.0;\n`;\nconst NOT_EQUAL_VEC4 = `\n  var resultTemp = vec4<f32>(a != b);\n  let valueForNaN = 1.0;\n`;\nconst POW = `\n  let isNaN = a < 0.0 && floor(b) < b;\n  if (b == 0.0) {\n    return 1.0;\n  }\n  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),\n      round(abs(b) % 2.0) != 1.0);\n`;\nconst POW_VEC4 = `\n  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);\n  let isModRound1 = vec4<f32>(isModRound1Bool);\n  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);\n  var resultTemp = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  let isExpZero = b == vec4<f32>(0.0);\n  if (isExpZero.r) {\n    resultTemp.r = 1.0;\n  }\n  if (isExpZero.g) {\n    resultTemp.g = 1.0;\n  }\n  if (isExpZero.b) {\n    resultTemp.b = 1.0;\n  }\n  if (isExpZero.a) {\n    resultTemp.a = 1.0;\n  }\n  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);\n`;\nconst PRELU = `if (a < 0.0) { return b * a; }  return a;`;\nconst PRELU_VEC4 = `\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n`;\nconst SQUARED_DIFFERENCE = 'let resultTemp = (a - b) * (a - b);';\nconst SUB = 'let resultTemp = a - b;';\nexport function getBinaryOpString(type, useVec4) {\n    let doOpSnippet;\n    // Ops with NaN check\n    do {\n        switch (type) {\n            case BinaryOpType.ATAN2:\n                doOpSnippet = ATAN2;\n                break;\n            case BinaryOpType.MAX:\n                doOpSnippet = MAX;\n                break;\n            case BinaryOpType.MIN:\n                doOpSnippet = MIN;\n                break;\n            case BinaryOpType.MOD:\n                doOpSnippet = useVec4 ? MOD_VEC4 : MOD;\n                break;\n            case BinaryOpType.NOT_EQUAL:\n                doOpSnippet = useVec4 ? NOT_EQUAL_VEC4 : NOT_EQUAL;\n                break;\n            case BinaryOpType.POW:\n                doOpSnippet = useVec4 ? POW_VEC4 : POW;\n                break;\n            default:\n                continue;\n        }\n        let isNaN;\n        let dTypeN;\n        let boolN;\n        if (useVec4) {\n            isNaN = 'isnanVec4';\n            dTypeN = 'vec4<f32>';\n            boolN = 'vec4<bool>';\n        }\n        else {\n            isNaN = 'isnan';\n            dTypeN = 'f32';\n            boolN = 'bool';\n        }\n        return `\n      let aIsNaN = ${isNaN}(a);\n      let aPostLegalization = select(a, ${dTypeN}(42), aIsNaN);\n      let bIsNaN = ${isNaN}(b);\n      let bPostLegalization = select(b, ${dTypeN}(42), bIsNaN);\n      let isNaN = false;\n      let valueForNaN = uniforms.NAN;\n      {\n        let a = aPostLegalization;\n        let b = bPostLegalization;\n        ${doOpSnippet}\n        return select(\n            resultTemp, ${dTypeN}(valueForNaN),\n            ${boolN}(isNaN) | aIsNaN | bIsNaN);\n      }\n    `;\n    } while (false);\n    // Ops without NaN check\n    switch (type) {\n        case BinaryOpType.ADD:\n            doOpSnippet = ADD;\n            break;\n        case BinaryOpType.COMPLEX_MULTIPLY_IMAG:\n            doOpSnippet = COMPLEX_MULTIPLY_IMAG;\n            break;\n        case BinaryOpType.COMPLEX_MULTIPLY_REAL:\n            doOpSnippet = COMPLEX_MULTIPLY_REAL;\n            break;\n        case BinaryOpType.DIV:\n            doOpSnippet = DIV;\n            break;\n        case BinaryOpType.ELU_DER:\n            doOpSnippet = ELU_DER;\n            break;\n        case BinaryOpType.EQUAL:\n            doOpSnippet = EQUAL;\n            break;\n        case BinaryOpType.FLOOR_DIV:\n            doOpSnippet = FLOOR_DIV;\n            break;\n        case BinaryOpType.GREATER:\n            doOpSnippet = GREATER;\n            break;\n        case BinaryOpType.GREATER_EQUAL:\n            doOpSnippet = GREATER_EQUAL;\n            break;\n        case BinaryOpType.LESS:\n            doOpSnippet = LESS;\n            break;\n        case BinaryOpType.LESS_EQUAL:\n            doOpSnippet = LESS_EQUAL;\n            break;\n        case BinaryOpType.LOGICAL_AND:\n            return useVec4 ? LOGICAL_AND_VEC4 : LOGICAL_AND;\n        case BinaryOpType.LOGICAL_OR:\n            return useVec4 ? LOGICAL_OR_VEC4 : LOGICAL_OR;\n        case BinaryOpType.MUL:\n            doOpSnippet = MUL;\n            break;\n        case BinaryOpType.PRELU:\n            return useVec4 ? PRELU_VEC4 : PRELU;\n        case BinaryOpType.SQUARED_DIFFERENCE:\n            doOpSnippet = SQUARED_DIFFERENCE;\n            break;\n        case BinaryOpType.SUB:\n            doOpSnippet = SUB;\n            break;\n        default:\n        // throw new Error(`BinaryType ${type} is not implemented!`);\n    }\n    return `\n    ${doOpSnippet}\n    return resultTemp;\n  `;\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nexport var UnaryOpType;\n(function (UnaryOpType) {\n    UnaryOpType[UnaryOpType[\"ABS\"] = 0] = \"ABS\";\n    UnaryOpType[UnaryOpType[\"ACOS\"] = 1] = \"ACOS\";\n    UnaryOpType[UnaryOpType[\"ACOSH\"] = 2] = \"ACOSH\";\n    UnaryOpType[UnaryOpType[\"ASIN\"] = 3] = \"ASIN\";\n    UnaryOpType[UnaryOpType[\"ASINH\"] = 4] = \"ASINH\";\n    UnaryOpType[UnaryOpType[\"ATAN\"] = 5] = \"ATAN\";\n    UnaryOpType[UnaryOpType[\"ATANH\"] = 6] = \"ATANH\";\n    UnaryOpType[UnaryOpType[\"CEIL\"] = 7] = \"CEIL\";\n    UnaryOpType[UnaryOpType[\"COS\"] = 8] = \"COS\";\n    UnaryOpType[UnaryOpType[\"COSH\"] = 9] = \"COSH\";\n    UnaryOpType[UnaryOpType[\"ELU\"] = 10] = \"ELU\";\n    UnaryOpType[UnaryOpType[\"ERF\"] = 11] = \"ERF\";\n    UnaryOpType[UnaryOpType[\"EXP\"] = 12] = \"EXP\";\n    UnaryOpType[UnaryOpType[\"EXPM1\"] = 13] = \"EXPM1\";\n    UnaryOpType[UnaryOpType[\"FLOOR\"] = 14] = \"FLOOR\";\n    UnaryOpType[UnaryOpType[\"IS_FINITE\"] = 15] = \"IS_FINITE\";\n    UnaryOpType[UnaryOpType[\"IS_INF\"] = 16] = \"IS_INF\";\n    UnaryOpType[UnaryOpType[\"IS_NAN\"] = 17] = \"IS_NAN\";\n    UnaryOpType[UnaryOpType[\"LINEAR\"] = 18] = \"LINEAR\";\n    UnaryOpType[UnaryOpType[\"LOG\"] = 19] = \"LOG\";\n    UnaryOpType[UnaryOpType[\"LOG1P\"] = 20] = \"LOG1P\";\n    UnaryOpType[UnaryOpType[\"LOGICAL_NOT\"] = 21] = \"LOGICAL_NOT\";\n    UnaryOpType[UnaryOpType[\"NEG\"] = 22] = \"NEG\";\n    UnaryOpType[UnaryOpType[\"RELU\"] = 23] = \"RELU\";\n    UnaryOpType[UnaryOpType[\"RELU6\"] = 24] = \"RELU6\";\n    UnaryOpType[UnaryOpType[\"LEAKYRELU\"] = 25] = \"LEAKYRELU\";\n    UnaryOpType[UnaryOpType[\"RECIPROCAL\"] = 26] = \"RECIPROCAL\";\n    UnaryOpType[UnaryOpType[\"ROUND\"] = 27] = \"ROUND\";\n    UnaryOpType[UnaryOpType[\"RSQRT\"] = 28] = \"RSQRT\";\n    UnaryOpType[UnaryOpType[\"SELU\"] = 29] = \"SELU\";\n    UnaryOpType[UnaryOpType[\"SIGMOID\"] = 30] = \"SIGMOID\";\n    UnaryOpType[UnaryOpType[\"SIGN\"] = 31] = \"SIGN\";\n    UnaryOpType[UnaryOpType[\"SIN\"] = 32] = \"SIN\";\n    UnaryOpType[UnaryOpType[\"SINH\"] = 33] = \"SINH\";\n    UnaryOpType[UnaryOpType[\"SOFTPLUS\"] = 34] = \"SOFTPLUS\";\n    UnaryOpType[UnaryOpType[\"SQRT\"] = 35] = \"SQRT\";\n    UnaryOpType[UnaryOpType[\"SQUARE\"] = 36] = \"SQUARE\";\n    UnaryOpType[UnaryOpType[\"STEP\"] = 37] = \"STEP\";\n    UnaryOpType[UnaryOpType[\"TAN\"] = 38] = \"TAN\";\n    UnaryOpType[UnaryOpType[\"TANH\"] = 39] = \"TANH\";\n    UnaryOpType[UnaryOpType[\"TO_INT\"] = 40] = \"TO_INT\";\n})(UnaryOpType || (UnaryOpType = {}));\nconst ABS = `return abs(a);`;\nconst ACOS = `\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  return acos(a);\n`;\nconst ACOSH = `\n  if (a < 1.) {\n    return uniforms.NAN;\n  }\n  return acosh(a);\n`;\nconst ASIN = `\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  return asin(a);\n`;\nconst ASINH = `return asinh(a);`;\nconst ATAN = `\n  if (isnan(a)) {\n    return uniforms.NAN;\n  }\n  return atan(a);\n`;\nconst ATANH = `\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  if (a == 1.) {\n    return uniforms.INFINITY;\n  }\n  if (a == -1.) {\n    return -uniforms.INFINITY;\n  }\n  return atanh(a);\n`;\nconst CEIL = `return ceil(a);`;\nconst COS = `return cos(a);`;\nconst COSH = `\n  let e2x = exp(-a);\n  return (e2x + 1.0 / e2x) / 2.0;\n`;\nconst EXPM1 = `return exp(a) - 1.0;`;\nconst ELU = `if (a >= 0.0) { return a; }  return (exp(a) - 1.0);`;\nconst ELU_VEC4 = `\n  var resFloat = exp(a) - vec4<f32>(1.0);\n  if (a.r >= 0.0) {\n    resFloat.r = a.r;\n  }\n  if (a.g >= 0.0) {\n    resFloat.g = a.g;\n  }\n  if (a.b >= 0.0) {\n    resFloat.b = a.b;\n  }\n  if (a.a >= 0.0) {\n    resFloat.a = a.a;\n  }\n  return resFloat;\n`;\nconst ERF = `\n  // Error function is calculated approximately with elementary function.\n  // See \"Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables\", Abramowitz and Stegun.\n  let p = ${backend_util.ERF_P};\n  let a1 = ${backend_util.ERF_A1};\n  let a2 = ${backend_util.ERF_A2};\n  let a3 = ${backend_util.ERF_A3};\n  let a4 = ${backend_util.ERF_A4};\n  let a5 = ${backend_util.ERF_A5};\n\n  let sign = sign(a);\n  let absA = abs(a);\n  let t = 1.0 / (1.0 + p * absA);\n  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));\n`;\nconst EXP = `return exp(a);`;\nconst FLOOR = `return floor(a);`;\nconst IS_FINITE = `return f32(!isnan(a) && !isinf(a));`;\nconst IS_INF = `return f32(isinf(a));`;\nconst IS_NAN = `return f32(isnan(a));`;\nconst LINEAR = `return a;`;\nconst LOG = `if (a < 0.0) { return uniforms.NAN; }\n  return log(a);`;\nconst LOG1P = `\n  if (isnan(a)) { return a; }\n  return log(1.0 + a);\n`;\nconst LOGICAL_NOT = `return f32(!(a >= 1.0));`;\nconst NEG = `return -a;`;\nconst LEAKYRELU = `if (a < 0.0) { return uniforms.alpha * a; } return a;`;\nconst LEAKYRELU_VEC4 = `\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n`;\nconst RECIPROCAL = `return 1.0 / a;`;\nconst RELU = `return select(a, 0.0, a < 0.0);`;\nconst RELU6 = 'return clamp(a, 0.0, 6.0);';\nconst RELU6_VEC4 = 'return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));';\nconst RELU_VEC4 = `\n  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));\n`;\nconst ROUND = `return round(a);`;\nconst RSQRT = `return inverseSqrt(a);`;\n// Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n// See: https://arxiv.org/abs/1706.02515\nconst SELU = `\n  if (a >= 0.0) {\n    return ${backend_util.SELU_SCALE} * a;\n  } else {\n    return ${backend_util.SELU_SCALEALPHA} * (exp(a) - 1.0);\n  }\n`;\nconst SIGMOID = `return 1.0 / (1.0 + exp(-1.0 * a));`;\nconst SIGN = `return sign(a);`;\nconst SIN = `return sin(a);`;\nconst SINH = `\n  let e2x = exp(a);\n  return (e2x - 1.0 / e2x) / 2.0;\n`;\nconst SOFTPLUS = `\n  let epsilon = 1.1920928955078125e-7;\n  let threshold = log(epsilon) + 2.0;\n\n  let too_large = a > -threshold;\n  let too_small = a < threshold;\n  let exp_a = exp(a);\n\n  if (too_large) {\n    return a;\n  } else if (too_small) {\n    return exp_a;\n  } else {\n    return log(exp_a + 1.0);\n  }\n`;\nconst SQRT = `return sqrt(a);`;\nconst SQUARE = `return a * a;`;\nconst STEP = `\n  if (isnan(a)) {\n    return a;\n  }\n\n  return select(uniforms.stepAlpha, 1.0, a > 0.0);\n`;\nconst TAN = `return tan(a);`;\nconst TANH = `\n  let e2x = exp(-2.0 * abs(a));\n  return sign(a) * (1.0 - e2x) / (1.0 + e2x);\n`;\nconst TO_INT = `return f32(i32((a)));`;\nexport function getUnaryOpString(type, useVec4) {\n    switch (type) {\n        case UnaryOpType.ABS:\n            return ABS;\n        case UnaryOpType.ACOS:\n            return ACOS;\n        case UnaryOpType.ACOSH:\n            return ACOSH;\n        case UnaryOpType.ASIN:\n            return ASIN;\n        case UnaryOpType.ASINH:\n            return ASINH;\n        case UnaryOpType.ATAN:\n            return ATAN;\n        case UnaryOpType.ATANH:\n            return ATANH;\n        case UnaryOpType.COS:\n            return COS;\n        case UnaryOpType.COSH:\n            return COSH;\n        case UnaryOpType.CEIL:\n            return CEIL;\n        case UnaryOpType.ELU:\n            return useVec4 ? ELU_VEC4 : ELU;\n        case UnaryOpType.ERF:\n            return ERF;\n        case UnaryOpType.EXP:\n            return EXP;\n        case UnaryOpType.EXPM1:\n            return EXPM1;\n        case UnaryOpType.FLOOR:\n            return FLOOR;\n        case UnaryOpType.IS_FINITE:\n            return IS_FINITE;\n        case UnaryOpType.IS_INF:\n            return IS_INF;\n        case UnaryOpType.IS_NAN:\n            return IS_NAN;\n        case UnaryOpType.LINEAR:\n            return LINEAR;\n        case UnaryOpType.LOG:\n            return LOG;\n        case UnaryOpType.LOG1P:\n            return LOG1P;\n        case UnaryOpType.LOGICAL_NOT:\n            return LOGICAL_NOT;\n        case UnaryOpType.NEG:\n            return NEG;\n        case UnaryOpType.LEAKYRELU:\n            return useVec4 ? LEAKYRELU_VEC4 : LEAKYRELU;\n        case UnaryOpType.RECIPROCAL:\n            return RECIPROCAL;\n        case UnaryOpType.RELU:\n            return useVec4 ? RELU_VEC4 : RELU;\n        case UnaryOpType.RELU6:\n            return useVec4 ? RELU6_VEC4 : RELU6;\n        case UnaryOpType.ROUND:\n            return ROUND;\n        case UnaryOpType.RSQRT:\n            return RSQRT;\n        case UnaryOpType.SELU:\n            return SELU;\n        case UnaryOpType.SIGMOID:\n            return SIGMOID;\n        case UnaryOpType.SIGN:\n            return SIGN;\n        case UnaryOpType.SIN:\n            return SIN;\n        case UnaryOpType.SINH:\n            return SINH;\n        case UnaryOpType.SOFTPLUS:\n            return SOFTPLUS;\n        case UnaryOpType.SQRT:\n            return SQRT;\n        case UnaryOpType.SQUARE:\n            return SQUARE;\n        case UnaryOpType.STEP:\n            return STEP;\n        case UnaryOpType.TAN:\n            return TAN;\n        case UnaryOpType.TANH:\n            return TANH;\n        case UnaryOpType.TO_INT:\n            return TO_INT;\n        default:\n            throw new Error(`BinaryType ${type} is not implemented!`);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { BinaryOpType, getBinaryOpString } from './binary_op_util';\nimport { getUnaryOpString, UnaryOpType } from './unary_op_util';\nimport { typeSnippet } from './webgpu_program';\nexport function activationFnSnippet(activation, hasPreluActivationWeights = false, packed = false, coordsLength = 3) {\n    if (activation === null) {\n        return '';\n    }\n    let activationOpSnippet = '';\n    if (activation === 'linear') {\n        activationOpSnippet = getUnaryOpString(UnaryOpType.LINEAR);\n    }\n    else if (activation === 'relu') {\n        activationOpSnippet = getUnaryOpString(UnaryOpType.RELU, packed);\n    }\n    else if (activation === 'elu') {\n        activationOpSnippet = getUnaryOpString(UnaryOpType.ELU, packed);\n    }\n    else if (activation === 'relu6') {\n        activationOpSnippet = getUnaryOpString(UnaryOpType.RELU6, packed);\n    }\n    else if (activation === 'prelu') {\n        activationOpSnippet = getBinaryOpString(BinaryOpType.PRELU, packed);\n    }\n    else if (activation === 'sigmoid') {\n        activationOpSnippet = getUnaryOpString(UnaryOpType.SIGMOID, packed);\n    }\n    else if (activation === 'leakyrelu') {\n        activationOpSnippet = getUnaryOpString(UnaryOpType.LEAKYRELU, packed);\n    }\n    else {\n        throw new Error(`Activation ${activation} has not been implemented for the WebGPU backend.`);\n    }\n    const elementSize = packed ? 4 : 1;\n    const dataType = typeSnippet(elementSize);\n    let activationFnSnippet = '';\n    if (hasPreluActivationWeights) {\n        activationFnSnippet = `\n      fn activation(a : ${dataType}, coords : vec${coordsLength}<i32>) -> ${dataType} {\n        let b = getPreluActivationWeightsByOutputCoords(coords);\n        ${activationOpSnippet}\n      }`;\n    }\n    else {\n        activationFnSnippet = `\n      fn activation(a : ${dataType}, coords : vec${coordsLength}<i32>) -> ${dataType} {\n        ${activationOpSnippet}\n      }`;\n    }\n    return activationFnSnippet;\n}\nexport function biasActivationSnippet(hasBias, activation) {\n    return `\n      ${hasBias ? 'value = value + getBiasByOutputCoords(coords);' : ''}\n      ${activation ? 'value = activation(value, coords);' : ''}\n      `;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aXZhdGlvbl91dGlsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMvYWN0aXZhdGlvbl91dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUlILE9BQU8sRUFBQyxZQUFZLEVBQUUsaUJBQWlCLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUNqRSxPQUFPLEVBQUMsZ0JBQWdCLEVBQUUsV0FBVyxFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFDOUQsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBRTdDLE1BQU0sVUFBVSxtQkFBbUIsQ0FDL0IsVUFBbUMsRUFBRSx5QkFBeUIsR0FBRyxLQUFLLEVBQ3RFLE1BQU0sR0FBRyxLQUFLLEVBQUUsWUFBWSxHQUFHLENBQUM7SUFDbEMsSUFBSSxVQUFVLEtBQUssSUFBSSxFQUFFO1FBQ3ZCLE9BQU8sRUFBRSxDQUFDO0tBQ1g7SUFFRCxJQUFJLG1CQUFtQixHQUFHLEVBQUUsQ0FBQztJQUM3QixJQUFJLFVBQVUsS0FBSyxRQUFRLEVBQUU7UUFDM0IsbUJBQW1CLEdBQUcsZ0JBQWdCLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0tBQzVEO1NBQU0sSUFBSSxVQUFVLEtBQUssTUFBTSxFQUFFO1FBQ2hDLG1CQUFtQixHQUFHLGdCQUFnQixDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7S0FDbEU7U0FBTSxJQUFJLFVBQVUsS0FBSyxLQUFLLEVBQUU7UUFDL0IsbUJBQW1CLEdBQUcsZ0JBQWdCLENBQUMsV0FBVyxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsQ0FBQztLQUNqRTtTQUFNLElBQUksVUFBVSxLQUFLLE9BQU8sRUFBRTtRQUNqQyxtQkFBbUIsR0FBRyxnQkFBZ0IsQ0FBQyxXQUFXLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0tBQ25FO1NBQU0sSUFBSSxVQUFVLEtBQUssT0FBTyxFQUFFO1FBQ2pDLG1CQUFtQixHQUFHLGlCQUFpQixDQUFDLFlBQVksQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7S0FDckU7U0FBTSxJQUFJLFVBQVUsS0FBSyxTQUFTLEVBQUU7UUFDbkMsbUJBQW1CLEdBQUcsZ0JBQWdCLENBQUMsV0FBVyxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQztLQUNyRTtTQUFNLElBQUksVUFBVSxLQUFLLFdBQVcsRUFBRTtRQUNyQyxtQkFBbUIsR0FBRyxnQkFBZ0IsQ0FBQyxXQUFXLENBQUMsU0FBUyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0tBQ3ZFO1NBQU07UUFDTCxNQUFNLElBQUksS0FBSyxDQUFDLGNBQ1osVUFBVSxtREFBbUQsQ0FBQyxDQUFDO0tBQ3BFO0lBQ0QsTUFBTSxXQUFXLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNuQyxNQUFNLFFBQVEsR0FBRyxXQUFXLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDMUMsSUFBSSxtQkFBbUIsR0FBRyxFQUFFLENBQUM7SUFDN0IsSUFBSSx5QkFBeUIsRUFBRTtRQUM3QixtQkFBbUIsR0FBRzswQkFDQSxRQUFRLGlCQUFpQixZQUFZLGFBQ3ZELFFBQVE7O1VBRU4sbUJBQW1CO1FBQ3JCLENBQUM7S0FDTjtTQUFNO1FBQ0wsbUJBQW1CLEdBQUc7MEJBQ0EsUUFBUSxpQkFBaUIsWUFBWSxhQUN2RCxRQUFRO1VBQ04sbUJBQW1CO1FBQ3JCLENBQUM7S0FDTjtJQUNELE9BQU8sbUJBQW1CLENBQUM7QUFDN0IsQ0FBQztBQUVELE1BQU0sVUFBVSxxQkFBcUIsQ0FDakMsT0FBZ0IsRUFBRSxVQUFtQztJQUN2RCxPQUFPO1FBQ0QsT0FBTyxDQUFDLENBQUMsQ0FBQyxnREFBZ0QsQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUMvRCxVQUFVLENBQUMsQ0FBQyxDQUFDLG9DQUFvQyxDQUFDLENBQUMsQ0FBQyxFQUFFO09BQ3ZELENBQUM7QUFDUixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge2JhY2tlbmRfdXRpbH0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtCaW5hcnlPcFR5cGUsIGdldEJpbmFyeU9wU3RyaW5nfSBmcm9tICcuL2JpbmFyeV9vcF91dGlsJztcbmltcG9ydCB7Z2V0VW5hcnlPcFN0cmluZywgVW5hcnlPcFR5cGV9IGZyb20gJy4vdW5hcnlfb3BfdXRpbCc7XG5pbXBvcnQge3R5cGVTbmlwcGV0fSBmcm9tICcuL3dlYmdwdV9wcm9ncmFtJztcblxuZXhwb3J0IGZ1bmN0aW9uIGFjdGl2YXRpb25GblNuaXBwZXQoXG4gICAgYWN0aXZhdGlvbjogYmFja2VuZF91dGlsLkFjdGl2YXRpb24sIGhhc1ByZWx1QWN0aXZhdGlvbldlaWdodHMgPSBmYWxzZSxcbiAgICBwYWNrZWQgPSBmYWxzZSwgY29vcmRzTGVuZ3RoID0gMyk6IHN0cmluZyB7XG4gIGlmIChhY3RpdmF0aW9uID09PSBudWxsKSB7XG4gICAgcmV0dXJuICcnO1xuICB9XG5cbiAgbGV0IGFjdGl2YXRpb25PcFNuaXBwZXQgPSAnJztcbiAgaWYgKGFjdGl2YXRpb24gPT09ICdsaW5lYXInKSB7XG4gICAgYWN0aXZhdGlvbk9wU25pcHBldCA9IGdldFVuYXJ5T3BTdHJpbmcoVW5hcnlPcFR5cGUuTElORUFSKTtcbiAgfSBlbHNlIGlmIChhY3RpdmF0aW9uID09PSAncmVsdScpIHtcbiAgICBhY3RpdmF0aW9uT3BTbmlwcGV0ID0gZ2V0VW5hcnlPcFN0cmluZyhVbmFyeU9wVHlwZS5SRUxVLCBwYWNrZWQpO1xuICB9IGVsc2UgaWYgKGFjdGl2YXRpb24gPT09ICdlbHUnKSB7XG4gICAgYWN0aXZhdGlvbk9wU25pcHBldCA9IGdldFVuYXJ5T3BTdHJpbmcoVW5hcnlPcFR5cGUuRUxVLCBwYWNrZWQpO1xuICB9IGVsc2UgaWYgKGFjdGl2YXRpb24gPT09ICdyZWx1NicpIHtcbiAgICBhY3RpdmF0aW9uT3BTbmlwcGV0ID0gZ2V0VW5hcnlPcFN0cmluZyhVbmFyeU9wVHlwZS5SRUxVNiwgcGFja2VkKTtcbiAgfSBlbHNlIGlmIChhY3RpdmF0aW9uID09PSAncHJlbHUnKSB7XG4gICAgYWN0aXZhdGlvbk9wU25pcHBldCA9IGdldEJpbmFyeU9wU3RyaW5nKEJpbmFyeU9wVHlwZS5QUkVMVSwgcGFja2VkKTtcbiAgfSBlbHNlIGlmIChhY3RpdmF0aW9uID09PSAnc2lnbW9pZCcpIHtcbiAgICBhY3RpdmF0aW9uT3BTbmlwcGV0ID0gZ2V0VW5hcnlPcFN0cmluZyhVbmFyeU9wVHlwZS5TSUdNT0lELCBwYWNrZWQpO1xuICB9IGVsc2UgaWYgKGFjdGl2YXRpb24gPT09ICdsZWFreXJlbHUnKSB7XG4gICAgYWN0aXZhdGlvbk9wU25pcHBldCA9IGdldFVuYXJ5T3BTdHJpbmcoVW5hcnlPcFR5cGUuTEVBS1lSRUxVLCBwYWNrZWQpO1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcihgQWN0aXZhdGlvbiAke1xuICAgICAgICBhY3RpdmF0aW9ufSBoYXMgbm90IGJlZW4gaW1wbGVtZW50ZWQgZm9yIHRoZSBXZWJHUFUgYmFja2VuZC5gKTtcbiAgfVxuICBjb25zdCBlbGVtZW50U2l6ZSA9IHBhY2tlZCA/IDQgOiAxO1xuICBjb25zdCBkYXRhVHlwZSA9IHR5cGVTbmlwcGV0KGVsZW1lbnRTaXplKTtcbiAgbGV0IGFjdGl2YXRpb25GblNuaXBwZXQgPSAnJztcbiAgaWYgKGhhc1ByZWx1QWN0aXZhdGlvbldlaWdodHMpIHtcbiAgICBhY3RpdmF0aW9uRm5TbmlwcGV0ID0gYFxuICAgICAgZm4gYWN0aXZhdGlvbihhIDogJHtkYXRhVHlwZX0sIGNvb3JkcyA6IHZlYyR7Y29vcmRzTGVuZ3RofTxpMzI+KSAtPiAke1xuICAgICAgICBkYXRhVHlwZX0ge1xuICAgICAgICBsZXQgYiA9IGdldFByZWx1QWN0aXZhdGlvbldlaWdodHNCeU91dHB1dENvb3Jkcyhjb29yZHMpO1xuICAgICAgICAke2FjdGl2YXRpb25PcFNuaXBwZXR9XG4gICAgICB9YDtcbiAgfSBlbHNlIHtcbiAgICBhY3RpdmF0aW9uRm5TbmlwcGV0ID0gYFxuICAgICAgZm4gYWN0aXZhdGlvbihhIDogJHtkYXRhVHlwZX0sIGNvb3JkcyA6IHZlYyR7Y29vcmRzTGVuZ3RofTxpMzI+KSAtPiAke1xuICAgICAgICBkYXRhVHlwZX0ge1xuICAgICAgICAke2FjdGl2YXRpb25PcFNuaXBwZXR9XG4gICAgICB9YDtcbiAgfVxuICByZXR1cm4gYWN0aXZhdGlvbkZuU25pcHBldDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGJpYXNBY3RpdmF0aW9uU25pcHBldChcbiAgICBoYXNCaWFzOiBib29sZWFuLCBhY3RpdmF0aW9uOiBiYWNrZW5kX3V0aWwuQWN0aXZhdGlvbik6IHN0cmluZyB7XG4gIHJldHVybiBgXG4gICAgICAke2hhc0JpYXMgPyAndmFsdWUgPSB2YWx1ZSArIGdldEJpYXNCeU91dHB1dENvb3Jkcyhjb29yZHMpOycgOiAnJ31cbiAgICAgICR7YWN0aXZhdGlvbiA/ICd2YWx1ZSA9IGFjdGl2YXRpb24odmFsdWUsIGNvb3Jkcyk7JyA6ICcnfVxuICAgICAgYDtcbn1cbiJdfQ==","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { activationFnSnippet, biasActivationSnippet } from './activation_util';\nimport { getMainHeaderString as main, typeSnippet } from './webgpu_program';\nimport { computeDispatch, computeWorkgroupInfoForMatMul } from './webgpu_util';\nexport function matMulReadFnSource(transposeA, transposeB, fitAOuter = false, fitBOuter = false, fitInner = false, component = 1) {\n    util.assert(transposeA && component === 1 || !transposeA, () => `transposeA ${transposeA} is not compatible with component size ${component}`);\n    const sampleA = `\n      ${transposeA ? `value = getA(batch, col, row);` :\n        `value = getA(batch, row, col);`}\n\n    `;\n    const sampleB = transposeB ? `value = getB(batch, col, row);` :\n        `value = getB(batch, row, col);`;\n    return `\n  fn mm_readA(batch: i32, row: i32, col: i32) -> ${typeSnippet(component)} {\n    var value = ${typeSnippet(component)}(0.0);\n    ${fitAOuter && fitInner ?\n        sampleA :\n        `\n    ${transposeA ?\n            `if(row < uniforms.dimAOuter && col < uniforms.dimInner)` :\n            `if(row < uniforms.aShape[1] && col < uniforms.aShape[2])`}\n    {\n      ${sampleA}\n    }\n    `}\n    return value;\n  }\n\n  fn mm_readB(batch: i32, row: i32, col: i32) -> ${typeSnippet(component)} {\n    var value = ${typeSnippet(component)}(0.0);\n    ${sampleB}\n    return value;\n  }\n  `;\n}\nexport function matMulReadWriteFnSource(hasBias, activation, transposeA, transposeB, fitAOuter = false, fitBOuter = false, fitInner = false, component = 1) {\n    return `\n  ${matMulReadFnSource(transposeA, transposeB, fitAOuter, fitBOuter, fitInner, component)}\n  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ${typeSnippet(component)}) {\n    ${fitAOuter && fitBOuter ?\n        '' :\n        'if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)'}\n    {\n      var value = valueIn;\n      let coords = vec3<i32>(batch, row, col);\n      ${biasActivationSnippet(hasBias, activation)}\n      setOutputAtCoords(coords[0], coords[1], coords[2], value);\n    }\n  }\n  `;\n}\nconst writeDataToSubAVec4Snippet = (transpose, innerElementSize) => {\n    if (transpose) {\n        return `\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          kStart + inputRow,\n          globalRowStart + inputCol * ${innerElementSize});\n        `;\n    }\n    else {\n        return `\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          globalRow + innerRow,\n          kStart + inputCol * ${innerElementSize});\n        `;\n    }\n};\nconst calculateResultSnippet = (transposeA, innerElementSize, rowPerThread, tileInner) => {\n    if (transposeA) {\n        return `\n      for (var k = 0; k < ${tileInner}; k++) {\n        let BCached0 = mm_Bsub[k][tileCol];\n        let ACached0 = mm_Asub[k][localRow];\n        for (var i = 0; i < ${rowPerThread}; i++) {\n          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);\n        }\n      }`;\n    }\n    else {\n        let bCachedStr = '';\n        let accStr = '';\n        for (let i = 0; i < innerElementSize; i++) {\n            bCachedStr += `let BCached${i} = mm_Bsub[k * ${innerElementSize} + ${i}][tileCol];`;\n            accStr +=\n                `acc[i] = fma(BCached${i}, vec4<f32>(ACached[${i}]), acc[i]);`;\n        }\n        return `\n      for (var k = 0; k < ${tileInner / innerElementSize}; k++) {\n        ${bCachedStr}\n        for (var i = 0; i < ${rowPerThread}; i++) {\n          let ACached = mm_Asub[tileRow + i][k];\n          ${accStr}\n        }\n      }`;\n    }\n};\nexport function makeMatMulPackedVec4Source(workPerThread, workgroupSize, transposeA = false, tileInner = 32, splitK = false, splitedDimInner = 32, broadcastBatch = false) {\n    const tileAOuter = workgroupSize[1] * workPerThread[1];\n    const tileBOuter = workgroupSize[0] * workPerThread[0];\n    const tileAWidth = transposeA ? tileAOuter : tileInner;\n    const tileAHight = transposeA ? tileInner : tileAOuter;\n    const innerElementSize = tileAWidth / workgroupSize[0];\n    const rowPerThreadB = tileInner / workgroupSize[1];\n    const rowPerThread = workPerThread[1];\n    const colPerThread = workPerThread[0];\n    util.assert(((transposeA && innerElementSize === 4 && workPerThread[1] === 4) ||\n        (!transposeA && (innerElementSize === 3 || innerElementSize === 4))) &&\n        tileAWidth % workgroupSize[0] === 0 &&\n        tileInner % workgroupSize[1] === 0 && workPerThread[0] === 4, () => `If transposeA ${transposeA} is true, innerElementSize ${innerElementSize} and workPerThread[1] ${workPerThread[1]} must be 4.\n          Otherwise, innerElementSize ${innerElementSize} must be 3 or 4.\n      tileAWidth ${tileAWidth} must be divisible by workgroupSize[0]${workgroupSize[0]}. tileInner ${tileInner} must be divisible by workgroupSize[1] ${workgroupSize[1]}. colPerThread ${workPerThread[0]} must be 4.`);\n    return `\n  var<workgroup> mm_Asub : array<array<vec${innerElementSize}<f32>, ${tileAWidth / innerElementSize}>, ${tileAHight}>;\n  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${tileBOuter / workPerThread[0]}>, ${tileInner}>;\n\n  ${main()} {\n    let localRow = i32(localId.y);\n    let tileRow = localRow * ${rowPerThread};\n    let tileCol = i32(localId.x);\n\n    let globalRow = i32(globalId.y) * ${rowPerThread};\n    let globalCol = i32(globalId.x) * ${colPerThread};\n    let batch = ${splitK ? '0' : 'i32(globalId.z)'};\n    let batchA = ${splitK || !broadcastBatch ? 'batch' : 'batch % uniforms.aShape[0]'};\n    let batchB = ${splitK || !broadcastBatch ? 'batch' : 'batch % uniforms.bShape[0]'};\n    let globalRowStart = i32(workgroupId.y) * ${tileAOuter};\n\n    let numTiles = ${splitK ? `${Math.ceil(splitedDimInner / tileInner)}` :\n        `(uniforms.dimInner - 1) / ${tileInner} + 1`};\n    var kStart = ${splitK ? `i32(globalId.z) * ${splitedDimInner}` : '0'};\n\n    var acc: array<vec4<f32>, ${rowPerThread}>;\n\n    // Loop over shared dimension.\n    let tileRowB = localRow * ${rowPerThreadB};\n    for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        for (var innerRow = 0; innerRow < ${rowPerThread}; innerRow++) {\n            let inputRow = tileRow + innerRow;\n            let inputCol = tileCol;\n            ${writeDataToSubAVec4Snippet(transposeA, innerElementSize)}\n        }\n\n        // Load one tile of B into local memory.\n        for (var innerRow = 0; innerRow < ${rowPerThreadB}; innerRow++) {\n            let inputRow = tileRowB + innerRow;\n            let inputCol = tileCol;\n            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);\n        }\n        kStart = kStart + ${tileInner};\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        ${calculateResultSnippet(transposeA, innerElementSize, rowPerThread, tileInner)}\n        workgroupBarrier();\n    }\n\n    for (var innerRow = 0; innerRow < ${rowPerThread}; innerRow++) {\n        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n    }\n  }`;\n}\nconst writeDataToSubASnippet = (transpose) => {\n    if (transpose) {\n        return `\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          kStart + inputRow,\n          globalRowStart + inputCol);\n        `;\n    }\n    else {\n        return `\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          globalRowStart + inputRow,\n          kStart + inputCol);\n        `;\n    }\n};\nconst readDataFromSubASnippet = (transposeA) => {\n    return transposeA ? 'let ACached = mm_Asub[k][tileRow + innerRow];' :\n        'let ACached = mm_Asub[tileRow + innerRow][k];';\n};\n// sequentialAccessByThreads means sequential data in memory is accessed by\n// threads, instead of a single thread (default behavior).\nexport function makeMatMulPackedSource(workPerThread, workgroupSize, transposeA = false, tileInner = 32, splitK = false, splitedDimInner = 32, sequentialAccessByThreads = false, broadcastBatch = false) {\n    const tileAOuter = workPerThread[1] * workgroupSize[1];\n    const tileBOuter = workPerThread[0] * workgroupSize[0];\n    const tileAWidth = transposeA ? tileAOuter : tileInner;\n    const tileAHight = transposeA ? tileInner : tileAOuter;\n    util.assert(tileAHight % workgroupSize[1] === 0 &&\n        tileAWidth % workgroupSize[0] === 0 &&\n        tileInner % workgroupSize[1] === 0, () => `tileAHight ${tileAHight} must be divisible by workgroupSize[1]${workgroupSize[1]}, tileAWidth ${tileAWidth} must be divisible by workgroupSize[0]${workgroupSize[0]}, tileInner ${tileInner} must be divisible by workgroupSize[1]${workgroupSize[1]}`);\n    const rowPerThreadA = tileAHight / workgroupSize[1];\n    const colPerThreadA = tileAWidth / workgroupSize[0];\n    const rowPerThreadB = tileInner / workgroupSize[1];\n    const rowPerThread = workPerThread[1];\n    const colPerThread = workPerThread[0];\n    const matmulSnippet = sequentialAccessByThreads ?\n        `\n      let localRow = i32(localId.y);\n      let localCol = i32(localId.x);\n      let globalRowStart = i32(workgroupId.y) * ${tileAOuter};\n      let globalColStart = i32(workgroupId.x) * ${tileBOuter};\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        for (var inputRow = localRow; inputRow < ${tileAHight}; inputRow = inputRow + ${workgroupSize[1]}) {\n          for (var inputCol = localCol; inputCol < ${tileAWidth}; inputCol = inputCol + ${workgroupSize[0]}) {\n            ${writeDataToSubASnippet(transposeA)}\n          }\n        }\n        // Load one tile of B into local memory.\n        for (var inputRow = localRow; inputRow < ${tileInner}; inputRow = inputRow + ${workgroupSize[1]}) {\n              for (var inputCol = localCol; inputCol < ${tileBOuter}; inputCol = inputCol + ${workgroupSize[0]}) {\n            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,\n              kStart + inputRow,\n              globalColStart + inputCol);\n          }\n        }\n        kStart = kStart + ${tileInner};\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        var BCached : array<f32, ${colPerThread}>;\n        for (var k = 0; k < ${tileInner}; k++) {\n          for (var inner = 0; inner < ${colPerThread}; inner++) {\n            BCached[inner] = mm_Bsub[k][localCol + inner * ${workgroupSize[0]}];\n          }\n          for (var innerRow = 0; innerRow < ${rowPerThread}; innerRow++) {\n            let ACached = ${transposeA ?\n            `mm_Asub[k][localRow + innerRow * ${workgroupSize[1]}];` :\n            `mm_Asub[localRow + innerRow * ${workgroupSize[1]}][k];`}\n            for (var innerCol = 0; innerCol < ${colPerThread}; innerCol++) {\n              acc[innerRow][innerCol] =\n                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);\n            }\n          }\n        }\n        workgroupBarrier();\n      }\n      for (var innerRow = 0; innerRow < ${rowPerThread}; innerRow++) {\n        let gRow = globalRowStart + localRow + innerRow * ${workgroupSize[1]};\n        for (var innerCol = 0; innerCol < ${colPerThread}; innerCol++) {\n          let gCol = globalColStart + localCol + innerCol * ${workgroupSize[0]};\n          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n        }\n      }\n      ` :\n        `\n  let tileRow = i32(localId.y) * ${rowPerThread};\n  let tileCol = i32(localId.x) * ${colPerThread};\n\n  let globalRow = i32(globalId.y) * ${rowPerThread};\n  let globalCol = i32(globalId.x) * ${colPerThread};\n  let globalRowStart = i32(workgroupId.y) * ${tileAOuter};\n\n  let tileRowA = i32(localId.y) * ${rowPerThreadA};\n  let tileColA = i32(localId.x) * ${colPerThreadA};\n  let tileRowB = i32(localId.y) * ${rowPerThreadB};\n  // Loop over shared dimension.\n  for (var t = 0; t < numTiles; t++) {\n    // Load one tile of A into local memory.\n    for (var innerRow = 0; innerRow < ${rowPerThreadA}; innerRow++) {\n      for (var innerCol = 0; innerCol < ${colPerThreadA}; innerCol++) {\n        let inputRow = tileRowA + innerRow;\n        let inputCol = tileColA + innerCol;\n        ${writeDataToSubASnippet(transposeA)}\n      }\n    }\n\n    // Load one tile of B into local memory.\n    for (var innerRow = 0; innerRow < ${rowPerThreadB}; innerRow++) {\n      for (var innerCol = 0; innerCol < ${colPerThread}; innerCol++) {\n        let inputRow = tileRowB + innerRow;\n        let inputCol = tileCol + innerCol;\n        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,\n          kStart + inputRow,\n          globalCol + innerCol);\n      }\n    }\n    kStart = kStart + ${tileInner};\n    workgroupBarrier();\n\n    // Compute acc values for a single thread.\n    var BCached : array<f32, ${colPerThread}>;\n    for (var k = 0; k < ${tileInner}; k++) {\n      for (var inner = 0; inner < ${colPerThread}; inner++) {\n        BCached[inner] = mm_Bsub[k][tileCol + inner];\n      }\n\n      for (var innerRow = 0; innerRow < ${rowPerThread}; innerRow++) {\n        ${readDataFromSubASnippet(transposeA)}\n        for (var innerCol = 0; innerCol < ${colPerThread}; innerCol++) {\n          acc[innerRow][innerCol] =\n              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);\n        }\n      }\n    }\n\n    workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < ${rowPerThread}; innerRow++) {\n    for (var innerCol = 0; innerCol < ${colPerThread}; innerCol++) {\n      mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n          acc[innerRow][innerCol]);\n    }\n  }\n  `;\n    return `\n    var<workgroup> mm_Asub : array<array<f32, ${tileAWidth}>, ${tileAHight}>;\n    var<workgroup> mm_Bsub : array<array<f32, ${tileBOuter}>, ${tileInner}>;\n\n    ${main()} {\n      let batch = ${splitK ? '0' : 'i32(globalId.z)'};\n      let batchA = ${splitK || !broadcastBatch ? 'batch' : 'batch % uniforms.aShape[0]'};\n      let batchB = ${splitK || !broadcastBatch ? 'batch' : 'batch % uniforms.bShape[0]'};\n      let numTiles = ${splitK ? `${Math.ceil(splitedDimInner / tileInner)}` :\n        `(uniforms.dimInner - 1) / ${tileInner} + 1`};\n      var kStart = ${splitK ? `i32(globalId.z) * ${splitedDimInner}` : '0'};\n\n      var acc : array<array<f32, ${colPerThread}>, ${rowPerThread}>;\n\n      // Without this initialization strange values show up in acc.\n      for (var innerRow = 0; innerRow < ${rowPerThread}; innerRow++) {\n        for (var innerCol = 0; innerCol < ${colPerThread}; innerCol++) {\n          acc[innerRow][innerCol] = 0.0;\n        }\n      }\n      ${matmulSnippet}\n    }\n  `;\n}\nconst readVectorASnippet = (transpose) => {\n    return transpose ? `\n      mm_readA(batchA, colA, globalRow),\n      mm_readA(batchA, colA + 1, globalRow),\n      mm_readA(batchA, colA + 2, globalRow),\n      mm_readA(batchA, colA + 3, globalRow)\n  ` :\n        `\n      mm_readA(batchA, globalRow, colA),\n      mm_readA(batchA, globalRow, colA + 1),\n      mm_readA(batchA, globalRow, colA + 2),\n      mm_readA(batchA, globalRow, colA + 3)\n  `;\n};\nexport function makeVectorMatrixProductSource(workgroupSize, transposeA = false) {\n    util.assert(workgroupSize[1] === 1 && workgroupSize[2] === 1, () => `A linear work group size is required. But got ${workgroupSize}.`);\n    const tileSize = workgroupSize[0] * 4;\n    return `\n    var<workgroup> mm_Asub : array<vec4<f32>, ${workgroupSize[0]}>;\n\n    ${main()} {\n      let tileCol = i32(localId.x);\n      let globalCol = i32(globalId.x);\n      let globalRow = i32(globalId.y);\n\n      let numTiles = (uniforms.dimInner - 1) / ${tileSize} + 1;\n      let batch = i32(globalId.z);\n      let batchA = batch % uniforms.aShape[0];\n      let batchB = batch % uniforms.bShape[0];\n      // Without this initialization strange values show up in acc.\n      var acc = 0.0;\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        let colA = t * ${tileSize} + tileCol * 4;\n        mm_Asub[tileCol] = vec4<f32>(${readVectorASnippet(transposeA)});\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < ${tileSize / 4}; k++) {\n          let rowB = t * ${tileSize} + k * 4;\n          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),\n                              mm_readB(batchB, rowB + 1, globalCol),\n                              mm_readB(batchB, rowB + 2, globalCol),\n                              mm_readB(batchB, rowB + 3, globalCol));\n\n          let ACached = mm_Asub[k];\n          acc = acc + dot(ACached, BCached);\n        }\n\n        workgroupBarrier();\n      }\n\n      mm_write(batch, globalRow, globalCol, acc);\n    }\n  `;\n}\nexport class MatMulPackedProgram {\n    constructor(aShape, outputShape, transposeA = false, transposeB = false, bias = null, activation = null, preluActivationWeights = null, sequentialAccessByThreads = false) {\n        this.variableNames = ['A', 'B'];\n        this.uniforms = `dimAOuter : i32, dimBOuter : i32, dimInner : i32,`;\n        this.outputShape = outputShape;\n        this.dispatchLayout = { x: [2], y: [1], z: [0] };\n        const dimInner = transposeA ? aShape[1] : aShape[2];\n        this.isVec4 = ((dimInner % 4 === 0 && !transposeA) ||\n            (outputShape[1] % 4 === 0 && transposeA)) &&\n            outputShape[2] % 4 === 0 && !transposeB;\n        this.outputComponent = this.isVec4 ? 4 : 1;\n        this.isVectorA = outputShape[1] === 1 && !transposeA;\n        if (!this.isVec4 && this.isVectorA) {\n            // For makeVectorMatrixProductSource\n            this.elementsPerThread = [1, 1, 1];\n            this.workgroupSize = [32, 1, 1];\n        }\n        else {\n            const workgroupInfo = computeWorkgroupInfoForMatMul(outputShape[1], dimInner, outputShape[2], transposeA);\n            this.workgroupSize = workgroupInfo.workgroupSize;\n            this.elementsPerThread = workgroupInfo.elementsPerThread;\n        }\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize, this.elementsPerThread);\n        const addBias = bias != null;\n        const hasPreluActivationWeights = preluActivationWeights != null;\n        if (addBias) {\n            this.variableNames.push('bias');\n        }\n        if (hasPreluActivationWeights) {\n            this.variableNames.push('preluActivationWeights');\n        }\n        this.sequentialAccessByThreads = sequentialAccessByThreads;\n        this.transposeA = transposeA;\n        this.transposeB = transposeB;\n        this.addBias = addBias;\n        this.activation = activation;\n        this.hasPreluActivationWeights = hasPreluActivationWeights;\n        [this.fitAOuter, this.fitBOuter, this.fitInner] =\n            this.getShapeFit(outputShape[1], outputShape[2], dimInner);\n        this.shaderKey = `matMulPacked_${this.elementsPerThread}_${transposeA}_${transposeB}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`;\n    }\n    getShapeFit(dimAOuter, dimBOuter, dimInner) {\n        const tileAOuter = this.workgroupSize[1] * this.elementsPerThread[1];\n        const tileBOuter = this.workgroupSize[0] * this.elementsPerThread[0];\n        if (!this.isVec4 && this.isVectorA) {\n            // For makeVectorMatrixProductSource\n            this.tileInner = this.workgroupSize[0] * 4;\n        }\n        else {\n            this.tileInner = tileBOuter;\n        }\n        const fitAOuter = dimAOuter % tileAOuter === 0;\n        const fitBOuter = dimBOuter % tileBOuter === 0;\n        const fitInner = dimInner % this.tileInner === 0;\n        return [fitAOuter, fitBOuter, fitInner];\n    }\n    getUserCode() {\n        const userCode = `\n      ${activationFnSnippet(this.activation, this.hasPreluActivationWeights, this.isVec4)}\n      ${matMulReadWriteFnSource(this.addBias, this.activation, false /* transposeA is implemented in makeMatMulPackedSource */, this.transposeB, this.fitAOuter, this.fitBOuter, this.fitInner, this.isVec4 ? 4 : 1)}\n      ${this.isVec4 ?\n            makeMatMulPackedVec4Source(this.elementsPerThread, this.workgroupSize, this.transposeA, this.tileInner, false, null, true) :\n            (this.isVectorA ? makeVectorMatrixProductSource(this.workgroupSize, this.transposeA) :\n                makeMatMulPackedSource(this.elementsPerThread, this.workgroupSize, this.transposeA, this.tileInner, false, null, this.sequentialAccessByThreads, true))}\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { activationFnSnippet } from './activation_util';\nimport { matMulReadWriteFnSource } from './matmul_packed_webgpu';\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch } from './webgpu_util';\nexport function makeMatMulReduceSource(workgroupSizeX) {\n    return `\n    var<workgroup> sumValues : array<f32, ${workgroupSizeX}>;\n    ${main()} {\n      let coords = getOutputCoords();\n      let batch = coords[0];\n      let batchA = batch % uniforms.aShape[0];\n      let batchB = batch % uniforms.bShape[0];\n      let row = coords[1];\n      let col = coords[2];\n      var sum = 0.0;\n      let Length = uniforms.dimInner;\n      for (var k = i32(localId.x); k < Length; k = k + ${workgroupSizeX}) {\n        let dataA = mm_readA(batchA, row, k);\n        let dataB = mm_readB(batchB, k, col);\n        sum = sum + dataA * dataB;\n      }\n      sumValues[localId.x] = sum;\n      workgroupBarrier();\n\n      for(var currentSize = ${workgroupSizeX / 2}u; currentSize > 1u;\n          currentSize = currentSize / 2u) {\n        if (localId.x < currentSize)\n        {\n          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];\n        }\n        workgroupBarrier();\n      }\n\n      if (localId.x == 0u) {\n        sum = sumValues[0] + sumValues[1];\n        mm_write(batch, row, col, sum);\n      }\n    }\n  `;\n}\nexport class MatMulReduceProgram {\n    constructor(outputShape, transposeA = false, transposeB = false, bias = null, activation = null, preluActivationWeights = null) {\n        this.variableNames = ['A', 'B'];\n        this.uniforms = `dimAOuter : i32, dimBOuter : i32, dimInner : i32,`;\n        this.workgroupSize = [256, 1, 1];\n        this.outputShape = outputShape;\n        this.dispatchLayout = { x: [], y: [1, 2], z: [0] };\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        const addBias = bias != null;\n        const hasPreluActivationWeights = preluActivationWeights != null;\n        if (addBias) {\n            this.variableNames.push('bias');\n        }\n        if (hasPreluActivationWeights) {\n            this.variableNames.push('preluActivationWeights');\n        }\n        this.transposeA = transposeA;\n        this.transposeB = transposeB;\n        this.addBias = addBias;\n        this.activation = activation;\n        this.hasPreluActivationWeights = hasPreluActivationWeights;\n        this.shaderKey =\n            `matMulReduce_${this.activation}_${transposeA}_${transposeB}`;\n    }\n    getUserCode() {\n        const userCode = `\n      ${activationFnSnippet(this.activation, this.hasPreluActivationWeights)}\n      ${matMulReadWriteFnSource(this.addBias, this.activation, this.transposeA, this.transposeB)}\n      ${makeMatMulReduceSource(this.workgroupSize[0])}\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0bXVsX3JlZHVjZV93ZWJncHUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9tYXRtdWxfcmVkdWNlX3dlYmdwdS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFJSCxPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUN0RCxPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUMvRCxPQUFPLEVBQUMsbUJBQW1CLElBQUksSUFBSSxFQUFnQixNQUFNLGtCQUFrQixDQUFDO0FBQzVFLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFOUMsTUFBTSxVQUFVLHNCQUFzQixDQUFDLGNBQXNCO0lBQzNELE9BQU87NENBQ21DLGNBQWM7TUFDcEQsSUFBSSxFQUFFOzs7Ozs7Ozs7eURBUzZDLGNBQWM7Ozs7Ozs7OzhCQVF6QyxjQUFjLEdBQUcsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7R0FjN0MsQ0FBQztBQUNKLENBQUM7QUFFRCxNQUFNLE9BQU8sbUJBQW1CO0lBYzlCLFlBQ0ksV0FBcUMsRUFBRSxVQUFVLEdBQUcsS0FBSyxFQUN6RCxVQUFVLEdBQUcsS0FBSyxFQUFFLE9BQW1CLElBQUksRUFDM0MsYUFBc0MsSUFBSSxFQUMxQyx5QkFBcUMsSUFBSTtRQWI3QyxrQkFBYSxHQUFHLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQzNCLGFBQVEsR0FBRyxtREFBbUQsQ0FBQztRQUMvRCxrQkFBYSxHQUE2QixDQUFDLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFZcEQsSUFBSSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUM7UUFDL0IsSUFBSSxDQUFDLGNBQWMsR0FBRyxFQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUM7UUFDakQsSUFBSSxDQUFDLFFBQVEsR0FBRyxlQUFlLENBQzNCLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFFL0QsTUFBTSxPQUFPLEdBQUcsSUFBSSxJQUFJLElBQUksQ0FBQztRQUM3QixNQUFNLHlCQUF5QixHQUFHLHNCQUFzQixJQUFJLElBQUksQ0FBQztRQUNqRSxJQUFJLE9BQU8sRUFBRTtZQUNYLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ2pDO1FBRUQsSUFBSSx5QkFBeUIsRUFBRTtZQUM3QixJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO1NBQ25EO1FBRUQsSUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7UUFDN0IsSUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7UUFDN0IsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7UUFDN0IsSUFBSSxDQUFDLHlCQUF5QixHQUFHLHlCQUF5QixDQUFDO1FBQzNELElBQUksQ0FBQyxTQUFTO1lBQ1YsZ0JBQWdCLElBQUksQ0FBQyxVQUFVLElBQUksVUFBVSxJQUFJLFVBQVUsRUFBRSxDQUFDO0lBQ3BFLENBQUM7SUFFRCxXQUFXO1FBQ1QsTUFBTSxRQUFRLEdBQUc7UUFDYixtQkFBbUIsQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyx5QkFBeUIsQ0FBQztRQUVwRSx1QkFBdUIsQ0FDbkIsSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQztRQUNwRSxzQkFBc0IsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ2hELENBQUM7UUFDRixPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7YmFja2VuZF91dGlsLCBUZW5zb3JJbmZvfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge2FjdGl2YXRpb25GblNuaXBwZXR9IGZyb20gJy4vYWN0aXZhdGlvbl91dGlsJztcbmltcG9ydCB7bWF0TXVsUmVhZFdyaXRlRm5Tb3VyY2V9IGZyb20gJy4vbWF0bXVsX3BhY2tlZF93ZWJncHUnO1xuaW1wb3J0IHtnZXRNYWluSGVhZGVyU3RyaW5nIGFzIG1haW4sIFdlYkdQVVByb2dyYW19IGZyb20gJy4vd2ViZ3B1X3Byb2dyYW0nO1xuaW1wb3J0IHtjb21wdXRlRGlzcGF0Y2h9IGZyb20gJy4vd2ViZ3B1X3V0aWwnO1xuXG5leHBvcnQgZnVuY3Rpb24gbWFrZU1hdE11bFJlZHVjZVNvdXJjZSh3b3JrZ3JvdXBTaXplWDogbnVtYmVyKTogc3RyaW5nIHtcbiAgcmV0dXJuIGBcbiAgICB2YXI8d29ya2dyb3VwPiBzdW1WYWx1ZXMgOiBhcnJheTxmMzIsICR7d29ya2dyb3VwU2l6ZVh9PjtcbiAgICAke21haW4oKX0ge1xuICAgICAgbGV0IGNvb3JkcyA9IGdldE91dHB1dENvb3JkcygpO1xuICAgICAgbGV0IGJhdGNoID0gY29vcmRzWzBdO1xuICAgICAgbGV0IGJhdGNoQSA9IGJhdGNoICUgdW5pZm9ybXMuYVNoYXBlWzBdO1xuICAgICAgbGV0IGJhdGNoQiA9IGJhdGNoICUgdW5pZm9ybXMuYlNoYXBlWzBdO1xuICAgICAgbGV0IHJvdyA9IGNvb3Jkc1sxXTtcbiAgICAgIGxldCBjb2wgPSBjb29yZHNbMl07XG4gICAgICB2YXIgc3VtID0gMC4wO1xuICAgICAgbGV0IExlbmd0aCA9IHVuaWZvcm1zLmRpbUlubmVyO1xuICAgICAgZm9yICh2YXIgayA9IGkzMihsb2NhbElkLngpOyBrIDwgTGVuZ3RoOyBrID0gayArICR7d29ya2dyb3VwU2l6ZVh9KSB7XG4gICAgICAgIGxldCBkYXRhQSA9IG1tX3JlYWRBKGJhdGNoQSwgcm93LCBrKTtcbiAgICAgICAgbGV0IGRhdGFCID0gbW1fcmVhZEIoYmF0Y2hCLCBrLCBjb2wpO1xuICAgICAgICBzdW0gPSBzdW0gKyBkYXRhQSAqIGRhdGFCO1xuICAgICAgfVxuICAgICAgc3VtVmFsdWVzW2xvY2FsSWQueF0gPSBzdW07XG4gICAgICB3b3JrZ3JvdXBCYXJyaWVyKCk7XG5cbiAgICAgIGZvcih2YXIgY3VycmVudFNpemUgPSAke3dvcmtncm91cFNpemVYIC8gMn11OyBjdXJyZW50U2l6ZSA+IDF1O1xuICAgICAgICAgIGN1cnJlbnRTaXplID0gY3VycmVudFNpemUgLyAydSkge1xuICAgICAgICBpZiAobG9jYWxJZC54IDwgY3VycmVudFNpemUpXG4gICAgICAgIHtcbiAgICAgICAgICBzdW1WYWx1ZXNbbG9jYWxJZC54XSA9IHN1bVZhbHVlc1tsb2NhbElkLnhdICsgc3VtVmFsdWVzW2xvY2FsSWQueCArIGN1cnJlbnRTaXplXTtcbiAgICAgICAgfVxuICAgICAgICB3b3JrZ3JvdXBCYXJyaWVyKCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChsb2NhbElkLnggPT0gMHUpIHtcbiAgICAgICAgc3VtID0gc3VtVmFsdWVzWzBdICsgc3VtVmFsdWVzWzFdO1xuICAgICAgICBtbV93cml0ZShiYXRjaCwgcm93LCBjb2wsIHN1bSk7XG4gICAgICB9XG4gICAgfVxuICBgO1xufVxuXG5leHBvcnQgY2xhc3MgTWF0TXVsUmVkdWNlUHJvZ3JhbSBpbXBsZW1lbnRzIFdlYkdQVVByb2dyYW0ge1xuICBvdXRwdXRTaGFwZTogbnVtYmVyW107XG4gIHNoYWRlcktleTogc3RyaW5nO1xuICBkaXNwYXRjaExheW91dDoge3g6IG51bWJlcltdLCB5OiBudW1iZXJbXSwgejogbnVtYmVyW119O1xuICBkaXNwYXRjaDogW251bWJlciwgbnVtYmVyLCBudW1iZXJdO1xuICB2YXJpYWJsZU5hbWVzID0gWydBJywgJ0InXTtcbiAgdW5pZm9ybXMgPSBgZGltQU91dGVyIDogaTMyLCBkaW1CT3V0ZXIgOiBpMzIsIGRpbUlubmVyIDogaTMyLGA7XG4gIHdvcmtncm91cFNpemU6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXSA9IFsyNTYsIDEsIDFdO1xuICB0cmFuc3Bvc2VBOiBib29sZWFuO1xuICB0cmFuc3Bvc2VCOiBib29sZWFuO1xuICBhZGRCaWFzOiBib29sZWFuO1xuICBhY3RpdmF0aW9uOiBiYWNrZW5kX3V0aWwuQWN0aXZhdGlvbjtcbiAgaGFzUHJlbHVBY3RpdmF0aW9uV2VpZ2h0czogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICAgIG91dHB1dFNoYXBlOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl0sIHRyYW5zcG9zZUEgPSBmYWxzZSxcbiAgICAgIHRyYW5zcG9zZUIgPSBmYWxzZSwgYmlhczogVGVuc29ySW5mbyA9IG51bGwsXG4gICAgICBhY3RpdmF0aW9uOiBiYWNrZW5kX3V0aWwuQWN0aXZhdGlvbiA9IG51bGwsXG4gICAgICBwcmVsdUFjdGl2YXRpb25XZWlnaHRzOiBUZW5zb3JJbmZvID0gbnVsbCkge1xuICAgIHRoaXMub3V0cHV0U2hhcGUgPSBvdXRwdXRTaGFwZTtcbiAgICB0aGlzLmRpc3BhdGNoTGF5b3V0ID0ge3g6IFtdLCB5OiBbMSwgMl0sIHo6IFswXX07XG4gICAgdGhpcy5kaXNwYXRjaCA9IGNvbXB1dGVEaXNwYXRjaChcbiAgICAgICAgdGhpcy5kaXNwYXRjaExheW91dCwgdGhpcy5vdXRwdXRTaGFwZSwgdGhpcy53b3JrZ3JvdXBTaXplKTtcblxuICAgIGNvbnN0IGFkZEJpYXMgPSBiaWFzICE9IG51bGw7XG4gICAgY29uc3QgaGFzUHJlbHVBY3RpdmF0aW9uV2VpZ2h0cyA9IHByZWx1QWN0aXZhdGlvbldlaWdodHMgIT0gbnVsbDtcbiAgICBpZiAoYWRkQmlhcykge1xuICAgICAgdGhpcy52YXJpYWJsZU5hbWVzLnB1c2goJ2JpYXMnKTtcbiAgICB9XG5cbiAgICBpZiAoaGFzUHJlbHVBY3RpdmF0aW9uV2VpZ2h0cykge1xuICAgICAgdGhpcy52YXJpYWJsZU5hbWVzLnB1c2goJ3ByZWx1QWN0aXZhdGlvbldlaWdodHMnKTtcbiAgICB9XG5cbiAgICB0aGlzLnRyYW5zcG9zZUEgPSB0cmFuc3Bvc2VBO1xuICAgIHRoaXMudHJhbnNwb3NlQiA9IHRyYW5zcG9zZUI7XG4gICAgdGhpcy5hZGRCaWFzID0gYWRkQmlhcztcbiAgICB0aGlzLmFjdGl2YXRpb24gPSBhY3RpdmF0aW9uO1xuICAgIHRoaXMuaGFzUHJlbHVBY3RpdmF0aW9uV2VpZ2h0cyA9IGhhc1ByZWx1QWN0aXZhdGlvbldlaWdodHM7XG4gICAgdGhpcy5zaGFkZXJLZXkgPVxuICAgICAgICBgbWF0TXVsUmVkdWNlXyR7dGhpcy5hY3RpdmF0aW9ufV8ke3RyYW5zcG9zZUF9XyR7dHJhbnNwb3NlQn1gO1xuICB9XG5cbiAgZ2V0VXNlckNvZGUoKTogc3RyaW5nIHtcbiAgICBjb25zdCB1c2VyQ29kZSA9IGBcbiAgICAgICR7YWN0aXZhdGlvbkZuU25pcHBldCh0aGlzLmFjdGl2YXRpb24sIHRoaXMuaGFzUHJlbHVBY3RpdmF0aW9uV2VpZ2h0cyl9XG4gICAgICAke1xuICAgICAgICBtYXRNdWxSZWFkV3JpdGVGblNvdXJjZShcbiAgICAgICAgICAgIHRoaXMuYWRkQmlhcywgdGhpcy5hY3RpdmF0aW9uLCB0aGlzLnRyYW5zcG9zZUEsIHRoaXMudHJhbnNwb3NlQil9XG4gICAgICAke21ha2VNYXRNdWxSZWR1Y2VTb3VyY2UodGhpcy53b3JrZ3JvdXBTaXplWzBdKX1cbiAgICBgO1xuICAgIHJldHVybiB1c2VyQ29kZTtcbiAgfVxufVxuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { activationFnSnippet } from './activation_util';\nimport { matMulReadWriteFnSource } from './matmul_packed_webgpu';\nimport { getMainHeaderString as main } from './webgpu_program';\nexport function makeMatMulSmallOutputSizeSource(workgroupSize) {\n    const tileAOuter = workgroupSize[1];\n    const tileBOuter = workgroupSize[0];\n    const tileInner = tileAOuter > tileBOuter ? tileAOuter : tileBOuter;\n    return `\n  var<workgroup> mm_Asub : array<array<f32, ${tileInner}>, ${tileAOuter}>;\n  var<workgroup> mm_Bsub : array<array<f32, ${tileBOuter}>, ${tileInner}>;\n\n  // If the output size is small for matrix multiplication, avoid to use vec4\n  // and handle some elements per thread to optimally utilize the ALU.\n  // Read data from global memory to registers firstly, then store them into\n  // shared memory, so it is instruction-Level parallelism for arithmetic\n  // operations and others handle IO operations between barrier api, makes ALU\n  // and load/store units work simultaneously, could improves the performance.\n  ${main()} {\n    let tileRow = i32(localId.y);\n    let tileCol = i32(localId.x);\n    let globalRow = i32(globalId.y);\n    let globalCol = i32(globalId.x);\n    let batch = i32(globalId.z);\n    let batchA = batch % uniforms.aShape[0];\n    let batchB = batch % uniforms.bShape[0];\n\n    // uniforms.dimInner should be greater than 0.\n    let numTiles = (uniforms.dimInner - 1) / ${tileInner} + 1;\n    var acc = 0.0;\n\n    var globalColA = tileCol;\n    var globalRowB = 0;\n    var regA = mm_readA(batchA, globalRow, globalColA);\n    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);\n    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);\n    globalColA = globalColA + ${tileInner};\n    globalRowB = globalRowB + ${tileInner};\n\n    for (var t = 0; t < numTiles; t = t + 1) {\n      mm_Asub[tileRow][tileCol] = regA;\n      mm_Bsub[2 * tileRow][tileCol] = regB0;\n      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;\n\n      workgroupBarrier();\n\n      regA = mm_readA(batchA, globalRow, globalColA);\n      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);\n      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);\n      globalColA = globalColA + ${tileInner};\n      globalRowB = globalRowB + ${tileInner};\n\n      for (var k = 0; k < ${tileInner}; k = k + 1) {\n        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];\n      }\n      workgroupBarrier();\n    }\n\n    mm_write(batch, globalRow, globalCol, acc);\n  }\n  `;\n}\nexport class MatMulSmallOutputSizeProgram {\n    constructor(aShape, bShape, outputShape, transposeA = false, transposeB = false, bias = null, activation = null, preluActivationWeights = null) {\n        this.variableNames = ['A', 'B'];\n        this.uniforms = `dimAOuter : i32, dimBOuter : i32, dimInner : i32,`;\n        this.workgroupSize = [16, 8, 1];\n        this.outputShape = outputShape;\n        this.dispatchLayout = { x: [2], y: [1], z: [0] };\n        this.dispatch = [\n            Math.ceil(outputShape[2] / this.workgroupSize[0]),\n            Math.ceil(outputShape[1] / this.workgroupSize[1]), outputShape[0]\n        ];\n        const addBias = bias != null;\n        if (addBias) {\n            this.variableNames.push('bias');\n        }\n        const hasPreluActivationWeights = preluActivationWeights != null;\n        if (hasPreluActivationWeights) {\n            this.variableNames.push('preluActivationWeights');\n        }\n        this.transposeA = transposeA;\n        this.transposeB = transposeB;\n        this.addBias = addBias;\n        this.activation = activation;\n        this.hasPreluActivationWeights = hasPreluActivationWeights;\n        this.shaderKey =\n            `matMulSmallOutputSize_${this.activation}_${transposeA}_${transposeB}`;\n    }\n    getUserCode() {\n        const userCode = `\n      ${activationFnSnippet(this.activation, this.hasPreluActivationWeights)}\n      ${matMulReadWriteFnSource(this.addBias, this.activation, this.transposeA, this.transposeB)}\n      ${makeMatMulSmallOutputSizeSource(this.workgroupSize)}\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { activationFnSnippet, biasActivationSnippet } from './activation_util';\nimport { makeMatMulPackedSource, makeMatMulPackedVec4Source, matMulReadFnSource } from './matmul_packed_webgpu';\nimport { atomicAddSnippet } from './shader_util';\nimport { getMainHeaderString as main, typeSnippet } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class MatMulSplitKProgram {\n    constructor(outputShape, dimInner, transposeA = false, transposeB = false) {\n        this.variableNames = ['A', 'B'];\n        this.uniforms = `dimAOuter : i32, dimBOuter : i32, dimInner : i32,`;\n        this.workgroupSize = [8, 8, 1];\n        this.atomic = true;\n        this.splitedDimInner = 128;\n        util.assert(outputShape[0] === 1, () => 'MatMulSplitKProgram only supports batch = 1.');\n        this.outputShape = outputShape;\n        this.dispatchLayout = { x: [2], y: [1], z: [0, 3] };\n        const isVec4 = (transposeA && this.outputShape[1] % 4 === 0 ||\n            !transposeA && dimInner % 4 === 0) &&\n            this.outputShape[2] % 4 === 0;\n        this.elementsPerThread = [4, 4, this.splitedDimInner];\n        this.outputComponent = isVec4 ? 4 : 1;\n        if (!isVec4) {\n            if (this.outputShape[1] < 16) {\n                this.elementsPerThread[1] = 1;\n            }\n            if (this.outputShape[2] < 16) {\n                this.elementsPerThread[0] = 1;\n            }\n        }\n        this.dispatch = computeDispatch(this.dispatchLayout, [\n            this.outputShape[0], this.outputShape[1], this.outputShape[2],\n            dimInner\n        ], this.workgroupSize, this.elementsPerThread);\n        this.transposeA = transposeA;\n        this.transposeB = transposeB;\n        this.shaderKey = `matMulSplitK_${transposeA}_${transposeB}_${this.elementsPerThread}_${this.outputComponent}`;\n    }\n    getUserCode() {\n        const component = this.outputComponent;\n        const userCode = `\n      ${matMulReadFnSource(false, this.transposeB, false, false, false, component)}\n      fn mm_write(batch: i32, row : i32, col : i32, value : ${typeSnippet(component)}) {\n        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {\n          let coords = vec3<i32>(batch, row, col);\n          let flatIndex = getOutputIndexFromCoords(coords);\n          // The problem is that we should initialize output to zero before using.\n          // Otherwise, the original value will be added to the result.\n          for (var i = 0; i < ${component}; i = i + 1) {\n            ${atomicAddSnippet('&result[flatIndex + i]', `${component > 1 ? 'value[i]' : 'value'}`, 'float32')}\n          }\n        }\n      }\n      ${component === 4 ? makeMatMulPackedVec4Source(this.elementsPerThread, this.workgroupSize, this.transposeA, 32, true, this.splitedDimInner) :\n            makeMatMulPackedSource(this.elementsPerThread, this.workgroupSize, this.transposeA, 32, true, this.splitedDimInner)}\n    `;\n        return userCode;\n    }\n}\nexport class BiasActivationProgram {\n    constructor(outputShape, bias = null, activation = null, preluActivationWeights = null) {\n        this.uniforms = '';\n        this.variableNames = ['x'];\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = outputShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.addBias = bias != null;\n        this.hasPreluActivationWeights = preluActivationWeights != null;\n        this.activation = activation;\n        if (this.addBias) {\n            this.variableNames.push('bias');\n        }\n        if (this.hasPreluActivationWeights) {\n            this.variableNames.push('preluActivationWeights');\n        }\n        this.shaderKey = `biasActivation_${activation}`;\n    }\n    getUserCode() {\n        return `\n    ${activationFnSnippet(this.activation, this.hasPreluActivationWeights)}\n    ${main('index')} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        var value = getXByOutputIndex(index);\n        ${biasActivationSnippet(this.addBias, this.activation)}\n        setOutputAtIndex(index, value);\n      }\n    }\n    `;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class FillProgram {\n    constructor(shape) {\n        this.variableNames = [];\n        this.outputShape = [];\n        this.uniforms = 'value : f32,';\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = shape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.shaderKey = 'fill';\n    }\n    getUserCode() {\n        const userCode = `\n    ${main('index')} {\n      if (index < uniforms.size) {\n        setOutputAtIndex(index, uniforms.value);\n      }\n    }\n  `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsbF93ZWJncHUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9maWxsX3dlYmdwdS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsbUJBQW1CLElBQUksSUFBSSxFQUFnQixNQUFNLGtCQUFrQixDQUFDO0FBQzVFLE9BQU8sRUFBQyxlQUFlLEVBQUUsa0JBQWtCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFbEUsTUFBTSxPQUFPLFdBQVc7SUFVdEIsWUFBWSxLQUFlO1FBVDNCLGtCQUFhLEdBQWEsRUFBRSxDQUFDO1FBQzdCLGdCQUFXLEdBQWEsRUFBRSxDQUFDO1FBSTNCLGFBQVEsR0FBRyxjQUFjLENBQUM7UUFDMUIsa0JBQWEsR0FBNkIsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3JELFNBQUksR0FBRyxJQUFJLENBQUM7UUFHVixJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztRQUN6QixJQUFJLENBQUMsY0FBYyxHQUFHLGtCQUFrQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUMzRCxJQUFJLENBQUMsUUFBUSxHQUFHLGVBQWUsQ0FDM0IsSUFBSSxDQUFDLGNBQWMsRUFBRSxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUUvRCxJQUFJLENBQUMsU0FBUyxHQUFHLE1BQU0sQ0FBQztJQUMxQixDQUFDO0lBRUQsV0FBVztRQUNULE1BQU0sUUFBUSxHQUFHO01BQ2YsSUFBSSxDQUFDLE9BQU8sQ0FBQzs7Ozs7R0FLaEIsQ0FBQztRQUNBLE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtnZXRNYWluSGVhZGVyU3RyaW5nIGFzIG1haW4sIFdlYkdQVVByb2dyYW19IGZyb20gJy4vd2ViZ3B1X3Byb2dyYW0nO1xuaW1wb3J0IHtjb21wdXRlRGlzcGF0Y2gsIGZsYXREaXNwYXRjaExheW91dH0gZnJvbSAnLi93ZWJncHVfdXRpbCc7XG5cbmV4cG9ydCBjbGFzcyBGaWxsUHJvZ3JhbSBpbXBsZW1lbnRzIFdlYkdQVVByb2dyYW0ge1xuICB2YXJpYWJsZU5hbWVzOiBzdHJpbmdbXSA9IFtdO1xuICBvdXRwdXRTaGFwZTogbnVtYmVyW10gPSBbXTtcbiAgc2hhZGVyS2V5OiBzdHJpbmc7XG4gIGRpc3BhdGNoTGF5b3V0OiB7eDogbnVtYmVyW119O1xuICBkaXNwYXRjaDogW251bWJlciwgbnVtYmVyLCBudW1iZXJdO1xuICB1bmlmb3JtcyA9ICd2YWx1ZSA6IGYzMiwnO1xuICB3b3JrZ3JvdXBTaXplOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl0gPSBbNjQsIDEsIDFdO1xuICBzaXplID0gdHJ1ZTtcblxuICBjb25zdHJ1Y3RvcihzaGFwZTogbnVtYmVyW10pIHtcbiAgICB0aGlzLm91dHB1dFNoYXBlID0gc2hhcGU7XG4gICAgdGhpcy5kaXNwYXRjaExheW91dCA9IGZsYXREaXNwYXRjaExheW91dCh0aGlzLm91dHB1dFNoYXBlKTtcbiAgICB0aGlzLmRpc3BhdGNoID0gY29tcHV0ZURpc3BhdGNoKFxuICAgICAgICB0aGlzLmRpc3BhdGNoTGF5b3V0LCB0aGlzLm91dHB1dFNoYXBlLCB0aGlzLndvcmtncm91cFNpemUpO1xuXG4gICAgdGhpcy5zaGFkZXJLZXkgPSAnZmlsbCc7XG4gIH1cblxuICBnZXRVc2VyQ29kZSgpOiBzdHJpbmcge1xuICAgIGNvbnN0IHVzZXJDb2RlID0gYFxuICAgICR7bWFpbignaW5kZXgnKX0ge1xuICAgICAgaWYgKGluZGV4IDwgdW5pZm9ybXMuc2l6ZSkge1xuICAgICAgICBzZXRPdXRwdXRBdEluZGV4KGluZGV4LCB1bmlmb3Jtcy52YWx1ZSk7XG4gICAgICB9XG4gICAgfVxuICBgO1xuICAgIHJldHVybiB1c2VyQ29kZTtcbiAgfVxufVxuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Fill, util } from '@tensorflow/tfjs-core';\nimport { FillProgram } from '../fill_webgpu';\nexport function fill(args) {\n    const { backend, attrs } = args;\n    const { shape, value } = attrs;\n    let { dtype } = attrs;\n    dtype = dtype || util.inferDtype(value);\n    if (dtype === 'string') {\n        // String type should be handled in CPU memory.\n        const values = util.getArrayFromDType(dtype, util.sizeFromShape(shape));\n        values.fill(value);\n        return backend.makeTensorInfo(shape, dtype, values);\n    }\n    else {\n        const program = new FillProgram(shape);\n        const uniformData = [{ type: 'float32', data: [value] }];\n        return backend.runWebGPUProgram(program, [], dtype, uniformData);\n    }\n}\nexport const fillConfig = {\n    kernelName: Fill,\n    backendName: 'webgpu',\n    kernelFunc: fill\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmlsbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvRmlsbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsSUFBSSxFQUFtRCxJQUFJLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUdsRyxPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFFM0MsTUFBTSxVQUFVLElBQUksQ0FBQyxJQUFnRDtJQUVuRSxNQUFNLEVBQUMsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUM5QixNQUFNLEVBQUMsS0FBSyxFQUFFLEtBQUssRUFBQyxHQUFHLEtBQUssQ0FBQztJQUM3QixJQUFJLEVBQUMsS0FBSyxFQUFDLEdBQUcsS0FBSyxDQUFDO0lBRXBCLEtBQUssR0FBRyxLQUFLLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUV4QyxJQUFJLEtBQUssS0FBSyxRQUFRLEVBQUU7UUFDdEIsK0NBQStDO1FBQy9DLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ3hFLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBZSxDQUFDLENBQUM7UUFDN0IsT0FBTyxPQUFPLENBQUMsY0FBYyxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7S0FDckQ7U0FBTTtRQUNMLE1BQU0sT0FBTyxHQUFHLElBQUksV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3ZDLE1BQU0sV0FBVyxHQUFHLENBQUMsRUFBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDLEtBQWUsQ0FBQyxFQUFDLENBQUMsQ0FBQztRQUNqRSxPQUFPLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxXQUFXLENBQUMsQ0FBQztLQUNsRTtBQUNILENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQWlCO0lBQ3RDLFVBQVUsRUFBRSxJQUFJO0lBQ2hCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxJQUE2QjtDQUMxQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0ZpbGwsIEZpbGxBdHRycywgS2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBUZW5zb3JJbmZvLCB1dGlsfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcbmltcG9ydCB7RmlsbFByb2dyYW19IGZyb20gJy4uL2ZpbGxfd2ViZ3B1JztcblxuZXhwb3J0IGZ1bmN0aW9uIGZpbGwoYXJnczoge2JhY2tlbmQ6IFdlYkdQVUJhY2tlbmQsIGF0dHJzOiBGaWxsQXR0cnN9KTpcbiAgICBUZW5zb3JJbmZvIHtcbiAgY29uc3Qge2JhY2tlbmQsIGF0dHJzfSA9IGFyZ3M7XG4gIGNvbnN0IHtzaGFwZSwgdmFsdWV9ID0gYXR0cnM7XG4gIGxldCB7ZHR5cGV9ID0gYXR0cnM7XG5cbiAgZHR5cGUgPSBkdHlwZSB8fCB1dGlsLmluZmVyRHR5cGUodmFsdWUpO1xuXG4gIGlmIChkdHlwZSA9PT0gJ3N0cmluZycpIHtcbiAgICAvLyBTdHJpbmcgdHlwZSBzaG91bGQgYmUgaGFuZGxlZCBpbiBDUFUgbWVtb3J5LlxuICAgIGNvbnN0IHZhbHVlcyA9IHV0aWwuZ2V0QXJyYXlGcm9tRFR5cGUoZHR5cGUsIHV0aWwuc2l6ZUZyb21TaGFwZShzaGFwZSkpO1xuICAgIHZhbHVlcy5maWxsKHZhbHVlIGFzIHN0cmluZyk7XG4gICAgcmV0dXJuIGJhY2tlbmQubWFrZVRlbnNvckluZm8oc2hhcGUsIGR0eXBlLCB2YWx1ZXMpO1xuICB9IGVsc2Uge1xuICAgIGNvbnN0IHByb2dyYW0gPSBuZXcgRmlsbFByb2dyYW0oc2hhcGUpO1xuICAgIGNvbnN0IHVuaWZvcm1EYXRhID0gW3t0eXBlOiAnZmxvYXQzMicsIGRhdGE6IFt2YWx1ZSBhcyBudW1iZXJdfV07XG4gICAgcmV0dXJuIGJhY2tlbmQucnVuV2ViR1BVUHJvZ3JhbShwcm9ncmFtLCBbXSwgZHR5cGUsIHVuaWZvcm1EYXRhKTtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgZmlsbENvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBGaWxsLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IGZpbGwgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Reshape, util } from '@tensorflow/tfjs-core';\nexport function reshape(args) {\n    const { inputs, attrs } = args;\n    const { x } = inputs;\n    const { shape } = attrs;\n    const xSize = util.sizeFromShape(x.shape);\n    const $shape = util.inferFromImplicitShape(shape, xSize);\n    const $xSize = util.sizeFromShape($shape);\n    util.assert(xSize === $xSize, () => `The new shape (${$shape}) has ${$xSize} elements and the old ` +\n        `shape (${x.shape}) has ${xSize} elements. The new shape and old ` +\n        `shape must have the same number of elements.`);\n    // Backend needs to track refCount for the dataId for reshape op\n    args.backend.incRef(x.dataId);\n    return { dataId: x.dataId, shape: $shape, dtype: x.dtype };\n}\nexport const reshapeConfig = {\n    kernelName: Reshape,\n    backendName: 'webgpu',\n    kernelFunc: reshape\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVzaGFwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvUmVzaGFwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQTJCLE9BQU8sRUFBMkMsSUFBSSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFJdkgsTUFBTSxVQUFVLE9BQU8sQ0FDbkIsSUFBMEU7SUFFNUUsTUFBTSxFQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFDN0IsTUFBTSxFQUFDLENBQUMsRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUNuQixNQUFNLEVBQUMsS0FBSyxFQUFDLEdBQUcsS0FBSyxDQUFDO0lBRXRCLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzFDLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDekQsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUUxQyxJQUFJLENBQUMsTUFBTSxDQUNQLEtBQUssS0FBSyxNQUFNLEVBQ2hCLEdBQUcsRUFBRSxDQUFDLGtCQUFrQixNQUFNLFNBQVMsTUFBTSx3QkFBd0I7UUFDakUsVUFBVSxDQUFDLENBQUMsS0FBSyxTQUFTLEtBQUssbUNBQW1DO1FBQ2xFLDhDQUE4QyxDQUFDLENBQUM7SUFFeEQsZ0VBQWdFO0lBQ2hFLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUM5QixPQUFPLEVBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDLEtBQUssRUFBQyxDQUFDO0FBQzNELENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxhQUFhLEdBQWlCO0lBQ3pDLFVBQVUsRUFBRSxPQUFPO0lBQ25CLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxPQUFnQztDQUM3QyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0tlcm5lbENvbmZpZywgS2VybmVsRnVuYywgUmVzaGFwZSwgUmVzaGFwZUF0dHJzLCBSZXNoYXBlSW5wdXRzLCBUZW5zb3JJbmZvLCB1dGlsfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcblxuZXhwb3J0IGZ1bmN0aW9uIHJlc2hhcGUoXG4gICAgYXJnczoge2lucHV0czogUmVzaGFwZUlucHV0cywgYmFja2VuZDogV2ViR1BVQmFja2VuZCwgYXR0cnM6IFJlc2hhcGVBdHRyc30pOlxuICAgIFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7eH0gPSBpbnB1dHM7XG4gIGNvbnN0IHtzaGFwZX0gPSBhdHRycztcblxuICBjb25zdCB4U2l6ZSA9IHV0aWwuc2l6ZUZyb21TaGFwZSh4LnNoYXBlKTtcbiAgY29uc3QgJHNoYXBlID0gdXRpbC5pbmZlckZyb21JbXBsaWNpdFNoYXBlKHNoYXBlLCB4U2l6ZSk7XG4gIGNvbnN0ICR4U2l6ZSA9IHV0aWwuc2l6ZUZyb21TaGFwZSgkc2hhcGUpO1xuXG4gIHV0aWwuYXNzZXJ0KFxuICAgICAgeFNpemUgPT09ICR4U2l6ZSxcbiAgICAgICgpID0+IGBUaGUgbmV3IHNoYXBlICgkeyRzaGFwZX0pIGhhcyAkeyR4U2l6ZX0gZWxlbWVudHMgYW5kIHRoZSBvbGQgYCArXG4gICAgICAgICAgYHNoYXBlICgke3guc2hhcGV9KSBoYXMgJHt4U2l6ZX0gZWxlbWVudHMuIFRoZSBuZXcgc2hhcGUgYW5kIG9sZCBgICtcbiAgICAgICAgICBgc2hhcGUgbXVzdCBoYXZlIHRoZSBzYW1lIG51bWJlciBvZiBlbGVtZW50cy5gKTtcblxuICAvLyBCYWNrZW5kIG5lZWRzIHRvIHRyYWNrIHJlZkNvdW50IGZvciB0aGUgZGF0YUlkIGZvciByZXNoYXBlIG9wXG4gIGFyZ3MuYmFja2VuZC5pbmNSZWYoeC5kYXRhSWQpO1xuICByZXR1cm4ge2RhdGFJZDogeC5kYXRhSWQsIHNoYXBlOiAkc2hhcGUsIGR0eXBlOiB4LmR0eXBlfTtcbn1cblxuZXhwb3J0IGNvbnN0IHJlc2hhcGVDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogUmVzaGFwZSxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiByZXNoYXBlIGFzIHVua25vd24gYXMgS2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { broadcast_util, env, util } from '@tensorflow/tfjs-core';\nimport { MatMulPackedProgram } from '../matmul_packed_webgpu';\nimport { MatMulReduceProgram } from '../matmul_reduce_webgpu';\nimport { MatMulSmallOutputSizeProgram } from '../matmul_small_output_size_webgpu';\nimport { BiasActivationProgram, MatMulSplitKProgram } from '../matmul_splitK_webgpu';\nimport { MatMulProgramType } from '../webgpu_util';\nimport { fill } from './Fill';\nimport { reshape } from './Reshape';\nexport function batchMatMulImpl({ a, b, transposeA, transposeB, backend, bias = null, preluActivationWeights = null, leakyreluAlpha = 0, activation = null }) {\n    const aRank = a.shape.length;\n    const bRank = b.shape.length;\n    const innerShapeA = transposeA ? a.shape[aRank - 2] : a.shape[aRank - 1];\n    const innerShapeB = transposeB ? b.shape[bRank - 1] : b.shape[bRank - 2];\n    const outerShapeA = transposeA ? a.shape[aRank - 1] : a.shape[aRank - 2];\n    const outerShapeB = transposeB ? b.shape[bRank - 2] : b.shape[bRank - 1];\n    const outerDimsA = a.shape.slice(0, -2);\n    const outerDimsB = b.shape.slice(0, -2);\n    const batchDimA = util.sizeFromShape(outerDimsA);\n    const batchDimB = util.sizeFromShape(outerDimsB);\n    const outShapeOuterDims = broadcast_util.assertAndGetBroadcastShape(a.shape.slice(0, -2), b.shape.slice(0, -2));\n    const outShape = outShapeOuterDims.concat([outerShapeA, outerShapeB]);\n    util.assert(innerShapeA === innerShapeB, () => `Error in matMul: inner shapes (${innerShapeA}) and (` +\n        `${innerShapeB}) of Tensors with shapes ${a.shape} and ` +\n        `${b.shape} and transposeA=${transposeA}` +\n        ` and transposeB=${transposeB} must match.`);\n    const a3dShape = transposeA ?\n        [batchDimA, innerShapeA, outerShapeA] :\n        [batchDimA, outerShapeA, innerShapeA];\n    const b3dShape = transposeB ?\n        [batchDimB, outerShapeB, innerShapeB] :\n        [batchDimB, innerShapeB, outerShapeB];\n    // The rest of the implementation is designed to operate on rank-3 tensors\n    const a3d = reshape({ inputs: { x: a }, backend, attrs: { shape: a3dShape } });\n    const b3d = reshape({ inputs: { x: b }, backend, attrs: { shape: b3dShape } });\n    const intermediates = [a3d, b3d];\n    const batchDim = Math.max(batchDimA, batchDimB);\n    const inputs = [a3d, b3d];\n    const dimensions = [\n        { type: 'int32', data: [outerShapeA] }, { type: 'int32', data: [outerShapeB] },\n        { type: 'int32', data: [innerShapeA] }\n    ];\n    let program;\n    let out;\n    const outputShape = [batchDim, outerShapeA, outerShapeB];\n    let matmulProgramType = env().get('WEBGPU_MATMUL_PROGRAM_TYPE');\n    if (matmulProgramType < 0) {\n        // Usually increasing workgroups is a good way to gain more performance for\n        // few workgroups by tiling 32x32 (default matmul algorithm). Currently,\n        // there are three ways to increase workgroups. 1) MatMulReduceProgram,\n        // which is used only when the output size is very small (128 for now). 2)\n        // MatMulSplitKProgram, increasing workgroups by spliting K. 3)\n        // MatMulSmallOutputSizeProgram, increasing workgroups by small tile size.\n        // For different devices, the minimum optimal workgroups may be different.\n        // So here we set a |thresholdToIncreaseWorkgroups| to indicate whether we\n        // need to increase workgroups. And the literal number is an empirical\n        // value.\n        const thresholdFlagValue = env().getNumber('WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL');\n        const thresholdToIncreaseWorkgroups = thresholdFlagValue > 0 ?\n            thresholdFlagValue :\n            backend.thresholdToIncreaseWorkgroups;\n        const workgroupsBy32x32 = batchDim * Math.ceil(outerShapeA / 32) * Math.ceil(outerShapeB / 32);\n        const hasFewWorkgroups = workgroupsBy32x32 <= thresholdToIncreaseWorkgroups ||\n            (outerShapeA <= 8 &&\n                workgroupsBy32x32 <= thresholdToIncreaseWorkgroups * 2);\n        if (hasFewWorkgroups) {\n            if (batchDim * outerShapeA * outerShapeB <= 128) {\n                matmulProgramType = MatMulProgramType.MatMulReduceProgram;\n            }\n            else if (batchDim === 1 && innerShapeB >= 2000) {\n                matmulProgramType = MatMulProgramType.MatMulSplitKProgram;\n            }\n            else {\n                matmulProgramType = MatMulProgramType.MatMulSmallOutputSizeProgram;\n            }\n        }\n        else {\n            matmulProgramType = MatMulProgramType.MatMulPackedProgram;\n        }\n    }\n    switch (matmulProgramType) {\n        case MatMulProgramType.MatMulReduceProgram:\n            program = new MatMulReduceProgram(outputShape, transposeA, transposeB, bias, activation, preluActivationWeights);\n            break;\n        case MatMulProgramType.MatMulSplitKProgram: {\n            // The output buffer must be initailzed to zero before using since we\n            // use atomicAdd in MatMulSplitKProgram.\n            out = fill({ backend, attrs: { shape: outputShape, value: 0, dtype: a.dtype } });\n            program = new MatMulSplitKProgram(outputShape, innerShapeB, transposeA, transposeB);\n            if (bias || activation) {\n                out =\n                    backend.runWebGPUProgram(program, inputs, a.dtype, dimensions, out);\n                const biasActivationProgram = new BiasActivationProgram(out.shape, bias, activation, preluActivationWeights);\n                let uniformData = null;\n                const activationInputs = [out];\n                if (bias) {\n                    activationInputs.push(bias);\n                }\n                if (preluActivationWeights) {\n                    activationInputs.push(preluActivationWeights);\n                }\n                if (activation === 'leakyrelu') {\n                    uniformData = [{ type: 'float32', data: [leakyreluAlpha] }];\n                    biasActivationProgram.uniforms += ' alpha : f32,';\n                }\n                const outActivated = backend.runWebGPUProgram(biasActivationProgram, activationInputs, out.dtype, uniformData);\n                intermediates.push(out);\n                const outReshaped = reshape({ inputs: { x: outActivated }, backend, attrs: { shape: outShape } });\n                intermediates.push(outActivated);\n                for (const i of intermediates) {\n                    backend.disposeData(i.dataId);\n                }\n                return outReshaped;\n            }\n            break;\n        }\n        case MatMulProgramType.MatMulSmallOutputSizeProgram:\n            program = new MatMulSmallOutputSizeProgram(a3dShape, b3dShape, outputShape, transposeA, transposeB, bias, activation, preluActivationWeights);\n            break;\n        case MatMulProgramType.MatMulPackedProgram:\n            // Experiments show that sequential access is more friendly for Intel\n            // GPUs.\n            const sequentialAccessByThreads = backend.adapterInfo.isIntel();\n            program = new MatMulPackedProgram(a3dShape, outputShape, transposeA, transposeB, bias, activation, preluActivationWeights, sequentialAccessByThreads);\n            break;\n        default:\n            throw new Error(`Unsupported MatMulProgramType ${matmulProgramType}.`);\n    }\n    if (bias) {\n        inputs.push(bias);\n    }\n    if (preluActivationWeights) {\n        inputs.push(preluActivationWeights);\n    }\n    if (activation === 'leakyrelu') {\n        dimensions.push({ type: 'float32', data: [leakyreluAlpha] });\n        program.uniforms += ' alpha : f32,';\n    }\n    out = backend.runWebGPUProgram(program, inputs, a.dtype, dimensions, out);\n    const outReshaped = reshape({ inputs: { x: out }, backend, attrs: { shape: outShape } });\n    intermediates.push(out);\n    for (const i of intermediates) {\n        backend.disposeData(i.dataId);\n    }\n    return outReshaped;\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { _FusedMatMul } from '@tensorflow/tfjs-core';\nimport { batchMatMulImpl } from './BatchMatMul_impl';\nexport function _fusedMatMul(args) {\n    const { inputs, backend, attrs } = args;\n    const { a, b, bias, preluActivationWeights } = inputs;\n    const { transposeA, transposeB, activation, leakyreluAlpha } = attrs;\n    return batchMatMulImpl({\n        a,\n        b,\n        transposeA,\n        transposeB,\n        backend,\n        bias,\n        preluActivationWeights,\n        leakyreluAlpha,\n        activation\n    });\n}\nexport const _fusedMatMulConfig = {\n    kernelName: _FusedMatMul,\n    backendName: 'webgpu',\n    kernelFunc: _fusedMatMul,\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiX0Z1c2VkTWF0TXVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9fRnVzZWRNYXRNdWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLFlBQVksRUFBa0UsTUFBTSx1QkFBdUIsQ0FBQztBQUdwSCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFFbkQsTUFBTSxVQUFVLFlBQVksQ0FBQyxJQUk1QjtJQUNDLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QyxNQUFNLEVBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsc0JBQXNCLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFDcEQsTUFBTSxFQUFDLFVBQVUsRUFBRSxVQUFVLEVBQUUsVUFBVSxFQUFFLGNBQWMsRUFBQyxHQUFHLEtBQUssQ0FBQztJQUVuRSxPQUFPLGVBQWUsQ0FBQztRQUNyQixDQUFDO1FBQ0QsQ0FBQztRQUNELFVBQVU7UUFDVixVQUFVO1FBQ1YsT0FBTztRQUNQLElBQUk7UUFDSixzQkFBc0I7UUFDdEIsY0FBYztRQUNkLFVBQVU7S0FDWCxDQUFDLENBQUM7QUFDTCxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQWlCO0lBQzlDLFVBQVUsRUFBRSxZQUFZO0lBQ3hCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxZQUFxQztDQUNsRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge19GdXNlZE1hdE11bCwgX0Z1c2VkTWF0TXVsQXR0cnMsIF9GdXNlZE1hdE11bElucHV0cywgS2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcbmltcG9ydCB7YmF0Y2hNYXRNdWxJbXBsfSBmcm9tICcuL0JhdGNoTWF0TXVsX2ltcGwnO1xuXG5leHBvcnQgZnVuY3Rpb24gX2Z1c2VkTWF0TXVsKGFyZ3M6IHtcbiAgaW5wdXRzOiBfRnVzZWRNYXRNdWxJbnB1dHMsXG4gIGF0dHJzOiBfRnVzZWRNYXRNdWxBdHRycyxcbiAgYmFja2VuZDogV2ViR1BVQmFja2VuZFxufSkge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7YSwgYiwgYmlhcywgcHJlbHVBY3RpdmF0aW9uV2VpZ2h0c30gPSBpbnB1dHM7XG4gIGNvbnN0IHt0cmFuc3Bvc2VBLCB0cmFuc3Bvc2VCLCBhY3RpdmF0aW9uLCBsZWFreXJlbHVBbHBoYX0gPSBhdHRycztcblxuICByZXR1cm4gYmF0Y2hNYXRNdWxJbXBsKHtcbiAgICBhLFxuICAgIGIsXG4gICAgdHJhbnNwb3NlQSxcbiAgICB0cmFuc3Bvc2VCLFxuICAgIGJhY2tlbmQsXG4gICAgYmlhcyxcbiAgICBwcmVsdUFjdGl2YXRpb25XZWlnaHRzLFxuICAgIGxlYWt5cmVsdUFscGhhLFxuICAgIGFjdGl2YXRpb25cbiAgfSk7XG59XG5cbmV4cG9ydCBjb25zdCBfZnVzZWRNYXRNdWxDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogX0Z1c2VkTWF0TXVsLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IF9mdXNlZE1hdE11bCBhcyB1bmtub3duIGFzIEtlcm5lbEZ1bmMsXG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nimport { getBinaryOpString } from './binary_op_util';\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class BinaryOpComplexProgram {\n    constructor(op, aShape, bShape) {\n        this.variableNames = ['AReal', 'AImag', 'BReal', 'BImag'];\n        this.workgroupSize = [128, 1, 1];\n        this.size = true;\n        this.outputShape = backend_util.assertAndGetBroadcastShape(aShape, bShape);\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.shaderKey = `binaryOpComplex_${op}`;\n        this.op = op;\n    }\n    getUserCode() {\n        const opStr = getBinaryOpString(this.op, false);\n        const userCode = `\n      fn binaryOpComplex(\n          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {\n        ${opStr}\n      }\n\n      ${main('index')} {\n        if(index < uniforms.size) {\n          let areal = getARealByOutputIndex(index);\n          let aimag = getAImagByOutputIndex(index);\n          let breal = getBRealByOutputIndex(index);\n          let bimag = getBImagByOutputIndex(index);\n          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));\n        }\n      }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmluYXJ5X29wX2NvbXBsZXhfd2ViZ3B1LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMvYmluYXJ5X29wX2NvbXBsZXhfd2ViZ3B1LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUNuRCxPQUFPLEVBQWUsaUJBQWlCLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUNqRSxPQUFPLEVBQUMsbUJBQW1CLElBQUksSUFBSSxFQUFnQixNQUFNLGtCQUFrQixDQUFDO0FBQzVFLE9BQU8sRUFBQyxlQUFlLEVBQUUsa0JBQWtCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFbEUsTUFBTSxPQUFPLHNCQUFzQjtJQVVqQyxZQUFZLEVBQWdCLEVBQUUsTUFBZ0IsRUFBRSxNQUFnQjtRQVRoRSxrQkFBYSxHQUFHLENBQUMsT0FBTyxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFLckQsa0JBQWEsR0FBNkIsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBRXRELFNBQUksR0FBRyxJQUFJLENBQUM7UUFHVixJQUFJLENBQUMsV0FBVyxHQUFHLFlBQVksQ0FBQywwQkFBMEIsQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDM0UsSUFBSSxDQUFDLGNBQWMsR0FBRyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxlQUFlLENBQzNCLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFFL0QsSUFBSSxDQUFDLFNBQVMsR0FBRyxtQkFBbUIsRUFBRSxFQUFFLENBQUM7UUFDekMsSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUM7SUFDZixDQUFDO0lBRUQsV0FBVztRQUNULE1BQU0sS0FBSyxHQUFHLGlCQUFpQixDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDaEQsTUFBTSxRQUFRLEdBQUc7OztVQUdYLEtBQUs7OztRQUdQLElBQUksQ0FBQyxPQUFPLENBQUM7Ozs7Ozs7OztLQVNoQixDQUFDO1FBQ0YsT0FBTyxRQUFRLENBQUM7SUFDbEIsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge2JhY2tlbmRfdXRpbH0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcbmltcG9ydCB7QmluYXJ5T3BUeXBlLCBnZXRCaW5hcnlPcFN0cmluZ30gZnJvbSAnLi9iaW5hcnlfb3BfdXRpbCc7XG5pbXBvcnQge2dldE1haW5IZWFkZXJTdHJpbmcgYXMgbWFpbiwgV2ViR1BVUHJvZ3JhbX0gZnJvbSAnLi93ZWJncHVfcHJvZ3JhbSc7XG5pbXBvcnQge2NvbXB1dGVEaXNwYXRjaCwgZmxhdERpc3BhdGNoTGF5b3V0fSBmcm9tICcuL3dlYmdwdV91dGlsJztcblxuZXhwb3J0IGNsYXNzIEJpbmFyeU9wQ29tcGxleFByb2dyYW0gaW1wbGVtZW50cyBXZWJHUFVQcm9ncmFtIHtcbiAgdmFyaWFibGVOYW1lcyA9IFsnQVJlYWwnLCAnQUltYWcnLCAnQlJlYWwnLCAnQkltYWcnXTtcbiAgb3V0cHV0U2hhcGU6IG51bWJlcltdO1xuICBzaGFkZXJLZXk6IHN0cmluZztcbiAgZGlzcGF0Y2hMYXlvdXQ6IHt4OiBudW1iZXJbXX07XG4gIGRpc3BhdGNoOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl07XG4gIHdvcmtncm91cFNpemU6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXSA9IFsxMjgsIDEsIDFdO1xuICBvcDogQmluYXJ5T3BUeXBlO1xuICBzaXplID0gdHJ1ZTtcblxuICBjb25zdHJ1Y3RvcihvcDogQmluYXJ5T3BUeXBlLCBhU2hhcGU6IG51bWJlcltdLCBiU2hhcGU6IG51bWJlcltdKSB7XG4gICAgdGhpcy5vdXRwdXRTaGFwZSA9IGJhY2tlbmRfdXRpbC5hc3NlcnRBbmRHZXRCcm9hZGNhc3RTaGFwZShhU2hhcGUsIGJTaGFwZSk7XG4gICAgdGhpcy5kaXNwYXRjaExheW91dCA9IGZsYXREaXNwYXRjaExheW91dCh0aGlzLm91dHB1dFNoYXBlKTtcbiAgICB0aGlzLmRpc3BhdGNoID0gY29tcHV0ZURpc3BhdGNoKFxuICAgICAgICB0aGlzLmRpc3BhdGNoTGF5b3V0LCB0aGlzLm91dHB1dFNoYXBlLCB0aGlzLndvcmtncm91cFNpemUpO1xuXG4gICAgdGhpcy5zaGFkZXJLZXkgPSBgYmluYXJ5T3BDb21wbGV4XyR7b3B9YDtcbiAgICB0aGlzLm9wID0gb3A7XG4gIH1cblxuICBnZXRVc2VyQ29kZSgpOiBzdHJpbmcge1xuICAgIGNvbnN0IG9wU3RyID0gZ2V0QmluYXJ5T3BTdHJpbmcodGhpcy5vcCwgZmFsc2UpO1xuICAgIGNvbnN0IHVzZXJDb2RlID0gYFxuICAgICAgZm4gYmluYXJ5T3BDb21wbGV4KFxuICAgICAgICAgIGFyZWFsIDogZjMyLCBhaW1hZyA6IGYzMiwgYnJlYWwgOiBmMzIsIGJpbWFnIDogZjMyKSAtPiBmMzIge1xuICAgICAgICAke29wU3RyfVxuICAgICAgfVxuXG4gICAgICAke21haW4oJ2luZGV4Jyl9IHtcbiAgICAgICAgaWYoaW5kZXggPCB1bmlmb3Jtcy5zaXplKSB7XG4gICAgICAgICAgbGV0IGFyZWFsID0gZ2V0QVJlYWxCeU91dHB1dEluZGV4KGluZGV4KTtcbiAgICAgICAgICBsZXQgYWltYWcgPSBnZXRBSW1hZ0J5T3V0cHV0SW5kZXgoaW5kZXgpO1xuICAgICAgICAgIGxldCBicmVhbCA9IGdldEJSZWFsQnlPdXRwdXRJbmRleChpbmRleCk7XG4gICAgICAgICAgbGV0IGJpbWFnID0gZ2V0QkltYWdCeU91dHB1dEluZGV4KGluZGV4KTtcbiAgICAgICAgICBzZXRPdXRwdXRBdEluZGV4KGluZGV4LCBiaW5hcnlPcENvbXBsZXgoYXJlYWwsIGFpbWFnLCBicmVhbCwgYmltYWcpKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIGA7XG4gICAgcmV0dXJuIHVzZXJDb2RlO1xuICB9XG59XG4iXX0=","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nimport { getBinaryOpString } from './binary_op_util';\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class BinaryOpProgram {\n    constructor(op, aShape, bShape) {\n        this.size = true;\n        this.variableNames = ['A', 'B'];\n        this.outputShape = backend_util.assertAndGetBroadcastShape(aShape, bShape);\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.op = op;\n        this.useSharedMemoryWithA =\n            aShape.length <= 1 && bShape.length > 1 && aShape[0] < 128;\n        this.useSharedMemoryWithB =\n            bShape.length <= 1 && aShape.length > 1 && bShape[0] < 128;\n        if (this.useSharedMemoryWithA || this.useSharedMemoryWithB) {\n            this.outputComponent = 1;\n            this.variableComponents = [1, 1];\n            // lastDimensionSize is used as sharedBuf array size, so can not be\n            // used as uniform.\n            this.lastDimensionSize =\n                this.useSharedMemoryWithB ? bShape[0] : aShape[0];\n            this.shaderKey = `binary_${op}_${this.lastDimensionSize}`;\n            this.type = 'shared';\n            // This is an experimental value when using shared memory.\n            // Note that the maximum of workgroup X dimension is 256.\n            this.workgroupSize = [256, 1, 1];\n        }\n        else {\n            const aDivisibleBy4 = aShape.length > 0 && aShape[aShape.length - 1] % 4 === 0;\n            const bDivisibleBy4 = bShape.length > 0 && bShape[bShape.length - 1] % 4 === 0;\n            if (aDivisibleBy4 && bDivisibleBy4) {\n                this.outputComponent = 4;\n                this.variableComponents = [4, 4];\n            }\n            else if ((aDivisibleBy4 &&\n                (util.isScalarShape(bShape) || bShape[bShape.length - 1] === 1)) ||\n                (bDivisibleBy4 &&\n                    (util.isScalarShape(aShape) || aShape[aShape.length - 1] === 1))) {\n                this.outputComponent = 4;\n                this.variableComponents = aDivisibleBy4 ? [4, 1] : [1, 4];\n            }\n            else {\n                this.outputComponent = 1;\n                this.variableComponents = [1, 1];\n            }\n            this.type = 'nonshared';\n            this.shaderKey = `binary_${op}_${this.variableComponents}`;\n            // TODO(jiajia.qin@intel.com): Heuristically select a good work group\n            // size.\n            this.workgroupSize = [128, 1, 1];\n        }\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize, [this.outputComponent, 1, 1]);\n    }\n    getUserCode() {\n        let userCode;\n        const dType = this.outputComponent === 4 ? 'vec4<f32>' : 'f32';\n        const opFnStr = `\n    fn binaryOperation(a : ${dType}, b : ${dType}) -> ${dType} {\n      ${getBinaryOpString(this.op, this.outputComponent === 4)}\n    };\n    `;\n        if (this.type === 'shared') {\n            const sharedIndexSnippet = this.lastDimensionSize > 1 ?\n                `coords[${this.outputShape.length - 1}]` :\n                '0';\n            const accessDataSnippet = this.useSharedMemoryWithB ?\n                `let a = getAByOutputIndex(index);\n          let b = sharedBuf[${sharedIndexSnippet}];` :\n                `let a = sharedBuf[${sharedIndexSnippet}];\n          let b = getBByOutputIndex(index);`;\n            userCode = `\n        ${opFnStr}\n        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;\n        ${main('index')} {\n          // Fill in the shared memory buffer.\n          let localIndex = i32(localId.x);\n          if(localIndex < ${this.lastDimensionSize}) {\n            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB ? 'B' : 'A'}[localIndex]);\n          }\n          workgroupBarrier();\n\n          if(index < uniforms.size) {\n            let coords = getCoordsFromIndex(index);\n            ${accessDataSnippet}\n            setOutputAtIndex(index, binaryOperation(a, b));\n          }\n        }\n        `;\n        }\n        else {\n            userCode = `\n       ${opFnStr}\n       ${main('index')} {\n         if (index < uniforms.size) {\n           let coords = getCoordsFromIndex(index * ${this.outputComponent});\n           let a = ${dType}(getAByOutputCoords(coords));\n           let b = ${dType}(getBByOutputCoords(coords));\n           setOutputAtIndex(index, binaryOperation(a, b));\n         }\n       }\n       `;\n        }\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Identity } from '@tensorflow/tfjs-core';\nexport function identity(args) {\n    const { inputs } = args;\n    const { x } = inputs;\n    args.backend.incRef(x.dataId);\n    return { dataId: x.dataId, shape: x.shape, dtype: x.dtype };\n}\nexport const identityConfig = {\n    kernelName: Identity,\n    backendName: 'webgpu',\n    kernelFunc: identity\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSWRlbnRpdHkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL0lkZW50aXR5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxRQUFRLEVBQXVELE1BQU0sdUJBQXVCLENBQUM7QUFHckcsTUFBTSxVQUFVLFFBQVEsQ0FDcEIsSUFBc0Q7SUFDeEQsTUFBTSxFQUFDLE1BQU0sRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QixNQUFNLEVBQUMsQ0FBQyxFQUFDLEdBQUcsTUFBTSxDQUFDO0lBRW5CLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUM5QixPQUFPLEVBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQyxLQUFLLEVBQUMsQ0FBQztBQUM1RCxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFpQjtJQUMxQyxVQUFVLEVBQUUsUUFBUTtJQUNwQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsUUFBaUM7Q0FDOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtJZGVudGl0eSwgSWRlbnRpdHlJbnB1dHMsIEtlcm5lbENvbmZpZywgS2VybmVsRnVuYywgVGVuc29ySW5mb30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuXG5leHBvcnQgZnVuY3Rpb24gaWRlbnRpdHkoXG4gICAgYXJnczoge2lucHV0czogSWRlbnRpdHlJbnB1dHMsIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmR9KTogVGVuc29ySW5mbyB7XG4gIGNvbnN0IHtpbnB1dHN9ID0gYXJncztcbiAgY29uc3Qge3h9ID0gaW5wdXRzO1xuXG4gIGFyZ3MuYmFja2VuZC5pbmNSZWYoeC5kYXRhSWQpO1xuICByZXR1cm4ge2RhdGFJZDogeC5kYXRhSWQsIHNoYXBlOiB4LnNoYXBlLCBkdHlwZTogeC5kdHlwZX07XG59XG5cbmV4cG9ydCBjb25zdCBpZGVudGl0eUNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBJZGVudGl0eSxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBpZGVudGl0eSBhcyB1bmtub3duIGFzIEtlcm5lbEZ1bmNcbn07XG4iXX0=","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Complex } from '@tensorflow/tfjs-core';\nimport { identity } from './Identity';\n/**\n * Complex tensors share data with their real and imaginary components. Complex\n * tensors' reference to the components is tracked by refCount on the individual\n * component. The refCounts are increased by the identity call.\n *\n * When a complex tensor is disposed, it will reduce the refCount on the\n * components by calling disposeData on each.\n */\nexport function complex(args) {\n    const { inputs, backend } = args;\n    const { real, imag } = inputs;\n    const complexInfo = backend.makeTensorInfo(real.shape, 'complex64');\n    const complex = backend.tensorMap.get(complexInfo.dataId);\n    const realTensorInfo = identity({ inputs: { x: real }, backend });\n    const imagTensorInfo = identity({ inputs: { x: imag }, backend });\n    complex.complexTensorInfos = { real: realTensorInfo, imag: imagTensorInfo };\n    return complexInfo;\n}\nexport const complexConfig = {\n    kernelName: Complex,\n    backendName: 'webgpu',\n    kernelFunc: complex\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29tcGxleC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvQ29tcGxleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsT0FBTyxFQUFzRCxNQUFNLHVCQUF1QixDQUFDO0FBR25HLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxZQUFZLENBQUM7QUFFcEM7Ozs7Ozs7R0FPRztBQUNILE1BQU0sVUFBVSxPQUFPLENBQUMsSUFBcUQ7SUFFM0UsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFDL0IsTUFBTSxFQUFDLElBQUksRUFBRSxJQUFJLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFFNUIsTUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ3BFLE1BQU0sT0FBTyxHQUFHLE9BQU8sQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUUxRCxNQUFNLGNBQWMsR0FBRyxRQUFRLENBQUMsRUFBQyxNQUFNLEVBQUUsRUFBQyxDQUFDLEVBQUUsSUFBSSxFQUFDLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztJQUU5RCxNQUFNLGNBQWMsR0FBRyxRQUFRLENBQUMsRUFBQyxNQUFNLEVBQUUsRUFBQyxDQUFDLEVBQUUsSUFBSSxFQUFDLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztJQUU5RCxPQUFPLENBQUMsa0JBQWtCLEdBQUcsRUFBQyxJQUFJLEVBQUUsY0FBYyxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUMsQ0FBQztJQUUxRSxPQUFPLFdBQVcsQ0FBQztBQUNyQixDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFpQjtJQUN6QyxVQUFVLEVBQUUsT0FBTztJQUNuQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsT0FBZ0M7Q0FDN0MsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtDb21wbGV4LCBDb21wbGV4SW5wdXRzLCBLZXJuZWxDb25maWcsIEtlcm5lbEZ1bmMsIFRlbnNvckluZm99IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuaW1wb3J0IHtpZGVudGl0eX0gZnJvbSAnLi9JZGVudGl0eSc7XG5cbi8qKlxuICogQ29tcGxleCB0ZW5zb3JzIHNoYXJlIGRhdGEgd2l0aCB0aGVpciByZWFsIGFuZCBpbWFnaW5hcnkgY29tcG9uZW50cy4gQ29tcGxleFxuICogdGVuc29ycycgcmVmZXJlbmNlIHRvIHRoZSBjb21wb25lbnRzIGlzIHRyYWNrZWQgYnkgcmVmQ291bnQgb24gdGhlIGluZGl2aWR1YWxcbiAqIGNvbXBvbmVudC4gVGhlIHJlZkNvdW50cyBhcmUgaW5jcmVhc2VkIGJ5IHRoZSBpZGVudGl0eSBjYWxsLlxuICpcbiAqIFdoZW4gYSBjb21wbGV4IHRlbnNvciBpcyBkaXNwb3NlZCwgaXQgd2lsbCByZWR1Y2UgdGhlIHJlZkNvdW50IG9uIHRoZVxuICogY29tcG9uZW50cyBieSBjYWxsaW5nIGRpc3Bvc2VEYXRhIG9uIGVhY2guXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb21wbGV4KGFyZ3M6IHtpbnB1dHM6IENvbXBsZXhJbnB1dHMsIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmR9KTpcbiAgICBUZW5zb3JJbmZvIHtcbiAgY29uc3Qge2lucHV0cywgYmFja2VuZH0gPSBhcmdzO1xuICBjb25zdCB7cmVhbCwgaW1hZ30gPSBpbnB1dHM7XG5cbiAgY29uc3QgY29tcGxleEluZm8gPSBiYWNrZW5kLm1ha2VUZW5zb3JJbmZvKHJlYWwuc2hhcGUsICdjb21wbGV4NjQnKTtcbiAgY29uc3QgY29tcGxleCA9IGJhY2tlbmQudGVuc29yTWFwLmdldChjb21wbGV4SW5mby5kYXRhSWQpO1xuXG4gIGNvbnN0IHJlYWxUZW5zb3JJbmZvID0gaWRlbnRpdHkoe2lucHV0czoge3g6IHJlYWx9LCBiYWNrZW5kfSk7XG5cbiAgY29uc3QgaW1hZ1RlbnNvckluZm8gPSBpZGVudGl0eSh7aW5wdXRzOiB7eDogaW1hZ30sIGJhY2tlbmR9KTtcblxuICBjb21wbGV4LmNvbXBsZXhUZW5zb3JJbmZvcyA9IHtyZWFsOiByZWFsVGVuc29ySW5mbywgaW1hZzogaW1hZ1RlbnNvckluZm99O1xuXG4gIHJldHVybiBjb21wbGV4SW5mbztcbn1cblxuZXhwb3J0IGNvbnN0IGNvbXBsZXhDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogQ29tcGxleCxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBjb21wbGV4IGFzIHVua25vd24gYXMgS2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getUnaryOpString } from './unary_op_util';\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class UnaryOpProgram {\n    constructor(outputShape, op, uniforms = '') {\n        this.variableNames = ['A'];\n        this.size = true;\n        // TODO(jiajia.qin@intel.com): Heuristically select a good work group size.\n        const workgroupSizeX = 128;\n        this.workgroupSize = [workgroupSizeX, 1, 1];\n        this.outputShape = outputShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.op = op;\n        if (uniforms !== '') {\n            this.uniforms = uniforms;\n        }\n        this.shaderKey = `unary_${op}`;\n    }\n    getUserCode() {\n        return `\n      fn unaryOperation(a : f32) -> f32 {\n        ${getUnaryOpString(this.op, false)}\n      }\n      ${main('index')} {\n        if (index < uniforms.size) {\n          let a = getAByOutputIndex(index);\n          setOutputAtIndex(index, unaryOperation(a));\n        }\n      }\n      `;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5hcnlfb3Bfd2ViZ3B1LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMvdW5hcnlfb3Bfd2ViZ3B1LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxnQkFBZ0IsRUFBYyxNQUFNLGlCQUFpQixDQUFDO0FBQzlELE9BQU8sRUFBQyxtQkFBbUIsSUFBSSxJQUFJLEVBQWdCLE1BQU0sa0JBQWtCLENBQUM7QUFDNUUsT0FBTyxFQUFDLGVBQWUsRUFBRSxrQkFBa0IsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUVsRSxNQUFNLE9BQU8sY0FBYztJQVd6QixZQUFZLFdBQXFCLEVBQUUsRUFBZSxFQUFFLFFBQVEsR0FBRyxFQUFFO1FBTmpFLGtCQUFhLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUl0QixTQUFJLEdBQUcsSUFBSSxDQUFDO1FBR1YsMkVBQTJFO1FBQzNFLE1BQU0sY0FBYyxHQUFHLEdBQUcsQ0FBQztRQUMzQixJQUFJLENBQUMsYUFBYSxHQUFHLENBQUMsY0FBYyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUM1QyxJQUFJLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQztRQUMvQixJQUFJLENBQUMsY0FBYyxHQUFHLGtCQUFrQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUMzRCxJQUFJLENBQUMsUUFBUSxHQUFHLGVBQWUsQ0FDM0IsSUFBSSxDQUFDLGNBQWMsRUFBRSxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUMvRCxJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQztRQUNiLElBQUksUUFBUSxLQUFLLEVBQUUsRUFBRTtZQUNuQixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztTQUMxQjtRQUNELElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxFQUFFLEVBQUUsQ0FBQztJQUNqQyxDQUFDO0lBRUQsV0FBVztRQUNULE9BQU87O1VBRUQsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxLQUFLLENBQUM7O1FBRWxDLElBQUksQ0FBQyxPQUFPLENBQUM7Ozs7OztPQU1kLENBQUM7SUFDTixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7Z2V0VW5hcnlPcFN0cmluZywgVW5hcnlPcFR5cGV9IGZyb20gJy4vdW5hcnlfb3BfdXRpbCc7XG5pbXBvcnQge2dldE1haW5IZWFkZXJTdHJpbmcgYXMgbWFpbiwgV2ViR1BVUHJvZ3JhbX0gZnJvbSAnLi93ZWJncHVfcHJvZ3JhbSc7XG5pbXBvcnQge2NvbXB1dGVEaXNwYXRjaCwgZmxhdERpc3BhdGNoTGF5b3V0fSBmcm9tICcuL3dlYmdwdV91dGlsJztcblxuZXhwb3J0IGNsYXNzIFVuYXJ5T3BQcm9ncmFtIGltcGxlbWVudHMgV2ViR1BVUHJvZ3JhbSB7XG4gIG91dHB1dFNoYXBlOiBudW1iZXJbXTtcbiAgc2hhZGVyS2V5OiBzdHJpbmc7XG4gIGRpc3BhdGNoTGF5b3V0OiB7eDogbnVtYmVyW119O1xuICBkaXNwYXRjaDogW251bWJlciwgbnVtYmVyLCBudW1iZXJdO1xuICB2YXJpYWJsZU5hbWVzID0gWydBJ107XG4gIHdvcmtncm91cFNpemU6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXTtcbiAgb3A6IFVuYXJ5T3BUeXBlO1xuICB1bmlmb3Jtcz86IHN0cmluZztcbiAgc2l6ZSA9IHRydWU7XG5cbiAgY29uc3RydWN0b3Iob3V0cHV0U2hhcGU6IG51bWJlcltdLCBvcDogVW5hcnlPcFR5cGUsIHVuaWZvcm1zID0gJycpIHtcbiAgICAvLyBUT0RPKGppYWppYS5xaW5AaW50ZWwuY29tKTogSGV1cmlzdGljYWxseSBzZWxlY3QgYSBnb29kIHdvcmsgZ3JvdXAgc2l6ZS5cbiAgICBjb25zdCB3b3JrZ3JvdXBTaXplWCA9IDEyODtcbiAgICB0aGlzLndvcmtncm91cFNpemUgPSBbd29ya2dyb3VwU2l6ZVgsIDEsIDFdO1xuICAgIHRoaXMub3V0cHV0U2hhcGUgPSBvdXRwdXRTaGFwZTtcbiAgICB0aGlzLmRpc3BhdGNoTGF5b3V0ID0gZmxhdERpc3BhdGNoTGF5b3V0KHRoaXMub3V0cHV0U2hhcGUpO1xuICAgIHRoaXMuZGlzcGF0Y2ggPSBjb21wdXRlRGlzcGF0Y2goXG4gICAgICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQsIHRoaXMub3V0cHV0U2hhcGUsIHRoaXMud29ya2dyb3VwU2l6ZSk7XG4gICAgdGhpcy5vcCA9IG9wO1xuICAgIGlmICh1bmlmb3JtcyAhPT0gJycpIHtcbiAgICAgIHRoaXMudW5pZm9ybXMgPSB1bmlmb3JtcztcbiAgICB9XG4gICAgdGhpcy5zaGFkZXJLZXkgPSBgdW5hcnlfJHtvcH1gO1xuICB9XG5cbiAgZ2V0VXNlckNvZGUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gYFxuICAgICAgZm4gdW5hcnlPcGVyYXRpb24oYSA6IGYzMikgLT4gZjMyIHtcbiAgICAgICAgJHtnZXRVbmFyeU9wU3RyaW5nKHRoaXMub3AsIGZhbHNlKX1cbiAgICAgIH1cbiAgICAgICR7bWFpbignaW5kZXgnKX0ge1xuICAgICAgICBpZiAoaW5kZXggPCB1bmlmb3Jtcy5zaXplKSB7XG4gICAgICAgICAgbGV0IGEgPSBnZXRBQnlPdXRwdXRJbmRleChpbmRleCk7XG4gICAgICAgICAgc2V0T3V0cHV0QXRJbmRleChpbmRleCwgdW5hcnlPcGVyYXRpb24oYSkpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBgO1xuICB9XG59XG4iXX0=","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, upcastType } from '@tensorflow/tfjs-core';\nimport { BinaryOpComplexProgram } from '../binary_op_complex_webgpu';\nimport { BinaryOpType } from '../binary_op_util';\nimport { BinaryOpProgram } from '../binary_op_webgpu';\nimport { complex } from '../kernels/Complex';\nimport { UnaryOpProgram } from '../unary_op_webgpu';\n/**\n * Template that creates a `KernelFunc` for unary ops.\n * @param opType Op type to create `UnaryOpProgram`.\n * @param cpuKernelImpl Optional. Shared functionality from tfjs-backend-cpu, it\n *     will be involved when necessary.\n * @param dtype Optional. If set, the result has this dtype. Otherwise, the\n *     result has the same dtype as the first input. This is mainly used in\n *     comparison kernels, such as Equal, Less, Greater, etc.\n */\nexport function unaryKernelFunc({ opType, cpuKernelImpl, dtype }) {\n    return ({ inputs, backend }) => {\n        const { x } = inputs;\n        const webgpuBackend = backend;\n        const $dtype = dtype || x.dtype;\n        if (webgpuBackend.shouldExecuteOnCPU([x]) && cpuKernelImpl != null) {\n            const xData = webgpuBackend.tensorMap.get(x.dataId);\n            const outValues = cpuKernelImpl(xData.values, $dtype);\n            return webgpuBackend.makeTensorInfo(x.shape, $dtype, outValues);\n        }\n        const program = new UnaryOpProgram(x.shape, opType);\n        return webgpuBackend.runWebGPUProgram(program, [x], $dtype);\n    };\n}\n/**\n * Template that creates a `KernelFunc` for binary ops.\n * @param opType Op type to create `BinaryOpProgram`.\n * @param cpuKernelImpl Optional. Shared functionality from tfjs-backend-cpu, it\n *     will be involved when necessary.\n * @param dtype Optional. If set, the result has this dtype. Otherwise, the\n *     result has the same dtype as the first input. This is mainly used in\n *     comparison kernels, such as Equal, Less, Greater, etc.\n */\nexport function binaryKernelFunc({ opType, cpuKernelImpl, supportsComplex = false, dtype }) {\n    return ({ inputs, backend }) => {\n        const { a, b } = inputs;\n        const webgpuBackend = backend;\n        if (supportsComplex && a.dtype === 'complex64') {\n            const aData = webgpuBackend.tensorMap.get(a.dataId);\n            const bData = webgpuBackend.tensorMap.get(b.dataId);\n            let real, imag;\n            if (opType !== BinaryOpType.MUL) {\n                [real, imag] = [\n                    [aData.complexTensorInfos.real, bData.complexTensorInfos.real],\n                    [aData.complexTensorInfos.imag, bData.complexTensorInfos.imag]\n                ].map(complexParts => {\n                    const [aPart, bPart] = complexParts;\n                    const aHandle = {\n                        dataId: aPart.dataId,\n                        dtype: aPart.dtype,\n                        shape: a.shape\n                    };\n                    const bHandle = {\n                        dataId: bPart.dataId,\n                        dtype: bPart.dtype,\n                        shape: b.shape\n                    };\n                    const program = new BinaryOpProgram(opType, a.shape, b.shape);\n                    return webgpuBackend.runWebGPUProgram(program, [aHandle, bHandle], upcastType(aPart.dtype, bPart.dtype));\n                });\n            }\n            else {\n                const realProgram = new BinaryOpComplexProgram(BinaryOpType.COMPLEX_MULTIPLY_REAL, a.shape, b.shape);\n                const imagProgram = new BinaryOpComplexProgram(BinaryOpType.COMPLEX_MULTIPLY_IMAG, a.shape, b.shape);\n                const inputs = [\n                    {\n                        dataId: aData.complexTensorInfos.real.dataId,\n                        dtype: aData.complexTensorInfos.real.dtype,\n                        shape: a.shape\n                    },\n                    {\n                        dataId: aData.complexTensorInfos.imag.dataId,\n                        dtype: aData.complexTensorInfos.imag.dtype,\n                        shape: a.shape\n                    },\n                    {\n                        dataId: bData.complexTensorInfos.real.dataId,\n                        dtype: bData.complexTensorInfos.real.dtype,\n                        shape: b.shape\n                    },\n                    {\n                        dataId: bData.complexTensorInfos.imag.dataId,\n                        dtype: bData.complexTensorInfos.imag.dtype,\n                        shape: b.shape\n                    }\n                ];\n                real = webgpuBackend.runWebGPUProgram(realProgram, inputs, 'float32');\n                imag = webgpuBackend.runWebGPUProgram(imagProgram, inputs, 'float32');\n            }\n            const complexOutput = complex({ inputs: { real, imag }, backend: webgpuBackend });\n            webgpuBackend.disposeData(real.dataId);\n            webgpuBackend.disposeData(imag.dataId);\n            // TODO: Implement CPU forwarding for complex inputs.\n            return complexOutput;\n        }\n        const $dtype = dtype || upcastType(a.dtype, b.dtype);\n        if ((a.dtype === 'string' || b.dtype === 'string' ||\n            webgpuBackend.shouldExecuteOnCPU([a, b])) &&\n            cpuKernelImpl != null) {\n            const aData = webgpuBackend.tensorMap.get(a.dataId).values;\n            const bData = webgpuBackend.tensorMap.get(b.dataId).values;\n            const decodedAVals = a.dtype === 'string' ?\n                // tslint:disable-next-line: no-any\n                backend_util.fromUint8ToStringArray(aData) :\n                aData;\n            const decodedBVals = a.dtype === 'string' ?\n                // tslint:disable-next-line: no-any\n                backend_util.fromUint8ToStringArray(bData) :\n                bData;\n            const [outValues, outShape] = cpuKernelImpl(a.shape, b.shape, decodedAVals, decodedBVals, $dtype);\n            return webgpuBackend.makeTensorInfo(outShape, $dtype, outValues);\n        }\n        const program = new BinaryOpProgram(opType, a.shape, b.shape);\n        return webgpuBackend.runWebGPUProgram(program, [a, b], $dtype);\n    };\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2VybmVsX2Z1bmNzX3V0aWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVsX3V0aWxzL2tlcm5lbF9mdW5jc191dGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsWUFBWSxFQUEyRSxVQUFVLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUd4SSxPQUFPLEVBQUMsc0JBQXNCLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQztBQUNuRSxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFDL0MsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQ3BELE9BQU8sRUFBQyxPQUFPLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUUzQyxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFVbEQ7Ozs7Ozs7O0dBUUc7QUFDSCxNQUFNLFVBQVUsZUFBZSxDQUMzQixFQUFDLE1BQU0sRUFBRSxhQUFhLEVBQUUsS0FBSyxFQUF3QjtJQUN2RCxPQUFPLENBQUMsRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFDLEVBQUUsRUFBRTtRQUMzQixNQUFNLEVBQUMsQ0FBQyxFQUFDLEdBQUcsTUFBcUIsQ0FBQztRQUNsQyxNQUFNLGFBQWEsR0FBRyxPQUF3QixDQUFDO1FBRS9DLE1BQU0sTUFBTSxHQUFHLEtBQUssSUFBSSxDQUFDLENBQUMsS0FBSyxDQUFDO1FBQ2hDLElBQUksYUFBYSxDQUFDLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxhQUFhLElBQUksSUFBSSxFQUFFO1lBQ2xFLE1BQU0sS0FBSyxHQUFHLGFBQWEsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUNwRCxNQUFNLFNBQVMsR0FBRyxh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Q0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsS0FBSyxFQUFFLFlBQVksRUFBRSxZQUFZLEVBQUUsTUFBTSxDQUFDLENBQUM7WUFFeEUsT0FBTyxhQUFhLENBQUMsY0FBYyxDQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUUsU0FBUyxDQUFDLENBQUM7U0FDbEU7UUFDRCxNQUFNLE9BQU8sR0FBRyxJQUFJLGVBQWUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDOUQsT0FBTyxhQUFhLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ2pFLENBQUMsQ0FBQztBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7YmFja2VuZF91dGlsLCBCaW5hcnlJbnB1dHMsIERhdGFUeXBlLCBLZXJuZWxGdW5jLCBUZW5zb3JJbmZvLCBUeXBlZEFycmF5LCBVbmFyeUlucHV0cywgdXBjYXN0VHlwZX0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge0JpbmFyeU9wQ29tcGxleFByb2dyYW19IGZyb20gJy4uL2JpbmFyeV9vcF9jb21wbGV4X3dlYmdwdSc7XG5pbXBvcnQge0JpbmFyeU9wVHlwZX0gZnJvbSAnLi4vYmluYXJ5X29wX3V0aWwnO1xuaW1wb3J0IHtCaW5hcnlPcFByb2dyYW19IGZyb20gJy4uL2JpbmFyeV9vcF93ZWJncHUnO1xuaW1wb3J0IHtjb21wbGV4fSBmcm9tICcuLi9rZXJuZWxzL0NvbXBsZXgnO1xuaW1wb3J0IHtVbmFyeU9wVHlwZX0gZnJvbSAnLi4vdW5hcnlfb3BfdXRpbCc7XG5pbXBvcnQge1VuYXJ5T3BQcm9ncmFtfSBmcm9tICcuLi91bmFyeV9vcF93ZWJncHUnO1xuXG5pbXBvcnQge1NpbXBsZUJpbmFyeUtlcm5lbEltcGxDUFUsIFNpbXBsZVVuYXJ5S2VybmVsSW1wbENQVX0gZnJvbSAnLi9zaGFyZWQnO1xuXG50eXBlIFVuYXJ5S2VybmVsRnVuY0NvbmZpZyA9IHtcbiAgb3BUeXBlOiBVbmFyeU9wVHlwZSxcbiAgY3B1S2VybmVsSW1wbD86IFNpbXBsZVVuYXJ5S2VybmVsSW1wbENQVSxcbiAgZHR5cGU/OiBEYXRhVHlwZVxufTtcblxuLyoqXG4gKiBUZW1wbGF0ZSB0aGF0IGNyZWF0ZXMgYSBgS2VybmVsRnVuY2AgZm9yIHVuYXJ5IG9wcy5cbiAqIEBwYXJhbSBvcFR5cGUgT3AgdHlwZSB0byBjcmVhdGUgYFVuYXJ5T3BQcm9ncmFtYC5cbiAqIEBwYXJhbSBjcHVLZXJuZWxJbXBsIE9wdGlvbmFsLiBTaGFyZWQgZnVuY3Rpb25hbGl0eSBmcm9tIHRmanMtYmFja2VuZC1jcHUsIGl0XG4gKiAgICAgd2lsbCBiZSBpbnZvbHZlZCB3aGVuIG5lY2Vzc2FyeS5cbiAqIEBwYXJhbSBkdHlwZSBPcHRpb25hbC4gSWYgc2V0LCB0aGUgcmVzdWx0IGhhcyB0aGlzIGR0eXBlLiBPdGhlcndpc2UsIHRoZVxuICogICAgIHJlc3VsdCBoYXMgdGhlIHNhbWUgZHR5cGUgYXMgdGhlIGZpcnN0IGlucHV0LiBUaGlzIGlzIG1haW5seSB1c2VkIGluXG4gKiAgICAgY29tcGFyaXNvbiBrZXJuZWxzLCBzdWNoIGFzIEVxdWFsLCBMZXNzLCBHcmVhdGVyLCBldGMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1bmFyeUtlcm5lbEZ1bmMoXG4gICAge29wVHlwZSwgY3B1S2VybmVsSW1wbCwgZHR5cGV9OiBVbmFyeUtlcm5lbEZ1bmNDb25maWcpOiBLZXJuZWxGdW5jIHtcbiAgcmV0dXJuICh7aW5wdXRzLCBiYWNrZW5kfSkgPT4ge1xuICAgIGNvbnN0IHt4fSA9IGlucHV0cyBhcyBVbmFyeUlucHV0cztcbiAgICBjb25zdCB3ZWJncHVCYWNrZW5kID0gYmFja2VuZCBhcyBXZWJHUFVCYWNrZW5kO1xuXG4gICAgY29uc3QgJGR0eXBlID0gZHR5cGUgfHwgeC5kdHlwZTtcbiAgICBpZiAod2ViZ3B1QmFja2VuZC5zaG91bGRFeGVjdXRlT25DUFUoW3hdKSAmJiBjcHVLZXJuZWxJbXBsICE9IG51bGwpIHtcbiAgICAgIGNvbnN0IHhEYXRhID0gd2ViZ3B1QmFja2VuZC50ZW5zb3JNYXAuZ2V0KHguZGF0YUlkKTtcbiAgICAgIGNvbnN0IG91dFZhbHVlcyA9IGNwdUtlcm5lbEltcGwoeERhdGEudmFsdWVzIGFzIFR5cGVkQXJyYXksICRkdHlwZSk7XG4gICAgICByZXR1cm4gd2ViZ3B1QmFja2VuZC5tYWtlVGVuc29ySW5mbyh4LnNoYXBlLCAkZHR5cGUsIG91dFZhbHVlcyk7XG4gICAgfVxuXG4gICAgY29uc3QgcHJvZ3JhbTogVW5hcnlPcFByb2dyYW0gPSBuZXcgVW5hcnlPcFByb2dyYW0oeC5zaGFwZSwgb3BUeXBlKTtcbiAgICByZXR1cm4gd2ViZ3B1QmFja2VuZC5ydW5XZWJHUFVQcm9ncmFtKHByb2dyYW0sIFt4XSwgJGR0eXBlKTtcbiAgfTtcbn1cblxudHlwZSBCaW5hcnlLZXJuZWxGdW5jQ29uZmlnID0ge1xuICBvcFR5cGU6IEJpbmFyeU9wVHlwZSxcbiAgY3B1S2VybmVsSW1wbD86IFNpbXBsZUJpbmFyeUtlcm5lbEltcGxDUFUsXG4gIHN1cHBvcnRzQ29tcGxleD86IGJvb2xlYW4sXG4gIGR0eXBlPzogRGF0YVR5cGVcbn07XG5cbi8qKlxuICogVGVtcGxhdGUgdGhhdCBjcmVhdGVzIGEgYEtlcm5lbEZ1bmNgIGZvciBiaW5hcnkgb3BzLlxuICogQHBhcmFtIG9wVHlwZSBPcCB0eXBlIHRvIGNyZWF0ZSBgQmluYXJ5T3BQcm9ncmFtYC5cbiAqIEBwYXJhbSBjcHVLZXJuZWxJbXBsIE9wdGlvbmFsLiBTaGFyZWQgZnVuY3Rpb25hbGl0eSBmcm9tIHRmanMtYmFja2VuZC1jcHUsIGl0XG4gKiAgICAgd2lsbCBiZSBpbnZvbHZlZCB3aGVuIG5lY2Vzc2FyeS5cbiAqIEBwYXJhbSBkdHlwZSBPcHRpb25hbC4gSWYgc2V0LCB0aGUgcmVzdWx0IGhhcyB0aGlzIGR0eXBlLiBPdGhlcndpc2UsIHRoZVxuICogICAgIHJlc3VsdCBoYXMgdGhlIHNhbWUgZHR5cGUgYXMgdGhlIGZpcnN0IGlucHV0LiBUaGlzIGlzIG1haW5seSB1c2VkIGluXG4gKiAgICAgY29tcGFyaXNvbiBrZXJuZWxzLCBzdWNoIGFzIEVxdWFsLCBMZXNzLCBHcmVhdGVyLCBldGMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBiaW5hcnlLZXJuZWxGdW5jKFxuICAgIHtvcFR5cGUsIGNwdUtlcm5lbEltcGwsIHN1cHBvcnRzQ29tcGxleCA9IGZhbHNlLCBkdHlwZX06XG4gICAgICAgIEJpbmFyeUtlcm5lbEZ1bmNDb25maWcpOiBLZXJuZWxGdW5jIHtcbiAgcmV0dXJuICh7aW5wdXRzLCBiYWNrZW5kfSkgPT4ge1xuICAgIGNvbnN0IHthLCBifSA9IGlucHV0cyBhcyBCaW5hcnlJbnB1dHM7XG4gICAgY29uc3Qgd2ViZ3B1QmFja2VuZCA9IGJhY2tlbmQgYXMgV2ViR1BVQmFja2VuZDtcblxuICAgIGlmIChzdXBwb3J0c0NvbXBsZXggJiYgYS5kdHlwZSA9PT0gJ2NvbXBsZXg2NCcpIHtcbiAgICAgIGNvbnN0IGFEYXRhID0gd2ViZ3B1QmFja2VuZC50ZW5zb3JNYXAuZ2V0KGEuZGF0YUlkKTtcbiAgICAgIGNvbnN0IGJEYXRhID0gd2ViZ3B1QmFja2VuZC50ZW5zb3JNYXAuZ2V0KGIuZGF0YUlkKTtcbiAgICAgIGxldCByZWFsOiBUZW5zb3JJbmZvLCBpbWFnOiBUZW5zb3JJbmZvO1xuICAgICAgaWYgKG9wVHlwZSAhPT0gQmluYXJ5T3BUeXBlLk1VTCkge1xuICAgICAgICBbcmVhbCwgaW1hZ10gPSBbXG4gICAgICAgICAgW2FEYXRhLmNvbXBsZXhUZW5zb3JJbmZvcy5yZWFsLCBiRGF0YS5jb21wbGV4VGVuc29ySW5mb3MucmVhbF0sXG4gICAgICAgICAgW2FEYXRhLmNvbXBsZXhUZW5zb3JJbmZvcy5pbWFnLCBiRGF0YS5jb21wbGV4VGVuc29ySW5mb3MuaW1hZ11cbiAgICAgICAgXS5tYXAoY29tcGxleFBhcnRzID0+IHtcbiAgICAgICAgICBjb25zdCBbYVBhcnQsIGJQYXJ0XSA9IGNvbXBsZXhQYXJ0cztcblxuICAgICAgICAgIGNvbnN0IGFIYW5kbGUgPSB7XG4gICAgICAgICAgICBkYXRhSWQ6IGFQYXJ0LmRhdGFJZCxcbiAgICAgICAgICAgIGR0eXBlOiBhUGFydC5kdHlwZSxcbiAgICAgICAgICAgIHNoYXBlOiBhLnNoYXBlXG4gICAgICAgICAgfTtcbiAgICAgICAgICBjb25zdCBiSGFuZGxlID0ge1xuICAgICAgICAgICAgZGF0YUlkOiBiUGFydC5kYXRhSWQsXG4gICAgICAgICAgICBkdHlwZTogYlBhcnQuZHR5cGUsXG4gICAgICAgICAgICBzaGFwZTogYi5zaGFwZVxuICAgICAgICAgIH07XG5cbiAgICAgICAgICBjb25zdCBwcm9ncmFtID0gbmV3IEJpbmFyeU9wUHJvZ3JhbShvcFR5cGUsIGEuc2hhcGUsIGIuc2hhcGUpO1xuICAgICAgICAgIHJldHVybiB3ZWJncHVCYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0oXG4gICAgICAgICAgICAgIHByb2dyYW0sIFthSGFuZGxlLCBiSGFuZGxlXSxcbiAgICAgICAgICAgICAgdXBjYXN0VHlwZShhUGFydC5kdHlwZSwgYlBhcnQuZHR5cGUpKTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zdCByZWFsUHJvZ3JhbSA9IG5ldyBCaW5hcnlPcENvbXBsZXhQcm9ncmFtKFxuICAgICAgICAgICAgQmluYXJ5T3BUeXBlLkNPTVBMRVhfTVVMVElQTFlfUkVBTCwgYS5zaGFwZSwgYi5zaGFwZSk7XG4gICAgICAgIGNvbnN0IGltYWdQcm9ncmFtID0gbmV3IEJpbmFyeU9wQ29tcGxleFByb2dyYW0oXG4gICAgICAgICAgICBCaW5hcnlPcFR5cGUuQ09NUExFWF9NVUxUSVBMWV9JTUFHLCBhLnNoYXBlLCBiLnNoYXBlKTtcblxuICAgICAgICBjb25zdCBpbnB1dHMgPSBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgZGF0YUlkOiBhRGF0YS5jb21wbGV4VGVuc29ySW5mb3MucmVhbC5kYXRhSWQsXG4gICAgICAgICAgICBkdHlwZTogYURhdGEuY29tcGxleFRlbnNvckluZm9zLnJlYWwuZHR5cGUsXG4gICAgICAgICAgICBzaGFwZTogYS5zaGFwZVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgZGF0YUlkOiBhRGF0YS5jb21wbGV4VGVuc29ySW5mb3MuaW1hZy5kYXRhSWQsXG4gICAgICAgICAgICBkdHlwZTogYURhdGEuY29tcGxleFRlbnNvckluZm9zLmltYWcuZHR5cGUsXG4gICAgICAgICAgICBzaGFwZTogYS5zaGFwZVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgZGF0YUlkOiBiRGF0YS5jb21wbGV4VGVuc29ySW5mb3MucmVhbC5kYXRhSWQsXG4gICAgICAgICAgICBkdHlwZTogYkRhdGEuY29tcGxleFRlbnNvckluZm9zLnJlYWwuZHR5cGUsXG4gICAgICAgICAgICBzaGFwZTogYi5zaGFwZVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgZGF0YUlkOiBiRGF0YS5jb21wbGV4VGVuc29ySW5mb3MuaW1hZy5kYXRhSWQsXG4gICAgICAgICAgICBkdHlwZTogYkRhdGEuY29tcGxleFRlbnNvckluZm9zLmltYWcuZHR5cGUsXG4gICAgICAgICAgICBzaGFwZTogYi5zaGFwZVxuICAgICAgICAgIH1cbiAgICAgICAgXTtcblxuICAgICAgICByZWFsID0gd2ViZ3B1QmFja2VuZC5ydW5XZWJHUFVQcm9ncmFtKHJlYWxQcm9ncmFtLCBpbnB1dHMsICdmbG9hdDMyJyk7XG4gICAgICAgIGltYWcgPSB3ZWJncHVCYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0oaW1hZ1Byb2dyYW0sIGlucHV0cywgJ2Zsb2F0MzInKTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgY29tcGxleE91dHB1dCA9XG4gICAgICAgICAgY29tcGxleCh7aW5wdXRzOiB7cmVhbCwgaW1hZ30sIGJhY2tlbmQ6IHdlYmdwdUJhY2tlbmR9KTtcblxuICAgICAgd2ViZ3B1QmFja2VuZC5kaXNwb3NlRGF0YShyZWFsLmRhdGFJZCk7XG4gICAgICB3ZWJncHVCYWNrZW5kLmRpc3Bvc2VEYXRhKGltYWcuZGF0YUlkKTtcblxuICAgICAgLy8gVE9ETzogSW1wbGVtZW50IENQVSBmb3J3YXJkaW5nIGZvciBjb21wbGV4IGlucHV0cy5cblxuICAgICAgcmV0dXJuIGNvbXBsZXhPdXRwdXQ7XG4gICAgfVxuXG4gICAgY29uc3QgJGR0eXBlID0gZHR5cGUgfHwgdXBjYXN0VHlwZShhLmR0eXBlLCBiLmR0eXBlKTtcbiAgICBpZiAoKGEuZHR5cGUgPT09ICdzdHJpbmcnIHx8IGIuZHR5cGUgPT09ICdzdHJpbmcnIHx8XG4gICAgICAgICB3ZWJncHVCYWNrZW5kLnNob3VsZEV4ZWN1dGVPbkNQVShbYSwgYl0pKSAmJlxuICAgICAgICBjcHVLZXJuZWxJbXBsICE9IG51bGwpIHtcbiAgICAgIGNvbnN0IGFEYXRhID0gd2ViZ3B1QmFja2VuZC50ZW5zb3JNYXAuZ2V0KGEuZGF0YUlkKS52YWx1ZXMgYXMgVHlwZWRBcnJheTtcbiAgICAgIGNvbnN0IGJEYXRhID0gd2ViZ3B1QmFja2VuZC50ZW5zb3JNYXAuZ2V0KGIuZGF0YUlkKS52YWx1ZXMgYXMgVHlwZWRBcnJheTtcbiAgICAgIGNvbnN0IGRlY29kZWRBVmFscyA9IGEuZHR5cGUgPT09ICdzdHJpbmcnID9cbiAgICAgICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IG5vLWFueVxuICAgICAgICAgIGJhY2tlbmRfdXRpbC5mcm9tVWludDhUb1N0cmluZ0FycmF5KGFEYXRhIGFzIGFueSBhcyBVaW50OEFycmF5W10pIDpcbiAgICAgICAgICBhRGF0YTtcbiAgICAgIGNvbnN0IGRlY29kZWRCVmFscyA9IGEuZHR5cGUgPT09ICdzdHJpbmcnID9cbiAgICAgICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IG5vLWFueVxuICAgICAgICAgIGJhY2tlbmRfdXRpbC5mcm9tVWludDhUb1N0cmluZ0FycmF5KGJEYXRhIGFzIGFueSBhcyBVaW50OEFycmF5W10pIDpcbiAgICAgICAgICBiRGF0YTtcbiAgICAgIGNvbnN0IFtvdXRWYWx1ZXMsIG91dFNoYXBlXSA9XG4gICAgICAgICAgY3B1S2VybmVsSW1wbChhLnNoYXBlLCBiLnNoYXBlLCBkZWNvZGVkQVZhbHMsIGRlY29kZWRCVmFscywgJGR0eXBlKTtcblxuICAgICAgcmV0dXJuIHdlYmdwdUJhY2tlbmQubWFrZVRlbnNvckluZm8ob3V0U2hhcGUsICRkdHlwZSwgb3V0VmFsdWVzKTtcbiAgICB9XG4gICAgY29uc3QgcHJvZ3JhbSA9IG5ldyBCaW5hcnlPcFByb2dyYW0ob3BUeXBlLCBhLnNoYXBlLCBiLnNoYXBlKTtcbiAgICByZXR1cm4gd2ViZ3B1QmFja2VuZC5ydW5XZWJHUFVQcm9ncmFtKHByb2dyYW0sIFthLCBiXSwgJGR0eXBlKTtcbiAgfTtcbn1cbiJdfQ==","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Import shared functionality from tfjs-backend-cpu without triggering\n// side effects.\n// tslint:disable-next-line: no-imports-from-dist\nimport * as shared from '@tensorflow/tfjs-backend-cpu/dist/shared';\nconst { addImpl: addImplCPU, castImpl: castImplCPU, ceilImpl: ceilImplCPU, concatImpl: concatImplCPU, equalImpl: equalImplCPU, expImpl: expImplCPU, expm1Impl: expm1ImplCPU, floorImpl: floorImplCPU, floorDivImpl: floorDivImplCPU, gatherNdImpl: gatherNdImplCPU, gatherV2Impl: gatherV2ImplCPU, greaterEqualImpl: greaterEqualImplCPU, greaterImpl: greaterImplCPU, lessEqualImpl: lessEqualImplCPU, lessImpl: lessImplCPU, logImpl: logImplCPU, maxImpl: maxImplCPU, maximumImpl: maximumImplCPU, minimumImpl: minimumImplCPU, multiplyImpl: multiplyImplCPU, negImpl: negImplCPU, notEqualImpl: notEqualImplCPU, prodImpl: prodImplCPU, rangeImpl: rangeImplCPU, rsqrtImpl: rsqrtImplCPU, scatterImpl: scatterImplCPU, simpleAbsImpl: simpleAbsImplCPU, sliceImpl: sliceImplCPU, stridedSliceImpl: stridedSliceImplCPU, stringNGramsImpl: stringNGramsImplCPU, subImpl: subImplCPU, tileImpl: tileImplCPU, topKImpl: topKImplCPU, transposeImpl: transposeImplCPU, uniqueImpl: uniqueImplCPU, } = shared;\nexport { addImplCPU, castImplCPU, ceilImplCPU, concatImplCPU, equalImplCPU, expImplCPU, expm1ImplCPU, floorImplCPU, floorDivImplCPU, gatherNdImplCPU, gatherV2ImplCPU, greaterEqualImplCPU, greaterImplCPU, lessEqualImplCPU, lessImplCPU, logImplCPU, maxImplCPU, maximumImplCPU, minimumImplCPU, multiplyImplCPU, prodImplCPU, negImplCPU, notEqualImplCPU, scatterImplCPU, simpleAbsImplCPU, sliceImplCPU, stridedSliceImplCPU, stringNGramsImplCPU, subImplCPU, rangeImplCPU, rsqrtImplCPU, tileImplCPU, topKImplCPU, transposeImplCPU, uniqueImplCPU, };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhcmVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVsX3V0aWxzL3NoYXJlZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCx1RUFBdUU7QUFDdkUsZ0JBQWdCO0FBQ2hCLGlEQUFpRDtBQUNqRCxPQUFPLEtBQUssTUFBTSxNQUFNLDBDQUEwQyxDQUFDO0FBUW5FLE1BQU0sRUFDSixPQUFPLEVBQUUsVUFBVSxFQUNuQixRQUFRLEVBQUUsV0FBVyxFQUNyQixRQUFRLEVBQUUsV0FBVyxFQUNyQixVQUFVLEVBQUUsYUFBYSxFQUN6QixTQUFTLEVBQUUsWUFBWSxFQUN2QixPQUFPLEVBQUUsVUFBVSxFQUNuQixTQUFTLEVBQUUsWUFBWSxFQUN2QixTQUFTLEVBQUUsWUFBWSxFQUN2QixZQUFZLEVBQUUsZUFBZSxFQUM3QixZQUFZLEVBQUUsZUFBZSxFQUM3QixZQUFZLEVBQUUsZUFBZSxFQUM3QixnQkFBZ0IsRUFBRSxtQkFBbUIsRUFDckMsV0FBVyxFQUFFLGNBQWMsRUFDM0IsYUFBYSxFQUFFLGdCQUFnQixFQUMvQixRQUFRLEVBQUUsV0FBVyxFQUNyQixPQUFPLEVBQUUsVUFBVSxFQUNuQixPQUFPLEVBQUUsVUFBVSxFQUNuQixXQUFXLEVBQUUsY0FBYyxFQUMzQixXQUFXLEVBQUUsY0FBYyxFQUMzQixZQUFZLEVBQUUsZUFBZSxFQUM3QixPQUFPLEVBQUUsVUFBVSxFQUNuQixZQUFZLEVBQUUsZUFBZSxFQUM3QixRQUFRLEVBQUUsV0FBVyxFQUNyQixTQUFTLEVBQUUsWUFBWSxFQUN2QixTQUFTLEVBQUUsWUFBWSxFQUN2QixXQUFXLEVBQUUsY0FBYyxFQUMzQixhQUFhLEVBQUUsZ0JBQWdCLEVBQy9CLFNBQVMsRUFBRSxZQUFZLEVBQ3ZCLGdCQUFnQixFQUFFLG1CQUFtQixFQUNyQyxnQkFBZ0IsRUFBRSxtQkFBbUIsRUFDckMsT0FBTyxFQUFFLFVBQVUsRUFDbkIsUUFBUSxFQUFFLFdBQVcsRUFDckIsUUFBUSxFQUFFLFdBQVcsRUFDckIsYUFBYSxFQUFFLGdCQUFnQixFQUMvQixVQUFVLEVBQUUsYUFBYSxHQUMxQixHQUFHLE1BQU0sQ0FBQztBQUVYLE9BQU8sRUFDTCxVQUFVLEVBQ1YsV0FBVyxFQUNYLFdBQVcsRUFDWCxhQUFhLEVBQ2IsWUFBWSxFQUNaLFVBQVUsRUFDVixZQUFZLEVBQ1osWUFBWSxFQUNaLGVBQWUsRUFDZixlQUFlLEVBQ2YsZUFBZSxFQUNmLG1CQUFtQixFQUNuQixjQUFjLEVBQ2QsZ0JBQWdCLEVBQ2hCLFdBQVcsRUFDWCxVQUFVLEVBQ1YsVUFBVSxFQUNWLGNBQWMsRUFDZCxjQUFjLEVBQ2QsZUFBZSxFQUNmLFdBQVcsRUFDWCxVQUFVLEVBQ1YsZUFBZSxFQUNmLGNBQWMsRUFDZCxnQkFBZ0IsRUFDaEIsWUFBWSxFQUNaLG1CQUFtQixFQUNuQixtQkFBbUIsRUFDbkIsVUFBVSxFQUNWLFlBQVksRUFDWixZQUFZLEVBQ1osV0FBVyxFQUNYLFdBQVcsRUFDWCxnQkFBZ0IsRUFDaEIsYUFBYSxHQUNkLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbi8vIEltcG9ydCBzaGFyZWQgZnVuY3Rpb25hbGl0eSBmcm9tIHRmanMtYmFja2VuZC1jcHUgd2l0aG91dCB0cmlnZ2VyaW5nXG4vLyBzaWRlIGVmZmVjdHMuXG4vLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IG5vLWltcG9ydHMtZnJvbS1kaXN0XG5pbXBvcnQgKiBhcyBzaGFyZWQgZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1iYWNrZW5kLWNwdS9kaXN0L3NoYXJlZCc7XG4vLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IG5vLWltcG9ydHMtZnJvbS1kaXN0XG5pbXBvcnQge1NpbXBsZUJpbmFyeUtlcm5lbEltcGx9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtYmFja2VuZC1jcHUvZGlzdC9zaGFyZWQnO1xuLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBuby1pbXBvcnRzLWZyb20tZGlzdFxuaW1wb3J0IHtTaW1wbGVVbmFyeUltcGx9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtYmFja2VuZC1jcHUvZGlzdC91dGlscy91bmFyeV90eXBlcyc7XG5cbmV4cG9ydCB0eXBlIFNpbXBsZUJpbmFyeUtlcm5lbEltcGxDUFUgPSBTaW1wbGVCaW5hcnlLZXJuZWxJbXBsO1xuZXhwb3J0IHR5cGUgU2ltcGxlVW5hcnlLZXJuZWxJbXBsQ1BVID0gU2ltcGxlVW5hcnlJbXBsO1xuY29uc3Qge1xuICBhZGRJbXBsOiBhZGRJbXBsQ1BVLFxuICBjYXN0SW1wbDogY2FzdEltcGxDUFUsXG4gIGNlaWxJbXBsOiBjZWlsSW1wbENQVSxcbiAgY29uY2F0SW1wbDogY29uY2F0SW1wbENQVSxcbiAgZXF1YWxJbXBsOiBlcXVhbEltcGxDUFUsXG4gIGV4cEltcGw6IGV4cEltcGxDUFUsXG4gIGV4cG0xSW1wbDogZXhwbTFJbXBsQ1BVLFxuICBmbG9vckltcGw6IGZsb29ySW1wbENQVSxcbiAgZmxvb3JEaXZJbXBsOiBmbG9vckRpdkltcGxDUFUsXG4gIGdhdGhlck5kSW1wbDogZ2F0aGVyTmRJbXBsQ1BVLFxuICBnYXRoZXJWMkltcGw6IGdhdGhlclYySW1wbENQVSxcbiAgZ3JlYXRlckVxdWFsSW1wbDogZ3JlYXRlckVxdWFsSW1wbENQVSxcbiAgZ3JlYXRlckltcGw6IGdyZWF0ZXJJbXBsQ1BVLFxuICBsZXNzRXF1YWxJbXBsOiBsZXNzRXF1YWxJbXBsQ1BVLFxuICBsZXNzSW1wbDogbGVzc0ltcGxDUFUsXG4gIGxvZ0ltcGw6IGxvZ0ltcGxDUFUsXG4gIG1heEltcGw6IG1heEltcGxDUFUsXG4gIG1heGltdW1JbXBsOiBtYXhpbXVtSW1wbENQVSxcbiAgbWluaW11bUltcGw6IG1pbmltdW1JbXBsQ1BVLFxuICBtdWx0aXBseUltcGw6IG11bHRpcGx5SW1wbENQVSxcbiAgbmVnSW1wbDogbmVnSW1wbENQVSxcbiAgbm90RXF1YWxJbXBsOiBub3RFcXVhbEltcGxDUFUsXG4gIHByb2RJbXBsOiBwcm9kSW1wbENQVSxcbiAgcmFuZ2VJbXBsOiByYW5nZUltcGxDUFUsXG4gIHJzcXJ0SW1wbDogcnNxcnRJbXBsQ1BVLFxuICBzY2F0dGVySW1wbDogc2NhdHRlckltcGxDUFUsXG4gIHNpbXBsZUFic0ltcGw6IHNpbXBsZUFic0ltcGxDUFUsXG4gIHNsaWNlSW1wbDogc2xpY2VJbXBsQ1BVLFxuICBzdHJpZGVkU2xpY2VJbXBsOiBzdHJpZGVkU2xpY2VJbXBsQ1BVLFxuICBzdHJpbmdOR3JhbXNJbXBsOiBzdHJpbmdOR3JhbXNJbXBsQ1BVLFxuICBzdWJJbXBsOiBzdWJJbXBsQ1BVLFxuICB0aWxlSW1wbDogdGlsZUltcGxDUFUsXG4gIHRvcEtJbXBsOiB0b3BLSW1wbENQVSxcbiAgdHJhbnNwb3NlSW1wbDogdHJhbnNwb3NlSW1wbENQVSxcbiAgdW5pcXVlSW1wbDogdW5pcXVlSW1wbENQVSxcbn0gPSBzaGFyZWQ7XG5cbmV4cG9ydCB7XG4gIGFkZEltcGxDUFUsXG4gIGNhc3RJbXBsQ1BVLFxuICBjZWlsSW1wbENQVSxcbiAgY29uY2F0SW1wbENQVSxcbiAgZXF1YWxJbXBsQ1BVLFxuICBleHBJbXBsQ1BVLFxuICBleHBtMUltcGxDUFUsXG4gIGZsb29ySW1wbENQVSxcbiAgZmxvb3JEaXZJbXBsQ1BVLFxuICBnYXRoZXJOZEltcGxDUFUsXG4gIGdhdGhlclYySW1wbENQVSxcbiAgZ3JlYXRlckVxdWFsSW1wbENQVSxcbiAgZ3JlYXRlckltcGxDUFUsXG4gIGxlc3NFcXVhbEltcGxDUFUsXG4gIGxlc3NJbXBsQ1BVLFxuICBsb2dJbXBsQ1BVLFxuICBtYXhJbXBsQ1BVLFxuICBtYXhpbXVtSW1wbENQVSxcbiAgbWluaW11bUltcGxDUFUsXG4gIG11bHRpcGx5SW1wbENQVSxcbiAgcHJvZEltcGxDUFUsXG4gIG5lZ0ltcGxDUFUsXG4gIG5vdEVxdWFsSW1wbENQVSxcbiAgc2NhdHRlckltcGxDUFUsXG4gIHNpbXBsZUFic0ltcGxDUFUsXG4gIHNsaWNlSW1wbENQVSxcbiAgc3RyaWRlZFNsaWNlSW1wbENQVSxcbiAgc3RyaW5nTkdyYW1zSW1wbENQVSxcbiAgc3ViSW1wbENQVSxcbiAgcmFuZ2VJbXBsQ1BVLFxuICByc3FydEltcGxDUFUsXG4gIHRpbGVJbXBsQ1BVLFxuICB0b3BLSW1wbENQVSxcbiAgdHJhbnNwb3NlSW1wbENQVSxcbiAgdW5pcXVlSW1wbENQVSxcbn07XG4iXX0=","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Abs } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { simpleAbsImplCPU } from '../kernel_utils/shared';\nimport { UnaryOpType } from '../unary_op_util';\nexport const abs = unaryKernelFunc({ opType: UnaryOpType.ABS, cpuKernelImpl: simpleAbsImplCPU });\nexport const absConfig = {\n    kernelName: Abs,\n    backendName: 'webgpu',\n    kernelFunc: abs\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWJzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9BYnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLEdBQUcsRUFBZSxNQUFNLHVCQUF1QixDQUFDO0FBQ3hELE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUNuRSxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUN4RCxPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sa0JBQWtCLENBQUM7QUFFN0MsTUFBTSxDQUFDLE1BQU0sR0FBRyxHQUNaLGVBQWUsQ0FBQyxFQUFDLE1BQU0sRUFBRSxXQUFXLENBQUMsR0FBRyxFQUFFLGFBQWEsRUFBRSxnQkFBZ0IsRUFBQyxDQUFDLENBQUM7QUFFaEYsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFpQjtJQUNyQyxVQUFVLEVBQUUsR0FBRztJQUNmLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxHQUFHO0NBQ2hCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7QWJzLCBLZXJuZWxDb25maWd9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5pbXBvcnQge3VuYXJ5S2VybmVsRnVuY30gZnJvbSAnLi4va2VybmVsX3V0aWxzL2tlcm5lbF9mdW5jc191dGlscyc7XG5pbXBvcnQge3NpbXBsZUFic0ltcGxDUFV9IGZyb20gJy4uL2tlcm5lbF91dGlscy9zaGFyZWQnO1xuaW1wb3J0IHtVbmFyeU9wVHlwZX0gZnJvbSAnLi4vdW5hcnlfb3BfdXRpbCc7XG5cbmV4cG9ydCBjb25zdCBhYnMgPVxuICAgIHVuYXJ5S2VybmVsRnVuYyh7b3BUeXBlOiBVbmFyeU9wVHlwZS5BQlMsIGNwdUtlcm5lbEltcGw6IHNpbXBsZUFic0ltcGxDUFV9KTtcblxuZXhwb3J0IGNvbnN0IGFic0NvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBBYnMsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogYWJzXG59O1xuIl19","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Acos } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { UnaryOpType } from '../unary_op_util';\nexport const acos = unaryKernelFunc({ opType: UnaryOpType.ACOS });\nexport const acosConfig = {\n    kernelName: Acos,\n    backendName: 'webgpu',\n    kernelFunc: acos\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWNvcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvQWNvcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsSUFBSSxFQUFlLE1BQU0sdUJBQXVCLENBQUM7QUFFekQsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9DQUFvQyxDQUFDO0FBRW5FLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUU3QyxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQUcsZUFBZSxDQUFDLEVBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxJQUFJLEVBQUMsQ0FBQyxDQUFDO0FBRWhFLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBaUI7SUFDdEMsVUFBVSxFQUFFLElBQUk7SUFDaEIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLElBQUk7Q0FDakIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIyIEdvb2dsZSBMTEMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtBY29zLCBLZXJuZWxDb25maWd9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7dW5hcnlLZXJuZWxGdW5jfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMva2VybmVsX2Z1bmNzX3V0aWxzJztcblxuaW1wb3J0IHtVbmFyeU9wVHlwZX0gZnJvbSAnLi4vdW5hcnlfb3BfdXRpbCc7XG5cbmV4cG9ydCBjb25zdCBhY29zID0gdW5hcnlLZXJuZWxGdW5jKHtvcFR5cGU6IFVuYXJ5T3BUeXBlLkFDT1N9KTtcblxuZXhwb3J0IGNvbnN0IGFjb3NDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogQWNvcyxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBhY29zXG59O1xuIl19","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Acosh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { UnaryOpType } from '../unary_op_util';\nexport const acosh = unaryKernelFunc({ opType: UnaryOpType.ACOSH });\nexport const acoshConfig = {\n    kernelName: Acosh,\n    backendName: 'webgpu',\n    kernelFunc: acosh\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWNvc2guanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL0Fjb3NoLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxLQUFLLEVBQWUsTUFBTSx1QkFBdUIsQ0FBQztBQUUxRCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sb0NBQW9DLENBQUM7QUFFbkUsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBRTdDLE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBRyxlQUFlLENBQUMsRUFBQyxNQUFNLEVBQUUsV0FBVyxDQUFDLEtBQUssRUFBQyxDQUFDLENBQUM7QUFFbEUsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFpQjtJQUN2QyxVQUFVLEVBQUUsS0FBSztJQUNqQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsS0FBSztDQUNsQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjIgR29vZ2xlIExMQy5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0Fjb3NoLCBLZXJuZWxDb25maWd9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7dW5hcnlLZXJuZWxGdW5jfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMva2VybmVsX2Z1bmNzX3V0aWxzJztcblxuaW1wb3J0IHtVbmFyeU9wVHlwZX0gZnJvbSAnLi4vdW5hcnlfb3BfdXRpbCc7XG5cbmV4cG9ydCBjb25zdCBhY29zaCA9IHVuYXJ5S2VybmVsRnVuYyh7b3BUeXBlOiBVbmFyeU9wVHlwZS5BQ09TSH0pO1xuXG5leHBvcnQgY29uc3QgYWNvc2hDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogQWNvc2gsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogYWNvc2hcbn07XG4iXX0=","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Add } from '@tensorflow/tfjs-core';\nimport { BinaryOpType } from '../binary_op_util';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { addImplCPU as cpuAdd } from '../kernel_utils/shared';\nexport const addKernelFunc = binaryKernelFunc({ opType: BinaryOpType.ADD, cpuKernelImpl: cpuAdd, supportsComplex: true });\nexport const addConfig = {\n    kernelName: Add,\n    backendName: 'webgpu',\n    kernelFunc: addKernelFunc\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWRkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9BZGQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLEdBQUcsRUFBZSxNQUFNLHVCQUF1QixDQUFDO0FBRXhELE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUMvQyxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUNwRSxPQUFPLEVBQUMsVUFBVSxJQUFJLE1BQU0sRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBRTVELE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxnQkFBZ0IsQ0FDekMsRUFBQyxNQUFNLEVBQUUsWUFBWSxDQUFDLEdBQUcsRUFBRSxhQUFhLEVBQUUsTUFBTSxFQUFFLGVBQWUsRUFBRSxJQUFJLEVBQUMsQ0FBQyxDQUFDO0FBRTlFLE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBaUI7SUFDckMsVUFBVSxFQUFFLEdBQUc7SUFDZixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsYUFBYTtDQUMxQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0FkZCwgS2VybmVsQ29uZmlnfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge0JpbmFyeU9wVHlwZX0gZnJvbSAnLi4vYmluYXJ5X29wX3V0aWwnO1xuaW1wb3J0IHtiaW5hcnlLZXJuZWxGdW5jfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMva2VybmVsX2Z1bmNzX3V0aWxzJztcbmltcG9ydCB7YWRkSW1wbENQVSBhcyBjcHVBZGR9IGZyb20gJy4uL2tlcm5lbF91dGlscy9zaGFyZWQnO1xuXG5leHBvcnQgY29uc3QgYWRkS2VybmVsRnVuYyA9IGJpbmFyeUtlcm5lbEZ1bmMoXG4gICAge29wVHlwZTogQmluYXJ5T3BUeXBlLkFERCwgY3B1S2VybmVsSW1wbDogY3B1QWRkLCBzdXBwb3J0c0NvbXBsZXg6IHRydWV9KTtcblxuZXhwb3J0IGNvbnN0IGFkZENvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBBZGQsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogYWRkS2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class AddNPackedProgram {\n    constructor(shapes) {\n        this.workPerThread = 1;\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = shapes[0];\n        this.variableNames = shapes.map((_, i) => `T${i}`);\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize, [this.workPerThread, 1, 1]);\n        this.shaderKey = 'addN';\n    }\n    getUserCode() {\n        const snippets = [];\n        // Get target elements from every input tensor.\n        this.variableNames.forEach(variable => {\n            snippets.push(`let v${variable} = get${variable}ByOutputCoords(coords);`);\n        });\n        // Calculate the sum of all elements.\n        const operation = this.variableNames\n            .map(variable => {\n            return `v${variable}`;\n        })\n            .join(' + ');\n        const userCode = `\n      ${main('index')} {\n        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if (flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            ${snippets.join('\\n        ')}\n            setOutputAtIndex(flatIndex, ${operation});\n          }\n        }\n      }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkbl9wYWNrZWRfd2ViZ3B1LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMvYWRkbl9wYWNrZWRfd2ViZ3B1LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxtQkFBbUIsSUFBSSxJQUFJLEVBQWdCLE1BQU0sa0JBQWtCLENBQUM7QUFDNUUsT0FBTyxFQUFDLGVBQWUsRUFBRSxrQkFBa0IsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUVsRSxNQUFNLE9BQU8saUJBQWlCO0lBVTVCLFlBQVksTUFBa0I7UUFKOUIsa0JBQWEsR0FBRyxDQUFDLENBQUM7UUFDbEIsa0JBQWEsR0FBNkIsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3JELFNBQUksR0FBRyxJQUFJLENBQUM7UUFHVixJQUFJLENBQUMsV0FBVyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM3QixJQUFJLENBQUMsYUFBYSxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDbkQsSUFBSSxDQUFDLGNBQWMsR0FBRyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxlQUFlLENBQzNCLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsYUFBYSxFQUN6RCxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDaEMsSUFBSSxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUM7SUFDMUIsQ0FBQztJQUVELFdBQVc7UUFDVCxNQUFNLFFBQVEsR0FBYSxFQUFFLENBQUM7UUFDOUIsK0NBQStDO1FBQy9DLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFO1lBQ3BDLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxRQUFRLFNBQVMsUUFBUSx5QkFBeUIsQ0FBQyxDQUFDO1FBQzVFLENBQUMsQ0FBQyxDQUFDO1FBQ0gscUNBQXFDO1FBQ3JDLE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxhQUFhO2FBQ2IsR0FBRyxDQUFDLFFBQVEsQ0FBQyxFQUFFO1lBQ2QsT0FBTyxJQUFJLFFBQVEsRUFBRSxDQUFDO1FBQ3hCLENBQUMsQ0FBQzthQUNELElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUVuQyxNQUFNLFFBQVEsR0FBRztRQUNiLElBQUksQ0FBQyxPQUFPLENBQUM7OEJBQ1MsSUFBSSxDQUFDLGFBQWE7b0NBQ1osSUFBSSxDQUFDLGFBQWE7OztjQUd4QyxRQUFRLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQzswQ0FDQyxTQUFTOzs7O0tBSTlDLENBQUM7UUFDRixPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7Z2V0TWFpbkhlYWRlclN0cmluZyBhcyBtYWluLCBXZWJHUFVQcm9ncmFtfSBmcm9tICcuL3dlYmdwdV9wcm9ncmFtJztcbmltcG9ydCB7Y29tcHV0ZURpc3BhdGNoLCBmbGF0RGlzcGF0Y2hMYXlvdXR9IGZyb20gJy4vd2ViZ3B1X3V0aWwnO1xuXG5leHBvcnQgY2xhc3MgQWRkTlBhY2tlZFByb2dyYW0gaW1wbGVtZW50cyBXZWJHUFVQcm9ncmFtIHtcbiAgb3V0cHV0U2hhcGU6IG51bWJlcltdO1xuICBzaGFkZXJLZXk6IHN0cmluZztcbiAgZGlzcGF0Y2hMYXlvdXQ6IHt4OiBudW1iZXJbXX07XG4gIGRpc3BhdGNoOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl07XG4gIHZhcmlhYmxlTmFtZXM6IHN0cmluZ1tdO1xuICB3b3JrUGVyVGhyZWFkID0gMTtcbiAgd29ya2dyb3VwU2l6ZTogW251bWJlciwgbnVtYmVyLCBudW1iZXJdID0gWzY0LCAxLCAxXTtcbiAgc2l6ZSA9IHRydWU7XG5cbiAgY29uc3RydWN0b3Ioc2hhcGVzOiBudW1iZXJbXVtdKSB7XG4gICAgdGhpcy5vdXRwdXRTaGFwZSA9IHNoYXBlc1swXTtcbiAgICB0aGlzLnZhcmlhYmxlTmFtZXMgPSBzaGFwZXMubWFwKChfLCBpKSA9PiBgVCR7aX1gKTtcbiAgICB0aGlzLmRpc3BhdGNoTGF5b3V0ID0gZmxhdERpc3BhdGNoTGF5b3V0KHRoaXMub3V0cHV0U2hhcGUpO1xuICAgIHRoaXMuZGlzcGF0Y2ggPSBjb21wdXRlRGlzcGF0Y2goXG4gICAgICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQsIHRoaXMub3V0cHV0U2hhcGUsIHRoaXMud29ya2dyb3VwU2l6ZSxcbiAgICAgICAgW3RoaXMud29ya1BlclRocmVhZCwgMSwgMV0pO1xuICAgIHRoaXMuc2hhZGVyS2V5ID0gJ2FkZE4nO1xuICB9XG5cbiAgZ2V0VXNlckNvZGUoKTogc3RyaW5nIHtcbiAgICBjb25zdCBzbmlwcGV0czogc3RyaW5nW10gPSBbXTtcbiAgICAvLyBHZXQgdGFyZ2V0IGVsZW1lbnRzIGZyb20gZXZlcnkgaW5wdXQgdGVuc29yLlxuICAgIHRoaXMudmFyaWFibGVOYW1lcy5mb3JFYWNoKHZhcmlhYmxlID0+IHtcbiAgICAgIHNuaXBwZXRzLnB1c2goYGxldCB2JHt2YXJpYWJsZX0gPSBnZXQke3ZhcmlhYmxlfUJ5T3V0cHV0Q29vcmRzKGNvb3Jkcyk7YCk7XG4gICAgfSk7XG4gICAgLy8gQ2FsY3VsYXRlIHRoZSBzdW0gb2YgYWxsIGVsZW1lbnRzLlxuICAgIGNvbnN0IG9wZXJhdGlvbiA9IHRoaXMudmFyaWFibGVOYW1lc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAubWFwKHZhcmlhYmxlID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYHYke3ZhcmlhYmxlfWA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgIC5qb2luKCcgKyAnKTtcblxuICAgIGNvbnN0IHVzZXJDb2RlID0gYFxuICAgICAgJHttYWluKCdpbmRleCcpfSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgJHt0aGlzLndvcmtQZXJUaHJlYWR9OyBpID0gaSArIDEpIHtcbiAgICAgICAgICBsZXQgZmxhdEluZGV4ID0gaW5kZXggKiAke3RoaXMud29ya1BlclRocmVhZH0gKyBpO1xuICAgICAgICAgIGlmIChmbGF0SW5kZXggPCB1bmlmb3Jtcy5zaXplKSB7XG4gICAgICAgICAgICBsZXQgY29vcmRzID0gZ2V0Q29vcmRzRnJvbUluZGV4KGZsYXRJbmRleCk7XG4gICAgICAgICAgICAke3NuaXBwZXRzLmpvaW4oJ1xcbiAgICAgICAgJyl9XG4gICAgICAgICAgICBzZXRPdXRwdXRBdEluZGV4KGZsYXRJbmRleCwgJHtvcGVyYXRpb259KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICBgO1xuICAgIHJldHVybiB1c2VyQ29kZTtcbiAgfVxufVxuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AddN, upcastType } from '@tensorflow/tfjs-core';\nimport { AddNPackedProgram } from '../addn_packed_webgpu';\nimport { identity } from './Identity';\nexport function addN(args) {\n    const { inputs, backend } = args;\n    const tensors = inputs;\n    if (tensors.length === 1) {\n        return identity({ inputs: { x: tensors[0] }, backend });\n    }\n    const dtype = tensors.map(t => t.dtype).reduce((d1, d2) => upcastType(d1, d2));\n    const shapes = tensors.map(t => t.shape);\n    const program = new AddNPackedProgram(shapes);\n    return backend.runWebGPUProgram(program, tensors, dtype);\n}\nexport const addNConfig = {\n    kernelName: AddN,\n    backendName: 'webgpu',\n    kernelFunc: addN\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWRkTi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvQWRkTi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsSUFBSSxFQUFvRCxVQUFVLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUl6RyxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUN4RCxPQUFPLEVBQUMsUUFBUSxFQUFDLE1BQU0sWUFBWSxDQUFDO0FBRXBDLE1BQU0sVUFBVSxJQUFJLENBQUMsSUFBa0Q7SUFFckUsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFFL0IsTUFBTSxPQUFPLEdBQUcsTUFBTSxDQUFDO0lBQ3ZCLElBQUksT0FBTyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7UUFDeEIsT0FBTyxRQUFRLENBQUMsRUFBQyxNQUFNLEVBQUUsRUFBQyxDQUFDLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFDLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztLQUNyRDtJQUVELE1BQU0sS0FBSyxHQUNQLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsVUFBVSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3JFLE1BQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDekMsTUFBTSxPQUFPLEdBQUcsSUFBSSxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUM5QyxPQUFPLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLEtBQUssQ0FBQyxDQUFDO0FBQzNELENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQWlCO0lBQ3RDLFVBQVUsRUFBRSxJQUFJO0lBQ2hCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxJQUE2QjtDQUMxQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0FkZE4sIEFkZE5JbnB1dHMsIEtlcm5lbENvbmZpZywgS2VybmVsRnVuYywgVGVuc29ySW5mbywgdXBjYXN0VHlwZX0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5cbmltcG9ydCB7QWRkTlBhY2tlZFByb2dyYW19IGZyb20gJy4uL2FkZG5fcGFja2VkX3dlYmdwdSc7XG5pbXBvcnQge2lkZW50aXR5fSBmcm9tICcuL0lkZW50aXR5JztcblxuZXhwb3J0IGZ1bmN0aW9uIGFkZE4oYXJnczoge2lucHV0czogQWRkTklucHV0cywgYmFja2VuZDogV2ViR1BVQmFja2VuZH0pOlxuICAgIFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kfSA9IGFyZ3M7XG5cbiAgY29uc3QgdGVuc29ycyA9IGlucHV0cztcbiAgaWYgKHRlbnNvcnMubGVuZ3RoID09PSAxKSB7XG4gICAgcmV0dXJuIGlkZW50aXR5KHtpbnB1dHM6IHt4OiB0ZW5zb3JzWzBdfSwgYmFja2VuZH0pO1xuICB9XG5cbiAgY29uc3QgZHR5cGUgPVxuICAgICAgdGVuc29ycy5tYXAodCA9PiB0LmR0eXBlKS5yZWR1Y2UoKGQxLCBkMikgPT4gdXBjYXN0VHlwZShkMSwgZDIpKTtcbiAgY29uc3Qgc2hhcGVzID0gdGVuc29ycy5tYXAodCA9PiB0LnNoYXBlKTtcbiAgY29uc3QgcHJvZ3JhbSA9IG5ldyBBZGROUGFja2VkUHJvZ3JhbShzaGFwZXMpO1xuICByZXR1cm4gYmFja2VuZC5ydW5XZWJHUFVQcm9ncmFtKHByb2dyYW0sIHRlbnNvcnMsIGR0eXBlKTtcbn1cblxuZXhwb3J0IGNvbnN0IGFkZE5Db25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogQWRkTixcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBhZGROIGFzIHVua25vd24gYXMgS2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch } from './webgpu_util';\nexport class TransposeSharedProgram {\n    constructor(aShape, newDim) {\n        this.variableNames = ['A'];\n        // Note that the maximum number of workgroup invocations by webgpu is 256.\n        this.workgroupSize = [16, 16, 1];\n        const outputShape = new Array(aShape.length);\n        for (let i = 0; i < outputShape.length; i++) {\n            outputShape[i] = aShape[newDim[i]];\n        }\n        this.outputShape = outputShape;\n        this.dispatchLayout = { x: [0], y: [1] };\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize, [1, 1, 1]);\n        this.shaderKey = 'transposeShared';\n    }\n    getUserCode() {\n        util.assert(this.workgroupSize[0] === this.workgroupSize[1], () => `Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`);\n        const tileSize = this.workgroupSize[0];\n        const userCode = `\n      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0] + 1}>, ${this.workgroupSize[0]}>;\n      ${main()} {\n        var x = i32(workgroupId.x) * ${tileSize} + i32(localId.x);\n        var y = i32(workgroupId.y) * ${tileSize} + i32(localId.y);\n        let width = uniforms.outShape[0];\n        let height = uniforms.outShape[1];\n        if (x < width && y < height) {\n          tile[localId.y][localId.x] = f32(A[y * width + x]);\n        }\n        workgroupBarrier();\n\n        x = i32(workgroupId.y) * ${tileSize} + i32(localId.x);\n        y = i32(workgroupId.x) * ${tileSize} + i32(localId.y);\n        if (x < height && y < width) {\n          setOutputAtIndex((y * height + x), tile[localId.x]\n            [localId.y]);\n        }\n      }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNwb3NlX3NoYXJlZF93ZWJncHUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy90cmFuc3Bvc2Vfc2hhcmVkX3dlYmdwdS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsSUFBSSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDM0MsT0FBTyxFQUFDLG1CQUFtQixJQUFJLElBQUksRUFBZ0IsTUFBTSxrQkFBa0IsQ0FBQztBQUM1RSxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTlDLE1BQU0sT0FBTyxzQkFBc0I7SUFTakMsWUFBWSxNQUFnQixFQUFFLE1BQWdCO1FBUjlDLGtCQUFhLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUt0QiwwRUFBMEU7UUFDMUUsa0JBQWEsR0FBNkIsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBR3BELE1BQU0sV0FBVyxHQUFhLElBQUksS0FBSyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN2RCxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsV0FBVyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUMzQyxXQUFXLENBQUMsQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ3BDO1FBQ0QsSUFBSSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUM7UUFDL0IsSUFBSSxDQUFDLGNBQWMsR0FBRyxFQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUM7UUFDdkMsSUFBSSxDQUFDLFFBQVEsR0FBRyxlQUFlLENBQzNCLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRTFFLElBQUksQ0FBQyxTQUFTLEdBQUcsaUJBQWlCLENBQUM7SUFDckMsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsTUFBTSxDQUNQLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLEtBQUssSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsRUFDL0MsR0FBRyxFQUFFLENBQUMsZ0RBQ0YsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsTUFBTSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUM1RCxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3ZDLE1BQU0sUUFBUSxHQUFHOytDQUMwQixJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsTUFDaEUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7UUFDckIsSUFBSSxFQUFFO3VDQUN5QixRQUFRO3VDQUNSLFFBQVE7Ozs7Ozs7O21DQVFaLFFBQVE7bUNBQ1IsUUFBUTs7Ozs7O0tBTXRDLENBQUM7UUFDRixPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7dXRpbH0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcbmltcG9ydCB7Z2V0TWFpbkhlYWRlclN0cmluZyBhcyBtYWluLCBXZWJHUFVQcm9ncmFtfSBmcm9tICcuL3dlYmdwdV9wcm9ncmFtJztcbmltcG9ydCB7Y29tcHV0ZURpc3BhdGNofSBmcm9tICcuL3dlYmdwdV91dGlsJztcblxuZXhwb3J0IGNsYXNzIFRyYW5zcG9zZVNoYXJlZFByb2dyYW0gaW1wbGVtZW50cyBXZWJHUFVQcm9ncmFtIHtcbiAgdmFyaWFibGVOYW1lcyA9IFsnQSddO1xuICBvdXRwdXRTaGFwZTogbnVtYmVyW107XG4gIHNoYWRlcktleTogc3RyaW5nO1xuICBkaXNwYXRjaExheW91dDoge3g6IG51bWJlcltdLCB5OiBudW1iZXJbXX07XG4gIGRpc3BhdGNoOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl07XG4gIC8vIE5vdGUgdGhhdCB0aGUgbWF4aW11bSBudW1iZXIgb2Ygd29ya2dyb3VwIGludm9jYXRpb25zIGJ5IHdlYmdwdSBpcyAyNTYuXG4gIHdvcmtncm91cFNpemU6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXSA9IFsxNiwgMTYsIDFdO1xuXG4gIGNvbnN0cnVjdG9yKGFTaGFwZTogbnVtYmVyW10sIG5ld0RpbTogbnVtYmVyW10pIHtcbiAgICBjb25zdCBvdXRwdXRTaGFwZTogbnVtYmVyW10gPSBuZXcgQXJyYXkoYVNoYXBlLmxlbmd0aCk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBvdXRwdXRTaGFwZS5sZW5ndGg7IGkrKykge1xuICAgICAgb3V0cHV0U2hhcGVbaV0gPSBhU2hhcGVbbmV3RGltW2ldXTtcbiAgICB9XG4gICAgdGhpcy5vdXRwdXRTaGFwZSA9IG91dHB1dFNoYXBlO1xuICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQgPSB7eDogWzBdLCB5OiBbMV19O1xuICAgIHRoaXMuZGlzcGF0Y2ggPSBjb21wdXRlRGlzcGF0Y2goXG4gICAgICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQsIHRoaXMub3V0cHV0U2hhcGUsIHRoaXMud29ya2dyb3VwU2l6ZSwgWzEsIDEsIDFdKTtcblxuICAgIHRoaXMuc2hhZGVyS2V5ID0gJ3RyYW5zcG9zZVNoYXJlZCc7XG4gIH1cblxuICBnZXRVc2VyQ29kZSgpOiBzdHJpbmcge1xuICAgIHV0aWwuYXNzZXJ0KFxuICAgICAgICB0aGlzLndvcmtncm91cFNpemVbMF0gPT09IHRoaXMud29ya2dyb3VwU2l6ZVsxXSxcbiAgICAgICAgKCkgPT4gYE11c3QgYmUgYSBzcXVhcmUgdGlsZSwgY3VycmVudCB0aWxlIHNoYXBlIGlzICR7XG4gICAgICAgICAgICB0aGlzLndvcmtncm91cFNpemVbMF19IHggJHt0aGlzLndvcmtncm91cFNpemVbMV19YCk7XG4gICAgY29uc3QgdGlsZVNpemUgPSB0aGlzLndvcmtncm91cFNpemVbMF07XG4gICAgY29uc3QgdXNlckNvZGUgPSBgXG4gICAgICB2YXI8d29ya2dyb3VwPiB0aWxlIDogYXJyYXk8YXJyYXk8ZjMyLCAke3RoaXMud29ya2dyb3VwU2l6ZVswXSArIDF9PiwgJHtcbiAgICAgICAgdGhpcy53b3JrZ3JvdXBTaXplWzBdfT47XG4gICAgICAke21haW4oKX0ge1xuICAgICAgICB2YXIgeCA9IGkzMih3b3JrZ3JvdXBJZC54KSAqICR7dGlsZVNpemV9ICsgaTMyKGxvY2FsSWQueCk7XG4gICAgICAgIHZhciB5ID0gaTMyKHdvcmtncm91cElkLnkpICogJHt0aWxlU2l6ZX0gKyBpMzIobG9jYWxJZC55KTtcbiAgICAgICAgbGV0IHdpZHRoID0gdW5pZm9ybXMub3V0U2hhcGVbMF07XG4gICAgICAgIGxldCBoZWlnaHQgPSB1bmlmb3Jtcy5vdXRTaGFwZVsxXTtcbiAgICAgICAgaWYgKHggPCB3aWR0aCAmJiB5IDwgaGVpZ2h0KSB7XG4gICAgICAgICAgdGlsZVtsb2NhbElkLnldW2xvY2FsSWQueF0gPSBmMzIoQVt5ICogd2lkdGggKyB4XSk7XG4gICAgICAgIH1cbiAgICAgICAgd29ya2dyb3VwQmFycmllcigpO1xuXG4gICAgICAgIHggPSBpMzIod29ya2dyb3VwSWQueSkgKiAke3RpbGVTaXplfSArIGkzMihsb2NhbElkLngpO1xuICAgICAgICB5ID0gaTMyKHdvcmtncm91cElkLngpICogJHt0aWxlU2l6ZX0gKyBpMzIobG9jYWxJZC55KTtcbiAgICAgICAgaWYgKHggPCBoZWlnaHQgJiYgeSA8IHdpZHRoKSB7XG4gICAgICAgICAgc2V0T3V0cHV0QXRJbmRleCgoeSAqIGhlaWdodCArIHgpLCB0aWxlW2xvY2FsSWQueF1cbiAgICAgICAgICAgIFtsb2NhbElkLnldKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIGA7XG4gICAgcmV0dXJuIHVzZXJDb2RlO1xuICB9XG59XG4iXX0=","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType, getCoordsXYZ, getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class TransposeProgram {\n    constructor(aShape, newDim) {\n        this.variableNames = ['A'];\n        this.workPerThread = 1;\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        const outputShape = new Array(aShape.length);\n        for (let i = 0; i < outputShape.length; i++) {\n            outputShape[i] = aShape[newDim[i]];\n        }\n        this.outputShape = outputShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize, [this.workPerThread, 1, 1]);\n        this.newDim = newDim;\n        this.shaderKey = `transpose_${newDim}`;\n    }\n    getUserCode() {\n        const dtype = getCoordsDataType(this.outputShape.length);\n        const switched = getSwitchedCoords(this.newDim);\n        const userCode = `\n      ${main('index')} {\n        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if(flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(\n              ${dtype}(${switched}), uniforms.aShape)]);\n          }\n        }\n      }\n    `;\n        return userCode;\n    }\n}\nexport function getSwitchedCoords(newDim) {\n    const rank = newDim.length;\n    if (rank > 6) {\n        throw Error(`Transpose for rank ${rank} is not yet supported`);\n    }\n    const switchedCoords = new Array(rank);\n    for (let i = 0; i < newDim.length; i++) {\n        switchedCoords[newDim[i]] = `coords.${getCoordsXYZ(i)}`;\n    }\n    return switchedCoords.join();\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNwb3NlX3dlYmdwdS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL3RyYW5zcG9zZV93ZWJncHUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLGlCQUFpQixFQUFFLFlBQVksRUFBRSxtQkFBbUIsSUFBSSxJQUFJLEVBQWdCLE1BQU0sa0JBQWtCLENBQUM7QUFDN0csT0FBTyxFQUFDLGVBQWUsRUFBRSxrQkFBa0IsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUVsRSxNQUFNLE9BQU8sZ0JBQWdCO0lBVzNCLFlBQVksTUFBZ0IsRUFBRSxNQUFnQjtRQVY5QyxrQkFBYSxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFLdEIsa0JBQWEsR0FBRyxDQUFDLENBQUM7UUFDbEIsa0JBQWEsR0FBNkIsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBRXJELFNBQUksR0FBRyxJQUFJLENBQUM7UUFHVixNQUFNLFdBQVcsR0FBYSxJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDdkQsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFdBQVcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDM0MsV0FBVyxDQUFDLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNwQztRQUNELElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO1FBQy9CLElBQUksQ0FBQyxjQUFjLEdBQUcsa0JBQWtCLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQzNELElBQUksQ0FBQyxRQUFRLEdBQUcsZUFBZSxDQUMzQixJQUFJLENBQUMsY0FBYyxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLGFBQWEsRUFDekQsQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRWhDLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxTQUFTLEdBQUcsYUFBYSxNQUFNLEVBQUUsQ0FBQztJQUN6QyxDQUFDO0lBRUQsV0FBVztRQUNULE1BQU0sS0FBSyxHQUFHLGlCQUFpQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDekQsTUFBTSxRQUFRLEdBQUcsaUJBQWlCLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRWhELE1BQU0sUUFBUSxHQUFHO1FBQ2IsSUFBSSxDQUFDLE9BQU8sQ0FBQzs2QkFDUSxJQUFJLENBQUMsYUFBYTtvQ0FDWCxJQUFJLENBQUMsYUFBYTs7OzhEQUk5QyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU07Z0JBQ2YsS0FBSyxJQUFJLFFBQVE7Ozs7S0FJNUIsQ0FBQztRQUNGLE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7Q0FDRjtBQUVELE1BQU0sVUFBVSxpQkFBaUIsQ0FBQyxNQUFnQjtJQUNoRCxNQUFNLElBQUksR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO0lBQzNCLElBQUksSUFBSSxHQUFHLENBQUMsRUFBRTtRQUNaLE1BQU0sS0FBSyxDQUFDLHNCQUFzQixJQUFJLHVCQUF1QixDQUFDLENBQUM7S0FDaEU7SUFDRCxNQUFNLGNBQWMsR0FBRyxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN2QyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUN0QyxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsVUFBVSxZQUFZLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztLQUN6RDtJQUVELE9BQU8sY0FBYyxDQUFDLElBQUksRUFBRSxDQUFDO0FBQy9CLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7Z2V0Q29vcmRzRGF0YVR5cGUsIGdldENvb3Jkc1hZWiwgZ2V0TWFpbkhlYWRlclN0cmluZyBhcyBtYWluLCBXZWJHUFVQcm9ncmFtfSBmcm9tICcuL3dlYmdwdV9wcm9ncmFtJztcbmltcG9ydCB7Y29tcHV0ZURpc3BhdGNoLCBmbGF0RGlzcGF0Y2hMYXlvdXR9IGZyb20gJy4vd2ViZ3B1X3V0aWwnO1xuXG5leHBvcnQgY2xhc3MgVHJhbnNwb3NlUHJvZ3JhbSBpbXBsZW1lbnRzIFdlYkdQVVByb2dyYW0ge1xuICB2YXJpYWJsZU5hbWVzID0gWydBJ107XG4gIHNoYWRlcktleTogc3RyaW5nO1xuICBvdXRwdXRTaGFwZTogbnVtYmVyW107XG4gIGRpc3BhdGNoTGF5b3V0OiB7eDogbnVtYmVyW119O1xuICBkaXNwYXRjaDogW251bWJlciwgbnVtYmVyLCBudW1iZXJdO1xuICB3b3JrUGVyVGhyZWFkID0gMTtcbiAgd29ya2dyb3VwU2l6ZTogW251bWJlciwgbnVtYmVyLCBudW1iZXJdID0gWzY0LCAxLCAxXTtcbiAgbmV3RGltOiBudW1iZXJbXTtcbiAgc2l6ZSA9IHRydWU7XG5cbiAgY29uc3RydWN0b3IoYVNoYXBlOiBudW1iZXJbXSwgbmV3RGltOiBudW1iZXJbXSkge1xuICAgIGNvbnN0IG91dHB1dFNoYXBlOiBudW1iZXJbXSA9IG5ldyBBcnJheShhU2hhcGUubGVuZ3RoKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG91dHB1dFNoYXBlLmxlbmd0aDsgaSsrKSB7XG4gICAgICBvdXRwdXRTaGFwZVtpXSA9IGFTaGFwZVtuZXdEaW1baV1dO1xuICAgIH1cbiAgICB0aGlzLm91dHB1dFNoYXBlID0gb3V0cHV0U2hhcGU7XG4gICAgdGhpcy5kaXNwYXRjaExheW91dCA9IGZsYXREaXNwYXRjaExheW91dCh0aGlzLm91dHB1dFNoYXBlKTtcbiAgICB0aGlzLmRpc3BhdGNoID0gY29tcHV0ZURpc3BhdGNoKFxuICAgICAgICB0aGlzLmRpc3BhdGNoTGF5b3V0LCB0aGlzLm91dHB1dFNoYXBlLCB0aGlzLndvcmtncm91cFNpemUsXG4gICAgICAgIFt0aGlzLndvcmtQZXJUaHJlYWQsIDEsIDFdKTtcblxuICAgIHRoaXMubmV3RGltID0gbmV3RGltO1xuICAgIHRoaXMuc2hhZGVyS2V5ID0gYHRyYW5zcG9zZV8ke25ld0RpbX1gO1xuICB9XG5cbiAgZ2V0VXNlckNvZGUoKTogc3RyaW5nIHtcbiAgICBjb25zdCBkdHlwZSA9IGdldENvb3Jkc0RhdGFUeXBlKHRoaXMub3V0cHV0U2hhcGUubGVuZ3RoKTtcbiAgICBjb25zdCBzd2l0Y2hlZCA9IGdldFN3aXRjaGVkQ29vcmRzKHRoaXMubmV3RGltKTtcblxuICAgIGNvbnN0IHVzZXJDb2RlID0gYFxuICAgICAgJHttYWluKCdpbmRleCcpfSB7XG4gICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCAke3RoaXMud29ya1BlclRocmVhZH07IGkgPSBpICsgMSkge1xuICAgICAgICAgIGxldCBmbGF0SW5kZXggPSBpbmRleCAqICR7dGhpcy53b3JrUGVyVGhyZWFkfSArIGk7XG4gICAgICAgICAgaWYoZmxhdEluZGV4IDwgdW5pZm9ybXMuc2l6ZSkge1xuICAgICAgICAgICAgbGV0IGNvb3JkcyA9IGdldENvb3Jkc0Zyb21JbmRleChmbGF0SW5kZXgpO1xuICAgICAgICAgICAgc2V0T3V0cHV0QXRJbmRleChmbGF0SW5kZXgsIEFbZ2V0SW5kZXhGcm9tQ29vcmRzJHtcbiAgICAgICAgdGhpcy5vdXRwdXRTaGFwZS5sZW5ndGh9RChcbiAgICAgICAgICAgICAgJHtkdHlwZX0oJHtzd2l0Y2hlZH0pLCB1bmlmb3Jtcy5hU2hhcGUpXSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgYDtcbiAgICByZXR1cm4gdXNlckNvZGU7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFN3aXRjaGVkQ29vcmRzKG5ld0RpbTogbnVtYmVyW10pOiBzdHJpbmcge1xuICBjb25zdCByYW5rID0gbmV3RGltLmxlbmd0aDtcbiAgaWYgKHJhbmsgPiA2KSB7XG4gICAgdGhyb3cgRXJyb3IoYFRyYW5zcG9zZSBmb3IgcmFuayAke3Jhbmt9IGlzIG5vdCB5ZXQgc3VwcG9ydGVkYCk7XG4gIH1cbiAgY29uc3Qgc3dpdGNoZWRDb29yZHMgPSBuZXcgQXJyYXkocmFuayk7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbmV3RGltLmxlbmd0aDsgaSsrKSB7XG4gICAgc3dpdGNoZWRDb29yZHNbbmV3RGltW2ldXSA9IGBjb29yZHMuJHtnZXRDb29yZHNYWVooaSl9YDtcbiAgfVxuXG4gIHJldHVybiBzd2l0Y2hlZENvb3Jkcy5qb2luKCk7XG59XG4iXX0=","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Transpose, util } from '@tensorflow/tfjs-core';\nimport { transposeImplCPU as cpuTranspose } from '../kernel_utils/shared';\nimport { TransposeSharedProgram } from '../transpose_shared_webgpu';\nimport { TransposeProgram } from '../transpose_webgpu';\nexport function transpose(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { perm } = attrs;\n    const webgpuBackend = backend;\n    const xRank = x.shape.length;\n    const newShape = new Array(xRank);\n    for (let i = 0; i < newShape.length; i++) {\n        newShape[i] = x.shape[perm[i]];\n    }\n    if (backend.shouldExecuteOnCPU([x])) {\n        const xData = webgpuBackend.tensorMap.get(x.dataId);\n        const values = xData.values;\n        const outValues = cpuTranspose(values, x.shape, x.dtype, perm, newShape);\n        return backend.makeTensorInfo(newShape, x.dtype, outValues);\n    }\n    if (x.shape.length === 2 && util.arraysEqual(perm, [1, 0])) {\n        const program = new TransposeSharedProgram(x.shape, perm);\n        return webgpuBackend.runWebGPUProgram(program, [x], x.dtype);\n    }\n    const program = new TransposeProgram(x.shape, perm);\n    return webgpuBackend.runWebGPUProgram(program, [x], x.dtype);\n}\nexport const transposeConfig = {\n    kernelName: Transpose,\n    backendName: 'webgpu',\n    kernelFunc: transpose\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVHJhbnNwb3NlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9UcmFuc3Bvc2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUEyQixTQUFTLEVBQStDLElBQUksRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRzdILE9BQU8sRUFBQyxnQkFBZ0IsSUFBSSxZQUFZLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUV4RSxPQUFPLEVBQUMsc0JBQXNCLEVBQUMsTUFBTSw0QkFBNEIsQ0FBQztBQUNsRSxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUVyRCxNQUFNLFVBQVUsU0FBUyxDQUFDLElBSXpCO0lBQ0MsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ3RDLE1BQU0sRUFBQyxDQUFDLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFDbkIsTUFBTSxFQUFDLElBQUksRUFBQyxHQUFHLEtBQUssQ0FBQztJQUNyQixNQUFNLGFBQWEsR0FBRyxPQUFPLENBQUM7SUFFOUIsTUFBTSxLQUFLLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUM7SUFDN0IsTUFBTSxRQUFRLEdBQWEsSUFBSSxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDNUMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDeEMsUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDaEM7SUFDRCxJQUFJLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7UUFDbkMsTUFBTSxLQUFLLEdBQUcsYUFBYSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3BELE1BQU0sTUFBTSxHQUFHLEtBQUssQ0FBQyxNQUFvQixDQUFDO1FBQzFDLE1BQU0sU0FBUyxHQUFHLFlBQVksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQztRQUN6RSxPQUFPLE9BQU8sQ0FBQyxjQUFjLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUM7S0FDN0Q7SUFDRCxJQUFJLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxLQUFLLENBQUMsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFO1FBQzFELE1BQU0sT0FBTyxHQUFHLElBQUksc0JBQXNCLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQztRQUMxRCxPQUFPLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDOUQ7SUFDRCxNQUFNLE9BQU8sR0FBRyxJQUFJLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDcEQsT0FBTyxhQUFhLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQy9ELENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxlQUFlLEdBQWlCO0lBQzNDLFVBQVUsRUFBRSxTQUFTO0lBQ3JCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxTQUFrQztDQUMvQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0tlcm5lbENvbmZpZywgS2VybmVsRnVuYywgVHJhbnNwb3NlLCBUcmFuc3Bvc2VBdHRycywgVHJhbnNwb3NlSW5wdXRzLCBUeXBlZEFycmF5LCB1dGlsfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcbmltcG9ydCB7dHJhbnNwb3NlSW1wbENQVSBhcyBjcHVUcmFuc3Bvc2V9IGZyb20gJy4uL2tlcm5lbF91dGlscy9zaGFyZWQnO1xuXG5pbXBvcnQge1RyYW5zcG9zZVNoYXJlZFByb2dyYW19IGZyb20gJy4uL3RyYW5zcG9zZV9zaGFyZWRfd2ViZ3B1JztcbmltcG9ydCB7VHJhbnNwb3NlUHJvZ3JhbX0gZnJvbSAnLi4vdHJhbnNwb3NlX3dlYmdwdSc7XG5cbmV4cG9ydCBmdW5jdGlvbiB0cmFuc3Bvc2UoYXJnczoge1xuICBpbnB1dHM6IFRyYW5zcG9zZUlucHV0cyxcbiAgYXR0cnM6IFRyYW5zcG9zZUF0dHJzLFxuICBiYWNrZW5kOiBXZWJHUFVCYWNrZW5kXG59KSB7XG4gIGNvbnN0IHtpbnB1dHMsIGJhY2tlbmQsIGF0dHJzfSA9IGFyZ3M7XG4gIGNvbnN0IHt4fSA9IGlucHV0cztcbiAgY29uc3Qge3Blcm19ID0gYXR0cnM7XG4gIGNvbnN0IHdlYmdwdUJhY2tlbmQgPSBiYWNrZW5kO1xuXG4gIGNvbnN0IHhSYW5rID0geC5zaGFwZS5sZW5ndGg7XG4gIGNvbnN0IG5ld1NoYXBlOiBudW1iZXJbXSA9IG5ldyBBcnJheSh4UmFuayk7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbmV3U2hhcGUubGVuZ3RoOyBpKyspIHtcbiAgICBuZXdTaGFwZVtpXSA9IHguc2hhcGVbcGVybVtpXV07XG4gIH1cbiAgaWYgKGJhY2tlbmQuc2hvdWxkRXhlY3V0ZU9uQ1BVKFt4XSkpIHtcbiAgICBjb25zdCB4RGF0YSA9IHdlYmdwdUJhY2tlbmQudGVuc29yTWFwLmdldCh4LmRhdGFJZCk7XG4gICAgY29uc3QgdmFsdWVzID0geERhdGEudmFsdWVzIGFzIFR5cGVkQXJyYXk7XG4gICAgY29uc3Qgb3V0VmFsdWVzID0gY3B1VHJhbnNwb3NlKHZhbHVlcywgeC5zaGFwZSwgeC5kdHlwZSwgcGVybSwgbmV3U2hhcGUpO1xuICAgIHJldHVybiBiYWNrZW5kLm1ha2VUZW5zb3JJbmZvKG5ld1NoYXBlLCB4LmR0eXBlLCBvdXRWYWx1ZXMpO1xuICB9XG4gIGlmICh4LnNoYXBlLmxlbmd0aCA9PT0gMiAmJiB1dGlsLmFycmF5c0VxdWFsKHBlcm0sIFsxLCAwXSkpIHtcbiAgICBjb25zdCBwcm9ncmFtID0gbmV3IFRyYW5zcG9zZVNoYXJlZFByb2dyYW0oeC5zaGFwZSwgcGVybSk7XG4gICAgcmV0dXJuIHdlYmdwdUJhY2tlbmQucnVuV2ViR1BVUHJvZ3JhbShwcm9ncmFtLCBbeF0sIHguZHR5cGUpO1xuICB9XG4gIGNvbnN0IHByb2dyYW0gPSBuZXcgVHJhbnNwb3NlUHJvZ3JhbSh4LnNoYXBlLCBwZXJtKTtcbiAgcmV0dXJuIHdlYmdwdUJhY2tlbmQucnVuV2ViR1BVUHJvZ3JhbShwcm9ncmFtLCBbeF0sIHguZHR5cGUpO1xufVxuXG5leHBvcnQgY29uc3QgdHJhbnNwb3NlQ29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IFRyYW5zcG9zZSxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiB0cmFuc3Bvc2UgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class ReduceProgram {\n    constructor(reduceInfo, reduceType, maxComputeWorkgroupSizeX) {\n        this.variableNames = ['x'];\n        this.uniforms = 'reduceSize : i32,';\n        this.size = true;\n        this.inputShape = [reduceInfo.batchSize, reduceInfo.inSize];\n        const [outputShape,] = backend_util.computeOutAndReduceShapes(this.inputShape, [1]);\n        this.outputShape = outputShape.length === 0 ? [1] : outputShape;\n        // If reduceSize |reduceInfo.inSize| is very large, the I/O accessing will\n        // become the bottleneck. Increasing workgroupSize can reduce the times of\n        // accessing global memory. The threshold value is just to make sure the\n        // reduceSize is large enough for a bigger workgroupSize.\n        if (reduceInfo.inSize >= 32768 && maxComputeWorkgroupSizeX >= 512) {\n            this.workgroupSize = [512, 1, 1];\n        }\n        else if (reduceInfo.inSize >= 4096) {\n            this.workgroupSize = [256, 1, 1];\n        }\n        else {\n            this.workgroupSize = [64, 1, 1];\n        }\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        // A work group only outputs a data, so we transfer [1, 1, 1] to compute\n        // dispatch size.\n        this.dispatch =\n            computeDispatch(this.dispatchLayout, this.outputShape, [1, 1, 1]);\n        this.reduceType = reduceType;\n        this.shaderKey = `reduce_${reduceType}`;\n    }\n    getUserCode() {\n        let reduceOp = ``;\n        let initValue = '0.0';\n        const workgroupSizeX = this.workgroupSize[0];\n        if (this.reduceType === 'min' || this.reduceType === 'max') {\n            reduceOp = `\n         if (isnan(candidate)) {\n          bestValue = uniforms.NAN;\n         } else if (!isnan(bestValue) && candidate ${this.reduceType === 'min' ? '<' : '>'} bestValue)\n           {  bestValue = candidate; }`;\n            initValue = 'f32(x[offset])';\n        }\n        else if (this.reduceType === 'sum' || this.reduceType === 'mean') {\n            reduceOp = ' bestValue = bestValue + candidate; ';\n        }\n        else if (this.reduceType === 'prod') {\n            reduceOp = ' bestValue = bestValue * candidate; ';\n            initValue = '1.0';\n        }\n        else if (this.reduceType === 'all') {\n            reduceOp = ' bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ';\n            initValue = '1.0';\n        }\n        else if (this.reduceType === 'any') {\n            reduceOp = ' bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ';\n            initValue = '0.0';\n        }\n        const outputSnippet = this.reduceType === 'mean' ?\n            // tslint:disable-next-line:max-line-length\n            `setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));` :\n            `setOutputAtIndex(outputIndex, bestValue);`;\n        const sharedMemorySnippet = `\n         var<workgroup> xBestValues : array<f32, ${workgroupSizeX}>;\n       `;\n        const userCode = `\n       fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n       }\n\n       ${sharedMemorySnippet}\n       fn getOffset(outputIndex : i32) -> i32 {\n         let outputCoords = getCoordsFromIndex(outputIndex);\n         let offset = ${this.outputShape.length === 1 ?\n            'outputCoords' :\n            'outputCoords[0]'} * uniforms.reduceSize;\n          return offset;\n       }\n       ${main('index')} {\n         let outputIndex = index / ${workgroupSizeX};\n         let offset = getOffset(outputIndex);\n         var bestValue = ${initValue};\n         let Length = uniforms.reduceSize;\n         let WorkPerThread = DIV_CEIL(u32(Length), ${workgroupSizeX}u);\n         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;\n             k = k + ${workgroupSizeX}) {\n           let candidate = f32(x[offset + k]);\n           ${reduceOp}\n         }\n         xBestValues[localId.x] = bestValue;\n         workgroupBarrier();\n\n         var reduceSize = min(u32(Length), ${workgroupSizeX}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            ${reduceOp}\n            xBestValues[localId.x] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (localId.x == 0u && outputIndex < uniforms.size) {\n          ${outputSnippet}\n        }\n       }\n     `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, sumOutType, util } from '@tensorflow/tfjs-core';\nimport { reshape } from '../kernels/Reshape';\nimport { transpose } from '../kernels/Transpose';\nimport { ReduceProgram } from '../reduce_webgpu';\nimport { maxImplCPU } from './shared';\nimport { prodImplCPU } from './shared';\nconst RETURN_TYPES = {\n    'mean': 'float32',\n    'all': 'bool',\n    'any': 'bool',\n};\nexport function reduce(x, axis, keepDims, reduceType, backend) {\n    const xRank = x.shape.length;\n    const toDispose = [];\n    const origAxes = util.parseAxisParam(axis, x.shape);\n    let axes = origAxes;\n    const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n    let input = x;\n    if (permutedAxes != null) {\n        input = transpose({ inputs: { x }, attrs: { perm: permutedAxes }, backend });\n        axes = backend_util.getInnerMostAxes(axes.length, xRank);\n        toDispose.push(input);\n    }\n    backend_util.assertAxesAreInnerMostDims(reduceType, axes, xRank);\n    const [reduceOutShape, reduceShape] = backend_util.computeOutAndReduceShapes(input.shape, axes);\n    let resOutShape = reduceOutShape;\n    if (keepDims) {\n        // rather than reshape at the end, set the target shape here.\n        resOutShape = backend_util.expandShapeToKeepDim(reduceOutShape, origAxes);\n    }\n    let res;\n    if ((reduceType === 'max' || reduceType === 'prod') &&\n        backend.shouldExecuteOnCPU([input])) {\n        const xVals = backend.tensorMap.get(input.dataId).values;\n        switch (reduceType) {\n            case 'max':\n                const outValues = maxImplCPU(xVals, util.sizeFromShape(reduceShape), resOutShape, x.dtype);\n                res = backend.makeTensorInfo(resOutShape, x.dtype, outValues);\n                break;\n            case 'prod':\n                const { outVals, outShape, outDtype } = prodImplCPU(input.shape, input.dtype, xVals, axes);\n                res = backend.makeTensorInfo(outShape, outDtype, outVals);\n                break;\n            default:\n                throw new Error(`${reduceType} CPU implementation is not yet supported.`);\n        }\n    }\n    else {\n        const inSize = util.sizeFromShape(reduceShape);\n        const xSize = util.sizeFromShape(input.shape);\n        const batchSize = xSize / inSize;\n        const reduceInfo = { windowSize: inSize, inSize, batchSize, outSize: 1 };\n        const dtype = RETURN_TYPES[reduceType] || sumOutType(x.dtype);\n        const uniformData = [\n            { type: 'int32', data: [inSize] },\n        ];\n        const program = new ReduceProgram(reduceInfo, reduceType, backend.device.limits.maxComputeWorkgroupSizeX);\n        const reduced = backend.runWebGPUProgram(program, [input], dtype, uniformData);\n        toDispose.push(reduced);\n        res = reshape({ inputs: { x: reduced }, attrs: { shape: resOutShape }, backend });\n    }\n    toDispose.forEach(t => backend.disposeData(t.dataId));\n    return res;\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { All } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nexport function all(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { keepDims, axis } = attrs;\n    return reduce(x, axis, keepDims, 'all', backend);\n}\nexport const allConfig = {\n    kernelName: All,\n    backendName: 'webgpu',\n    kernelFunc: all\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWxsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9BbGwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLEdBQUcsRUFBNEQsTUFBTSx1QkFBdUIsQ0FBQztBQUdyRyxPQUFPLEVBQUMsTUFBTSxFQUFDLE1BQU0sd0JBQXdCLENBQUM7QUFFOUMsTUFBTSxVQUFVLEdBQUcsQ0FDZixJQUFrRTtJQUVwRSxNQUFNLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFDdEMsTUFBTSxFQUFDLENBQUMsRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUNuQixNQUFNLEVBQUMsUUFBUSxFQUFFLElBQUksRUFBQyxHQUFHLEtBQUssQ0FBQztJQUUvQixPQUFPLE1BQU0sQ0FBQyxDQUFDLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUM7QUFDbkQsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBaUI7SUFDckMsVUFBVSxFQUFFLEdBQUc7SUFDZixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsR0FBNEI7Q0FDekMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIyIEdvb2dsZSBMTEMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtBbGwsIEFsbEF0dHJzLCBBbGxJbnB1dHMsIEtlcm5lbENvbmZpZywgS2VybmVsRnVuYywgVGVuc29ySW5mb30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge3JlZHVjZX0gZnJvbSAnLi4va2VybmVsX3V0aWxzL3JlZHVjZSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBhbGwoXG4gICAgYXJnczoge2lucHV0czogQWxsSW5wdXRzLCBhdHRyczogQWxsQXR0cnMsIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmR9KTpcbiAgICBUZW5zb3JJbmZvIHtcbiAgY29uc3Qge2lucHV0cywgYmFja2VuZCwgYXR0cnN9ID0gYXJncztcbiAgY29uc3Qge3h9ID0gaW5wdXRzO1xuICBjb25zdCB7a2VlcERpbXMsIGF4aXN9ID0gYXR0cnM7XG5cbiAgcmV0dXJuIHJlZHVjZSh4LCBheGlzLCBrZWVwRGltcywgJ2FsbCcsIGJhY2tlbmQpO1xufVxuXG5leHBvcnQgY29uc3QgYWxsQ29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IEFsbCxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBhbGwgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Any } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nexport function any(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { keepDims, axis } = attrs;\n    return reduce(x, axis, keepDims, 'any', backend);\n}\nexport const anyConfig = {\n    kernelName: Any,\n    backendName: 'webgpu',\n    kernelFunc: any\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQW55LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9BbnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLEdBQUcsRUFBNEQsTUFBTSx1QkFBdUIsQ0FBQztBQUdyRyxPQUFPLEVBQUMsTUFBTSxFQUFDLE1BQU0sd0JBQXdCLENBQUM7QUFFOUMsTUFBTSxVQUFVLEdBQUcsQ0FDZixJQUFrRTtJQUVwRSxNQUFNLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFDdEMsTUFBTSxFQUFDLENBQUMsRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUNuQixNQUFNLEVBQUMsUUFBUSxFQUFFLElBQUksRUFBQyxHQUFHLEtBQUssQ0FBQztJQUUvQixPQUFPLE1BQU0sQ0FBQyxDQUFDLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUM7QUFDbkQsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBaUI7SUFDckMsVUFBVSxFQUFFLEdBQUc7SUFDZixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsR0FBNEI7Q0FDekMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIyIEdvb2dsZSBMTEMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtBbnksIEFueUF0dHJzLCBBbnlJbnB1dHMsIEtlcm5lbENvbmZpZywgS2VybmVsRnVuYywgVGVuc29ySW5mb30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge3JlZHVjZX0gZnJvbSAnLi4va2VybmVsX3V0aWxzL3JlZHVjZSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBhbnkoXG4gICAgYXJnczoge2lucHV0czogQW55SW5wdXRzLCBhdHRyczogQW55QXR0cnMsIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmR9KTpcbiAgICBUZW5zb3JJbmZvIHtcbiAgY29uc3Qge2lucHV0cywgYmFja2VuZCwgYXR0cnN9ID0gYXJncztcbiAgY29uc3Qge3h9ID0gaW5wdXRzO1xuICBjb25zdCB7a2VlcERpbXMsIGF4aXN9ID0gYXR0cnM7XG5cbiAgcmV0dXJuIHJlZHVjZSh4LCBheGlzLCBrZWVwRGltcywgJ2FueScsIGJhY2tlbmQpO1xufVxuXG5leHBvcnQgY29uc3QgYW55Q29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IEFueSxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBhbnkgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nimport { getCoordsXYZ, getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class ArgMinMaxProgram {\n    constructor(inputShape, axis, reduceType) {\n        this.workgroupSize = [64, 1, 1];\n        this.variableNames = ['x'];\n        this.uniforms = 'infinityValue : f32,';\n        this.size = true;\n        const axes = [axis];\n        this.op = reduceType === 'min' ? '<' : '>';\n        // |outShape| is the shape with the removed axis\n        const [outputShape, reduceShape] = backend_util.computeOutAndReduceShapes(inputShape, axes);\n        this.outputShape = outputShape.length === 0 ? [1] : outputShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        // The shared algorithm is mainly used for large reduce size. It fully\n        // utilizes the threads in one workgroup to do the reduction. However,\n        // when the reduce size is very small, it's better to use the plain\n        // algorithm to reduce the number of workgroups to speedup. The threthold\n        // can be further tuned.\n        if (util.sizeFromShape(reduceShape) < 32) {\n            this.type = 'plain';\n            this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        }\n        else {\n            this.type = 'shared';\n            // A work group only outputs a data, so we transfer [1, 1, 1] to compute\n            // dispatch size.\n            this.dispatch =\n                computeDispatch(this.dispatchLayout, this.outputShape, [1, 1, 1]);\n        }\n        this.inputShape = inputShape;\n        this.shaderKey = `argMinMax_${this.op}_${this.type}`;\n    }\n    getUserCode() {\n        const workgroupSizeX = this.workgroupSize[0];\n        const getInputShapeLastDim = () => {\n            if (this.inputShape.length === 1) {\n                return 'uniforms.xShape';\n            }\n            else {\n                return `uniforms.xShape.${getCoordsXYZ(this.inputShape.length - 1)}`;\n            }\n        };\n        const splitOutputCoords = () => {\n            let snippet = '';\n            if (this.outputShape.length === 1) {\n                if (this.inputShape.length !== 1) {\n                    snippet += 'outputCoords,';\n                }\n            }\n            else {\n                for (let i = 0; i < this.outputShape.length; i++) {\n                    snippet += `outputCoords.${getCoordsXYZ(i)},`;\n                }\n            }\n            return snippet;\n        };\n        if (this.type === 'shared') {\n            const sharedMemorySnippet = `\n      var<workgroup> xBestIndices : array<i32, ${workgroupSizeX}>;\n      var<workgroup> xBestValues : array<f32, ${workgroupSizeX}>;\n    `;\n            const userCode = `\n      fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n      }\n\n      ${sharedMemorySnippet}\n\n      ${main('index')} {\n        let outputIndex = index / ${workgroupSizeX};\n        let reduceLength = ${getInputShapeLastDim()};\n\n        var bestIndex = i32(localId.x);\n        var bestValue = uniforms.infinityValue;\n        let outputCoords = getCoordsFromIndex(outputIndex);\n        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;\n            k = k + ${workgroupSizeX}) {\n          let candidate = getX(${splitOutputCoords()} k);\n          if (!isnan(candidate) && candidate ${this.op} bestValue) {\n            bestValue = candidate;\n            bestIndex = k;\n          }\n        }\n        xBestValues[localId.x] = bestValue;\n        xBestIndices[localId.x] = bestIndex;\n        workgroupBarrier();\n\n        var reduceSize = min(u32(reduceLength), ${workgroupSizeX}u);\n        for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n            currentSize = reduceSize / 2u) {\n          let interval = DIV_CEIL(reduceSize, 2u);\n          if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            if (candidate ${this.op} bestValue) {\n              bestValue = candidate;\n              xBestValues[localId.x] = bestValue;\n              xBestIndices[localId.x] = xBestIndices[localId.x + interval];\n            }\n          }\n          reduceSize = interval;\n          workgroupBarrier();\n        }\n\n        if (localId.x == 0u && outputIndex < uniforms.size) {\n          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);\n        }\n      }\n    `;\n            return userCode;\n        }\n        else {\n            const userCode = `\n      ${main('index')} {\n        if (index < uniforms.size) {\n          let outputCoords = getCoordsFromIndex(index);\n          var bestIndex = 0;\n          var bestValue = getX(${splitOutputCoords()} 0);\n          let reduceLength = ${getInputShapeLastDim()};\n          for (var i = 1; i < reduceLength; i++) {\n            let candidate = getX(${splitOutputCoords()} i);\n            if (candidate ${this.op} bestValue) {\n              bestValue = candidate;\n              bestIndex = i;\n            }\n          }\n          setOutputAtIndexI32(index, bestIndex);\n        }\n      }\n      `;\n            return userCode;\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ArgMax, backend_util, util } from '@tensorflow/tfjs-core';\nimport { ArgMinMaxProgram } from '../argminmax_webgpu';\nimport { transpose } from './Transpose';\nexport function argMax(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis } = attrs;\n    let axes = util.parseAxisParam(axis, x.shape);\n    const permutedAxes = backend_util.getAxesPermutation(axes, x.shape.length);\n    let $x = x;\n    const intermediateTensorInfos = [];\n    if (permutedAxes != null) {\n        $x = transpose({ inputs: { x }, backend, attrs: { perm: permutedAxes } });\n        intermediateTensorInfos.push($x);\n        axes = backend_util.getInnerMostAxes(axes.length, $x.shape.length);\n    }\n    backend_util.assertAxesAreInnerMostDims('argMax', [axes[0]], $x.shape.length);\n    const program = new ArgMinMaxProgram($x.shape, axes[0], 'max');\n    const uniformData = [{ type: 'float32', data: [Number.NEGATIVE_INFINITY] }];\n    const out = backend.runWebGPUProgram(program, [$x], 'int32', uniformData);\n    intermediateTensorInfos.forEach(t => backend.disposeData(t.dataId));\n    return out;\n}\nexport const argMaxConfig = {\n    kernelName: ArgMax,\n    backendName: 'webgpu',\n    kernelFunc: argMax\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXJnTWF4LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9BcmdNYXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLE1BQU0sRUFBNkIsWUFBWSxFQUF3QyxJQUFJLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUVsSSxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUdyRCxPQUFPLEVBQUMsU0FBUyxFQUFDLE1BQU0sYUFBYSxDQUFDO0FBRXRDLE1BQU0sVUFBVSxNQUFNLENBQ2xCLElBQXdFO0lBRTFFLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QyxNQUFNLEVBQUMsQ0FBQyxFQUFDLEdBQUcsTUFBTSxDQUFDO0lBQ25CLE1BQU0sRUFBQyxJQUFJLEVBQUMsR0FBRyxLQUFLLENBQUM7SUFFckIsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzlDLE1BQU0sWUFBWSxHQUFHLFlBQVksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUMzRSxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDWCxNQUFNLHVCQUF1QixHQUFHLEVBQUUsQ0FBQztJQUNuQyxJQUFJLFlBQVksSUFBSSxJQUFJLEVBQUU7UUFDeEIsRUFBRSxHQUFHLFNBQVMsQ0FBQyxFQUFDLE1BQU0sRUFBRSxFQUFDLENBQUMsRUFBQyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsWUFBWSxFQUFDLEVBQUMsQ0FBQyxDQUFDO1FBQ3BFLHVCQUF1QixDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNqQyxJQUFJLEdBQUcsWUFBWSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztLQUNwRTtJQUVELFlBQVksQ0FBQywwQkFBMEIsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzlFLE1BQU0sT0FBTyxHQUFHLElBQUksZ0JBQWdCLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDL0QsTUFBTSxXQUFXLEdBQUcsQ0FBQyxFQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLENBQUMsTUFBTSxDQUFDLGlCQUFpQixDQUFDLEVBQUMsQ0FBQyxDQUFDO0lBQzFFLE1BQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDMUUsdUJBQXVCLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUNwRSxPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQWlCO0lBQ3hDLFVBQVUsRUFBRSxNQUFNO0lBQ2xCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxNQUErQjtDQUM1QyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0FyZ01heCwgQXJnTWF4QXR0cnMsIEFyZ01heElucHV0cywgYmFja2VuZF91dGlsLCBLZXJuZWxDb25maWcsIEtlcm5lbEZ1bmMsIFRlbnNvckluZm8sIHV0aWx9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7QXJnTWluTWF4UHJvZ3JhbX0gZnJvbSAnLi4vYXJnbWlubWF4X3dlYmdwdSc7XG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcblxuaW1wb3J0IHt0cmFuc3Bvc2V9IGZyb20gJy4vVHJhbnNwb3NlJztcblxuZXhwb3J0IGZ1bmN0aW9uIGFyZ01heChcbiAgICBhcmdzOiB7aW5wdXRzOiBBcmdNYXhJbnB1dHMsIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmQsIGF0dHJzOiBBcmdNYXhBdHRyc30pOlxuICAgIFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7eH0gPSBpbnB1dHM7XG4gIGNvbnN0IHtheGlzfSA9IGF0dHJzO1xuXG4gIGxldCBheGVzID0gdXRpbC5wYXJzZUF4aXNQYXJhbShheGlzLCB4LnNoYXBlKTtcbiAgY29uc3QgcGVybXV0ZWRBeGVzID0gYmFja2VuZF91dGlsLmdldEF4ZXNQZXJtdXRhdGlvbihheGVzLCB4LnNoYXBlLmxlbmd0aCk7XG4gIGxldCAkeCA9IHg7XG4gIGNvbnN0IGludGVybWVkaWF0ZVRlbnNvckluZm9zID0gW107XG4gIGlmIChwZXJtdXRlZEF4ZXMgIT0gbnVsbCkge1xuICAgICR4ID0gdHJhbnNwb3NlKHtpbnB1dHM6IHt4fSwgYmFja2VuZCwgYXR0cnM6IHtwZXJtOiBwZXJtdXRlZEF4ZXN9fSk7XG4gICAgaW50ZXJtZWRpYXRlVGVuc29ySW5mb3MucHVzaCgkeCk7XG4gICAgYXhlcyA9IGJhY2tlbmRfdXRpbC5nZXRJbm5lck1vc3RBeGVzKGF4ZXMubGVuZ3RoLCAkeC5zaGFwZS5sZW5ndGgpO1xuICB9XG5cbiAgYmFja2VuZF91dGlsLmFzc2VydEF4ZXNBcmVJbm5lck1vc3REaW1zKCdhcmdNYXgnLCBbYXhlc1swXV0sICR4LnNoYXBlLmxlbmd0aCk7XG4gIGNvbnN0IHByb2dyYW0gPSBuZXcgQXJnTWluTWF4UHJvZ3JhbSgkeC5zaGFwZSwgYXhlc1swXSwgJ21heCcpO1xuICBjb25zdCB1bmlmb3JtRGF0YSA9IFt7dHlwZTogJ2Zsb2F0MzInLCBkYXRhOiBbTnVtYmVyLk5FR0FUSVZFX0lORklOSVRZXX1dO1xuICBjb25zdCBvdXQgPSBiYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0ocHJvZ3JhbSwgWyR4XSwgJ2ludDMyJywgdW5pZm9ybURhdGEpO1xuICBpbnRlcm1lZGlhdGVUZW5zb3JJbmZvcy5mb3JFYWNoKHQgPT4gYmFja2VuZC5kaXNwb3NlRGF0YSh0LmRhdGFJZCkpO1xuICByZXR1cm4gb3V0O1xufVxuXG5leHBvcnQgY29uc3QgYXJnTWF4Q29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IEFyZ01heCxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBhcmdNYXggYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ArgMin, backend_util, util } from '@tensorflow/tfjs-core';\nimport { ArgMinMaxProgram } from '../argminmax_webgpu';\nimport { transpose } from './Transpose';\nexport function argMin(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis } = attrs;\n    let axes = util.parseAxisParam(axis, x.shape);\n    const permutedAxes = backend_util.getAxesPermutation(axes, x.shape.length);\n    let $x = x;\n    const intermediateTensorInfos = [];\n    if (permutedAxes != null) {\n        $x = transpose({ inputs: { x }, backend, attrs: { perm: permutedAxes } });\n        intermediateTensorInfos.push($x);\n        axes = backend_util.getInnerMostAxes(axes.length, $x.shape.length);\n    }\n    backend_util.assertAxesAreInnerMostDims('argMin', [axes[0]], $x.shape.length);\n    const program = new ArgMinMaxProgram($x.shape, axes[0], 'min');\n    const uniformData = [{ type: 'float32', data: [Number.POSITIVE_INFINITY] }];\n    const out = backend.runWebGPUProgram(program, [$x], 'int32', uniformData);\n    intermediateTensorInfos.forEach(t => backend.disposeData(t.dataId));\n    return out;\n}\nexport const argMinConfig = {\n    kernelName: ArgMin,\n    backendName: 'webgpu',\n    kernelFunc: argMin\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXJnTWluLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9BcmdNaW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLE1BQU0sRUFBNkIsWUFBWSxFQUF3QyxJQUFJLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUVsSSxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUdyRCxPQUFPLEVBQUMsU0FBUyxFQUFDLE1BQU0sYUFBYSxDQUFDO0FBRXRDLE1BQU0sVUFBVSxNQUFNLENBQ2xCLElBQXdFO0lBRTFFLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QyxNQUFNLEVBQUMsQ0FBQyxFQUFDLEdBQUcsTUFBTSxDQUFDO0lBQ25CLE1BQU0sRUFBQyxJQUFJLEVBQUMsR0FBRyxLQUFLLENBQUM7SUFFckIsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzlDLE1BQU0sWUFBWSxHQUFHLFlBQVksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUMzRSxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDWCxNQUFNLHVCQUF1QixHQUFHLEVBQUUsQ0FBQztJQUNuQyxJQUFJLFlBQVksSUFBSSxJQUFJLEVBQUU7UUFDeEIsRUFBRSxHQUFHLFNBQVMsQ0FBQyxFQUFDLE1BQU0sRUFBRSxFQUFDLENBQUMsRUFBQyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsWUFBWSxFQUFDLEVBQUMsQ0FBQyxDQUFDO1FBQ3BFLHVCQUF1QixDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNqQyxJQUFJLEdBQUcsWUFBWSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztLQUNwRTtJQUVELFlBQVksQ0FBQywwQkFBMEIsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzlFLE1BQU0sT0FBTyxHQUFHLElBQUksZ0JBQWdCLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDL0QsTUFBTSxXQUFXLEdBQUcsQ0FBQyxFQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLENBQUMsTUFBTSxDQUFDLGlCQUFpQixDQUFDLEVBQUMsQ0FBQyxDQUFDO0lBQzFFLE1BQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDMUUsdUJBQXVCLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUNwRSxPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQWlCO0lBQ3hDLFVBQVUsRUFBRSxNQUFNO0lBQ2xCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxNQUErQjtDQUM1QyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0FyZ01pbiwgQXJnTWluQXR0cnMsIEFyZ01pbklucHV0cywgYmFja2VuZF91dGlsLCBLZXJuZWxDb25maWcsIEtlcm5lbEZ1bmMsIFRlbnNvckluZm8sIHV0aWx9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7QXJnTWluTWF4UHJvZ3JhbX0gZnJvbSAnLi4vYXJnbWlubWF4X3dlYmdwdSc7XG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcblxuaW1wb3J0IHt0cmFuc3Bvc2V9IGZyb20gJy4vVHJhbnNwb3NlJztcblxuZXhwb3J0IGZ1bmN0aW9uIGFyZ01pbihcbiAgICBhcmdzOiB7aW5wdXRzOiBBcmdNaW5JbnB1dHMsIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmQsIGF0dHJzOiBBcmdNaW5BdHRyc30pOlxuICAgIFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7eH0gPSBpbnB1dHM7XG4gIGNvbnN0IHtheGlzfSA9IGF0dHJzO1xuXG4gIGxldCBheGVzID0gdXRpbC5wYXJzZUF4aXNQYXJhbShheGlzLCB4LnNoYXBlKTtcbiAgY29uc3QgcGVybXV0ZWRBeGVzID0gYmFja2VuZF91dGlsLmdldEF4ZXNQZXJtdXRhdGlvbihheGVzLCB4LnNoYXBlLmxlbmd0aCk7XG4gIGxldCAkeCA9IHg7XG4gIGNvbnN0IGludGVybWVkaWF0ZVRlbnNvckluZm9zID0gW107XG4gIGlmIChwZXJtdXRlZEF4ZXMgIT0gbnVsbCkge1xuICAgICR4ID0gdHJhbnNwb3NlKHtpbnB1dHM6IHt4fSwgYmFja2VuZCwgYXR0cnM6IHtwZXJtOiBwZXJtdXRlZEF4ZXN9fSk7XG4gICAgaW50ZXJtZWRpYXRlVGVuc29ySW5mb3MucHVzaCgkeCk7XG4gICAgYXhlcyA9IGJhY2tlbmRfdXRpbC5nZXRJbm5lck1vc3RBeGVzKGF4ZXMubGVuZ3RoLCAkeC5zaGFwZS5sZW5ndGgpO1xuICB9XG5cbiAgYmFja2VuZF91dGlsLmFzc2VydEF4ZXNBcmVJbm5lck1vc3REaW1zKCdhcmdNaW4nLCBbYXhlc1swXV0sICR4LnNoYXBlLmxlbmd0aCk7XG4gIGNvbnN0IHByb2dyYW0gPSBuZXcgQXJnTWluTWF4UHJvZ3JhbSgkeC5zaGFwZSwgYXhlc1swXSwgJ21pbicpO1xuICBjb25zdCB1bmlmb3JtRGF0YSA9IFt7dHlwZTogJ2Zsb2F0MzInLCBkYXRhOiBbTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZXX1dO1xuICBjb25zdCBvdXQgPSBiYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0ocHJvZ3JhbSwgWyR4XSwgJ2ludDMyJywgdW5pZm9ybURhdGEpO1xuICBpbnRlcm1lZGlhdGVUZW5zb3JJbmZvcy5mb3JFYWNoKHQgPT4gYmFja2VuZC5kaXNwb3NlRGF0YSh0LmRhdGFJZCkpO1xuICByZXR1cm4gb3V0O1xufVxuXG5leHBvcnQgY29uc3QgYXJnTWluQ29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IEFyZ01pbixcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBhcmdNaW4gYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Asin } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { UnaryOpType } from '../unary_op_util';\nexport const asin = unaryKernelFunc({ opType: UnaryOpType.ASIN });\nexport const asinConfig = {\n    kernelName: Asin,\n    backendName: 'webgpu',\n    kernelFunc: asin\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXNpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvQXNpbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsSUFBSSxFQUFlLE1BQU0sdUJBQXVCLENBQUM7QUFFekQsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9DQUFvQyxDQUFDO0FBRW5FLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUU3QyxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQUcsZUFBZSxDQUFDLEVBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxJQUFJLEVBQUMsQ0FBQyxDQUFDO0FBRWhFLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBaUI7SUFDdEMsVUFBVSxFQUFFLElBQUk7SUFDaEIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLElBQUk7Q0FDakIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIyIEdvb2dsZSBMTEMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtBc2luLCBLZXJuZWxDb25maWd9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7dW5hcnlLZXJuZWxGdW5jfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMva2VybmVsX2Z1bmNzX3V0aWxzJztcblxuaW1wb3J0IHtVbmFyeU9wVHlwZX0gZnJvbSAnLi4vdW5hcnlfb3BfdXRpbCc7XG5cbmV4cG9ydCBjb25zdCBhc2luID0gdW5hcnlLZXJuZWxGdW5jKHtvcFR5cGU6IFVuYXJ5T3BUeXBlLkFTSU59KTtcblxuZXhwb3J0IGNvbnN0IGFzaW5Db25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogQXNpbixcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBhc2luXG59O1xuIl19","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Asinh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { UnaryOpType } from '../unary_op_util';\nexport const asinh = unaryKernelFunc({ opType: UnaryOpType.ASINH });\nexport const asinhConfig = {\n    kernelName: Asinh,\n    backendName: 'webgpu',\n    kernelFunc: asinh\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXNpbmguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL0FzaW5oLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxLQUFLLEVBQWUsTUFBTSx1QkFBdUIsQ0FBQztBQUUxRCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sb0NBQW9DLENBQUM7QUFFbkUsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBRTdDLE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBRyxlQUFlLENBQUMsRUFBQyxNQUFNLEVBQUUsV0FBVyxDQUFDLEtBQUssRUFBQyxDQUFDLENBQUM7QUFFbEUsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFpQjtJQUN2QyxVQUFVLEVBQUUsS0FBSztJQUNqQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsS0FBSztDQUNsQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjIgR29vZ2xlIExMQy5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0FzaW5oLCBLZXJuZWxDb25maWd9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7dW5hcnlLZXJuZWxGdW5jfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMva2VybmVsX2Z1bmNzX3V0aWxzJztcblxuaW1wb3J0IHtVbmFyeU9wVHlwZX0gZnJvbSAnLi4vdW5hcnlfb3BfdXRpbCc7XG5cbmV4cG9ydCBjb25zdCBhc2luaCA9IHVuYXJ5S2VybmVsRnVuYyh7b3BUeXBlOiBVbmFyeU9wVHlwZS5BU0lOSH0pO1xuXG5leHBvcnQgY29uc3QgYXNpbmhDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogQXNpbmgsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogYXNpbmhcbn07XG4iXX0=","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Atan } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { UnaryOpType } from '../unary_op_util';\nexport const atan = unaryKernelFunc({ opType: UnaryOpType.ATAN });\nexport const atanConfig = {\n    kernelName: Atan,\n    backendName: 'webgpu',\n    kernelFunc: atan\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXRhbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvQXRhbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsSUFBSSxFQUFlLE1BQU0sdUJBQXVCLENBQUM7QUFFekQsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9DQUFvQyxDQUFDO0FBRW5FLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUU3QyxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQUcsZUFBZSxDQUFDLEVBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxJQUFJLEVBQUMsQ0FBQyxDQUFDO0FBRWhFLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBaUI7SUFDdEMsVUFBVSxFQUFFLElBQUk7SUFDaEIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLElBQUk7Q0FDakIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIyIEdvb2dsZSBMTEMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtBdGFuLCBLZXJuZWxDb25maWd9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7dW5hcnlLZXJuZWxGdW5jfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMva2VybmVsX2Z1bmNzX3V0aWxzJztcblxuaW1wb3J0IHtVbmFyeU9wVHlwZX0gZnJvbSAnLi4vdW5hcnlfb3BfdXRpbCc7XG5cbmV4cG9ydCBjb25zdCBhdGFuID0gdW5hcnlLZXJuZWxGdW5jKHtvcFR5cGU6IFVuYXJ5T3BUeXBlLkFUQU59KTtcblxuZXhwb3J0IGNvbnN0IGF0YW5Db25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogQXRhbixcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBhdGFuXG59O1xuIl19","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Atan2 } from '@tensorflow/tfjs-core';\nimport { BinaryOpType } from '../binary_op_util';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nexport const atan2 = binaryKernelFunc({ opType: BinaryOpType.ATAN2 });\nexport const atan2Config = {\n    kernelName: Atan2,\n    backendName: 'webgpu',\n    kernelFunc: atan2\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXRhbjIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL0F0YW4yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxLQUFLLEVBQWUsTUFBTSx1QkFBdUIsQ0FBQztBQUMxRCxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFDL0MsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sb0NBQW9DLENBQUM7QUFFcEUsTUFBTSxDQUFDLE1BQU0sS0FBSyxHQUFHLGdCQUFnQixDQUFDLEVBQUMsTUFBTSxFQUFFLFlBQVksQ0FBQyxLQUFLLEVBQUMsQ0FBQyxDQUFDO0FBRXBFLE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBaUI7SUFDdkMsVUFBVSxFQUFFLEtBQUs7SUFDakIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLEtBQUs7Q0FDbEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIyIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtBdGFuMiwgS2VybmVsQ29uZmlnfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuaW1wb3J0IHtCaW5hcnlPcFR5cGV9IGZyb20gJy4uL2JpbmFyeV9vcF91dGlsJztcbmltcG9ydCB7YmluYXJ5S2VybmVsRnVuY30gZnJvbSAnLi4va2VybmVsX3V0aWxzL2tlcm5lbF9mdW5jc191dGlscyc7XG5cbmV4cG9ydCBjb25zdCBhdGFuMiA9IGJpbmFyeUtlcm5lbEZ1bmMoe29wVHlwZTogQmluYXJ5T3BUeXBlLkFUQU4yfSk7XG5cbmV4cG9ydCBjb25zdCBhdGFuMkNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBBdGFuMixcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBhdGFuMlxufTtcbiJdfQ==","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Atanh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { UnaryOpType } from '../unary_op_util';\nexport const atanh = unaryKernelFunc({ opType: UnaryOpType.ATANH });\nexport const atanhConfig = {\n    kernelName: Atanh,\n    backendName: 'webgpu',\n    kernelFunc: atanh\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXRhbmguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL0F0YW5oLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxLQUFLLEVBQWUsTUFBTSx1QkFBdUIsQ0FBQztBQUUxRCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sb0NBQW9DLENBQUM7QUFFbkUsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBRTdDLE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBRyxlQUFlLENBQUMsRUFBQyxNQUFNLEVBQUUsV0FBVyxDQUFDLEtBQUssRUFBQyxDQUFDLENBQUM7QUFFbEUsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFpQjtJQUN2QyxVQUFVLEVBQUUsS0FBSztJQUNqQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsS0FBSztDQUNsQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjIgR29vZ2xlIExMQy5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0F0YW5oLCBLZXJuZWxDb25maWd9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7dW5hcnlLZXJuZWxGdW5jfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMva2VybmVsX2Z1bmNzX3V0aWxzJztcblxuaW1wb3J0IHtVbmFyeU9wVHlwZX0gZnJvbSAnLi4vdW5hcnlfb3BfdXRpbCc7XG5cbmV4cG9ydCBjb25zdCBhdGFuaCA9IHVuYXJ5S2VybmVsRnVuYyh7b3BUeXBlOiBVbmFyeU9wVHlwZS5BVEFOSH0pO1xuXG5leHBvcnQgY29uc3QgYXRhbmhDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogQXRhbmgsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogYXRhbmhcbn07XG4iXX0=","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class PoolWithFilterSizeEqualsOneProgram {\n    constructor(convInfo) {\n        this.variableNames = ['x'];\n        this.uniforms = `strides : vec2<i32>,`;\n        this.workgroupSize = [256, 1, 1];\n        this.size = true;\n        this.outputShape = convInfo.outShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.shaderKey = 'poolWithFilterSizeEqualsOne';\n    }\n    getUserCode() {\n        const userCode = `\n      ${main('index')} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let d = coords[3];\n\n          let xRCCorner = coords.yz * uniforms.strides;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          let value = getX(batch, xRCorner, xCCorner, d);\n          setOutputAtIndex(index, value);\n        }\n      }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9vbF9maWx0ZXJzaXplb25lX3dlYmdwdS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL3Bvb2xfZmlsdGVyc2l6ZW9uZV93ZWJncHUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBR0gsT0FBTyxFQUFDLG1CQUFtQixJQUFJLElBQUksRUFBZ0IsTUFBTSxrQkFBa0IsQ0FBQztBQUM1RSxPQUFPLEVBQUMsZUFBZSxFQUFFLGtCQUFrQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRWxFLE1BQU0sT0FBTyxrQ0FBa0M7SUFVN0MsWUFBWSxRQUFpQztRQUw3QyxrQkFBYSxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdEIsYUFBUSxHQUFHLHNCQUFzQixDQUFDO1FBQ2xDLGtCQUFhLEdBQTZCLENBQUMsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUN0RCxTQUFJLEdBQUcsSUFBSSxDQUFDO1FBR1YsSUFBSSxDQUFDLFdBQVcsR0FBRyxRQUFRLENBQUMsUUFBUSxDQUFDO1FBQ3JDLElBQUksQ0FBQyxjQUFjLEdBQUcsa0JBQWtCLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBRTNELElBQUksQ0FBQyxRQUFRLEdBQUcsZUFBZSxDQUMzQixJQUFJLENBQUMsY0FBYyxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBRS9ELElBQUksQ0FBQyxTQUFTLEdBQUcsNkJBQTZCLENBQUM7SUFDakQsQ0FBQztJQUVELFdBQVc7UUFDVCxNQUFNLFFBQVEsR0FBRztRQUNiLElBQUksQ0FBQyxPQUFPLENBQUM7Ozs7Ozs7Ozs7Ozs7O0tBY2hCLENBQUM7UUFDRixPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7YmFja2VuZF91dGlsfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuaW1wb3J0IHtnZXRNYWluSGVhZGVyU3RyaW5nIGFzIG1haW4sIFdlYkdQVVByb2dyYW19IGZyb20gJy4vd2ViZ3B1X3Byb2dyYW0nO1xuaW1wb3J0IHtjb21wdXRlRGlzcGF0Y2gsIGZsYXREaXNwYXRjaExheW91dH0gZnJvbSAnLi93ZWJncHVfdXRpbCc7XG5cbmV4cG9ydCBjbGFzcyBQb29sV2l0aEZpbHRlclNpemVFcXVhbHNPbmVQcm9ncmFtIGltcGxlbWVudHMgV2ViR1BVUHJvZ3JhbSB7XG4gIG91dHB1dFNoYXBlOiBudW1iZXJbXTtcbiAgc2hhZGVyS2V5OiBzdHJpbmc7XG4gIGRpc3BhdGNoTGF5b3V0OiB7eDogbnVtYmVyW119O1xuICBkaXNwYXRjaDogW251bWJlciwgbnVtYmVyLCBudW1iZXJdO1xuICB2YXJpYWJsZU5hbWVzID0gWyd4J107XG4gIHVuaWZvcm1zID0gYHN0cmlkZXMgOiB2ZWMyPGkzMj4sYDtcbiAgd29ya2dyb3VwU2l6ZTogW251bWJlciwgbnVtYmVyLCBudW1iZXJdID0gWzI1NiwgMSwgMV07XG4gIHNpemUgPSB0cnVlO1xuXG4gIGNvbnN0cnVjdG9yKGNvbnZJbmZvOiBiYWNrZW5kX3V0aWwuQ29udjJESW5mbykge1xuICAgIHRoaXMub3V0cHV0U2hhcGUgPSBjb252SW5mby5vdXRTaGFwZTtcbiAgICB0aGlzLmRpc3BhdGNoTGF5b3V0ID0gZmxhdERpc3BhdGNoTGF5b3V0KHRoaXMub3V0cHV0U2hhcGUpO1xuXG4gICAgdGhpcy5kaXNwYXRjaCA9IGNvbXB1dGVEaXNwYXRjaChcbiAgICAgICAgdGhpcy5kaXNwYXRjaExheW91dCwgdGhpcy5vdXRwdXRTaGFwZSwgdGhpcy53b3JrZ3JvdXBTaXplKTtcblxuICAgIHRoaXMuc2hhZGVyS2V5ID0gJ3Bvb2xXaXRoRmlsdGVyU2l6ZUVxdWFsc09uZSc7XG4gIH1cblxuICBnZXRVc2VyQ29kZSgpOiBzdHJpbmcge1xuICAgIGNvbnN0IHVzZXJDb2RlID0gYFxuICAgICAgJHttYWluKCdpbmRleCcpfSB7XG4gICAgICAgIGlmIChpbmRleCA8IHVuaWZvcm1zLnNpemUpIHtcbiAgICAgICAgICBsZXQgY29vcmRzID0gZ2V0Q29vcmRzRnJvbUluZGV4KGluZGV4KTtcbiAgICAgICAgICBsZXQgYmF0Y2ggPSBjb29yZHNbMF07XG4gICAgICAgICAgbGV0IGQgPSBjb29yZHNbM107XG5cbiAgICAgICAgICBsZXQgeFJDQ29ybmVyID0gY29vcmRzLnl6ICogdW5pZm9ybXMuc3RyaWRlcztcbiAgICAgICAgICBsZXQgeFJDb3JuZXIgPSB4UkNDb3JuZXIueDtcbiAgICAgICAgICBsZXQgeENDb3JuZXIgPSB4UkNDb3JuZXIueTtcblxuICAgICAgICAgIGxldCB2YWx1ZSA9IGdldFgoYmF0Y2gsIHhSQ29ybmVyLCB4Q0Nvcm5lciwgZCk7XG4gICAgICAgICAgc2V0T3V0cHV0QXRJbmRleChpbmRleCwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgYDtcbiAgICByZXR1cm4gdXNlckNvZGU7XG4gIH1cbn1cbiJdfQ==","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class Pool2DProgram {\n    constructor(convInfo, poolType, computePositions = false, flattenPositions = false, includeBatchIndex = false) {\n        this.variableNames = ['x'];\n        this.uniforms = `strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,`;\n        // TODO(jiajia.qin@intel.com): Dynamically choose different workgroupSize for\n        // different output shapes.\n        this.workgroupSize = [128, 1, 1];\n        this.size = true;\n        if (poolType === 'avg' && computePositions) {\n            throw new Error('Cannot compute positions for average pool.');\n        }\n        this.outputShape = convInfo.outShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.poolType = poolType;\n        this.computePositions = computePositions;\n        this.flattenPositions = flattenPositions;\n        this.includeBatchIndex = includeBatchIndex;\n        this.shaderKey = `pool2D_${poolType}_${computePositions}_${flattenPositions}_${includeBatchIndex}`;\n    }\n    getUserCode() {\n        let updateSnippet;\n        if (this.poolType === 'avg') {\n            updateSnippet = `resultValue = resultValue + value; count = count + 1.0;`;\n        }\n        else if (this.computePositions) {\n            const positionStr = this.flattenPositions ?\n                (this.includeBatchIndex ?\n                    `((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d` :\n                    `(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d`) :\n                `wR * uniforms.filterDims.y + wC`;\n            updateSnippet = `let currMaxValue = mix(value, maxValue, maxValueFound);\n      if (value >= currMaxValue) {\n        maxValue = value;\n        maxValueFound = 1.0;\n        maxPosition = ${positionStr};\n      }`;\n        }\n        else {\n            updateSnippet = `resultValue = max(value, resultValue);`;\n        }\n        let returnValue = `resultValue`;\n        if (this.poolType === 'avg') {\n            returnValue = `resultValue / max(count, 1.0)`;\n        }\n        const userCode = `\n      ${main('index')} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let d = coords[3];\n          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          ${this.computePositions ?\n            `var maxValue = 0.0;\n            var maxValueFound = 0.0;\n            var maxPosition = 0;` :\n            `var resultValue = ${this.poolType === 'avg' ? '0.0' : '-1.0 / pow(10.0, -20.0)'};`}\n\n          var count = 0.0;\n          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {\n            let xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= uniforms.convDims.x) {\n              continue;\n            }\n\n            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {\n              let xC = xCCorner + wC;\n              if (xC < 0 || xC >= uniforms.convDims.y) {\n                continue;\n              }\n\n              let value = getX(batch, xR, xC, d);\n              ${updateSnippet}\n            }\n          }\n\n          ${this.computePositions ? `setOutputAtIndexI32(index, maxPosition);` :\n            `setOutputAtIndex(index, ${returnValue});`}\n        }\n      }\n    `;\n        return userCode;\n    }\n}\nexport class Pool3DProgram {\n    constructor(convInfo, poolType, computePositions = false, flattenPositions = false, includeBatchIndex = false) {\n        this.variableNames = ['x'];\n        this.uniforms = `strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,`;\n        this.workgroupSize = [128, 1, 1];\n        this.size = true;\n        if (poolType === 'avg' && computePositions) {\n            throw new Error('Cannot compute positions for average pool.');\n        }\n        this.outputShape = convInfo.outShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.poolType = poolType;\n        this.computePositions = computePositions;\n        this.flattenPositions = flattenPositions;\n        this.includeBatchIndex = includeBatchIndex;\n        this.shaderKey = `pool3D_${poolType}_${computePositions}_${flattenPositions}_${includeBatchIndex}`;\n    }\n    getUserCode() {\n        let updateSnippet;\n        if (this.poolType === 'avg') {\n            updateSnippet = `resultValue += value; count += 1.0;`;\n        }\n        else if (this.computePositions) {\n            const positionStr = this.flattenPositions ?\n                (this.includeBatchIndex ?\n                    `(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch` :\n                    `((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch`) :\n                `wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC`;\n            updateSnippet = `let currMaxValue = mix(value, maxValue, maxValueFound);\n      if (value >= currMaxValue) {\n        maxValue = value;\n        maxValueFound = 1.0;\n        maxPosition = ${positionStr};\n      }`;\n        }\n        else {\n            updateSnippet = `resultValue = max(value, resultValue);`;\n        }\n        let returnValue = `resultValue`;\n        if (this.poolType === 'avg') {\n            returnValue = `resultValue / max(count, 1.0)`;\n        }\n        const userCode = `\n      ${main('index')} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let batch = coords.x;\n          let ch = coords.u;\n\n          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;\n          let xDCorner = xCorner.x;\n          let xRCorner = xCorner.y;\n          let xCCorner = xCorner.z;\n\n          ${this.computePositions ?\n            `var maxValue = 0.0;\n            var maxValueFound = 0.0;\n            var maxPosition = 0;` :\n            `var resultValue = ${this.poolType === 'avg' ? '0.0' : '-1.0 / pow(10.0, -20.0)'};`}\n\n          var count = 0.0;\n          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {\n            let xD = xDCorner + wD;\n            if (xD < 0 || xD >= uniforms.convDims.x) {\n              continue;\n            }\n\n            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {\n              let xR = xRCorner + wR;\n              if (xR < 0 || xR >= uniforms.convDims.y) {\n                continue;\n              }\n\n              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {\n                let xC = xCCorner + wC;\n                if (xC < 0 || xC >= uniforms.convDims.z) {\n                  continue;\n                }\n\n                let value = getX(batch, xD, xR, xC, ch);\n                ${updateSnippet}\n              }\n            }\n          }\n\n          ${this.computePositions ? `setOutputAtIndexI32(index, maxPosition);` :\n            `setOutputAtIndex(index, ${returnValue});`}\n        }\n      }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Max } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nexport function max(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { reductionIndices, keepDims } = attrs;\n    return reduce(x, reductionIndices, keepDims, 'max', backend);\n}\nexport const maxConfig = {\n    kernelName: Max,\n    backendName: 'webgpu',\n    kernelFunc: max\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWF4LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9NYXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUEyQixHQUFHLEVBQWtDLE1BQU0sdUJBQXVCLENBQUM7QUFHckcsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBRTlDLE1BQU0sVUFBVSxHQUFHLENBQ2YsSUFBa0U7SUFFcEUsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ3RDLE1BQU0sRUFBQyxDQUFDLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFDbkIsTUFBTSxFQUFDLGdCQUFnQixFQUFFLFFBQVEsRUFBQyxHQUFHLEtBQUssQ0FBQztJQUUzQyxPQUFPLE1BQU0sQ0FBQyxDQUFDLEVBQUUsZ0JBQWdCLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQztBQUMvRCxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFpQjtJQUNyQyxVQUFVLEVBQUUsR0FBRztJQUNmLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxHQUE0QjtDQUN6QyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0tlcm5lbENvbmZpZywgS2VybmVsRnVuYywgTWF4LCBNYXhBdHRycywgTWF4SW5wdXRzLCBUZW5zb3JJbmZvfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcbmltcG9ydCB7cmVkdWNlfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMvcmVkdWNlJztcblxuZXhwb3J0IGZ1bmN0aW9uIG1heChcbiAgICBhcmdzOiB7aW5wdXRzOiBNYXhJbnB1dHMsIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmQsIGF0dHJzOiBNYXhBdHRyc30pOlxuICAgIFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7eH0gPSBpbnB1dHM7XG4gIGNvbnN0IHtyZWR1Y3Rpb25JbmRpY2VzLCBrZWVwRGltc30gPSBhdHRycztcblxuICByZXR1cm4gcmVkdWNlKHgsIHJlZHVjdGlvbkluZGljZXMsIGtlZXBEaW1zLCAnbWF4JywgYmFja2VuZCk7XG59XG5cbmV4cG9ydCBjb25zdCBtYXhDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogTWF4LFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IG1heCBhcyB1bmtub3duIGFzIEtlcm5lbEZ1bmNcbn07XG4iXX0=","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Mean } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nexport function mean(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { keepDims, axis } = attrs;\n    return reduce(x, axis, keepDims, 'mean', backend);\n}\nexport const meanConfig = {\n    kernelName: Mean,\n    backendName: 'webgpu',\n    kernelFunc: mean\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWVhbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvTWVhbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQTJCLElBQUksRUFBb0MsTUFBTSx1QkFBdUIsQ0FBQztBQUd4RyxPQUFPLEVBQUMsTUFBTSxFQUFDLE1BQU0sd0JBQXdCLENBQUM7QUFFOUMsTUFBTSxVQUFVLElBQUksQ0FDaEIsSUFBb0U7SUFFdEUsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ3RDLE1BQU0sRUFBQyxDQUFDLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFDbkIsTUFBTSxFQUFDLFFBQVEsRUFBRSxJQUFJLEVBQUMsR0FBRyxLQUFLLENBQUM7SUFFL0IsT0FBTyxNQUFNLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ3BELENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQWlCO0lBQ3RDLFVBQVUsRUFBRSxJQUFJO0lBQ2hCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxJQUE2QjtDQUMxQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0tlcm5lbENvbmZpZywgS2VybmVsRnVuYywgTWVhbiwgTWVhbkF0dHJzLCBNZWFuSW5wdXRzLCBUZW5zb3JJbmZvfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcbmltcG9ydCB7cmVkdWNlfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMvcmVkdWNlJztcblxuZXhwb3J0IGZ1bmN0aW9uIG1lYW4oXG4gICAgYXJnczoge2lucHV0czogTWVhbklucHV0cywgYXR0cnM6IE1lYW5BdHRycywgYmFja2VuZDogV2ViR1BVQmFja2VuZH0pOlxuICAgIFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7eH0gPSBpbnB1dHM7XG4gIGNvbnN0IHtrZWVwRGltcywgYXhpc30gPSBhdHRycztcblxuICByZXR1cm4gcmVkdWNlKHgsIGF4aXMsIGtlZXBEaW1zLCAnbWVhbicsIGJhY2tlbmQpO1xufVxuXG5leHBvcnQgY29uc3QgbWVhbkNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBNZWFuLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IG1lYW4gYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { PoolWithFilterSizeEqualsOneProgram } from '../pool_filtersizeone_webgpu';\nimport { Pool2DProgram } from '../pool_webgpu';\nimport { identity } from './Identity';\nimport { max } from './Max';\nimport { mean } from './Mean';\nimport { reshape } from './Reshape';\nexport function poolImpl(x, convInfo, poolType, backend) {\n    if (convInfo.filterWidth === 1 && convInfo.filterHeight === 1 &&\n        util.arraysEqual(convInfo.inShape, convInfo.outShape)) {\n        return identity({ inputs: { x }, backend });\n    }\n    if (convInfo.filterWidth === convInfo.inWidth &&\n        convInfo.filterHeight === convInfo.inHeight && convInfo.batchSize === 1 &&\n        convInfo.padInfo.type === 'VALID') {\n        const length = x.shape.length;\n        const reshapeX = reshape({\n            inputs: { x },\n            backend,\n            attrs: {\n                shape: [\n                    x.shape[length - 3] * x.shape[length - 2] /* height * width */,\n                    x.shape[length - 1] /* channel */\n                ]\n            }\n        });\n        let reduceX;\n        if (poolType === 'avg') {\n            reduceX = mean({ inputs: { x: reshapeX }, backend, attrs: { axis: 0, keepDims: false } });\n        }\n        else {\n            util.assert(poolType === 'max', () => `Invalid pool type ${poolType}`);\n            reduceX = max({\n                inputs: { x: reshapeX },\n                backend,\n                attrs: { reductionIndices: 0, keepDims: false }\n            });\n        }\n        const result = reshape({ inputs: { x: reduceX }, backend, attrs: { shape: convInfo.outShape } });\n        backend.disposeData(reshapeX.dataId);\n        backend.disposeData(reduceX.dataId);\n        return result;\n    }\n    let program;\n    const dimensions = [{ type: 'int32', data: [convInfo.strideHeight, convInfo.strideWidth] }];\n    if (convInfo.filterHeight === 1 && convInfo.filterWidth === 1) {\n        program = new PoolWithFilterSizeEqualsOneProgram(convInfo);\n    }\n    else {\n        if (poolType === 'avg') {\n            program = new Pool2DProgram(convInfo, 'avg');\n        }\n        else {\n            util.assert(poolType === 'max', () => `Invalid pool type ${poolType}`);\n            program = new Pool2DProgram(convInfo, 'max');\n        }\n        dimensions.push({ type: 'int32', data: [convInfo.padInfo.top, convInfo.padInfo.left] }, {\n            type: 'int32',\n            data: [convInfo.dilationHeight, convInfo.dilationWidth]\n        }, { type: 'int32', data: [convInfo.inHeight, convInfo.inWidth] }, {\n            type: 'int32',\n            data: [convInfo.effectiveFilterHeight, convInfo.effectiveFilterWidth]\n        });\n    }\n    return backend.runWebGPUProgram(program, [x], x.dtype, dimensions);\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPool, backend_util } from '@tensorflow/tfjs-core';\nimport { poolImpl } from './Pool_impl';\nexport function avgPool(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { filterSize, strides, pad, dimRoundingMode } = attrs;\n    const dilations = 1;\n    const convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n    return poolImpl(x, convInfo, 'avg', backend);\n}\nexport const avgPoolConfig = {\n    kernelName: AvgPool,\n    backendName: 'webgpu',\n    kernelFunc: avgPool\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXZnUG9vbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvQXZnUG9vbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFDSCxPQUFPLEVBQUMsT0FBTyxFQUErQixZQUFZLEVBQXVDLE1BQU0sdUJBQXVCLENBQUM7QUFHL0gsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLGFBQWEsQ0FBQztBQUVyQyxNQUFNLFVBQVUsT0FBTyxDQUNuQixJQUEwRTtJQUU1RSxNQUFNLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFDdEMsTUFBTSxFQUFDLENBQUMsRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUNuQixNQUFNLEVBQUMsVUFBVSxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsZUFBZSxFQUFDLEdBQUcsS0FBSyxDQUFDO0lBQzFELE1BQU0sU0FBUyxHQUFHLENBQUMsQ0FBQztJQUNwQixNQUFNLFFBQVEsR0FBRyxZQUFZLENBQUMsaUJBQWlCLENBQzNDLENBQUMsQ0FBQyxLQUF5QyxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQ2hFLFNBQVMsRUFBRSxHQUFHLEVBQUUsZUFBZSxDQUFDLENBQUM7SUFFckMsT0FBTyxRQUFRLENBQUMsQ0FBQyxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUM7QUFDL0MsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBaUI7SUFDekMsVUFBVSxFQUFFLE9BQU87SUFDbkIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLE9BQWdDO0NBQzdDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5pbXBvcnQge0F2Z1Bvb2wsIEF2Z1Bvb2xBdHRycywgQXZnUG9vbElucHV0cywgYmFja2VuZF91dGlsLCBLZXJuZWxDb25maWcsIEtlcm5lbEZ1bmMsIFRlbnNvckluZm99IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuaW1wb3J0IHtwb29sSW1wbH0gZnJvbSAnLi9Qb29sX2ltcGwnO1xuXG5leHBvcnQgZnVuY3Rpb24gYXZnUG9vbChcbiAgICBhcmdzOiB7aW5wdXRzOiBBdmdQb29sSW5wdXRzLCBiYWNrZW5kOiBXZWJHUFVCYWNrZW5kLCBhdHRyczogQXZnUG9vbEF0dHJzfSk6XG4gICAgVGVuc29ySW5mbyB7XG4gIGNvbnN0IHtpbnB1dHMsIGJhY2tlbmQsIGF0dHJzfSA9IGFyZ3M7XG4gIGNvbnN0IHt4fSA9IGlucHV0cztcbiAgY29uc3Qge2ZpbHRlclNpemUsIHN0cmlkZXMsIHBhZCwgZGltUm91bmRpbmdNb2RlfSA9IGF0dHJzO1xuICBjb25zdCBkaWxhdGlvbnMgPSAxO1xuICBjb25zdCBjb252SW5mbyA9IGJhY2tlbmRfdXRpbC5jb21wdXRlUG9vbDJESW5mbyhcbiAgICAgIHguc2hhcGUgYXMgW251bWJlciwgbnVtYmVyLCBudW1iZXIsIG51bWJlcl0sIGZpbHRlclNpemUsIHN0cmlkZXMsXG4gICAgICBkaWxhdGlvbnMsIHBhZCwgZGltUm91bmRpbmdNb2RlKTtcblxuICByZXR1cm4gcG9vbEltcGwoeCwgY29udkluZm8sICdhdmcnLCBiYWNrZW5kKTtcbn1cblxuZXhwb3J0IGNvbnN0IGF2Z1Bvb2xDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogQXZnUG9vbCxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBhdmdQb29sIGFzIHVua25vd24gYXMgS2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPool3D, backend_util } from '@tensorflow/tfjs-core';\nimport { Pool3DProgram } from '../pool_webgpu';\nexport function avgPool3D(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { filterSize, strides, pad, dataFormat, dimRoundingMode } = attrs;\n    const dilations = [1, 1, 1];\n    const convInfo = backend_util.computePool3DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode, dataFormat);\n    const avgPoolProgram = new Pool3DProgram(convInfo, 'avg');\n    const dimensions = [\n        {\n            type: 'int32',\n            data: [convInfo.strideDepth, convInfo.strideHeight, convInfo.strideWidth]\n        },\n        {\n            type: 'int32',\n            data: [convInfo.padInfo.front, convInfo.padInfo.top, convInfo.padInfo.left]\n        },\n        {\n            type: 'int32',\n            data: [convInfo.inDepth, convInfo.inHeight, convInfo.inWidth]\n        },\n        {\n            type: 'int32',\n            data: [\n                convInfo.effectiveFilterDepth, convInfo.effectiveFilterHeight,\n                convInfo.effectiveFilterWidth\n            ]\n        }\n    ];\n    return backend.runWebGPUProgram(avgPoolProgram, [x], x.dtype, dimensions);\n}\nexport const avgPool3DConfig = {\n    kernelName: AvgPool3D,\n    backendName: 'webgpu',\n    kernelFunc: avgPool3D\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXZnUG9vbDNELmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9BdmdQb29sM0QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBQ0gsT0FBTyxFQUFDLFNBQVMsRUFBbUMsWUFBWSxFQUF1QyxNQUFNLHVCQUF1QixDQUFDO0FBR3JJLE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUU3QyxNQUFNLFVBQVUsU0FBUyxDQUFDLElBSXpCO0lBQ0MsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ3RDLE1BQU0sRUFBQyxDQUFDLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFDbkIsTUFBTSxFQUFDLFVBQVUsRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLFVBQVUsRUFBRSxlQUFlLEVBQUMsR0FBRyxLQUFLLENBQUM7SUFDdEUsTUFBTSxTQUFTLEdBQTZCLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUV0RCxNQUFNLFFBQVEsR0FBRyxZQUFZLENBQUMsaUJBQWlCLENBQzNDLENBQUMsQ0FBQyxLQUFpRCxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQ3hFLFNBQVMsRUFBRSxHQUFHLEVBQUUsZUFBZSxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBQ2pELE1BQU0sY0FBYyxHQUFHLElBQUksYUFBYSxDQUFDLFFBQVEsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUMxRCxNQUFNLFVBQVUsR0FBRztRQUNqQjtZQUNFLElBQUksRUFBRSxPQUFPO1lBQ2IsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLFdBQVcsRUFBRSxRQUFRLENBQUMsWUFBWSxFQUFFLFFBQVEsQ0FBQyxXQUFXLENBQUM7U0FDMUU7UUFDRDtZQUNFLElBQUksRUFBRSxPQUFPO1lBQ2IsSUFBSSxFQUNBLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsUUFBUSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUM7U0FDMUU7UUFDRDtZQUNFLElBQUksRUFBRSxPQUFPO1lBQ2IsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxRQUFRLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxPQUFPLENBQUM7U0FDOUQ7UUFDRDtZQUNFLElBQUksRUFBRSxPQUFPO1lBQ2IsSUFBSSxFQUFFO2dCQUNKLFFBQVEsQ0FBQyxvQkFBb0IsRUFBRSxRQUFRLENBQUMscUJBQXFCO2dCQUM3RCxRQUFRLENBQUMsb0JBQW9CO2FBQzlCO1NBQ0Y7S0FDRixDQUFDO0lBQ0YsT0FBTyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsY0FBYyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEtBQUssRUFBRSxVQUFVLENBQUMsQ0FBQztBQUM1RSxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFpQjtJQUMzQyxVQUFVLEVBQUUsU0FBUztJQUNyQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsU0FBa0M7Q0FDL0MsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIzIEdvb2dsZSBMTEMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cbmltcG9ydCB7QXZnUG9vbDNELCBBdmdQb29sM0RBdHRycywgQXZnUG9vbDNESW5wdXRzLCBiYWNrZW5kX3V0aWwsIEtlcm5lbENvbmZpZywgS2VybmVsRnVuYywgVGVuc29ySW5mb30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge1Bvb2wzRFByb2dyYW19IGZyb20gJy4uL3Bvb2xfd2ViZ3B1JztcblxuZXhwb3J0IGZ1bmN0aW9uIGF2Z1Bvb2wzRChhcmdzOiB7XG4gIGlucHV0czogQXZnUG9vbDNESW5wdXRzLFxuICBiYWNrZW5kOiBXZWJHUFVCYWNrZW5kLFxuICBhdHRyczogQXZnUG9vbDNEQXR0cnNcbn0pOiBUZW5zb3JJbmZvIHtcbiAgY29uc3Qge2lucHV0cywgYmFja2VuZCwgYXR0cnN9ID0gYXJncztcbiAgY29uc3Qge3h9ID0gaW5wdXRzO1xuICBjb25zdCB7ZmlsdGVyU2l6ZSwgc3RyaWRlcywgcGFkLCBkYXRhRm9ybWF0LCBkaW1Sb3VuZGluZ01vZGV9ID0gYXR0cnM7XG4gIGNvbnN0IGRpbGF0aW9uczogW251bWJlciwgbnVtYmVyLCBudW1iZXJdID0gWzEsIDEsIDFdO1xuXG4gIGNvbnN0IGNvbnZJbmZvID0gYmFja2VuZF91dGlsLmNvbXB1dGVQb29sM0RJbmZvKFxuICAgICAgeC5zaGFwZSBhcyBbbnVtYmVyLCBudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdLCBmaWx0ZXJTaXplLCBzdHJpZGVzLFxuICAgICAgZGlsYXRpb25zLCBwYWQsIGRpbVJvdW5kaW5nTW9kZSwgZGF0YUZvcm1hdCk7XG4gIGNvbnN0IGF2Z1Bvb2xQcm9ncmFtID0gbmV3IFBvb2wzRFByb2dyYW0oY29udkluZm8sICdhdmcnKTtcbiAgY29uc3QgZGltZW5zaW9ucyA9IFtcbiAgICB7XG4gICAgICB0eXBlOiAnaW50MzInLFxuICAgICAgZGF0YTogW2NvbnZJbmZvLnN0cmlkZURlcHRoLCBjb252SW5mby5zdHJpZGVIZWlnaHQsIGNvbnZJbmZvLnN0cmlkZVdpZHRoXVxuICAgIH0sXG4gICAge1xuICAgICAgdHlwZTogJ2ludDMyJyxcbiAgICAgIGRhdGE6XG4gICAgICAgICAgW2NvbnZJbmZvLnBhZEluZm8uZnJvbnQsIGNvbnZJbmZvLnBhZEluZm8udG9wLCBjb252SW5mby5wYWRJbmZvLmxlZnRdXG4gICAgfSxcbiAgICB7XG4gICAgICB0eXBlOiAnaW50MzInLFxuICAgICAgZGF0YTogW2NvbnZJbmZvLmluRGVwdGgsIGNvbnZJbmZvLmluSGVpZ2h0LCBjb252SW5mby5pbldpZHRoXVxuICAgIH0sXG4gICAge1xuICAgICAgdHlwZTogJ2ludDMyJyxcbiAgICAgIGRhdGE6IFtcbiAgICAgICAgY29udkluZm8uZWZmZWN0aXZlRmlsdGVyRGVwdGgsIGNvbnZJbmZvLmVmZmVjdGl2ZUZpbHRlckhlaWdodCxcbiAgICAgICAgY29udkluZm8uZWZmZWN0aXZlRmlsdGVyV2lkdGhcbiAgICAgIF1cbiAgICB9XG4gIF07XG4gIHJldHVybiBiYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0oYXZnUG9vbFByb2dyYW0sIFt4XSwgeC5kdHlwZSwgZGltZW5zaW9ucyk7XG59XG5cbmV4cG9ydCBjb25zdCBhdmdQb29sM0RDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogQXZnUG9vbDNELFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IGF2Z1Bvb2wzRCBhcyB1bmtub3duIGFzIEtlcm5lbEZ1bmNcbn07XG4iXX0=","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class AvgPool2DBackpropProgram {\n    constructor(convInfo) {\n        this.variableNames = ['dy'];\n        this.uniforms = `strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,\n       outHeight : i32, outWidth : i32, avgMultiplier : f32,`;\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = convInfo.inShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.shaderKey = `avgPool2DBackprop`;\n    }\n    getUserCode() {\n        const userCode = `\n      ${main('index')} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d = coords[3];\n\n        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;\n        let dyRCorner = dyRCCorner.x;\n        let dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {\n          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);\n\n          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n            continue;\n          }\n          let idyR = i32(dyR);\n\n          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {\n            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);\n\n            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n              continue;\n            }\n            let idyC = i32(dyC);\n\n            let dyValue = getDy(batch, idyR, idyC, d);\n\n            dotProd = dotProd + dyValue * uniforms.avgMultiplier;\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `;\n        return userCode;\n    }\n}\nexport class AvgPool3DBackpropProgram {\n    constructor(convInfo) {\n        this.variableNames = ['dy'];\n        this.uniforms = `strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,\n       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,`;\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = convInfo.inShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.shaderKey = `avgPool3DBackprop`;\n    }\n    getUserCode() {\n        const userCode = `\n      ${main('index')} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords.x;\n        let ch = coords.u;\n\n        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;\n        let dyDCorner = dyCorner.x;\n        let dyRCorner = dyCorner.y;\n        let dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {\n          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);\n\n          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {\n            continue;\n          }\n          let idyD = i32(dyD);\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);\n\n            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n              continue;\n            }\n            let idyR = i32(dyR);\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);\n\n              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n                continue;\n              }\n              let idyC = i32(dyC);\n\n              let dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              dotProd += dyValue * uniforms.avgMultiplier;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPool3DGrad, backend_util } from '@tensorflow/tfjs-core';\nimport { AvgPool3DBackpropProgram } from '../avg_pool_backprop_webgpu';\nexport function avgPool3DGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, input } = inputs;\n    const x = input;\n    const { filterSize, strides, pad, dimRoundingMode } = attrs;\n    const convInfo = backend_util.computePool3DInfo(x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n    const program = new AvgPool3DBackpropProgram(convInfo);\n    const avgMultiplier = 1 / (convInfo.filterDepth * convInfo.filterHeight * convInfo.filterWidth);\n    const uniformData = [\n        {\n            type: 'int32',\n            data: [convInfo.strideDepth, convInfo.strideHeight, convInfo.strideWidth]\n        },\n        {\n            type: 'int32',\n            data: [\n                convInfo.effectiveFilterDepth - 1 - convInfo.padInfo.front,\n                convInfo.effectiveFilterHeight - 1 - convInfo.padInfo.top,\n                convInfo.effectiveFilterWidth - 1 - convInfo.padInfo.left\n            ]\n        },\n        {\n            type: 'int32',\n            data: [\n                convInfo.effectiveFilterDepth, convInfo.effectiveFilterHeight,\n                convInfo.effectiveFilterWidth\n            ]\n        },\n        { type: 'int32', data: [convInfo.outDepth] },\n        { type: 'int32', data: [convInfo.outHeight] },\n        { type: 'int32', data: [convInfo.outWidth] },\n        { type: 'float32', data: [avgMultiplier] }\n    ];\n    return backend.runWebGPUProgram(program, [dy], x.dtype, uniformData);\n}\nexport const avgPool3DGradConfig = {\n    kernelName: AvgPool3DGrad,\n    backendName: 'webgpu',\n    kernelFunc: avgPool3DGrad\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXZnUG9vbDNER3JhZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvQXZnUG9vbDNER3JhZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsYUFBYSxFQUEyQyxZQUFZLEVBQXVDLE1BQU0sdUJBQXVCLENBQUM7QUFFakosT0FBTyxFQUFDLHdCQUF3QixFQUFDLE1BQU0sNkJBQTZCLENBQUM7QUFHckUsTUFBTSxVQUFVLGFBQWEsQ0FBQyxJQUk3QjtJQUNDLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QyxNQUFNLEVBQUMsRUFBRSxFQUFFLEtBQUssRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUMzQixNQUFNLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDaEIsTUFBTSxFQUFDLFVBQVUsRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLGVBQWUsRUFBQyxHQUFHLEtBQUssQ0FBQztJQUUxRCxNQUFNLFFBQVEsR0FBRyxZQUFZLENBQUMsaUJBQWlCLENBQzNDLENBQUMsQ0FBQyxLQUFpRCxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQ3hFLENBQUMsQ0FBQyxlQUFlLEVBQUUsR0FBRyxFQUFFLGVBQWUsQ0FBQyxDQUFDO0lBQzdDLE1BQU0sT0FBTyxHQUFHLElBQUksd0JBQXdCLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDdkQsTUFBTSxhQUFhLEdBQ2YsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLFdBQVcsR0FBRyxRQUFRLENBQUMsWUFBWSxHQUFHLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUM5RSxNQUFNLFdBQVcsR0FBRztRQUNsQjtZQUNFLElBQUksRUFBRSxPQUFPO1lBQ2IsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLFdBQVcsRUFBRSxRQUFRLENBQUMsWUFBWSxFQUFFLFFBQVEsQ0FBQyxXQUFXLENBQUM7U0FDMUU7UUFDRDtZQUNFLElBQUksRUFBRSxPQUFPO1lBQ2IsSUFBSSxFQUFFO2dCQUNKLFFBQVEsQ0FBQyxvQkFBb0IsR0FBRyxDQUFDLEdBQUcsUUFBUSxDQUFDLE9BQU8sQ0FBQyxLQUFLO2dCQUMxRCxRQUFRLENBQUMscUJBQXFCLEdBQUcsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxPQUFPLENBQUMsR0FBRztnQkFDekQsUUFBUSxDQUFDLG9CQUFvQixHQUFHLENBQUMsR0FBRyxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUk7YUFDMUQ7U0FDRjtRQUNEO1lBQ0UsSUFBSSxFQUFFLE9BQU87WUFDYixJQUFJLEVBQUU7Z0JBQ0osUUFBUSxDQUFDLG9CQUFvQixFQUFFLFFBQVEsQ0FBQyxxQkFBcUI7Z0JBQzdELFFBQVEsQ0FBQyxvQkFBb0I7YUFDOUI7U0FDRjtRQUNELEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLEVBQUM7UUFDMUMsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsRUFBQztRQUMzQyxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxFQUFDO1FBQzFDLEVBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxhQUFhLENBQUMsRUFBQztLQUN6QyxDQUFDO0lBQ0YsT0FBTyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEtBQUssRUFBRSxXQUFXLENBQUMsQ0FBQztBQUN2RSxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQWlCO0lBQy9DLFVBQVUsRUFBRSxhQUFhO0lBQ3pCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxhQUFzQztDQUNuRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjMgR29vZ2xlIExMQy5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0F2Z1Bvb2wzREdyYWQsIEF2Z1Bvb2wzREdyYWRBdHRycywgQXZnUG9vbDNER3JhZElucHV0cywgYmFja2VuZF91dGlsLCBLZXJuZWxDb25maWcsIEtlcm5lbEZ1bmMsIFRlbnNvckluZm99IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7QXZnUG9vbDNEQmFja3Byb3BQcm9ncmFtfSBmcm9tICcuLi9hdmdfcG9vbF9iYWNrcHJvcF93ZWJncHUnO1xuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBhdmdQb29sM0RHcmFkKGFyZ3M6IHtcbiAgaW5wdXRzOiBBdmdQb29sM0RHcmFkSW5wdXRzLFxuICBiYWNrZW5kOiBXZWJHUFVCYWNrZW5kLFxuICBhdHRyczogQXZnUG9vbDNER3JhZEF0dHJzXG59KTogVGVuc29ySW5mbyB7XG4gIGNvbnN0IHtpbnB1dHMsIGJhY2tlbmQsIGF0dHJzfSA9IGFyZ3M7XG4gIGNvbnN0IHtkeSwgaW5wdXR9ID0gaW5wdXRzO1xuICBjb25zdCB4ID0gaW5wdXQ7XG4gIGNvbnN0IHtmaWx0ZXJTaXplLCBzdHJpZGVzLCBwYWQsIGRpbVJvdW5kaW5nTW9kZX0gPSBhdHRycztcblxuICBjb25zdCBjb252SW5mbyA9IGJhY2tlbmRfdXRpbC5jb21wdXRlUG9vbDNESW5mbyhcbiAgICAgIHguc2hhcGUgYXMgW251bWJlciwgbnVtYmVyLCBudW1iZXIsIG51bWJlciwgbnVtYmVyXSwgZmlsdGVyU2l6ZSwgc3RyaWRlcyxcbiAgICAgIDEgLyogZGlsYXRpb25zICovLCBwYWQsIGRpbVJvdW5kaW5nTW9kZSk7XG4gIGNvbnN0IHByb2dyYW0gPSBuZXcgQXZnUG9vbDNEQmFja3Byb3BQcm9ncmFtKGNvbnZJbmZvKTtcbiAgY29uc3QgYXZnTXVsdGlwbGllciA9XG4gICAgICAxIC8gKGNvbnZJbmZvLmZpbHRlckRlcHRoICogY29udkluZm8uZmlsdGVySGVpZ2h0ICogY29udkluZm8uZmlsdGVyV2lkdGgpO1xuICBjb25zdCB1bmlmb3JtRGF0YSA9IFtcbiAgICB7XG4gICAgICB0eXBlOiAnaW50MzInLFxuICAgICAgZGF0YTogW2NvbnZJbmZvLnN0cmlkZURlcHRoLCBjb252SW5mby5zdHJpZGVIZWlnaHQsIGNvbnZJbmZvLnN0cmlkZVdpZHRoXVxuICAgIH0sXG4gICAge1xuICAgICAgdHlwZTogJ2ludDMyJyxcbiAgICAgIGRhdGE6IFtcbiAgICAgICAgY29udkluZm8uZWZmZWN0aXZlRmlsdGVyRGVwdGggLSAxIC0gY29udkluZm8ucGFkSW5mby5mcm9udCxcbiAgICAgICAgY29udkluZm8uZWZmZWN0aXZlRmlsdGVySGVpZ2h0IC0gMSAtIGNvbnZJbmZvLnBhZEluZm8udG9wLFxuICAgICAgICBjb252SW5mby5lZmZlY3RpdmVGaWx0ZXJXaWR0aCAtIDEgLSBjb252SW5mby5wYWRJbmZvLmxlZnRcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgIHR5cGU6ICdpbnQzMicsXG4gICAgICBkYXRhOiBbXG4gICAgICAgIGNvbnZJbmZvLmVmZmVjdGl2ZUZpbHRlckRlcHRoLCBjb252SW5mby5lZmZlY3RpdmVGaWx0ZXJIZWlnaHQsXG4gICAgICAgIGNvbnZJbmZvLmVmZmVjdGl2ZUZpbHRlcldpZHRoXG4gICAgICBdXG4gICAgfSxcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogW2NvbnZJbmZvLm91dERlcHRoXX0sXG4gICAge3R5cGU6ICdpbnQzMicsIGRhdGE6IFtjb252SW5mby5vdXRIZWlnaHRdfSxcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogW2NvbnZJbmZvLm91dFdpZHRoXX0sXG4gICAge3R5cGU6ICdmbG9hdDMyJywgZGF0YTogW2F2Z011bHRpcGxpZXJdfVxuICBdO1xuICByZXR1cm4gYmFja2VuZC5ydW5XZWJHUFVQcm9ncmFtKHByb2dyYW0sIFtkeV0sIHguZHR5cGUsIHVuaWZvcm1EYXRhKTtcbn1cblxuZXhwb3J0IGNvbnN0IGF2Z1Bvb2wzREdyYWRDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogQXZnUG9vbDNER3JhZCxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBhdmdQb29sM0RHcmFkIGFzIHVua25vd24gYXMgS2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPoolGrad, backend_util } from '@tensorflow/tfjs-core';\nimport { AvgPool2DBackpropProgram } from '../avg_pool_backprop_webgpu';\nimport { assertNotComplex } from '../webgpu_util';\nexport function avgPoolGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, input } = inputs;\n    const x = input;\n    assertNotComplex([dy, input], 'avgPoolGrad');\n    const { filterSize, strides, pad } = attrs;\n    const convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, 1 /* dilations */, pad);\n    const program = new AvgPool2DBackpropProgram(convInfo);\n    const avgMultiplier = 1 / (convInfo.filterHeight * convInfo.filterWidth);\n    const uniformData = [\n        { type: 'int32', data: [convInfo.strideHeight, convInfo.strideWidth] }, {\n            type: 'int32',\n            data: [\n                convInfo.effectiveFilterHeight - 1 - convInfo.padInfo.top,\n                convInfo.effectiveFilterWidth - 1 - convInfo.padInfo.left\n            ]\n        },\n        { type: 'int32', data: [convInfo.dilationHeight, convInfo.dilationWidth] }, {\n            type: 'int32',\n            data: [convInfo.effectiveFilterHeight, convInfo.effectiveFilterWidth]\n        },\n        { type: 'int32', data: [convInfo.outHeight] },\n        { type: 'int32', data: [convInfo.outWidth] },\n        { type: 'float32', data: [avgMultiplier] }\n    ];\n    return backend.runWebGPUProgram(program, [dy], x.dtype, uniformData);\n}\nexport const avgPoolGradConfig = {\n    kernelName: AvgPoolGrad,\n    backendName: 'webgpu',\n    kernelFunc: avgPoolGrad\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXZnUG9vbEdyYWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL0F2Z1Bvb2xHcmFkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxXQUFXLEVBQXVDLFlBQVksRUFBdUMsTUFBTSx1QkFBdUIsQ0FBQztBQUUzSSxPQUFPLEVBQUMsd0JBQXdCLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQztBQUVyRSxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUVoRCxNQUFNLFVBQVUsV0FBVyxDQUFDLElBSTNCO0lBQ0MsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ3RDLE1BQU0sRUFBQyxFQUFFLEVBQUUsS0FBSyxFQUFDLEdBQUcsTUFBTSxDQUFDO0lBQzNCLE1BQU0sQ0FBQyxHQUFHLEtBQUssQ0FBQztJQUNoQixnQkFBZ0IsQ0FBQyxDQUFDLEVBQUUsRUFBRSxLQUFLLENBQUMsRUFBRSxhQUFhLENBQUMsQ0FBQztJQUM3QyxNQUFNLEVBQUMsVUFBVSxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUMsR0FBRyxLQUFLLENBQUM7SUFFekMsTUFBTSxRQUFRLEdBQUcsWUFBWSxDQUFDLGlCQUFpQixDQUMzQyxDQUFDLENBQUMsS0FBeUMsRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUNoRSxDQUFDLENBQUMsZUFBZSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQzVCLE1BQU0sT0FBTyxHQUFHLElBQUksd0JBQXdCLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDdkQsTUFBTSxhQUFhLEdBQUcsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLFlBQVksR0FBRyxRQUFRLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDekUsTUFBTSxXQUFXLEdBQUc7UUFDbEIsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxZQUFZLEVBQUUsUUFBUSxDQUFDLFdBQVcsQ0FBQyxFQUFDLEVBQUU7WUFDcEUsSUFBSSxFQUFFLE9BQU87WUFDYixJQUFJLEVBQUU7Z0JBQ0osUUFBUSxDQUFDLHFCQUFxQixHQUFHLENBQUMsR0FBRyxRQUFRLENBQUMsT0FBTyxDQUFDLEdBQUc7Z0JBQ3pELFFBQVEsQ0FBQyxvQkFBb0IsR0FBRyxDQUFDLEdBQUcsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJO2FBQzFEO1NBQ0Y7UUFDRCxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLGNBQWMsRUFBRSxRQUFRLENBQUMsYUFBYSxDQUFDLEVBQUMsRUFBRTtZQUN4RSxJQUFJLEVBQUUsT0FBTztZQUNiLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxxQkFBcUIsRUFBRSxRQUFRLENBQUMsb0JBQW9CLENBQUM7U0FDdEU7UUFDRCxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxFQUFDO1FBQzNDLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLEVBQUM7UUFDMUMsRUFBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDLGFBQWEsQ0FBQyxFQUFDO0tBQ3pDLENBQUM7SUFDRixPQUFPLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0FBQ3ZFLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBaUI7SUFDN0MsVUFBVSxFQUFFLFdBQVc7SUFDdkIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLFdBQW9DO0NBQ2pELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7QXZnUG9vbEdyYWQsIEF2Z1Bvb2xHcmFkQXR0cnMsIEF2Z1Bvb2xHcmFkSW5wdXRzLCBiYWNrZW5kX3V0aWwsIEtlcm5lbENvbmZpZywgS2VybmVsRnVuYywgVGVuc29ySW5mb30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtBdmdQb29sMkRCYWNrcHJvcFByb2dyYW19IGZyb20gJy4uL2F2Z19wb29sX2JhY2twcm9wX3dlYmdwdSc7XG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcbmltcG9ydCB7YXNzZXJ0Tm90Q29tcGxleH0gZnJvbSAnLi4vd2ViZ3B1X3V0aWwnO1xuXG5leHBvcnQgZnVuY3Rpb24gYXZnUG9vbEdyYWQoYXJnczoge1xuICBpbnB1dHM6IEF2Z1Bvb2xHcmFkSW5wdXRzLFxuICBiYWNrZW5kOiBXZWJHUFVCYWNrZW5kLFxuICBhdHRyczogQXZnUG9vbEdyYWRBdHRyc1xufSk6IFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7ZHksIGlucHV0fSA9IGlucHV0cztcbiAgY29uc3QgeCA9IGlucHV0O1xuICBhc3NlcnROb3RDb21wbGV4KFtkeSwgaW5wdXRdLCAnYXZnUG9vbEdyYWQnKTtcbiAgY29uc3Qge2ZpbHRlclNpemUsIHN0cmlkZXMsIHBhZH0gPSBhdHRycztcblxuICBjb25zdCBjb252SW5mbyA9IGJhY2tlbmRfdXRpbC5jb21wdXRlUG9vbDJESW5mbyhcbiAgICAgIHguc2hhcGUgYXMgW251bWJlciwgbnVtYmVyLCBudW1iZXIsIG51bWJlcl0sIGZpbHRlclNpemUsIHN0cmlkZXMsXG4gICAgICAxIC8qIGRpbGF0aW9ucyAqLywgcGFkKTtcbiAgY29uc3QgcHJvZ3JhbSA9IG5ldyBBdmdQb29sMkRCYWNrcHJvcFByb2dyYW0oY29udkluZm8pO1xuICBjb25zdCBhdmdNdWx0aXBsaWVyID0gMSAvIChjb252SW5mby5maWx0ZXJIZWlnaHQgKiBjb252SW5mby5maWx0ZXJXaWR0aCk7XG4gIGNvbnN0IHVuaWZvcm1EYXRhID0gW1xuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbY29udkluZm8uc3RyaWRlSGVpZ2h0LCBjb252SW5mby5zdHJpZGVXaWR0aF19LCB7XG4gICAgICB0eXBlOiAnaW50MzInLFxuICAgICAgZGF0YTogW1xuICAgICAgICBjb252SW5mby5lZmZlY3RpdmVGaWx0ZXJIZWlnaHQgLSAxIC0gY29udkluZm8ucGFkSW5mby50b3AsXG4gICAgICAgIGNvbnZJbmZvLmVmZmVjdGl2ZUZpbHRlcldpZHRoIC0gMSAtIGNvbnZJbmZvLnBhZEluZm8ubGVmdFxuICAgICAgXVxuICAgIH0sXG4gICAge3R5cGU6ICdpbnQzMicsIGRhdGE6IFtjb252SW5mby5kaWxhdGlvbkhlaWdodCwgY29udkluZm8uZGlsYXRpb25XaWR0aF19LCB7XG4gICAgICB0eXBlOiAnaW50MzInLFxuICAgICAgZGF0YTogW2NvbnZJbmZvLmVmZmVjdGl2ZUZpbHRlckhlaWdodCwgY29udkluZm8uZWZmZWN0aXZlRmlsdGVyV2lkdGhdXG4gICAgfSxcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogW2NvbnZJbmZvLm91dEhlaWdodF19LFxuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbY29udkluZm8ub3V0V2lkdGhdfSxcbiAgICB7dHlwZTogJ2Zsb2F0MzInLCBkYXRhOiBbYXZnTXVsdGlwbGllcl19XG4gIF07XG4gIHJldHVybiBiYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0ocHJvZ3JhbSwgW2R5XSwgeC5kdHlwZSwgdW5pZm9ybURhdGEpO1xufVxuXG5leHBvcnQgY29uc3QgYXZnUG9vbEdyYWRDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogQXZnUG9vbEdyYWQsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogYXZnUG9vbEdyYWQgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { BatchMatMul } from '@tensorflow/tfjs-core';\nimport { batchMatMulImpl } from './BatchMatMul_impl';\nexport function batchMatMul(args) {\n    const { inputs, backend, attrs } = args;\n    const { a, b } = inputs;\n    const { transposeA, transposeB } = attrs;\n    return batchMatMulImpl({ a, b, transposeA, transposeB, backend });\n}\nexport const batchMatMulConfig = {\n    kernelName: BatchMatMul,\n    backendName: 'webgpu',\n    kernelFunc: batchMatMul,\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQmF0Y2hNYXRNdWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL0JhdGNoTWF0TXVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxXQUFXLEVBQWdFLE1BQU0sdUJBQXVCLENBQUM7QUFHakgsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBRW5ELE1BQU0sVUFBVSxXQUFXLENBQUMsSUFJM0I7SUFDQyxNQUFNLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFDdEMsTUFBTSxFQUFDLENBQUMsRUFBRSxDQUFDLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFDdEIsTUFBTSxFQUFDLFVBQVUsRUFBRSxVQUFVLEVBQUMsR0FBRyxLQUFLLENBQUM7SUFFdkMsT0FBTyxlQUFlLENBQUMsRUFBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLFVBQVUsRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUNsRSxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQWlCO0lBQzdDLFVBQVUsRUFBRSxXQUFXO0lBQ3ZCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxXQUFvQztDQUNqRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0JhdGNoTWF0TXVsLCBCYXRjaE1hdE11bEF0dHJzLCBCYXRjaE1hdE11bElucHV0cywgS2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcbmltcG9ydCB7YmF0Y2hNYXRNdWxJbXBsfSBmcm9tICcuL0JhdGNoTWF0TXVsX2ltcGwnO1xuXG5leHBvcnQgZnVuY3Rpb24gYmF0Y2hNYXRNdWwoYXJnczoge1xuICBpbnB1dHM6IEJhdGNoTWF0TXVsSW5wdXRzLFxuICBhdHRyczogQmF0Y2hNYXRNdWxBdHRycyxcbiAgYmFja2VuZDogV2ViR1BVQmFja2VuZFxufSkge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7YSwgYn0gPSBpbnB1dHM7XG4gIGNvbnN0IHt0cmFuc3Bvc2VBLCB0cmFuc3Bvc2VCfSA9IGF0dHJzO1xuXG4gIHJldHVybiBiYXRjaE1hdE11bEltcGwoe2EsIGIsIHRyYW5zcG9zZUEsIHRyYW5zcG9zZUIsIGJhY2tlbmR9KTtcbn1cblxuZXhwb3J0IGNvbnN0IGJhdGNoTWF0TXVsQ29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IEJhdGNoTWF0TXVsLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IGJhdGNoTWF0TXVsIGFzIHVua25vd24gYXMgS2VybmVsRnVuYyxcbn07XG4iXX0=","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType, getCoordsXYZ, getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class SliceProgram {\n    constructor(start, destSize) {\n        this.variableNames = ['source'];\n        this.workPerThread = 1;\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = destSize;\n        this.rank = destSize.length;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize, [this.workPerThread, 1, 1]);\n        this.start = start;\n        this.uniforms = `start : ${getCoordsDataType(start.length)}, `;\n        this.shaderKey = 'slice';\n    }\n    getUserCode() {\n        const dtype = getCoordsDataType(this.rank);\n        const sourceCoords = getCoords(this.rank);\n        let coordSum;\n        if (this.start.length === 1) {\n            coordSum = this.outputShape.map((_, i) => {\n                return `sourceLoc = uniforms.start + coords;`;\n            });\n        }\n        else {\n            coordSum = this.outputShape.map((_, i) => {\n                return `sourceLoc.${coords[i]} = uniforms.start.${getCoordsXYZ(i)} + coords.${coords[i]};`;\n            });\n        }\n        const userCode = `\n      ${main('index')} {\n        if (index < uniforms.size) {\n          var sourceLoc : ${dtype};\n          let coords = getCoordsFromIndex(index);\n          ${coordSum.join('\\n')}\n          setOutputAtIndex(index, getSource(${sourceCoords}));\n        }\n      }\n    `;\n        return userCode;\n    }\n}\nconst coords = ['x', 'y', 'z', 'w', 'u', 'v'];\nfunction getCoords(rank) {\n    if (rank === 1) {\n        return 'sourceLoc';\n    }\n    else if (rank <= 6) {\n        return coords.slice(0, rank).map(coord => `sourceLoc.${coord}`).join(',');\n    }\n    else {\n        throw Error(`Slicing for rank ${rank} is not yet supported`);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpY2Vfd2ViZ3B1LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMvc2xpY2Vfd2ViZ3B1LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxpQkFBaUIsRUFBRSxZQUFZLEVBQUUsbUJBQW1CLElBQUksSUFBSSxFQUFnQixNQUFNLGtCQUFrQixDQUFDO0FBQzdHLE9BQU8sRUFBQyxlQUFlLEVBQUUsa0JBQWtCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFbEUsTUFBTSxPQUFPLFlBQVk7SUFhdkIsWUFBWSxLQUFlLEVBQUUsUUFBa0I7UUFaL0Msa0JBQWEsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBTzNCLGtCQUFhLEdBQUcsQ0FBQyxDQUFDO1FBQ2xCLGtCQUFhLEdBQTZCLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUVyRCxTQUFJLEdBQUcsSUFBSSxDQUFDO1FBR1YsSUFBSSxDQUFDLFdBQVcsR0FBRyxRQUFRLENBQUM7UUFDNUIsSUFBSSxDQUFDLElBQUksR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDO1FBQzVCLElBQUksQ0FBQyxjQUFjLEdBQUcsa0JBQWtCLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQzNELElBQUksQ0FBQyxRQUFRLEdBQUcsZUFBZSxDQUMzQixJQUFJLENBQUMsY0FBYyxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLGFBQWEsRUFDekQsQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRWhDLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ25CLElBQUksQ0FBQyxRQUFRLEdBQUcsV0FBVyxpQkFBaUIsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQztRQUMvRCxJQUFJLENBQUMsU0FBUyxHQUFHLE9BQU8sQ0FBQztJQUMzQixDQUFDO0lBRUQsV0FBVztRQUNULE1BQU0sS0FBSyxHQUFHLGlCQUFpQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMzQyxNQUFNLFlBQVksR0FBRyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzFDLElBQUksUUFBUSxDQUFDO1FBQ2IsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7WUFDM0IsUUFBUSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO2dCQUN2QyxPQUFPLHNDQUFzQyxDQUFDO1lBQ2hELENBQUMsQ0FBQyxDQUFDO1NBQ0o7YUFBTTtZQUNMLFFBQVEsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtnQkFDdkMsT0FBTyxhQUFhLE1BQU0sQ0FBQyxDQUFDLENBQUMscUJBQ3pCLFlBQVksQ0FBQyxDQUFDLENBQUMsYUFBYSxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQztZQUMvQyxDQUFDLENBQUMsQ0FBQztTQUNKO1FBRUQsTUFBTSxRQUFRLEdBQUc7UUFDYixJQUFJLENBQUMsT0FBTyxDQUFDOzs0QkFFTyxLQUFLOztZQUVyQixRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQzs4Q0FDZSxZQUFZOzs7S0FHckQsQ0FBQztRQUNGLE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7Q0FDRjtBQUVELE1BQU0sTUFBTSxHQUFHLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztBQUU5QyxTQUFTLFNBQVMsQ0FBQyxJQUFZO0lBQzdCLElBQUksSUFBSSxLQUFLLENBQUMsRUFBRTtRQUNkLE9BQU8sV0FBVyxDQUFDO0tBQ3BCO1NBQU0sSUFBSSxJQUFJLElBQUksQ0FBQyxFQUFFO1FBQ3BCLE9BQU8sTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsYUFBYSxLQUFLLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztLQUMzRTtTQUFNO1FBQ0wsTUFBTSxLQUFLLENBQUMsb0JBQW9CLElBQUksdUJBQXVCLENBQUMsQ0FBQztLQUM5RDtBQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7Z2V0Q29vcmRzRGF0YVR5cGUsIGdldENvb3Jkc1hZWiwgZ2V0TWFpbkhlYWRlclN0cmluZyBhcyBtYWluLCBXZWJHUFVQcm9ncmFtfSBmcm9tICcuL3dlYmdwdV9wcm9ncmFtJztcbmltcG9ydCB7Y29tcHV0ZURpc3BhdGNoLCBmbGF0RGlzcGF0Y2hMYXlvdXR9IGZyb20gJy4vd2ViZ3B1X3V0aWwnO1xuXG5leHBvcnQgY2xhc3MgU2xpY2VQcm9ncmFtIGltcGxlbWVudHMgV2ViR1BVUHJvZ3JhbSB7XG4gIHZhcmlhYmxlTmFtZXMgPSBbJ3NvdXJjZSddO1xuICB1bmlmb3Jtczogc3RyaW5nO1xuICBvdXRwdXRTaGFwZTogbnVtYmVyW107XG4gIHNoYWRlcktleTogc3RyaW5nO1xuICByYW5rOiBudW1iZXI7XG4gIGRpc3BhdGNoTGF5b3V0OiB7eDogbnVtYmVyW119O1xuICBkaXNwYXRjaDogW251bWJlciwgbnVtYmVyLCBudW1iZXJdO1xuICB3b3JrUGVyVGhyZWFkID0gMTtcbiAgd29ya2dyb3VwU2l6ZTogW251bWJlciwgbnVtYmVyLCBudW1iZXJdID0gWzY0LCAxLCAxXTtcbiAgc3RhcnQ6IG51bWJlcltdO1xuICBzaXplID0gdHJ1ZTtcblxuICBjb25zdHJ1Y3RvcihzdGFydDogbnVtYmVyW10sIGRlc3RTaXplOiBudW1iZXJbXSkge1xuICAgIHRoaXMub3V0cHV0U2hhcGUgPSBkZXN0U2l6ZTtcbiAgICB0aGlzLnJhbmsgPSBkZXN0U2l6ZS5sZW5ndGg7XG4gICAgdGhpcy5kaXNwYXRjaExheW91dCA9IGZsYXREaXNwYXRjaExheW91dCh0aGlzLm91dHB1dFNoYXBlKTtcbiAgICB0aGlzLmRpc3BhdGNoID0gY29tcHV0ZURpc3BhdGNoKFxuICAgICAgICB0aGlzLmRpc3BhdGNoTGF5b3V0LCB0aGlzLm91dHB1dFNoYXBlLCB0aGlzLndvcmtncm91cFNpemUsXG4gICAgICAgIFt0aGlzLndvcmtQZXJUaHJlYWQsIDEsIDFdKTtcblxuICAgIHRoaXMuc3RhcnQgPSBzdGFydDtcbiAgICB0aGlzLnVuaWZvcm1zID0gYHN0YXJ0IDogJHtnZXRDb29yZHNEYXRhVHlwZShzdGFydC5sZW5ndGgpfSwgYDtcbiAgICB0aGlzLnNoYWRlcktleSA9ICdzbGljZSc7XG4gIH1cblxuICBnZXRVc2VyQ29kZSgpOiBzdHJpbmcge1xuICAgIGNvbnN0IGR0eXBlID0gZ2V0Q29vcmRzRGF0YVR5cGUodGhpcy5yYW5rKTtcbiAgICBjb25zdCBzb3VyY2VDb29yZHMgPSBnZXRDb29yZHModGhpcy5yYW5rKTtcbiAgICBsZXQgY29vcmRTdW07XG4gICAgaWYgKHRoaXMuc3RhcnQubGVuZ3RoID09PSAxKSB7XG4gICAgICBjb29yZFN1bSA9IHRoaXMub3V0cHV0U2hhcGUubWFwKChfLCBpKSA9PiB7XG4gICAgICAgIHJldHVybiBgc291cmNlTG9jID0gdW5pZm9ybXMuc3RhcnQgKyBjb29yZHM7YDtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb29yZFN1bSA9IHRoaXMub3V0cHV0U2hhcGUubWFwKChfLCBpKSA9PiB7XG4gICAgICAgIHJldHVybiBgc291cmNlTG9jLiR7Y29vcmRzW2ldfSA9IHVuaWZvcm1zLnN0YXJ0LiR7XG4gICAgICAgICAgICBnZXRDb29yZHNYWVooaSl9ICsgY29vcmRzLiR7Y29vcmRzW2ldfTtgO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgY29uc3QgdXNlckNvZGUgPSBgXG4gICAgICAke21haW4oJ2luZGV4Jyl9IHtcbiAgICAgICAgaWYgKGluZGV4IDwgdW5pZm9ybXMuc2l6ZSkge1xuICAgICAgICAgIHZhciBzb3VyY2VMb2MgOiAke2R0eXBlfTtcbiAgICAgICAgICBsZXQgY29vcmRzID0gZ2V0Q29vcmRzRnJvbUluZGV4KGluZGV4KTtcbiAgICAgICAgICAke2Nvb3JkU3VtLmpvaW4oJ1xcbicpfVxuICAgICAgICAgIHNldE91dHB1dEF0SW5kZXgoaW5kZXgsIGdldFNvdXJjZSgke3NvdXJjZUNvb3Jkc30pKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIGA7XG4gICAgcmV0dXJuIHVzZXJDb2RlO1xuICB9XG59XG5cbmNvbnN0IGNvb3JkcyA9IFsneCcsICd5JywgJ3onLCAndycsICd1JywgJ3YnXTtcblxuZnVuY3Rpb24gZ2V0Q29vcmRzKHJhbms6IG51bWJlcik6IHN0cmluZyB7XG4gIGlmIChyYW5rID09PSAxKSB7XG4gICAgcmV0dXJuICdzb3VyY2VMb2MnO1xuICB9IGVsc2UgaWYgKHJhbmsgPD0gNikge1xuICAgIHJldHVybiBjb29yZHMuc2xpY2UoMCwgcmFuaykubWFwKGNvb3JkID0+IGBzb3VyY2VMb2MuJHtjb29yZH1gKS5qb2luKCcsJyk7XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgRXJyb3IoYFNsaWNpbmcgZm9yIHJhbmsgJHtyYW5rfSBpcyBub3QgeWV0IHN1cHBvcnRlZGApO1xuICB9XG59XG4iXX0=","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Slice, slice_util, util } from '@tensorflow/tfjs-core';\nimport { sliceImplCPU } from '../kernel_utils/shared';\nimport { SliceProgram } from '../slice_webgpu';\nexport function slice(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { begin, size } = attrs;\n    const [$begin, $size] = slice_util.parseSliceParams(x, begin, size);\n    slice_util.assertParamsValid(x, $begin, $size);\n    if (backend.shouldExecuteOnCPU([x]) || x.dtype === 'string') {\n        const xTensorData = backend.tensorMap.get(x.dataId);\n        const outValues = sliceImplCPU(xTensorData.values, $begin, $size, x.shape, x.dtype);\n        return backend.makeTensorInfo($size, x.dtype, outValues);\n    }\n    if (util.sizeFromShape($size) === 0) {\n        return backend.makeTensorInfo($size, x.dtype, []);\n    }\n    // TODO(xing.xu): Add shadow slice support.\n    const program = new SliceProgram($begin, $size);\n    const uniformData = [{ type: 'int32', data: $begin }];\n    return backend.runWebGPUProgram(program, [x], x.dtype, uniformData);\n}\nexport const sliceConfig = {\n    kernelName: Slice,\n    backendName: 'webgpu',\n    kernelFunc: slice\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2xpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL1NsaWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBMkIsS0FBSyxFQUFFLFVBQVUsRUFBbUQsSUFBSSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFHekksT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBQ3BELE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUU3QyxNQUFNLFVBQVUsS0FBSyxDQUNqQixJQUFzRTtJQUV4RSxNQUFNLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFDdEMsTUFBTSxFQUFDLENBQUMsRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUNuQixNQUFNLEVBQUMsS0FBSyxFQUFFLElBQUksRUFBQyxHQUFHLEtBQUssQ0FBQztJQUU1QixNQUFNLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxHQUFHLFVBQVUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3BFLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLEVBQUUsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBRS9DLElBQUksT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsS0FBSyxLQUFLLFFBQVEsRUFBRTtRQUMzRCxNQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDcEQsTUFBTSxTQUFTLEdBQUcsWUFBWSxDQUMxQixXQUFXLENBQUMsTUFBb0IsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3ZFLE9BQU8sT0FBTyxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQztLQUMxRDtJQUVELElBQUksSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEVBQUU7UUFDbkMsT0FBTyxPQUFPLENBQUMsY0FBYyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0tBQ25EO0lBRUQsMkNBQTJDO0lBQzNDLE1BQU0sT0FBTyxHQUFHLElBQUksWUFBWSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNoRCxNQUFNLFdBQVcsR0FBRyxDQUFDLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFDLENBQUMsQ0FBQztJQUNwRCxPQUFPLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0FBQ3RFLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQWlCO0lBQ3ZDLFVBQVUsRUFBRSxLQUFLO0lBQ2pCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxLQUE4QjtDQUMzQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0tlcm5lbENvbmZpZywgS2VybmVsRnVuYywgU2xpY2UsIHNsaWNlX3V0aWwsIFNsaWNlQXR0cnMsIFNsaWNlSW5wdXRzLCBUZW5zb3JJbmZvLCBUeXBlZEFycmF5LCB1dGlsfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcbmltcG9ydCB7c2xpY2VJbXBsQ1BVfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMvc2hhcmVkJztcbmltcG9ydCB7U2xpY2VQcm9ncmFtfSBmcm9tICcuLi9zbGljZV93ZWJncHUnO1xuXG5leHBvcnQgZnVuY3Rpb24gc2xpY2UoXG4gICAgYXJnczoge2lucHV0czogU2xpY2VJbnB1dHMsIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmQsIGF0dHJzOiBTbGljZUF0dHJzfSk6XG4gICAgVGVuc29ySW5mbyB7XG4gIGNvbnN0IHtpbnB1dHMsIGJhY2tlbmQsIGF0dHJzfSA9IGFyZ3M7XG4gIGNvbnN0IHt4fSA9IGlucHV0cztcbiAgY29uc3Qge2JlZ2luLCBzaXplfSA9IGF0dHJzO1xuXG4gIGNvbnN0IFskYmVnaW4sICRzaXplXSA9IHNsaWNlX3V0aWwucGFyc2VTbGljZVBhcmFtcyh4LCBiZWdpbiwgc2l6ZSk7XG4gIHNsaWNlX3V0aWwuYXNzZXJ0UGFyYW1zVmFsaWQoeCwgJGJlZ2luLCAkc2l6ZSk7XG5cbiAgaWYgKGJhY2tlbmQuc2hvdWxkRXhlY3V0ZU9uQ1BVKFt4XSkgfHwgeC5kdHlwZSA9PT0gJ3N0cmluZycpIHtcbiAgICBjb25zdCB4VGVuc29yRGF0YSA9IGJhY2tlbmQudGVuc29yTWFwLmdldCh4LmRhdGFJZCk7XG4gICAgY29uc3Qgb3V0VmFsdWVzID0gc2xpY2VJbXBsQ1BVKFxuICAgICAgICB4VGVuc29yRGF0YS52YWx1ZXMgYXMgVHlwZWRBcnJheSwgJGJlZ2luLCAkc2l6ZSwgeC5zaGFwZSwgeC5kdHlwZSk7XG4gICAgcmV0dXJuIGJhY2tlbmQubWFrZVRlbnNvckluZm8oJHNpemUsIHguZHR5cGUsIG91dFZhbHVlcyk7XG4gIH1cblxuICBpZiAodXRpbC5zaXplRnJvbVNoYXBlKCRzaXplKSA9PT0gMCkge1xuICAgIHJldHVybiBiYWNrZW5kLm1ha2VUZW5zb3JJbmZvKCRzaXplLCB4LmR0eXBlLCBbXSk7XG4gIH1cblxuICAvLyBUT0RPKHhpbmcueHUpOiBBZGQgc2hhZG93IHNsaWNlIHN1cHBvcnQuXG4gIGNvbnN0IHByb2dyYW0gPSBuZXcgU2xpY2VQcm9ncmFtKCRiZWdpbiwgJHNpemUpO1xuICBjb25zdCB1bmlmb3JtRGF0YSA9IFt7dHlwZTogJ2ludDMyJywgZGF0YTogJGJlZ2lufV07XG4gIHJldHVybiBiYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0ocHJvZ3JhbSwgW3hdLCB4LmR0eXBlLCB1bmlmb3JtRGF0YSk7XG59XG5cbmV4cG9ydCBjb25zdCBzbGljZUNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBTbGljZSxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBzbGljZSBhcyB1bmtub3duIGFzIEtlcm5lbEZ1bmNcbn07XG4iXX0=","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, BatchToSpaceND, util } from '@tensorflow/tfjs-core';\nimport { reshape } from './Reshape';\nimport { slice } from './Slice';\nimport { transpose } from './Transpose';\nexport const batchToSpaceND = (args) => {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { blockShape, crops } = attrs;\n    util.assert(x.shape.length <= 4, () => 'batchToSpaceND for rank > 4 with a WebGPU backend not ' +\n        'implemented yet');\n    const prod = blockShape.reduce((a, b) => a * b);\n    const reshaped = backend_util.getReshaped(x.shape, blockShape, prod);\n    const permuted = backend_util.getPermuted(reshaped.length, blockShape.length);\n    const reshapedPermuted = backend_util.getReshapedPermuted(x.shape, blockShape, prod);\n    const sliceBeginCoords = backend_util.getSliceBeginCoords(crops, blockShape.length);\n    const sliceSize = backend_util.getSliceSize(reshapedPermuted, crops, blockShape.length);\n    const toDispose = [];\n    const reshapedIntermediate = reshape({ inputs: { x }, backend, attrs: { shape: reshaped } });\n    const transposedIntermediate = transpose({ inputs: { x: reshapedIntermediate }, backend, attrs: { perm: permuted } });\n    const reshapedIntermediate2 = reshape({\n        inputs: { x: transposedIntermediate },\n        backend,\n        attrs: { shape: reshapedPermuted }\n    });\n    const sliced = slice({\n        inputs: { x: reshapedIntermediate2 },\n        backend,\n        attrs: { begin: sliceBeginCoords, size: sliceSize }\n    });\n    toDispose.push(reshapedIntermediate);\n    toDispose.push(transposedIntermediate);\n    toDispose.push(reshapedIntermediate2);\n    toDispose.forEach(t => backend.disposeData(t.dataId));\n    return sliced;\n};\nexport const batchToSpaceNDConfig = {\n    kernelName: BatchToSpaceND,\n    backendName: 'webgpu',\n    kernelFunc: batchToSpaceND\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQmF0Y2hUb1NwYWNlTkQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL0JhdGNoVG9TcGFjZU5ELnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxZQUFZLEVBQUUsY0FBYyxFQUFtRixJQUFJLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUkxSixPQUFPLEVBQUMsT0FBTyxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBQ2xDLE9BQU8sRUFBQyxLQUFLLEVBQUMsTUFBTSxTQUFTLENBQUM7QUFDOUIsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGFBQWEsQ0FBQztBQUV0QyxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsQ0FBQyxJQUk5QixFQUFjLEVBQUU7SUFDZixNQUFNLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFDdEMsTUFBTSxFQUFDLENBQUMsRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUNuQixNQUFNLEVBQUMsVUFBVSxFQUFFLEtBQUssRUFBQyxHQUFHLEtBQUssQ0FBQztJQUVsQyxJQUFJLENBQUMsTUFBTSxDQUNQLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxJQUFJLENBQUMsRUFDbkIsR0FBRyxFQUFFLENBQUMsd0RBQXdEO1FBQzFELGlCQUFpQixDQUFDLENBQUM7SUFDM0IsTUFBTSxJQUFJLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUVoRCxNQUFNLFFBQVEsR0FBRyxZQUFZLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsVUFBVSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3JFLE1BQU0sUUFBUSxHQUFHLFlBQVksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDOUUsTUFBTSxnQkFBZ0IsR0FDbEIsWUFBWSxDQUFDLG1CQUFtQixDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsVUFBVSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2hFLE1BQU0sZ0JBQWdCLEdBQ2xCLFlBQVksQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLEVBQUUsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQy9ELE1BQU0sU0FBUyxHQUNYLFlBQVksQ0FBQyxZQUFZLENBQUMsZ0JBQWdCLEVBQUUsS0FBSyxFQUFFLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUUxRSxNQUFNLFNBQVMsR0FBRyxFQUFFLENBQUM7SUFFckIsTUFBTSxvQkFBb0IsR0FDdEIsT0FBTyxDQUFDLEVBQUMsTUFBTSxFQUFFLEVBQUMsQ0FBQyxFQUFDLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxFQUFDLEtBQUssRUFBRSxRQUFRLEVBQUMsRUFBQyxDQUFDLENBQUM7SUFDOUQsTUFBTSxzQkFBc0IsR0FBRyxTQUFTLENBQ3BDLEVBQUMsTUFBTSxFQUFFLEVBQUMsQ0FBQyxFQUFFLG9CQUFvQixFQUFDLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxFQUFDLElBQUksRUFBRSxRQUFRLEVBQUMsRUFBQyxDQUFDLENBQUM7SUFDM0UsTUFBTSxxQkFBcUIsR0FBRyxPQUFPLENBQUM7UUFDcEMsTUFBTSxFQUFFLEVBQUMsQ0FBQyxFQUFFLHNCQUFzQixFQUFDO1FBQ25DLE9BQU87UUFDUCxLQUFLLEVBQUUsRUFBQyxLQUFLLEVBQUUsZ0JBQWdCLEVBQUM7S0FDakMsQ0FBQyxDQUFDO0lBQ0gsTUFBTSxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ25CLE1BQU0sRUFBRSxFQUFDLENBQUMsRUFBRSxxQkFBcUIsRUFBQztRQUNsQyxPQUFPO1FBQ1AsS0FBSyxFQUFFLEVBQUMsS0FBSyxFQUFFLGdCQUFnQixFQUFFLElBQUksRUFBRSxTQUFTLEVBQUM7S0FDbEQsQ0FBQyxDQUFDO0lBRUgsU0FBUyxDQUFDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO0lBQ3JDLFNBQVMsQ0FBQyxJQUFJLENBQUMsc0JBQXNCLENBQUMsQ0FBQztJQUN2QyxTQUFTLENBQUMsSUFBSSxDQUFDLHFCQUFxQixDQUFDLENBQUM7SUFFdEMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFFdEQsT0FBTyxNQUFNLENBQUM7QUFDaEIsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQWlCO0lBQ2hELFVBQVUsRUFBRSxjQUFjO0lBQzFCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxjQUF1QztDQUNwRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge2JhY2tlbmRfdXRpbCwgQmF0Y2hUb1NwYWNlTkQsIEJhdGNoVG9TcGFjZU5EQXR0cnMsIEJhdGNoVG9TcGFjZU5ESW5wdXRzLCBLZXJuZWxDb25maWcsIEtlcm5lbEZ1bmMsIFRlbnNvckluZm8sIHV0aWx9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuXG5pbXBvcnQge3Jlc2hhcGV9IGZyb20gJy4vUmVzaGFwZSc7XG5pbXBvcnQge3NsaWNlfSBmcm9tICcuL1NsaWNlJztcbmltcG9ydCB7dHJhbnNwb3NlfSBmcm9tICcuL1RyYW5zcG9zZSc7XG5cbmV4cG9ydCBjb25zdCBiYXRjaFRvU3BhY2VORCA9IChhcmdzOiB7XG4gIGlucHV0czogQmF0Y2hUb1NwYWNlTkRJbnB1dHMsXG4gIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmQsXG4gIGF0dHJzOiBCYXRjaFRvU3BhY2VOREF0dHJzXG59KTogVGVuc29ySW5mbyA9PiB7XG4gIGNvbnN0IHtpbnB1dHMsIGJhY2tlbmQsIGF0dHJzfSA9IGFyZ3M7XG4gIGNvbnN0IHt4fSA9IGlucHV0cztcbiAgY29uc3Qge2Jsb2NrU2hhcGUsIGNyb3BzfSA9IGF0dHJzO1xuXG4gIHV0aWwuYXNzZXJ0KFxuICAgICAgeC5zaGFwZS5sZW5ndGggPD0gNCxcbiAgICAgICgpID0+ICdiYXRjaFRvU3BhY2VORCBmb3IgcmFuayA+IDQgd2l0aCBhIFdlYkdQVSBiYWNrZW5kIG5vdCAnICtcbiAgICAgICAgICAnaW1wbGVtZW50ZWQgeWV0Jyk7XG4gIGNvbnN0IHByb2QgPSBibG9ja1NoYXBlLnJlZHVjZSgoYSwgYikgPT4gYSAqIGIpO1xuXG4gIGNvbnN0IHJlc2hhcGVkID0gYmFja2VuZF91dGlsLmdldFJlc2hhcGVkKHguc2hhcGUsIGJsb2NrU2hhcGUsIHByb2QpO1xuICBjb25zdCBwZXJtdXRlZCA9IGJhY2tlbmRfdXRpbC5nZXRQZXJtdXRlZChyZXNoYXBlZC5sZW5ndGgsIGJsb2NrU2hhcGUubGVuZ3RoKTtcbiAgY29uc3QgcmVzaGFwZWRQZXJtdXRlZCA9XG4gICAgICBiYWNrZW5kX3V0aWwuZ2V0UmVzaGFwZWRQZXJtdXRlZCh4LnNoYXBlLCBibG9ja1NoYXBlLCBwcm9kKTtcbiAgY29uc3Qgc2xpY2VCZWdpbkNvb3JkcyA9XG4gICAgICBiYWNrZW5kX3V0aWwuZ2V0U2xpY2VCZWdpbkNvb3Jkcyhjcm9wcywgYmxvY2tTaGFwZS5sZW5ndGgpO1xuICBjb25zdCBzbGljZVNpemUgPVxuICAgICAgYmFja2VuZF91dGlsLmdldFNsaWNlU2l6ZShyZXNoYXBlZFBlcm11dGVkLCBjcm9wcywgYmxvY2tTaGFwZS5sZW5ndGgpO1xuXG4gIGNvbnN0IHRvRGlzcG9zZSA9IFtdO1xuXG4gIGNvbnN0IHJlc2hhcGVkSW50ZXJtZWRpYXRlID1cbiAgICAgIHJlc2hhcGUoe2lucHV0czoge3h9LCBiYWNrZW5kLCBhdHRyczoge3NoYXBlOiByZXNoYXBlZH19KTtcbiAgY29uc3QgdHJhbnNwb3NlZEludGVybWVkaWF0ZSA9IHRyYW5zcG9zZShcbiAgICAgIHtpbnB1dHM6IHt4OiByZXNoYXBlZEludGVybWVkaWF0ZX0sIGJhY2tlbmQsIGF0dHJzOiB7cGVybTogcGVybXV0ZWR9fSk7XG4gIGNvbnN0IHJlc2hhcGVkSW50ZXJtZWRpYXRlMiA9IHJlc2hhcGUoe1xuICAgIGlucHV0czoge3g6IHRyYW5zcG9zZWRJbnRlcm1lZGlhdGV9LFxuICAgIGJhY2tlbmQsXG4gICAgYXR0cnM6IHtzaGFwZTogcmVzaGFwZWRQZXJtdXRlZH1cbiAgfSk7XG4gIGNvbnN0IHNsaWNlZCA9IHNsaWNlKHtcbiAgICBpbnB1dHM6IHt4OiByZXNoYXBlZEludGVybWVkaWF0ZTJ9LFxuICAgIGJhY2tlbmQsXG4gICAgYXR0cnM6IHtiZWdpbjogc2xpY2VCZWdpbkNvb3Jkcywgc2l6ZTogc2xpY2VTaXplfVxuICB9KTtcblxuICB0b0Rpc3Bvc2UucHVzaChyZXNoYXBlZEludGVybWVkaWF0ZSk7XG4gIHRvRGlzcG9zZS5wdXNoKHRyYW5zcG9zZWRJbnRlcm1lZGlhdGUpO1xuICB0b0Rpc3Bvc2UucHVzaChyZXNoYXBlZEludGVybWVkaWF0ZTIpO1xuXG4gIHRvRGlzcG9zZS5mb3JFYWNoKHQgPT4gYmFja2VuZC5kaXNwb3NlRGF0YSh0LmRhdGFJZCkpO1xuXG4gIHJldHVybiBzbGljZWQ7XG59O1xuXG5leHBvcnQgY29uc3QgYmF0Y2hUb1NwYWNlTkRDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogQmF0Y2hUb1NwYWNlTkQsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogYmF0Y2hUb1NwYWNlTkQgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { atomicAddSnippet } from './shader_util';\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nconst writeSnippet = `\n  fn bincount_write(index: i32, value: f32) {\n    ${atomicAddSnippet('&result[index]', 'value', 'float32')}\n  }\n`;\nconst binaryWriteSnippet = `\n  fn bincount_write(index: i32, value: f32) {\n    atomicStore(&result[index], bitcast<i32>(value));\n  }\n`;\nexport class BincountProgram {\n    constructor(shape, hasWeights, binaryOutput = false) {\n        this.outputShape = [];\n        this.variableNames = ['x'];\n        this.uniforms = 'binCountSize : i32,';\n        this.workgroupSize = [64, 1, 1];\n        this.atomic = true;\n        this.hasWeights = true;\n        this.binaryOutput = false;\n        this.outputShape = shape;\n        this.rank = shape.length;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.binaryOutput = binaryOutput;\n        if (binaryOutput) {\n            this.atomic = false;\n        }\n        this.hasWeights = hasWeights;\n        if (this.hasWeights) {\n            this.variableNames.push('w');\n        }\n        this.shaderKey =\n            `bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`;\n    }\n    getUserCode() {\n        const userCode = `\n    ${this.binaryOutput ? binaryWriteSnippet : writeSnippet}\n  ${main('index')} {\n    ${this.rank === 1 ?\n            `if (index < uniforms.xShape) {\n      let indexVal = i32(getX(index));\n      if (indexVal < uniforms.binCountSize) {\n        let value = ${this.binaryOutput ? 1. :\n                (this.hasWeights ? 'getW(index)' : '1.')};\n        bincount_write(indexVal, value);\n      }\n    }` :\n            `let coord = getCoordsFromIndex(index);\n    if (coordsInBounds2D(coord, uniforms.xShape)) {\n      let indexVal = i32(getX(coord[0], coord[1]));\n      if (indexVal < uniforms.binCountSize) {\n        let value = ${this.binaryOutput ?\n                1. :\n                (this.hasWeights ? 'getW(coord[0], coord[1])' : '1.')};\n        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);\n      }\n    }`}\n  }\n  `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmluY291bnRfd2ViZ3B1LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMvYmluY291bnRfd2ViZ3B1LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMvQyxPQUFPLEVBQUMsbUJBQW1CLElBQUksSUFBSSxFQUFnQixNQUFNLGtCQUFrQixDQUFDO0FBQzVFLE9BQU8sRUFBQyxlQUFlLEVBQUUsa0JBQWtCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFbEUsTUFBTSxZQUFZLEdBQUc7O01BRWYsZ0JBQWdCLENBQUMsZ0JBQWdCLEVBQUUsT0FBTyxFQUFFLFNBQVMsQ0FBQzs7Q0FFM0QsQ0FBQztBQUVGLE1BQU0sa0JBQWtCLEdBQUc7Ozs7Q0FJMUIsQ0FBQztBQUVGLE1BQU0sT0FBTyxlQUFlO0lBYTFCLFlBQ0ksS0FBZ0MsRUFBRSxVQUFtQixFQUNyRCxZQUFZLEdBQUcsS0FBSztRQWR4QixnQkFBVyxHQUFhLEVBQUUsQ0FBQztRQUkzQixrQkFBYSxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdEIsYUFBUSxHQUFHLHFCQUFxQixDQUFDO1FBQ2pDLGtCQUFhLEdBQTZCLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNyRCxXQUFNLEdBQUcsSUFBSSxDQUFDO1FBQ2QsZUFBVSxHQUFHLElBQUksQ0FBQztRQUNsQixpQkFBWSxHQUFHLEtBQUssQ0FBQztRQU1uQixJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztRQUN6QixJQUFJLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUM7UUFDekIsSUFBSSxDQUFDLGNBQWMsR0FBRyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxlQUFlLENBQzNCLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFFL0QsSUFBSSxDQUFDLFlBQVksR0FBRyxZQUFZLENBQUM7UUFDakMsSUFBSSxZQUFZLEVBQUU7WUFDaEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7U0FDckI7UUFDRCxJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztRQUM3QixJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDbkIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDOUI7UUFDRCxJQUFJLENBQUMsU0FBUztZQUNWLFlBQVksSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsWUFBWSxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN0RSxDQUFDO0lBRUQsV0FBVztRQUNULE1BQU0sUUFBUSxHQUFHO01BQ2YsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLFlBQVk7SUFDdkQsSUFBSSxDQUFDLE9BQU8sQ0FBQztNQUVULElBQUksQ0FBQyxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUM7WUFDYjs7O3NCQUlJLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO2dCQUNKLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7OztNQUd0RSxDQUFDLENBQUM7WUFDSTs7OztzQkFLSSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7Z0JBQ2YsRUFBRSxDQUFDLENBQUM7Z0JBQ0osQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDOzs7TUFHbkU7O0dBRUgsQ0FBQztRQUNBLE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIyIEdvb2dsZSBMTEMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHthdG9taWNBZGRTbmlwcGV0fSBmcm9tICcuL3NoYWRlcl91dGlsJztcbmltcG9ydCB7Z2V0TWFpbkhlYWRlclN0cmluZyBhcyBtYWluLCBXZWJHUFVQcm9ncmFtfSBmcm9tICcuL3dlYmdwdV9wcm9ncmFtJztcbmltcG9ydCB7Y29tcHV0ZURpc3BhdGNoLCBmbGF0RGlzcGF0Y2hMYXlvdXR9IGZyb20gJy4vd2ViZ3B1X3V0aWwnO1xuXG5jb25zdCB3cml0ZVNuaXBwZXQgPSBgXG4gIGZuIGJpbmNvdW50X3dyaXRlKGluZGV4OiBpMzIsIHZhbHVlOiBmMzIpIHtcbiAgICAke2F0b21pY0FkZFNuaXBwZXQoJyZyZXN1bHRbaW5kZXhdJywgJ3ZhbHVlJywgJ2Zsb2F0MzInKX1cbiAgfVxuYDtcblxuY29uc3QgYmluYXJ5V3JpdGVTbmlwcGV0ID0gYFxuICBmbiBiaW5jb3VudF93cml0ZShpbmRleDogaTMyLCB2YWx1ZTogZjMyKSB7XG4gICAgYXRvbWljU3RvcmUoJnJlc3VsdFtpbmRleF0sIGJpdGNhc3Q8aTMyPih2YWx1ZSkpO1xuICB9XG5gO1xuXG5leHBvcnQgY2xhc3MgQmluY291bnRQcm9ncmFtIGltcGxlbWVudHMgV2ViR1BVUHJvZ3JhbSB7XG4gIG91dHB1dFNoYXBlOiBudW1iZXJbXSA9IFtdO1xuICBzaGFkZXJLZXk6IHN0cmluZztcbiAgZGlzcGF0Y2hMYXlvdXQ6IHt4OiBudW1iZXJbXX07XG4gIGRpc3BhdGNoOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl07XG4gIHZhcmlhYmxlTmFtZXMgPSBbJ3gnXTtcbiAgdW5pZm9ybXMgPSAnYmluQ291bnRTaXplIDogaTMyLCc7XG4gIHdvcmtncm91cFNpemU6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXSA9IFs2NCwgMSwgMV07XG4gIGF0b21pYyA9IHRydWU7XG4gIGhhc1dlaWdodHMgPSB0cnVlO1xuICBiaW5hcnlPdXRwdXQgPSBmYWxzZTtcbiAgcmFuazogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgICAgc2hhcGU6IFtudW1iZXJdfFtudW1iZXIsIG51bWJlcl0sIGhhc1dlaWdodHM6IGJvb2xlYW4sXG4gICAgICBiaW5hcnlPdXRwdXQgPSBmYWxzZSkge1xuICAgIHRoaXMub3V0cHV0U2hhcGUgPSBzaGFwZTtcbiAgICB0aGlzLnJhbmsgPSBzaGFwZS5sZW5ndGg7XG4gICAgdGhpcy5kaXNwYXRjaExheW91dCA9IGZsYXREaXNwYXRjaExheW91dCh0aGlzLm91dHB1dFNoYXBlKTtcbiAgICB0aGlzLmRpc3BhdGNoID0gY29tcHV0ZURpc3BhdGNoKFxuICAgICAgICB0aGlzLmRpc3BhdGNoTGF5b3V0LCB0aGlzLm91dHB1dFNoYXBlLCB0aGlzLndvcmtncm91cFNpemUpO1xuXG4gICAgdGhpcy5iaW5hcnlPdXRwdXQgPSBiaW5hcnlPdXRwdXQ7XG4gICAgaWYgKGJpbmFyeU91dHB1dCkge1xuICAgICAgdGhpcy5hdG9taWMgPSBmYWxzZTtcbiAgICB9XG4gICAgdGhpcy5oYXNXZWlnaHRzID0gaGFzV2VpZ2h0cztcbiAgICBpZiAodGhpcy5oYXNXZWlnaHRzKSB7XG4gICAgICB0aGlzLnZhcmlhYmxlTmFtZXMucHVzaCgndycpO1xuICAgIH1cbiAgICB0aGlzLnNoYWRlcktleSA9XG4gICAgICAgIGBiaW5jb3VudF8ke3RoaXMuaGFzV2VpZ2h0c31fJHt0aGlzLmJpbmFyeU91dHB1dH1fJHt0aGlzLnJhbmt9YDtcbiAgfVxuXG4gIGdldFVzZXJDb2RlKCk6IHN0cmluZyB7XG4gICAgY29uc3QgdXNlckNvZGUgPSBgXG4gICAgJHt0aGlzLmJpbmFyeU91dHB1dCA/IGJpbmFyeVdyaXRlU25pcHBldCA6IHdyaXRlU25pcHBldH1cbiAgJHttYWluKCdpbmRleCcpfSB7XG4gICAgJHtcbiAgICAgICAgdGhpcy5yYW5rID09PSAxID9cbiAgICAgICAgICAgIGBpZiAoaW5kZXggPCB1bmlmb3Jtcy54U2hhcGUpIHtcbiAgICAgIGxldCBpbmRleFZhbCA9IGkzMihnZXRYKGluZGV4KSk7XG4gICAgICBpZiAoaW5kZXhWYWwgPCB1bmlmb3Jtcy5iaW5Db3VudFNpemUpIHtcbiAgICAgICAgbGV0IHZhbHVlID0gJHtcbiAgICAgICAgICAgICAgICB0aGlzLmJpbmFyeU91dHB1dCA/IDEuIDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICh0aGlzLmhhc1dlaWdodHMgPyAnZ2V0VyhpbmRleCknIDogJzEuJyl9O1xuICAgICAgICBiaW5jb3VudF93cml0ZShpbmRleFZhbCwgdmFsdWUpO1xuICAgICAgfVxuICAgIH1gIDpcbiAgICAgICAgICAgIGBsZXQgY29vcmQgPSBnZXRDb29yZHNGcm9tSW5kZXgoaW5kZXgpO1xuICAgIGlmIChjb29yZHNJbkJvdW5kczJEKGNvb3JkLCB1bmlmb3Jtcy54U2hhcGUpKSB7XG4gICAgICBsZXQgaW5kZXhWYWwgPSBpMzIoZ2V0WChjb29yZFswXSwgY29vcmRbMV0pKTtcbiAgICAgIGlmIChpbmRleFZhbCA8IHVuaWZvcm1zLmJpbkNvdW50U2l6ZSkge1xuICAgICAgICBsZXQgdmFsdWUgPSAke1xuICAgICAgICAgICAgICAgIHRoaXMuYmluYXJ5T3V0cHV0ID9cbiAgICAgICAgICAgICAgICAgICAgMS4gOlxuICAgICAgICAgICAgICAgICAgICAodGhpcy5oYXNXZWlnaHRzID8gJ2dldFcoY29vcmRbMF0sIGNvb3JkWzFdKScgOiAnMS4nKX07XG4gICAgICAgIGJpbmNvdW50X3dyaXRlKGNvb3JkLnggKiB1bmlmb3Jtcy5iaW5Db3VudFNpemUgKyBpbmRleFZhbCwgdmFsdWUpO1xuICAgICAgfVxuICAgIH1gfVxuICB9XG4gIGA7XG4gICAgcmV0dXJuIHVzZXJDb2RlO1xuICB9XG59XG4iXX0=","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Bincount, util } from '@tensorflow/tfjs-core';\nimport { BincountProgram } from '../bincount_webgpu';\nimport { fill } from './Fill';\nexport function bincount(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, weights } = inputs;\n    const { size } = attrs;\n    const xSize = util.sizeFromShape(x.shape);\n    const weightsSize = util.sizeFromShape(weights.shape);\n    const hasWeights = weightsSize > 0;\n    const outputSize = [size];\n    const dtype = weights.dtype;\n    const output = fill({ backend, attrs: { shape: outputSize, value: 0, dtype } });\n    const program = new BincountProgram([xSize], hasWeights);\n    const uniformData = [{ type: 'int32', data: [size] }];\n    const bincountInputs = hasWeights ? [x, weights] : [x];\n    const res = backend.runWebGPUProgram(program, bincountInputs, dtype, uniformData, output);\n    return res;\n}\nexport const bincountConfig = {\n    kernelName: Bincount,\n    backendName: 'webgpu',\n    kernelFunc: bincount\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQmluY291bnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL0JpbmNvdW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxRQUFRLEVBQXVFLElBQUksRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRzFILE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUVuRCxPQUFPLEVBQUMsSUFBSSxFQUFDLE1BQU0sUUFBUSxDQUFDO0FBRTVCLE1BQU0sVUFBVSxRQUFRLENBQ3BCLElBQzBFO0lBRTVFLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QyxNQUFNLEVBQUMsQ0FBQyxFQUFFLE9BQU8sRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUM1QixNQUFNLEVBQUMsSUFBSSxFQUFDLEdBQUcsS0FBSyxDQUFDO0lBRXJCLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzFDLE1BQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3RELE1BQU0sVUFBVSxHQUFHLFdBQVcsR0FBRyxDQUFDLENBQUM7SUFDbkMsTUFBTSxVQUFVLEdBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNwQyxNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFDO0lBRTVCLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxFQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUUsRUFBQyxLQUFLLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFDLEVBQUMsQ0FBQyxDQUFDO0lBQzVFLE1BQU0sT0FBTyxHQUFHLElBQUksZUFBZSxDQUFDLENBQUMsS0FBSyxDQUFDLEVBQUUsVUFBVSxDQUFDLENBQUM7SUFDekQsTUFBTSxXQUFXLEdBQUcsQ0FBQyxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUMsQ0FBQyxDQUFDO0lBQ3BELE1BQU0sY0FBYyxHQUFpQixVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3JFLE1BQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FDaEMsT0FBTyxFQUFFLGNBQWMsRUFBRSxLQUFLLEVBQUUsV0FBVyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBRXpELE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBaUI7SUFDMUMsVUFBVSxFQUFFLFFBQVE7SUFDcEIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLFFBQWlDO0NBQzlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7QmluY291bnQsIEJpbmNvdW50QXR0cnMsIEJpbmNvdW50SW5wdXRzLCBLZXJuZWxDb25maWcsIEtlcm5lbEZ1bmMsIFRlbnNvckluZm8sIHV0aWx9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuaW1wb3J0IHtCaW5jb3VudFByb2dyYW19IGZyb20gJy4uL2JpbmNvdW50X3dlYmdwdSc7XG5cbmltcG9ydCB7ZmlsbH0gZnJvbSAnLi9GaWxsJztcblxuZXhwb3J0IGZ1bmN0aW9uIGJpbmNvdW50KFxuICAgIGFyZ3M6XG4gICAgICAgIHtpbnB1dHM6IEJpbmNvdW50SW5wdXRzLCBiYWNrZW5kOiBXZWJHUFVCYWNrZW5kLCBhdHRyczogQmluY291bnRBdHRyc30pOlxuICAgIFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7eCwgd2VpZ2h0c30gPSBpbnB1dHM7XG4gIGNvbnN0IHtzaXplfSA9IGF0dHJzO1xuXG4gIGNvbnN0IHhTaXplID0gdXRpbC5zaXplRnJvbVNoYXBlKHguc2hhcGUpO1xuICBjb25zdCB3ZWlnaHRzU2l6ZSA9IHV0aWwuc2l6ZUZyb21TaGFwZSh3ZWlnaHRzLnNoYXBlKTtcbiAgY29uc3QgaGFzV2VpZ2h0cyA9IHdlaWdodHNTaXplID4gMDtcbiAgY29uc3Qgb3V0cHV0U2l6ZTogW251bWJlcl0gPSBbc2l6ZV07XG4gIGNvbnN0IGR0eXBlID0gd2VpZ2h0cy5kdHlwZTtcblxuICBjb25zdCBvdXRwdXQgPSBmaWxsKHtiYWNrZW5kLCBhdHRyczoge3NoYXBlOiBvdXRwdXRTaXplLCB2YWx1ZTogMCwgZHR5cGV9fSk7XG4gIGNvbnN0IHByb2dyYW0gPSBuZXcgQmluY291bnRQcm9ncmFtKFt4U2l6ZV0sIGhhc1dlaWdodHMpO1xuICBjb25zdCB1bmlmb3JtRGF0YSA9IFt7dHlwZTogJ2ludDMyJywgZGF0YTogW3NpemVdfV07XG4gIGNvbnN0IGJpbmNvdW50SW5wdXRzOiBUZW5zb3JJbmZvW10gPSBoYXNXZWlnaHRzID8gW3gsIHdlaWdodHNdIDogW3hdO1xuICBjb25zdCByZXMgPSBiYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0oXG4gICAgICBwcm9ncmFtLCBiaW5jb3VudElucHV0cywgZHR5cGUsIHVuaWZvcm1EYXRhLCBvdXRwdXQpO1xuXG4gIHJldHVybiByZXM7XG59XG5cbmV4cG9ydCBjb25zdCBiaW5jb3VudENvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBCaW5jb3VudCxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBiaW5jb3VudCBhcyB1bmtub3duIGFzIEtlcm5lbEZ1bmNcbn07XG4iXX0=","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class BroadcastArgsProgram {\n    constructor(shape) {\n        this.outputShape = [];\n        this.variableNames = ['s0', 's1'];\n        this.uniforms = 's0Size : i32, s1Size : i32, ';\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = [shape];\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.shaderKey = 'broadcastArgs';\n    }\n    getUserCode() {\n        const userCode = `\n  ${main('index')} {\n    if (index < uniforms.size) {\n      var s0 = 1.0;\n      var s1 = 1.0;\n      let indexS0 = index - uniforms.size + uniforms.s0Size;\n      let indexS1 = index - uniforms.size + uniforms.s1Size;\n      if (indexS0 >= 0) {\n        s0 = getS0(indexS0);\n      }\n      if (indexS1 >= 0) {\n        s1 = getS1(indexS1);\n      }\n\n      if (s0 == 1.0) {\n        setOutputAtIndex(index, s1);\n      } else if (s1 == 1.0) {\n        setOutputAtIndex(index, s0);\n      } else if (s0 != s1) {\n        setOutputAtIndex(index, uniforms.NAN);\n      } else {\n        setOutputAtIndex(index, s0);\n      }\n    }\n  }\n  `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJvYWRjYXN0X2FyZ3Nfd2ViZ3B1LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMvYnJvYWRjYXN0X2FyZ3Nfd2ViZ3B1LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxtQkFBbUIsSUFBSSxJQUFJLEVBQWdCLE1BQU0sa0JBQWtCLENBQUM7QUFDNUUsT0FBTyxFQUFDLGVBQWUsRUFBRSxrQkFBa0IsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUVsRSxNQUFNLE9BQU8sb0JBQW9CO0lBVS9CLFlBQVksS0FBYTtRQVR6QixnQkFBVyxHQUFhLEVBQUUsQ0FBQztRQUkzQixrQkFBYSxHQUFHLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQzdCLGFBQVEsR0FBRyw4QkFBOEIsQ0FBQztRQUMxQyxrQkFBYSxHQUE2QixDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDckQsU0FBSSxHQUFHLElBQUksQ0FBQztRQUdWLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMzQixJQUFJLENBQUMsY0FBYyxHQUFHLGtCQUFrQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUMzRCxJQUFJLENBQUMsUUFBUSxHQUFHLGVBQWUsQ0FDM0IsSUFBSSxDQUFDLGNBQWMsRUFBRSxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUUvRCxJQUFJLENBQUMsU0FBUyxHQUFHLGVBQWUsQ0FBQztJQUNuQyxDQUFDO0lBRUQsV0FBVztRQUNULE1BQU0sUUFBUSxHQUFHO0lBQ2pCLElBQUksQ0FBQyxPQUFPLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQXdCZCxDQUFDO1FBQ0EsT0FBTyxRQUFRLENBQUM7SUFDbEIsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjMgR29vZ2xlIExMQy5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge2dldE1haW5IZWFkZXJTdHJpbmcgYXMgbWFpbiwgV2ViR1BVUHJvZ3JhbX0gZnJvbSAnLi93ZWJncHVfcHJvZ3JhbSc7XG5pbXBvcnQge2NvbXB1dGVEaXNwYXRjaCwgZmxhdERpc3BhdGNoTGF5b3V0fSBmcm9tICcuL3dlYmdwdV91dGlsJztcblxuZXhwb3J0IGNsYXNzIEJyb2FkY2FzdEFyZ3NQcm9ncmFtIGltcGxlbWVudHMgV2ViR1BVUHJvZ3JhbSB7XG4gIG91dHB1dFNoYXBlOiBudW1iZXJbXSA9IFtdO1xuICBzaGFkZXJLZXk6IHN0cmluZztcbiAgZGlzcGF0Y2hMYXlvdXQ6IHt4OiBudW1iZXJbXX07XG4gIGRpc3BhdGNoOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl07XG4gIHZhcmlhYmxlTmFtZXMgPSBbJ3MwJywgJ3MxJ107XG4gIHVuaWZvcm1zID0gJ3MwU2l6ZSA6IGkzMiwgczFTaXplIDogaTMyLCAnO1xuICB3b3JrZ3JvdXBTaXplOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl0gPSBbNjQsIDEsIDFdO1xuICBzaXplID0gdHJ1ZTtcblxuICBjb25zdHJ1Y3RvcihzaGFwZTogbnVtYmVyKSB7XG4gICAgdGhpcy5vdXRwdXRTaGFwZSA9IFtzaGFwZV07XG4gICAgdGhpcy5kaXNwYXRjaExheW91dCA9IGZsYXREaXNwYXRjaExheW91dCh0aGlzLm91dHB1dFNoYXBlKTtcbiAgICB0aGlzLmRpc3BhdGNoID0gY29tcHV0ZURpc3BhdGNoKFxuICAgICAgICB0aGlzLmRpc3BhdGNoTGF5b3V0LCB0aGlzLm91dHB1dFNoYXBlLCB0aGlzLndvcmtncm91cFNpemUpO1xuXG4gICAgdGhpcy5zaGFkZXJLZXkgPSAnYnJvYWRjYXN0QXJncyc7XG4gIH1cblxuICBnZXRVc2VyQ29kZSgpOiBzdHJpbmcge1xuICAgIGNvbnN0IHVzZXJDb2RlID0gYFxuICAke21haW4oJ2luZGV4Jyl9IHtcbiAgICBpZiAoaW5kZXggPCB1bmlmb3Jtcy5zaXplKSB7XG4gICAgICB2YXIgczAgPSAxLjA7XG4gICAgICB2YXIgczEgPSAxLjA7XG4gICAgICBsZXQgaW5kZXhTMCA9IGluZGV4IC0gdW5pZm9ybXMuc2l6ZSArIHVuaWZvcm1zLnMwU2l6ZTtcbiAgICAgIGxldCBpbmRleFMxID0gaW5kZXggLSB1bmlmb3Jtcy5zaXplICsgdW5pZm9ybXMuczFTaXplO1xuICAgICAgaWYgKGluZGV4UzAgPj0gMCkge1xuICAgICAgICBzMCA9IGdldFMwKGluZGV4UzApO1xuICAgICAgfVxuICAgICAgaWYgKGluZGV4UzEgPj0gMCkge1xuICAgICAgICBzMSA9IGdldFMxKGluZGV4UzEpO1xuICAgICAgfVxuXG4gICAgICBpZiAoczAgPT0gMS4wKSB7XG4gICAgICAgIHNldE91dHB1dEF0SW5kZXgoaW5kZXgsIHMxKTtcbiAgICAgIH0gZWxzZSBpZiAoczEgPT0gMS4wKSB7XG4gICAgICAgIHNldE91dHB1dEF0SW5kZXgoaW5kZXgsIHMwKTtcbiAgICAgIH0gZWxzZSBpZiAoczAgIT0gczEpIHtcbiAgICAgICAgc2V0T3V0cHV0QXRJbmRleChpbmRleCwgdW5pZm9ybXMuTkFOKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNldE91dHB1dEF0SW5kZXgoaW5kZXgsIHMwKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgYDtcbiAgICByZXR1cm4gdXNlckNvZGU7XG4gIH1cbn1cbiJdfQ==","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, BroadcastArgs, util } from '@tensorflow/tfjs-core';\nimport { BroadcastArgsProgram } from '../broadcast_args_webgpu';\nexport function broadcastArgs(args) {\n    const { inputs, backend } = args;\n    const { s0, s1 } = inputs;\n    if (backend.shouldExecuteOnCPU([s0, s1])) {\n        const s0TensorInfo = backend.tensorMap.get(s0.dataId);\n        const s1TensorInfo = backend.tensorMap.get(s1.dataId);\n        const s0Vals = s0TensorInfo.values;\n        const s1Vals = s1TensorInfo.values;\n        const broadcastShape = backend_util.assertAndGetBroadcastShape(Array.from(s0Vals), Array.from(s1Vals));\n        return backend.makeTensorInfo([broadcastShape.length], 'int32', Int32Array.from(broadcastShape));\n    }\n    const s0Size = util.sizeFromShape(s0.shape);\n    const s1Size = util.sizeFromShape(s1.shape);\n    const outputSize = Math.max(s0Size, s1Size);\n    const program = new BroadcastArgsProgram(outputSize);\n    const uniformData = [{ type: 'int32', data: [s0Size] }, { type: 'int32', data: [s1Size] }];\n    return backend.runWebGPUProgram(program, [s0, s1], 'int32', uniformData);\n}\nexport const broadcastArgsConfig = {\n    kernelName: BroadcastArgs,\n    backendName: 'webgpu',\n    kernelFunc: broadcastArgs\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQnJvYWRjYXN0QXJncy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvQnJvYWRjYXN0QXJncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsWUFBWSxFQUFFLGFBQWEsRUFBeUUsSUFBSSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFHL0ksT0FBTyxFQUFDLG9CQUFvQixFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFFOUQsTUFBTSxVQUFVLGFBQWEsQ0FBQyxJQUc3QjtJQUNDLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFDLEdBQUcsSUFBSSxDQUFDO0lBQy9CLE1BQU0sRUFBQyxFQUFFLEVBQUUsRUFBRSxFQUFDLEdBQUcsTUFBTSxDQUFDO0lBRXhCLElBQUksT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUU7UUFDeEMsTUFBTSxZQUFZLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3RELE1BQU0sWUFBWSxHQUFHLE9BQU8sQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN0RCxNQUFNLE1BQU0sR0FBRyxZQUFZLENBQUMsTUFBb0IsQ0FBQztRQUNqRCxNQUFNLE1BQU0sR0FBRyxZQUFZLENBQUMsTUFBb0IsQ0FBQztRQUNqRCxNQUFNLGNBQWMsR0FBRyxZQUFZLENBQUMsMEJBQTBCLENBQzFELEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBQzVDLE9BQU8sT0FBTyxDQUFDLGNBQWMsQ0FDekIsQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLEVBQUUsT0FBTyxFQUFFLFVBQVUsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztLQUN4RTtJQUVELE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzVDLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzVDLE1BQU0sVUFBVSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBRTVDLE1BQU0sT0FBTyxHQUFHLElBQUksb0JBQW9CLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDckQsTUFBTSxXQUFXLEdBQ2IsQ0FBQyxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsTUFBTSxDQUFDLEVBQUMsRUFBRSxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsTUFBTSxDQUFDLEVBQUMsQ0FBQyxDQUFDO0lBQ3ZFLE9BQU8sT0FBTyxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsV0FBVyxDQUFDLENBQUM7QUFDM0UsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFpQjtJQUMvQyxVQUFVLEVBQUUsYUFBYTtJQUN6QixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsYUFBc0M7Q0FDbkQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIzIEdvb2dsZSBMTEMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtiYWNrZW5kX3V0aWwsIEJyb2FkY2FzdEFyZ3MsIEJyb2FkY2FzdEFyZ3NJbnB1dHMsIEtlcm5lbENvbmZpZywgS2VybmVsRnVuYywgVGVuc29ySW5mbywgVHlwZWRBcnJheSwgdXRpbH0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge0Jyb2FkY2FzdEFyZ3NQcm9ncmFtfSBmcm9tICcuLi9icm9hZGNhc3RfYXJnc193ZWJncHUnO1xuXG5leHBvcnQgZnVuY3Rpb24gYnJvYWRjYXN0QXJncyhhcmdzOiB7XG4gIGlucHV0czogQnJvYWRjYXN0QXJnc0lucHV0cyxcbiAgYmFja2VuZDogV2ViR1BVQmFja2VuZCxcbn0pOiBUZW5zb3JJbmZvIHtcbiAgY29uc3Qge2lucHV0cywgYmFja2VuZH0gPSBhcmdzO1xuICBjb25zdCB7czAsIHMxfSA9IGlucHV0cztcblxuICBpZiAoYmFja2VuZC5zaG91bGRFeGVjdXRlT25DUFUoW3MwLCBzMV0pKSB7XG4gICAgY29uc3QgczBUZW5zb3JJbmZvID0gYmFja2VuZC50ZW5zb3JNYXAuZ2V0KHMwLmRhdGFJZCk7XG4gICAgY29uc3QgczFUZW5zb3JJbmZvID0gYmFja2VuZC50ZW5zb3JNYXAuZ2V0KHMxLmRhdGFJZCk7XG4gICAgY29uc3QgczBWYWxzID0gczBUZW5zb3JJbmZvLnZhbHVlcyBhcyBUeXBlZEFycmF5O1xuICAgIGNvbnN0IHMxVmFscyA9IHMxVGVuc29ySW5mby52YWx1ZXMgYXMgVHlwZWRBcnJheTtcbiAgICBjb25zdCBicm9hZGNhc3RTaGFwZSA9IGJhY2tlbmRfdXRpbC5hc3NlcnRBbmRHZXRCcm9hZGNhc3RTaGFwZShcbiAgICAgICAgQXJyYXkuZnJvbShzMFZhbHMpLCBBcnJheS5mcm9tKHMxVmFscykpO1xuICAgIHJldHVybiBiYWNrZW5kLm1ha2VUZW5zb3JJbmZvKFxuICAgICAgICBbYnJvYWRjYXN0U2hhcGUubGVuZ3RoXSwgJ2ludDMyJywgSW50MzJBcnJheS5mcm9tKGJyb2FkY2FzdFNoYXBlKSk7XG4gIH1cblxuICBjb25zdCBzMFNpemUgPSB1dGlsLnNpemVGcm9tU2hhcGUoczAuc2hhcGUpO1xuICBjb25zdCBzMVNpemUgPSB1dGlsLnNpemVGcm9tU2hhcGUoczEuc2hhcGUpO1xuICBjb25zdCBvdXRwdXRTaXplID0gTWF0aC5tYXgoczBTaXplLCBzMVNpemUpO1xuXG4gIGNvbnN0IHByb2dyYW0gPSBuZXcgQnJvYWRjYXN0QXJnc1Byb2dyYW0ob3V0cHV0U2l6ZSk7XG4gIGNvbnN0IHVuaWZvcm1EYXRhID1cbiAgICAgIFt7dHlwZTogJ2ludDMyJywgZGF0YTogW3MwU2l6ZV19LCB7dHlwZTogJ2ludDMyJywgZGF0YTogW3MxU2l6ZV19XTtcbiAgcmV0dXJuIGJhY2tlbmQucnVuV2ViR1BVUHJvZ3JhbShwcm9ncmFtLCBbczAsIHMxXSwgJ2ludDMyJywgdW5pZm9ybURhdGEpO1xufVxuXG5leHBvcnQgY29uc3QgYnJvYWRjYXN0QXJnc0NvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBCcm9hZGNhc3RBcmdzLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IGJyb2FkY2FzdEFyZ3MgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { NotEqual } from '@tensorflow/tfjs-core';\nimport { BinaryOpType } from '../binary_op_util';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { notEqualImplCPU as cpuNotEqual } from '../kernel_utils/shared';\nexport const notEqual = binaryKernelFunc({\n    opType: BinaryOpType.NOT_EQUAL,\n    dtype: 'bool',\n    cpuKernelImpl: cpuNotEqual\n});\nexport const notEqualConfig = {\n    kernelName: NotEqual,\n    backendName: 'webgpu',\n    kernelFunc: notEqual\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTm90RXF1YWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL05vdEVxdWFsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBZSxRQUFRLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUU3RCxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFDL0MsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sb0NBQW9DLENBQUM7QUFDcEUsT0FBTyxFQUFDLGVBQWUsSUFBSSxXQUFXLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUV0RSxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsZ0JBQWdCLENBQUM7SUFDdkMsTUFBTSxFQUFFLFlBQVksQ0FBQyxTQUFTO0lBQzlCLEtBQUssRUFBRSxNQUFNO0lBQ2IsYUFBYSxFQUFFLFdBQVc7Q0FDM0IsQ0FBQyxDQUFDO0FBRUgsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFpQjtJQUMxQyxVQUFVLEVBQUUsUUFBUTtJQUNwQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsUUFBUTtDQUNyQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0tlcm5lbENvbmZpZywgTm90RXF1YWx9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7QmluYXJ5T3BUeXBlfSBmcm9tICcuLi9iaW5hcnlfb3BfdXRpbCc7XG5pbXBvcnQge2JpbmFyeUtlcm5lbEZ1bmN9IGZyb20gJy4uL2tlcm5lbF91dGlscy9rZXJuZWxfZnVuY3NfdXRpbHMnO1xuaW1wb3J0IHtub3RFcXVhbEltcGxDUFUgYXMgY3B1Tm90RXF1YWx9IGZyb20gJy4uL2tlcm5lbF91dGlscy9zaGFyZWQnO1xuXG5leHBvcnQgY29uc3Qgbm90RXF1YWwgPSBiaW5hcnlLZXJuZWxGdW5jKHtcbiAgb3BUeXBlOiBCaW5hcnlPcFR5cGUuTk9UX0VRVUFMLFxuICBkdHlwZTogJ2Jvb2wnLFxuICBjcHVLZXJuZWxJbXBsOiBjcHVOb3RFcXVhbFxufSk7XG5cbmV4cG9ydCBjb25zdCBub3RFcXVhbENvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBOb3RFcXVhbCxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBub3RFcXVhbFxufTtcbiJdfQ==","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Real } from '@tensorflow/tfjs-core';\nimport { identity } from './Identity';\nexport function real(args) {\n    const { inputs, backend } = args;\n    const { input } = inputs;\n    const inputData = backend.tensorMap.get(input.dataId);\n    return identity({ inputs: { x: inputData.complexTensorInfos.real }, backend });\n}\nexport const realConfig = {\n    kernelName: Real,\n    backendName: 'webgpu',\n    kernelFunc: real\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVhbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvUmVhbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQTJCLElBQUksRUFBeUIsTUFBTSx1QkFBdUIsQ0FBQztBQUc3RixPQUFPLEVBQUMsUUFBUSxFQUFDLE1BQU0sWUFBWSxDQUFDO0FBRXBDLE1BQU0sVUFBVSxJQUFJLENBQUMsSUFBa0Q7SUFFckUsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFDL0IsTUFBTSxFQUFDLEtBQUssRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUN2QixNQUFNLFNBQVMsR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFdEQsT0FBTyxRQUFRLENBQUMsRUFBQyxNQUFNLEVBQUUsRUFBQyxDQUFDLEVBQUUsU0FBUyxDQUFDLGtCQUFrQixDQUFDLElBQUksRUFBQyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFDN0UsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBaUI7SUFDdEMsVUFBVSxFQUFFLElBQUk7SUFDaEIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLElBQTZCO0NBQzFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7S2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBSZWFsLCBSZWFsSW5wdXRzLCBUZW5zb3JJbmZvfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcbmltcG9ydCB7aWRlbnRpdHl9IGZyb20gJy4vSWRlbnRpdHknO1xuXG5leHBvcnQgZnVuY3Rpb24gcmVhbChhcmdzOiB7aW5wdXRzOiBSZWFsSW5wdXRzLCBiYWNrZW5kOiBXZWJHUFVCYWNrZW5kfSk6XG4gICAgVGVuc29ySW5mbyB7XG4gIGNvbnN0IHtpbnB1dHMsIGJhY2tlbmR9ID0gYXJncztcbiAgY29uc3Qge2lucHV0fSA9IGlucHV0cztcbiAgY29uc3QgaW5wdXREYXRhID0gYmFja2VuZC50ZW5zb3JNYXAuZ2V0KGlucHV0LmRhdGFJZCk7XG5cbiAgcmV0dXJuIGlkZW50aXR5KHtpbnB1dHM6IHt4OiBpbnB1dERhdGEuY29tcGxleFRlbnNvckluZm9zLnJlYWx9LCBiYWNrZW5kfSk7XG59XG5cbmV4cG9ydCBjb25zdCByZWFsQ29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IFJlYWwsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogcmVhbCBhcyB1bmtub3duIGFzIEtlcm5lbEZ1bmNcbn07XG4iXX0=","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { UnaryOpType } from '../unary_op_util';\nimport { UnaryOpProgram } from '../unary_op_webgpu';\nexport function int(input, backend) {\n    const program = new UnaryOpProgram(input.shape, UnaryOpType.TO_INT);\n    const output = backend.runWebGPUProgram(program, [input], 'int32');\n    return { dataId: output.dataId, shape: output.shape, dtype: output.dtype };\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVsX3V0aWxzL2ludC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFJSCxPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sa0JBQWtCLENBQUM7QUFDN0MsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBRWxELE1BQU0sVUFBVSxHQUFHLENBQUMsS0FBaUIsRUFBRSxPQUFzQjtJQUMzRCxNQUFNLE9BQU8sR0FBRyxJQUFJLGNBQWMsQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNwRSxNQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLENBQUMsS0FBSyxDQUFDLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDbkUsT0FBTyxFQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxNQUFNLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxNQUFNLENBQUMsS0FBSyxFQUFDLENBQUM7QUFDM0UsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtUZW5zb3JJbmZvfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge1VuYXJ5T3BUeXBlfSBmcm9tICcuLi91bmFyeV9vcF91dGlsJztcbmltcG9ydCB7VW5hcnlPcFByb2dyYW19IGZyb20gJy4uL3VuYXJ5X29wX3dlYmdwdSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBpbnQoaW5wdXQ6IFRlbnNvckluZm8sIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmQpOiBUZW5zb3JJbmZvIHtcbiAgY29uc3QgcHJvZ3JhbSA9IG5ldyBVbmFyeU9wUHJvZ3JhbShpbnB1dC5zaGFwZSwgVW5hcnlPcFR5cGUuVE9fSU5UKTtcbiAgY29uc3Qgb3V0cHV0ID0gYmFja2VuZC5ydW5XZWJHUFVQcm9ncmFtKHByb2dyYW0sIFtpbnB1dF0sICdpbnQzMicpO1xuICByZXR1cm4ge2RhdGFJZDogb3V0cHV0LmRhdGFJZCwgc2hhcGU6IG91dHB1dC5zaGFwZSwgZHR5cGU6IG91dHB1dC5kdHlwZX07XG59XG4iXX0=","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as tf from '@tensorflow/tfjs-core';\nimport { Cast, util } from '@tensorflow/tfjs-core';\nimport { castImplCPU } from '../kernel_utils/shared';\nimport { complex } from './Complex';\nimport { identity } from './Identity';\nimport { notEqual } from './NotEqual';\nimport { real } from './Real';\nimport { int } from '../kernel_utils/int';\nexport function cast(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { dtype } = attrs;\n    // Casting to complex64.\n    if (dtype === 'complex64') {\n        if (x.dtype === 'complex64') {\n            return identity({ inputs: { x }, backend });\n        }\n        // TODO: Import kernel function once zeros is modularized.\n        const zerosTensor = tf.zeros(x.shape);\n        const floatX = cast({ inputs: { x }, backend, attrs: { dtype: 'float32' } });\n        const result = complex({ inputs: { real: floatX, imag: zerosTensor }, backend });\n        zerosTensor.dispose();\n        backend.disposeData(floatX.dataId);\n        return result;\n    }\n    // Casting from complex64\n    if (x.dtype === 'complex64') {\n        const realPart = real({ inputs: { input: x }, backend });\n        const result = cast({ inputs: { x: realPart }, backend, attrs: { dtype } });\n        backend.disposeData(realPart.dataId);\n        return result;\n    }\n    if (!util.hasEncodingLoss(x.dtype, dtype)) {\n        // We don't change the underlying data, since we cast to higher\n        // precision.\n        const result = identity({ inputs: { x }, backend });\n        return { dataId: result.dataId, shape: result.shape, dtype };\n    }\n    if (backend.shouldExecuteOnCPU([x])) {\n        const values = backend.tensorMap.get(x.dataId).values;\n        const [resultShape, resultType, resultData] = castImplCPU(values, x.shape, x.dtype, dtype);\n        return backend.makeTensorInfo(resultShape, resultType, resultData);\n    }\n    if (dtype === 'int32') {\n        return int(x, backend);\n    }\n    if (dtype === 'bool') {\n        const zerosTensorInfo = backend.makeTensorInfo([], 'bool', util.getTypedArrayFromDType('bool', 1));\n        const binaryInputs = { a: x, b: zerosTensorInfo };\n        const result = notEqual({ inputs: binaryInputs, backend });\n        backend.disposeData(zerosTensorInfo.dataId);\n        return result;\n    }\n    throw new Error(`Error in Cast: failed to cast ${x.dtype} to ${dtype}`);\n}\nexport const castConfig = {\n    kernelName: Cast,\n    backendName: 'webgpu',\n    kernelFunc: cast\n};\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Ceil } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { ceilImplCPU } from '../kernel_utils/shared';\nimport { UnaryOpType } from '../unary_op_util';\nexport const ceil = unaryKernelFunc({ opType: UnaryOpType.CEIL, cpuKernelImpl: ceilImplCPU });\nexport const ceilConfig = {\n    kernelName: Ceil,\n    backendName: 'webgpu',\n    kernelFunc: ceil\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2VpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvQ2VpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsSUFBSSxFQUFlLE1BQU0sdUJBQXVCLENBQUM7QUFDekQsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9DQUFvQyxDQUFDO0FBQ25FLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUNuRCxPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sa0JBQWtCLENBQUM7QUFFN0MsTUFBTSxDQUFDLE1BQU0sSUFBSSxHQUNiLGVBQWUsQ0FBQyxFQUFDLE1BQU0sRUFBRSxXQUFXLENBQUMsSUFBSSxFQUFFLGFBQWEsRUFBRSxXQUFXLEVBQUMsQ0FBQyxDQUFDO0FBRTVFLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBaUI7SUFDdEMsVUFBVSxFQUFFLElBQUk7SUFDaEIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLElBQUk7Q0FDakIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtDZWlsLCBLZXJuZWxDb25maWd9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5pbXBvcnQge3VuYXJ5S2VybmVsRnVuY30gZnJvbSAnLi4va2VybmVsX3V0aWxzL2tlcm5lbF9mdW5jc191dGlscyc7XG5pbXBvcnQge2NlaWxJbXBsQ1BVfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMvc2hhcmVkJztcbmltcG9ydCB7VW5hcnlPcFR5cGV9IGZyb20gJy4uL3VuYXJ5X29wX3V0aWwnO1xuXG5leHBvcnQgY29uc3QgY2VpbCA9XG4gICAgdW5hcnlLZXJuZWxGdW5jKHtvcFR5cGU6IFVuYXJ5T3BUeXBlLkNFSUwsIGNwdUtlcm5lbEltcGw6IGNlaWxJbXBsQ1BVfSk7XG5cbmV4cG9ydCBjb25zdCBjZWlsQ29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IENlaWwsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogY2VpbFxufTtcbiJdfQ==","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class ClipVec4Program {\n    constructor(outputShape) {\n        this.variableNames = ['A'];\n        this.uniforms = 'minVal : f32, maxVal : f32,';\n        this.workPerThread = 4;\n        this.workgroupSize = [64, 1, 1];\n        this.outputComponent = 4;\n        this.size = true;\n        this.outputShape = outputShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize, [this.workPerThread, 1, 1]);\n        this.shaderKey = 'clipVec4';\n    }\n    getUserCode() {\n        const userCode = `\n      ${main('index')} {\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          var clampedValue = clamp(\n              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));\n          clampedValue = select(clampedValue, value, isnanVec4(value));\n          setOutputAtIndex(index, clampedValue);\n        }\n      }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpcF92ZWM0X3dlYmdwdS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2NsaXBfdmVjNF93ZWJncHUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLG1CQUFtQixJQUFJLElBQUksRUFBZ0IsTUFBTSxrQkFBa0IsQ0FBQztBQUM1RSxPQUFPLEVBQUMsZUFBZSxFQUFFLGtCQUFrQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRWxFLE1BQU0sT0FBTyxlQUFlO0lBWTFCLFlBQVksV0FBcUI7UUFUakMsa0JBQWEsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3RCLGFBQVEsR0FBRyw2QkFBNkIsQ0FBQztRQUd6QyxrQkFBYSxHQUFHLENBQUMsQ0FBQztRQUNsQixrQkFBYSxHQUE2QixDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDckQsb0JBQWUsR0FBRyxDQUFDLENBQUM7UUFDcEIsU0FBSSxHQUFHLElBQUksQ0FBQztRQUdWLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO1FBQy9CLElBQUksQ0FBQyxjQUFjLEdBQUcsa0JBQWtCLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQzNELElBQUksQ0FBQyxRQUFRLEdBQUcsZUFBZSxDQUMzQixJQUFJLENBQUMsY0FBYyxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLGFBQWEsRUFDekQsQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2hDLElBQUksQ0FBQyxTQUFTLEdBQUcsVUFBVSxDQUFDO0lBQzlCLENBQUM7SUFFRCxXQUFXO1FBQ1QsTUFBTSxRQUFRLEdBQUc7UUFDYixJQUFJLENBQUMsT0FBTyxDQUFDOzs7Ozs7Ozs7S0FTaEIsQ0FBQztRQUNGLE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtnZXRNYWluSGVhZGVyU3RyaW5nIGFzIG1haW4sIFdlYkdQVVByb2dyYW19IGZyb20gJy4vd2ViZ3B1X3Byb2dyYW0nO1xuaW1wb3J0IHtjb21wdXRlRGlzcGF0Y2gsIGZsYXREaXNwYXRjaExheW91dH0gZnJvbSAnLi93ZWJncHVfdXRpbCc7XG5cbmV4cG9ydCBjbGFzcyBDbGlwVmVjNFByb2dyYW0gaW1wbGVtZW50cyBXZWJHUFVQcm9ncmFtIHtcbiAgb3V0cHV0U2hhcGU6IG51bWJlcltdO1xuICBzaGFkZXJLZXk6IHN0cmluZztcbiAgdmFyaWFibGVOYW1lcyA9IFsnQSddO1xuICB1bmlmb3JtcyA9ICdtaW5WYWwgOiBmMzIsIG1heFZhbCA6IGYzMiwnO1xuICBkaXNwYXRjaExheW91dDoge3g6IG51bWJlcltdfTtcbiAgZGlzcGF0Y2g6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXTtcbiAgd29ya1BlclRocmVhZCA9IDQ7XG4gIHdvcmtncm91cFNpemU6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXSA9IFs2NCwgMSwgMV07XG4gIG91dHB1dENvbXBvbmVudCA9IDQ7XG4gIHNpemUgPSB0cnVlO1xuXG4gIGNvbnN0cnVjdG9yKG91dHB1dFNoYXBlOiBudW1iZXJbXSkge1xuICAgIHRoaXMub3V0cHV0U2hhcGUgPSBvdXRwdXRTaGFwZTtcbiAgICB0aGlzLmRpc3BhdGNoTGF5b3V0ID0gZmxhdERpc3BhdGNoTGF5b3V0KHRoaXMub3V0cHV0U2hhcGUpO1xuICAgIHRoaXMuZGlzcGF0Y2ggPSBjb21wdXRlRGlzcGF0Y2goXG4gICAgICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQsIHRoaXMub3V0cHV0U2hhcGUsIHRoaXMud29ya2dyb3VwU2l6ZSxcbiAgICAgICAgW3RoaXMud29ya1BlclRocmVhZCwgMSwgMV0pO1xuICAgIHRoaXMuc2hhZGVyS2V5ID0gJ2NsaXBWZWM0JztcbiAgfVxuXG4gIGdldFVzZXJDb2RlKCk6IHN0cmluZyB7XG4gICAgY29uc3QgdXNlckNvZGUgPSBgXG4gICAgICAke21haW4oJ2luZGV4Jyl9IHtcbiAgICAgICAgaWYoaW5kZXggPCB1bmlmb3Jtcy5zaXplKSB7XG4gICAgICAgICAgbGV0IHZhbHVlID0gZ2V0QUJ5T3V0cHV0SW5kZXgoaW5kZXgpO1xuICAgICAgICAgIHZhciBjbGFtcGVkVmFsdWUgPSBjbGFtcChcbiAgICAgICAgICAgICAgdmFsdWUsIHZlYzQ8ZjMyPih1bmlmb3Jtcy5taW5WYWwpLCB2ZWM0PGYzMj4odW5pZm9ybXMubWF4VmFsKSk7XG4gICAgICAgICAgY2xhbXBlZFZhbHVlID0gc2VsZWN0KGNsYW1wZWRWYWx1ZSwgdmFsdWUsIGlzbmFuVmVjNCh2YWx1ZSkpO1xuICAgICAgICAgIHNldE91dHB1dEF0SW5kZXgoaW5kZXgsIGNsYW1wZWRWYWx1ZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICBgO1xuICAgIHJldHVybiB1c2VyQ29kZTtcbiAgfVxufVxuIl19","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class ClipProgram {\n    constructor(outputShape) {\n        this.variableNames = ['A'];\n        this.uniforms = 'minVal : f32, maxVal : f32,';\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = outputShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.shaderKey = 'clip';\n    }\n    getUserCode() {\n        const userCode = `\n      ${main('index')} {\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          if (isnan(value)) {\n            setOutputAtIndex(index, value);\n            return;\n          }\n          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));\n        }\n      }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpcF93ZWJncHUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9jbGlwX3dlYmdwdS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsbUJBQW1CLElBQUksSUFBSSxFQUFnQixNQUFNLGtCQUFrQixDQUFDO0FBQzVFLE9BQU8sRUFBQyxlQUFlLEVBQUUsa0JBQWtCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFbEUsTUFBTSxPQUFPLFdBQVc7SUFZdEIsWUFBWSxXQUFxQjtRQVRqQyxrQkFBYSxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdEIsYUFBUSxHQUFHLDZCQUE2QixDQUFDO1FBR3pDLGtCQUFhLEdBQTZCLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUdyRCxTQUFJLEdBQUcsSUFBSSxDQUFDO1FBR1YsSUFBSSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUM7UUFDL0IsSUFBSSxDQUFDLGNBQWMsR0FBRyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxlQUFlLENBQzNCLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFFL0QsSUFBSSxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUM7SUFDMUIsQ0FBQztJQUVELFdBQVc7UUFDVCxNQUFNLFFBQVEsR0FBRztRQUNiLElBQUksQ0FBQyxPQUFPLENBQUM7Ozs7Ozs7Ozs7S0FVaEIsQ0FBQztRQUNGLE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtnZXRNYWluSGVhZGVyU3RyaW5nIGFzIG1haW4sIFdlYkdQVVByb2dyYW19IGZyb20gJy4vd2ViZ3B1X3Byb2dyYW0nO1xuaW1wb3J0IHtjb21wdXRlRGlzcGF0Y2gsIGZsYXREaXNwYXRjaExheW91dH0gZnJvbSAnLi93ZWJncHVfdXRpbCc7XG5cbmV4cG9ydCBjbGFzcyBDbGlwUHJvZ3JhbSBpbXBsZW1lbnRzIFdlYkdQVVByb2dyYW0ge1xuICBvdXRwdXRTaGFwZTogbnVtYmVyW107XG4gIHNoYWRlcktleTogc3RyaW5nO1xuICB2YXJpYWJsZU5hbWVzID0gWydBJ107XG4gIHVuaWZvcm1zID0gJ21pblZhbCA6IGYzMiwgbWF4VmFsIDogZjMyLCc7XG4gIGRpc3BhdGNoTGF5b3V0OiB7eDogbnVtYmVyW119O1xuICBkaXNwYXRjaDogW251bWJlciwgbnVtYmVyLCBudW1iZXJdO1xuICB3b3JrZ3JvdXBTaXplOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl0gPSBbNjQsIDEsIDFdO1xuICBtaW5WYWw6IG51bWJlcjtcbiAgbWF4VmFsOiBudW1iZXI7XG4gIHNpemUgPSB0cnVlO1xuXG4gIGNvbnN0cnVjdG9yKG91dHB1dFNoYXBlOiBudW1iZXJbXSkge1xuICAgIHRoaXMub3V0cHV0U2hhcGUgPSBvdXRwdXRTaGFwZTtcbiAgICB0aGlzLmRpc3BhdGNoTGF5b3V0ID0gZmxhdERpc3BhdGNoTGF5b3V0KHRoaXMub3V0cHV0U2hhcGUpO1xuICAgIHRoaXMuZGlzcGF0Y2ggPSBjb21wdXRlRGlzcGF0Y2goXG4gICAgICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQsIHRoaXMub3V0cHV0U2hhcGUsIHRoaXMud29ya2dyb3VwU2l6ZSk7XG5cbiAgICB0aGlzLnNoYWRlcktleSA9ICdjbGlwJztcbiAgfVxuXG4gIGdldFVzZXJDb2RlKCk6IHN0cmluZyB7XG4gICAgY29uc3QgdXNlckNvZGUgPSBgXG4gICAgICAke21haW4oJ2luZGV4Jyl9IHtcbiAgICAgICAgaWYoaW5kZXggPCB1bmlmb3Jtcy5zaXplKSB7XG4gICAgICAgICAgbGV0IHZhbHVlID0gZ2V0QUJ5T3V0cHV0SW5kZXgoaW5kZXgpO1xuICAgICAgICAgIGlmIChpc25hbih2YWx1ZSkpIHtcbiAgICAgICAgICAgIHNldE91dHB1dEF0SW5kZXgoaW5kZXgsIHZhbHVlKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG4gICAgICAgICAgc2V0T3V0cHV0QXRJbmRleChpbmRleCwgY2xhbXAodmFsdWUsIHVuaWZvcm1zLm1pblZhbCwgdW5pZm9ybXMubWF4VmFsKSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICBgO1xuICAgIHJldHVybiB1c2VyQ29kZTtcbiAgfVxufVxuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ClipByValue, util } from '@tensorflow/tfjs-core';\nimport { ClipVec4Program } from '../clip_vec4_webgpu';\nimport { ClipProgram } from '../clip_webgpu';\nexport function clipByValue(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { clipValueMin, clipValueMax } = attrs;\n    let program;\n    const uniformData = [\n        { type: 'float32', data: [clipValueMin] },\n        { type: 'float32', data: [clipValueMax] }\n    ];\n    if (util.sizeFromShape(x.shape) % 4 === 0) {\n        program = new ClipVec4Program(x.shape);\n    }\n    else {\n        program = new ClipProgram(x.shape);\n    }\n    return backend.runWebGPUProgram(program, [x], x.dtype, uniformData);\n}\nexport const clipByValueConfig = {\n    kernelName: ClipByValue,\n    backendName: 'webgpu',\n    kernelFunc: clipByValue\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2xpcEJ5VmFsdWUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL0NsaXBCeVZhbHVlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxXQUFXLEVBQTZFLElBQUksRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBSW5JLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUNwRCxPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFFM0MsTUFBTSxVQUFVLFdBQVcsQ0FBQyxJQUkzQjtJQUNDLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QyxNQUFNLEVBQUMsQ0FBQyxFQUFDLEdBQUcsTUFBTSxDQUFDO0lBQ25CLE1BQU0sRUFBQyxZQUFZLEVBQUUsWUFBWSxFQUFDLEdBQUcsS0FBSyxDQUFDO0lBRTNDLElBQUksT0FBb0MsQ0FBQztJQUN6QyxNQUFNLFdBQVcsR0FBRztRQUNsQixFQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLENBQUMsWUFBWSxDQUFDLEVBQUM7UUFDdkMsRUFBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDLFlBQVksQ0FBQyxFQUFDO0tBQ3hDLENBQUM7SUFDRixJQUFJLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUU7UUFDekMsT0FBTyxHQUFHLElBQUksZUFBZSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUN4QztTQUFNO1FBQ0wsT0FBTyxHQUFHLElBQUksV0FBVyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUNwQztJQUNELE9BQU8sT0FBTyxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxLQUFLLEVBQUUsV0FBVyxDQUFDLENBQUM7QUFDdEUsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFpQjtJQUM3QyxVQUFVLEVBQUUsV0FBVztJQUN2QixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsV0FBb0M7Q0FDakQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtDbGlwQnlWYWx1ZSwgQ2xpcEJ5VmFsdWVBdHRycywgQ2xpcEJ5VmFsdWVJbnB1dHMsIEtlcm5lbENvbmZpZywgS2VybmVsRnVuYywgVGVuc29ySW5mbywgdXRpbH0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5cbmltcG9ydCB7Q2xpcFZlYzRQcm9ncmFtfSBmcm9tICcuLi9jbGlwX3ZlYzRfd2ViZ3B1JztcbmltcG9ydCB7Q2xpcFByb2dyYW19IGZyb20gJy4uL2NsaXBfd2ViZ3B1JztcblxuZXhwb3J0IGZ1bmN0aW9uIGNsaXBCeVZhbHVlKGFyZ3M6IHtcbiAgaW5wdXRzOiBDbGlwQnlWYWx1ZUlucHV0cyxcbiAgYmFja2VuZDogV2ViR1BVQmFja2VuZCxcbiAgYXR0cnM6IENsaXBCeVZhbHVlQXR0cnNcbn0pOiBUZW5zb3JJbmZvIHtcbiAgY29uc3Qge2lucHV0cywgYmFja2VuZCwgYXR0cnN9ID0gYXJncztcbiAgY29uc3Qge3h9ID0gaW5wdXRzO1xuICBjb25zdCB7Y2xpcFZhbHVlTWluLCBjbGlwVmFsdWVNYXh9ID0gYXR0cnM7XG5cbiAgbGV0IHByb2dyYW06IENsaXBQcm9ncmFtfENsaXBWZWM0UHJvZ3JhbTtcbiAgY29uc3QgdW5pZm9ybURhdGEgPSBbXG4gICAge3R5cGU6ICdmbG9hdDMyJywgZGF0YTogW2NsaXBWYWx1ZU1pbl19LFxuICAgIHt0eXBlOiAnZmxvYXQzMicsIGRhdGE6IFtjbGlwVmFsdWVNYXhdfVxuICBdO1xuICBpZiAodXRpbC5zaXplRnJvbVNoYXBlKHguc2hhcGUpICUgNCA9PT0gMCkge1xuICAgIHByb2dyYW0gPSBuZXcgQ2xpcFZlYzRQcm9ncmFtKHguc2hhcGUpO1xuICB9IGVsc2Uge1xuICAgIHByb2dyYW0gPSBuZXcgQ2xpcFByb2dyYW0oeC5zaGFwZSk7XG4gIH1cbiAgcmV0dXJuIGJhY2tlbmQucnVuV2ViR1BVUHJvZ3JhbShwcm9ncmFtLCBbeF0sIHguZHR5cGUsIHVuaWZvcm1EYXRhKTtcbn1cblxuZXhwb3J0IGNvbnN0IGNsaXBCeVZhbHVlQ29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IENsaXBCeVZhbHVlLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IGNsaXBCeVZhbHVlIGFzIHVua25vd24gYXMgS2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class ComplexAbsProgram {\n    constructor(shape) {\n        this.outputShape = [];\n        this.variableNames = ['real', 'imag'];\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = shape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.shaderKey = 'complexAbs';\n    }\n    getUserCode() {\n        const userCode = `\n    ${main('index')} {\n      if (index < uniforms.size) {\n        let re = abs(getRealByOutputIndex(index));\n        let im = abs(getImagByOutputIndex(index));\n        let mx = max(re, im);\n\n        // The length function in wgsl may be not underflow-safe on some GPUs.\n        // So the safe solution is to ensure underflow-safety in all cases.\n        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));\n      }\n    }\n  `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcGxleF9hYnNfd2ViZ3B1LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMvY29tcGxleF9hYnNfd2ViZ3B1LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxtQkFBbUIsSUFBSSxJQUFJLEVBQWdCLE1BQU0sa0JBQWtCLENBQUM7QUFDNUUsT0FBTyxFQUFDLGVBQWUsRUFBRSxrQkFBa0IsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUVsRSxNQUFNLE9BQU8saUJBQWlCO0lBUzVCLFlBQVksS0FBZTtRQVIzQixnQkFBVyxHQUFhLEVBQUUsQ0FBQztRQUkzQixrQkFBYSxHQUFHLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQ2pDLGtCQUFhLEdBQTZCLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNyRCxTQUFJLEdBQUcsSUFBSSxDQUFDO1FBR1YsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7UUFDekIsSUFBSSxDQUFDLGNBQWMsR0FBRyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxlQUFlLENBQzNCLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFFL0QsSUFBSSxDQUFDLFNBQVMsR0FBRyxZQUFZLENBQUM7SUFDaEMsQ0FBQztJQUVELFdBQVc7UUFDVCxNQUFNLFFBQVEsR0FBRztNQUNmLElBQUksQ0FBQyxPQUFPLENBQUM7Ozs7Ozs7Ozs7O0dBV2hCLENBQUM7UUFDQSxPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMyBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7Z2V0TWFpbkhlYWRlclN0cmluZyBhcyBtYWluLCBXZWJHUFVQcm9ncmFtfSBmcm9tICcuL3dlYmdwdV9wcm9ncmFtJztcbmltcG9ydCB7Y29tcHV0ZURpc3BhdGNoLCBmbGF0RGlzcGF0Y2hMYXlvdXR9IGZyb20gJy4vd2ViZ3B1X3V0aWwnO1xuXG5leHBvcnQgY2xhc3MgQ29tcGxleEFic1Byb2dyYW0gaW1wbGVtZW50cyBXZWJHUFVQcm9ncmFtIHtcbiAgb3V0cHV0U2hhcGU6IG51bWJlcltdID0gW107XG4gIHNoYWRlcktleTogc3RyaW5nO1xuICBkaXNwYXRjaExheW91dDoge3g6IG51bWJlcltdfTtcbiAgZGlzcGF0Y2g6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXTtcbiAgdmFyaWFibGVOYW1lcyA9IFsncmVhbCcsICdpbWFnJ107XG4gIHdvcmtncm91cFNpemU6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXSA9IFs2NCwgMSwgMV07XG4gIHNpemUgPSB0cnVlO1xuXG4gIGNvbnN0cnVjdG9yKHNoYXBlOiBudW1iZXJbXSkge1xuICAgIHRoaXMub3V0cHV0U2hhcGUgPSBzaGFwZTtcbiAgICB0aGlzLmRpc3BhdGNoTGF5b3V0ID0gZmxhdERpc3BhdGNoTGF5b3V0KHRoaXMub3V0cHV0U2hhcGUpO1xuICAgIHRoaXMuZGlzcGF0Y2ggPSBjb21wdXRlRGlzcGF0Y2goXG4gICAgICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQsIHRoaXMub3V0cHV0U2hhcGUsIHRoaXMud29ya2dyb3VwU2l6ZSk7XG5cbiAgICB0aGlzLnNoYWRlcktleSA9ICdjb21wbGV4QWJzJztcbiAgfVxuXG4gIGdldFVzZXJDb2RlKCk6IHN0cmluZyB7XG4gICAgY29uc3QgdXNlckNvZGUgPSBgXG4gICAgJHttYWluKCdpbmRleCcpfSB7XG4gICAgICBpZiAoaW5kZXggPCB1bmlmb3Jtcy5zaXplKSB7XG4gICAgICAgIGxldCByZSA9IGFicyhnZXRSZWFsQnlPdXRwdXRJbmRleChpbmRleCkpO1xuICAgICAgICBsZXQgaW0gPSBhYnMoZ2V0SW1hZ0J5T3V0cHV0SW5kZXgoaW5kZXgpKTtcbiAgICAgICAgbGV0IG14ID0gbWF4KHJlLCBpbSk7XG5cbiAgICAgICAgLy8gVGhlIGxlbmd0aCBmdW5jdGlvbiBpbiB3Z3NsIG1heSBiZSBub3QgdW5kZXJmbG93LXNhZmUgb24gc29tZSBHUFVzLlxuICAgICAgICAvLyBTbyB0aGUgc2FmZSBzb2x1dGlvbiBpcyB0byBlbnN1cmUgdW5kZXJmbG93LXNhZmV0eSBpbiBhbGwgY2FzZXMuXG4gICAgICAgIHNldE91dHB1dEF0SW5kZXgoaW5kZXgsIHNlbGVjdChteCAqIGxlbmd0aCh2ZWMyPGYzMj4oMSwgbWluKHJlLCBpbSkvbXgpKSwgMC4wLCBteCA9PSAwLjApKTtcbiAgICAgIH1cbiAgICB9XG4gIGA7XG4gICAgcmV0dXJuIHVzZXJDb2RlO1xuICB9XG59XG4iXX0=","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ComplexAbs } from '@tensorflow/tfjs-core';\nimport { ComplexAbsProgram } from '../complex_abs_webgpu';\n// Returns a TensorInfo with the complex shape and the dataId of the\n// underlying part. We need to do this because a reshaped complex tensor is\n// not reflected in its parts.\nfunction makeComplexComponentTensorInfo(complexTensor, complexPart) {\n    return {\n        dataId: complexPart.dataId,\n        dtype: complexPart.dtype,\n        shape: complexTensor.shape\n    };\n}\nexport function complexAbs(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    const xData = backend.tensorMap.get(x.dataId);\n    const program = new ComplexAbsProgram(x.shape);\n    const programInputs = [\n        makeComplexComponentTensorInfo(x, xData.complexTensorInfos.real),\n        makeComplexComponentTensorInfo(x, xData.complexTensorInfos.imag),\n    ];\n    return backend.runWebGPUProgram(program, programInputs, programInputs[0].dtype);\n}\nexport const complexAbsConfig = {\n    kernelName: ComplexAbs,\n    backendName: 'webgpu',\n    kernelFunc: complexAbs\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29tcGxleEFicy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvQ29tcGxleEFicy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsVUFBVSxFQUF5RCxNQUFNLHVCQUF1QixDQUFDO0FBR3pHLE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRXhELG9FQUFvRTtBQUNwRSwyRUFBMkU7QUFDM0UsOEJBQThCO0FBQzlCLFNBQVMsOEJBQThCLENBQ25DLGFBQXlCLEVBQUUsV0FBdUI7SUFDcEQsT0FBTztRQUNMLE1BQU0sRUFBRSxXQUFXLENBQUMsTUFBTTtRQUMxQixLQUFLLEVBQUUsV0FBVyxDQUFDLEtBQUs7UUFDeEIsS0FBSyxFQUFFLGFBQWEsQ0FBQyxLQUFLO0tBQzNCLENBQUM7QUFDSixDQUFDO0FBRUQsTUFBTSxVQUFVLFVBQVUsQ0FDdEIsSUFBd0Q7SUFDMUQsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFDL0IsTUFBTSxFQUFDLENBQUMsRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUVuQixNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFOUMsTUFBTSxPQUFPLEdBQUcsSUFBSSxpQkFBaUIsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDL0MsTUFBTSxhQUFhLEdBQUc7UUFDcEIsOEJBQThCLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUM7UUFDaEUsOEJBQThCLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUM7S0FDakUsQ0FBQztJQUVGLE9BQU8sT0FBTyxDQUFDLGdCQUFnQixDQUMzQixPQUFPLEVBQUUsYUFBYSxFQUFFLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUN0RCxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQWlCO0lBQzVDLFVBQVUsRUFBRSxVQUFVO0lBQ3RCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxVQUFtQztDQUNoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjMgR29vZ2xlIExMQy5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0NvbXBsZXhBYnMsIENvbXBsZXhBYnNJbnB1dHMsIEtlcm5lbENvbmZpZywgS2VybmVsRnVuYywgVGVuc29ySW5mb30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge0NvbXBsZXhBYnNQcm9ncmFtfSBmcm9tICcuLi9jb21wbGV4X2Fic193ZWJncHUnO1xuXG4vLyBSZXR1cm5zIGEgVGVuc29ySW5mbyB3aXRoIHRoZSBjb21wbGV4IHNoYXBlIGFuZCB0aGUgZGF0YUlkIG9mIHRoZVxuLy8gdW5kZXJseWluZyBwYXJ0LiBXZSBuZWVkIHRvIGRvIHRoaXMgYmVjYXVzZSBhIHJlc2hhcGVkIGNvbXBsZXggdGVuc29yIGlzXG4vLyBub3QgcmVmbGVjdGVkIGluIGl0cyBwYXJ0cy5cbmZ1bmN0aW9uIG1ha2VDb21wbGV4Q29tcG9uZW50VGVuc29ySW5mbyhcbiAgICBjb21wbGV4VGVuc29yOiBUZW5zb3JJbmZvLCBjb21wbGV4UGFydDogVGVuc29ySW5mbyk6IFRlbnNvckluZm8ge1xuICByZXR1cm4ge1xuICAgIGRhdGFJZDogY29tcGxleFBhcnQuZGF0YUlkLFxuICAgIGR0eXBlOiBjb21wbGV4UGFydC5kdHlwZSxcbiAgICBzaGFwZTogY29tcGxleFRlbnNvci5zaGFwZVxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY29tcGxleEFicyhcbiAgICBhcmdzOiB7aW5wdXRzOiBDb21wbGV4QWJzSW5wdXRzLCBiYWNrZW5kOiBXZWJHUFVCYWNrZW5kfSk6IFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kfSA9IGFyZ3M7XG4gIGNvbnN0IHt4fSA9IGlucHV0cztcblxuICBjb25zdCB4RGF0YSA9IGJhY2tlbmQudGVuc29yTWFwLmdldCh4LmRhdGFJZCk7XG5cbiAgY29uc3QgcHJvZ3JhbSA9IG5ldyBDb21wbGV4QWJzUHJvZ3JhbSh4LnNoYXBlKTtcbiAgY29uc3QgcHJvZ3JhbUlucHV0cyA9IFtcbiAgICBtYWtlQ29tcGxleENvbXBvbmVudFRlbnNvckluZm8oeCwgeERhdGEuY29tcGxleFRlbnNvckluZm9zLnJlYWwpLFxuICAgIG1ha2VDb21wbGV4Q29tcG9uZW50VGVuc29ySW5mbyh4LCB4RGF0YS5jb21wbGV4VGVuc29ySW5mb3MuaW1hZyksXG4gIF07XG5cbiAgcmV0dXJuIGJhY2tlbmQucnVuV2ViR1BVUHJvZ3JhbShcbiAgICAgIHByb2dyYW0sIHByb2dyYW1JbnB1dHMsIHByb2dyYW1JbnB1dHNbMF0uZHR5cGUpO1xufVxuXG5leHBvcnQgY29uc3QgY29tcGxleEFic0NvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBDb21wbGV4QWJzLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IGNvbXBsZXhBYnMgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class ConcatProgram {\n    constructor(shapes) {\n        this.uniforms = '';\n        this.workPerThread = 1;\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape =\n            backend_util.computeOutShape(shapes, 1 /* axis */);\n        this.variableNames = shapes.map((_, i) => `T${i}`);\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize, [this.workPerThread, 1, 1]);\n        this.offsetLength = shapes.length - 1;\n        for (let i = 0; i < this.offsetLength; i++) {\n            this.uniforms += `offset${i} : i32,`;\n        }\n        this.shaderKey = 'concat';\n    }\n    getUserCode() {\n        const snippets = [];\n        if (this.offsetLength > 0) {\n            snippets.push(`if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }`);\n            for (let i = 1; i < this.offsetLength; i++) {\n                snippets.push(`else if (yC < uniforms.offset${[i]}){ ` +\n                    `setOutputAtCoords(coords.x, coords.y, getT${i}(yR, yC - uniforms.offset${i - 1})); }`);\n            }\n            const lastIndex = this.offsetLength;\n            const lastShiftIndex = this.offsetLength - 1;\n            snippets.push(`else { setOutputAtCoords(coords.x, coords.y, getT${lastIndex}(yR, yC - uniforms.offset${lastShiftIndex})); }`);\n        }\n        else {\n            snippets.push(`setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));`);\n        }\n        const userCode = `\n      ${main('index')} {\n        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if(flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            let yR = coords.x;\n            let yC = coords.y;\n\n            ${snippets.join('\\n        ')}\n          }\n        }\n      }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uY2F0X3dlYmdwdS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2NvbmNhdF93ZWJncHUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBQ25ELE9BQU8sRUFBQyxtQkFBbUIsSUFBSSxJQUFJLEVBQWdCLE1BQU0sa0JBQWtCLENBQUM7QUFDNUUsT0FBTyxFQUFDLGVBQWUsRUFBRSxrQkFBa0IsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUVsRSxNQUFNLE9BQU8sYUFBYTtJQVl4QixZQUFZLE1BQStCO1FBTjNDLGFBQVEsR0FBRyxFQUFFLENBQUM7UUFDZCxrQkFBYSxHQUFHLENBQUMsQ0FBQztRQUNsQixrQkFBYSxHQUE2QixDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDckQsU0FBSSxHQUFHLElBQUksQ0FBQztRQUlWLElBQUksQ0FBQyxXQUFXO1lBQ1osWUFBWSxDQUFDLGVBQWUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBcUIsQ0FBQztRQUMzRSxJQUFJLENBQUMsYUFBYSxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDbkQsSUFBSSxDQUFDLGNBQWMsR0FBRyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxlQUFlLENBQzNCLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsYUFBYSxFQUN6RCxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFaEMsSUFBSSxDQUFDLFlBQVksR0FBRyxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztRQUN0QyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUMxQyxJQUFJLENBQUMsUUFBUSxJQUFJLFNBQVMsQ0FBQyxTQUFTLENBQUM7U0FDdEM7UUFDRCxJQUFJLENBQUMsU0FBUyxHQUFHLFFBQVEsQ0FBQztJQUM1QixDQUFDO0lBRUQsV0FBVztRQUNULE1BQU0sUUFBUSxHQUFhLEVBQUUsQ0FBQztRQUM5QixJQUFJLElBQUksQ0FBQyxZQUFZLEdBQUcsQ0FBQyxFQUFFO1lBQ3pCLFFBQVEsQ0FBQyxJQUFJLENBQ1QscUZBQXFGLENBQUMsQ0FBQztZQUMzRixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDLEVBQUUsRUFBRTtnQkFDMUMsUUFBUSxDQUFDLElBQUksQ0FDVCxnQ0FBZ0MsQ0FBQyxDQUFDLENBQUMsS0FBSztvQkFDeEMsNkNBQ0ksQ0FBQyw0QkFBNEIsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7YUFDcEQ7WUFDRCxNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDO1lBQ3BDLE1BQU0sY0FBYyxHQUFHLElBQUksQ0FBQyxZQUFZLEdBQUcsQ0FBQyxDQUFDO1lBQzdDLFFBQVEsQ0FBQyxJQUFJLENBQUMsb0RBQ1YsU0FBUyw0QkFBNEIsY0FBYyxPQUFPLENBQUMsQ0FBQztTQUNqRTthQUFNO1lBQ0wsUUFBUSxDQUFDLElBQUksQ0FBQyx1REFBdUQsQ0FBQyxDQUFDO1NBQ3hFO1FBRUQsTUFBTSxRQUFRLEdBQUc7UUFDYixJQUFJLENBQUMsT0FBTyxDQUFDOzZCQUNRLElBQUksQ0FBQyxhQUFhO29DQUNYLElBQUksQ0FBQyxhQUFhOzs7Ozs7Y0FNeEMsUUFBUSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUM7Ozs7S0FJcEMsQ0FBQztRQUNGLE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtiYWNrZW5kX3V0aWx9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5pbXBvcnQge2dldE1haW5IZWFkZXJTdHJpbmcgYXMgbWFpbiwgV2ViR1BVUHJvZ3JhbX0gZnJvbSAnLi93ZWJncHVfcHJvZ3JhbSc7XG5pbXBvcnQge2NvbXB1dGVEaXNwYXRjaCwgZmxhdERpc3BhdGNoTGF5b3V0fSBmcm9tICcuL3dlYmdwdV91dGlsJztcblxuZXhwb3J0IGNsYXNzIENvbmNhdFByb2dyYW0gaW1wbGVtZW50cyBXZWJHUFVQcm9ncmFtIHtcbiAgb3V0cHV0U2hhcGU6IG51bWJlcltdO1xuICBzaGFkZXJLZXk6IHN0cmluZztcbiAgZGlzcGF0Y2hMYXlvdXQ6IHt4OiBudW1iZXJbXX07XG4gIGRpc3BhdGNoOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl07XG4gIHZhcmlhYmxlTmFtZXM6IHN0cmluZ1tdO1xuICB1bmlmb3JtcyA9ICcnO1xuICB3b3JrUGVyVGhyZWFkID0gMTtcbiAgd29ya2dyb3VwU2l6ZTogW251bWJlciwgbnVtYmVyLCBudW1iZXJdID0gWzY0LCAxLCAxXTtcbiAgc2l6ZSA9IHRydWU7XG4gIG9mZnNldExlbmd0aDogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKHNoYXBlczogQXJyYXk8W251bWJlciwgbnVtYmVyXT4pIHtcbiAgICB0aGlzLm91dHB1dFNoYXBlID1cbiAgICAgICAgYmFja2VuZF91dGlsLmNvbXB1dGVPdXRTaGFwZShzaGFwZXMsIDEgLyogYXhpcyAqLykgYXMgW251bWJlciwgbnVtYmVyXTtcbiAgICB0aGlzLnZhcmlhYmxlTmFtZXMgPSBzaGFwZXMubWFwKChfLCBpKSA9PiBgVCR7aX1gKTtcbiAgICB0aGlzLmRpc3BhdGNoTGF5b3V0ID0gZmxhdERpc3BhdGNoTGF5b3V0KHRoaXMub3V0cHV0U2hhcGUpO1xuICAgIHRoaXMuZGlzcGF0Y2ggPSBjb21wdXRlRGlzcGF0Y2goXG4gICAgICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQsIHRoaXMub3V0cHV0U2hhcGUsIHRoaXMud29ya2dyb3VwU2l6ZSxcbiAgICAgICAgW3RoaXMud29ya1BlclRocmVhZCwgMSwgMV0pO1xuXG4gICAgdGhpcy5vZmZzZXRMZW5ndGggPSBzaGFwZXMubGVuZ3RoIC0gMTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMub2Zmc2V0TGVuZ3RoOyBpKyspIHtcbiAgICAgIHRoaXMudW5pZm9ybXMgKz0gYG9mZnNldCR7aX0gOiBpMzIsYDtcbiAgICB9XG4gICAgdGhpcy5zaGFkZXJLZXkgPSAnY29uY2F0JztcbiAgfVxuXG4gIGdldFVzZXJDb2RlKCk6IHN0cmluZyB7XG4gICAgY29uc3Qgc25pcHBldHM6IHN0cmluZ1tdID0gW107XG4gICAgaWYgKHRoaXMub2Zmc2V0TGVuZ3RoID4gMCkge1xuICAgICAgc25pcHBldHMucHVzaChcbiAgICAgICAgICBgaWYgKHlDIDwgdW5pZm9ybXMub2Zmc2V0MCl7IHNldE91dHB1dEF0Q29vcmRzKGNvb3Jkcy54LCBjb29yZHMueSwgZ2V0VDAoeVIsIHlDKSk7IH1gKTtcbiAgICAgIGZvciAobGV0IGkgPSAxOyBpIDwgdGhpcy5vZmZzZXRMZW5ndGg7IGkrKykge1xuICAgICAgICBzbmlwcGV0cy5wdXNoKFxuICAgICAgICAgICAgYGVsc2UgaWYgKHlDIDwgdW5pZm9ybXMub2Zmc2V0JHtbaV19KXsgYCArXG4gICAgICAgICAgICBgc2V0T3V0cHV0QXRDb29yZHMoY29vcmRzLngsIGNvb3Jkcy55LCBnZXRUJHtcbiAgICAgICAgICAgICAgICBpfSh5UiwgeUMgLSB1bmlmb3Jtcy5vZmZzZXQke2kgLSAxfSkpOyB9YCk7XG4gICAgICB9XG4gICAgICBjb25zdCBsYXN0SW5kZXggPSB0aGlzLm9mZnNldExlbmd0aDtcbiAgICAgIGNvbnN0IGxhc3RTaGlmdEluZGV4ID0gdGhpcy5vZmZzZXRMZW5ndGggLSAxO1xuICAgICAgc25pcHBldHMucHVzaChgZWxzZSB7IHNldE91dHB1dEF0Q29vcmRzKGNvb3Jkcy54LCBjb29yZHMueSwgZ2V0VCR7XG4gICAgICAgICAgbGFzdEluZGV4fSh5UiwgeUMgLSB1bmlmb3Jtcy5vZmZzZXQke2xhc3RTaGlmdEluZGV4fSkpOyB9YCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNuaXBwZXRzLnB1c2goYHNldE91dHB1dEF0Q29vcmRzKGNvb3Jkcy54LCBjb29yZHMueSwgZ2V0VDAoeVIsIHlDKSk7YCk7XG4gICAgfVxuXG4gICAgY29uc3QgdXNlckNvZGUgPSBgXG4gICAgICAke21haW4oJ2luZGV4Jyl9IHtcbiAgICAgICAgZm9yKHZhciBpID0gMDsgaSA8ICR7dGhpcy53b3JrUGVyVGhyZWFkfTsgaSA9IGkgKyAxKSB7XG4gICAgICAgICAgbGV0IGZsYXRJbmRleCA9IGluZGV4ICogJHt0aGlzLndvcmtQZXJUaHJlYWR9ICsgaTtcbiAgICAgICAgICBpZihmbGF0SW5kZXggPCB1bmlmb3Jtcy5zaXplKSB7XG4gICAgICAgICAgICBsZXQgY29vcmRzID0gZ2V0Q29vcmRzRnJvbUluZGV4KGZsYXRJbmRleCk7XG4gICAgICAgICAgICBsZXQgeVIgPSBjb29yZHMueDtcbiAgICAgICAgICAgIGxldCB5QyA9IGNvb3Jkcy55O1xuXG4gICAgICAgICAgICAke3NuaXBwZXRzLmpvaW4oJ1xcbiAgICAgICAgJyl9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgYDtcbiAgICByZXR1cm4gdXNlckNvZGU7XG4gIH1cbn1cbiJdfQ==","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Imag } from '@tensorflow/tfjs-core';\nimport { identity } from './Identity';\nexport function imag(args) {\n    const { inputs, backend } = args;\n    const { input } = inputs;\n    const inputData = backend.tensorMap.get(input.dataId);\n    return identity({ inputs: { x: inputData.complexTensorInfos.imag }, backend });\n}\nexport const imagConfig = {\n    kernelName: Imag,\n    backendName: 'webgpu',\n    kernelFunc: imag\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW1hZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvSW1hZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsSUFBSSxFQUFtRCxNQUFNLHVCQUF1QixDQUFDO0FBRzdGLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxZQUFZLENBQUM7QUFFcEMsTUFBTSxVQUFVLElBQUksQ0FBQyxJQUFrRDtJQUVyRSxNQUFNLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBQyxHQUFHLElBQUksQ0FBQztJQUMvQixNQUFNLEVBQUMsS0FBSyxFQUFDLEdBQUcsTUFBTSxDQUFDO0lBQ3ZCLE1BQU0sU0FBUyxHQUFHLE9BQU8sQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUV0RCxPQUFPLFFBQVEsQ0FBQyxFQUFDLE1BQU0sRUFBRSxFQUFDLENBQUMsRUFBRSxTQUFTLENBQUMsa0JBQWtCLENBQUMsSUFBSSxFQUFDLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUM3RSxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFpQjtJQUN0QyxVQUFVLEVBQUUsSUFBSTtJQUNoQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsSUFBNkI7Q0FDMUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtJbWFnLCBJbWFnSW5wdXRzLCBLZXJuZWxDb25maWcsIEtlcm5lbEZ1bmMsIFRlbnNvckluZm99IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuaW1wb3J0IHtpZGVudGl0eX0gZnJvbSAnLi9JZGVudGl0eSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBpbWFnKGFyZ3M6IHtpbnB1dHM6IEltYWdJbnB1dHMsIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmR9KTpcbiAgICBUZW5zb3JJbmZvIHtcbiAgY29uc3Qge2lucHV0cywgYmFja2VuZH0gPSBhcmdzO1xuICBjb25zdCB7aW5wdXR9ID0gaW5wdXRzO1xuICBjb25zdCBpbnB1dERhdGEgPSBiYWNrZW5kLnRlbnNvck1hcC5nZXQoaW5wdXQuZGF0YUlkKTtcblxuICByZXR1cm4gaWRlbnRpdHkoe2lucHV0czoge3g6IGlucHV0RGF0YS5jb21wbGV4VGVuc29ySW5mb3MuaW1hZ30sIGJhY2tlbmR9KTtcbn1cblxuZXhwb3J0IGNvbnN0IGltYWdDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogSW1hZyxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBpbWFnIGFzIHVua25vd24gYXMgS2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nimport { ConcatProgram } from '../concat_webgpu';\nimport { concatImplCPU } from '../kernel_utils/shared';\nimport { complex } from './Complex';\nimport { imag } from './Imag';\nimport { real } from './Real';\nimport { reshape } from './Reshape';\nexport function concatImpl(inputs, axis, backend) {\n    const dtype = inputs[0].dtype;\n    if (dtype === 'complex64') {\n        const reals = inputs.map((t) => real({ inputs: { input: t }, backend }));\n        const imags = inputs.map((t) => imag({ inputs: { input: t }, backend }));\n        const realConcated = concatImpl(reals, axis, backend);\n        const imagConcated = concatImpl(imags, axis, backend);\n        const result = complex({ inputs: { real: realConcated, imag: imagConcated }, backend });\n        reals.forEach(r => backend.disposeData(r.dataId));\n        imags.forEach(i => backend.disposeData(i.dataId));\n        backend.disposeData(realConcated.dataId);\n        backend.disposeData(imagConcated.dataId);\n        return result;\n    }\n    let runOnCpu = backend.shouldExecuteOnCPU(inputs);\n    // Run on cpu if dtype is string. For string, the backend represents it\n    // as Uint8Array[], where each Uint8Array is a character. Given that the\n    // computation is only on the outer array, uploading the whole data onto\n    // gpu is wasteful. Also, currently webgpu doesn't have a design to\n    // upload and retrieve Uint8Array[] between cpu and gpu. Therefore, we\n    // just run the kernel on cpu if dtype is string.\n    if (dtype === 'string') {\n        runOnCpu = true;\n    }\n    if (runOnCpu) {\n        // Any concat of n-dimensional tensors across any axis can be reduced to\n        // a concatenation of two-dimensional tensors across the axis 1 by first\n        // partitioning the axes of the original tensors into those less than the\n        // axis to be concatenated and the rest. Then reshape the tensors\n        // into a two-dimensional tensor by collapsing these two sets of axes and\n        // concatenate the resulting matrices across the axis 1, finally reshaping\n        // the result to have the proper shape.\n        const tensors2D = inputs.map(t => {\n            const innerSize = util.sizeFromShape(t.shape.slice(axis));\n            const shape = [-1, innerSize];\n            return reshape({ inputs: { x: t }, backend, attrs: { shape } });\n        });\n        const inputsValShapes = tensors2D.map(t => {\n            return { vals: backend.readSync(t.dataId), shape: t.shape };\n        });\n        // Concats 2d tensors along axis=1.\n        const outShape = backend_util.computeOutShape(tensors2D.map(t => t.shape), 1 /* axis */);\n        const simplyConcat = tensors2D[0].shape[0] === 1;\n        const outVals = concatImplCPU(inputsValShapes, outShape, dtype, simplyConcat);\n        const finalOutShape = backend_util.computeOutShape(inputs.map(t => t.shape), axis);\n        const outInfo = backend.makeTensorInfo(finalOutShape, dtype, outVals);\n        tensors2D.forEach(t => backend.disposeData(t.dataId));\n        return outInfo;\n    }\n    // There is a storage buffer limitation in compute stage, one for output so\n    // the maximum for input is limits.maxStorageBuffersPerShaderStage - 1\n    const maxInputNum = backend.device.limits.maxStorageBuffersPerShaderStage - 1;\n    if (inputs.length > maxInputNum) {\n        const reducedInputs = [];\n        for (let i = 0; i < inputs.length; i += maxInputNum) {\n            const subArray = inputs.slice(i, i + maxInputNum);\n            reducedInputs.push(concatImpl(subArray, axis, backend));\n        }\n        const result = concatImpl(reducedInputs, axis, backend);\n        for (const i of reducedInputs) {\n            backend.disposeData(i.dataId);\n        }\n        return result;\n    }\n    const { tensors2D, outShape } = computeTensors2D(inputs, axis, backend);\n    const shapes = (tensors2D).map(t => t.shape);\n    const program = new ConcatProgram(shapes);\n    const uniformData = [];\n    const offsets = new Array(shapes.length - 1);\n    if (offsets.length > 0) {\n        offsets[0] = shapes[0][1];\n        uniformData.push({ type: 'int32', data: [offsets[0]] });\n        for (let i = 1; i < offsets.length; i++) {\n            offsets[i] = offsets[i - 1] + shapes[i][1];\n            uniformData.push({ type: 'int32', data: [offsets[i]] });\n        }\n    }\n    const res = backend.runWebGPUProgram(program, tensors2D, tensors2D[0].dtype, uniformData);\n    tensors2D.forEach(r => backend.disposeData(r.dataId));\n    const reshapedResult = reshape({ inputs: { x: res }, backend, attrs: { shape: outShape } });\n    backend.disposeData(res.dataId);\n    return reshapedResult;\n}\nfunction computeTensors2D(inputs, axis, backend) {\n    const outShape = backend_util.computeOutShape(inputs.map(t => t.shape), axis);\n    const tensors2D = inputs.map(t => reshape({\n        inputs: { x: t },\n        backend,\n        attrs: {\n            shape: [\n                util.sizeFromShape(t.shape.slice(0, axis)),\n                util.sizeFromShape(t.shape.slice(axis))\n            ]\n        }\n    }));\n    return { tensors2D, outShape };\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Concat, util } from '@tensorflow/tfjs-core';\nimport { concatImpl } from './Concat_impl';\nimport { identity } from './Identity';\nexport function concat(args) {\n    const { inputs, backend, attrs } = args;\n    const { axis } = attrs;\n    const $axis = util.parseAxisParam(axis, inputs[0].shape)[0];\n    const shapes = inputs.map(t => t.shape);\n    backend_util.assertParamsConsistent(shapes, $axis);\n    const outShape = backend_util.computeOutShape(inputs.map(t => t.shape), $axis);\n    if (util.sizeFromShape(outShape) === 0) {\n        return backend.makeTensorInfo(outShape, inputs[0].dtype, []);\n    }\n    // Keep only non-empty tensors (ignore tensors with 0 in their shape).\n    const $inputs = inputs.filter(t => util.sizeFromShape(t.shape) > 0);\n    if ($inputs.length === 1) {\n        return identity({ inputs: { x: $inputs[0] }, backend });\n    }\n    return concatImpl($inputs, $axis, backend);\n}\nexport const concatConfig = {\n    kernelName: Concat,\n    backendName: 'webgpu',\n    kernelFunc: concat\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29uY2F0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9Db25jYXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLFlBQVksRUFBRSxNQUFNLEVBQW1FLElBQUksRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBSWxJLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLFlBQVksQ0FBQztBQUVwQyxNQUFNLFVBQVUsTUFBTSxDQUNsQixJQUF3RTtJQUUxRSxNQUFNLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFDdEMsTUFBTSxFQUFDLElBQUksRUFBQyxHQUFHLEtBQUssQ0FBQztJQUVyQixNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFNUQsTUFBTSxNQUFNLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN4QyxZQUFZLENBQUMsc0JBQXNCLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBRW5ELE1BQU0sUUFBUSxHQUNWLFlBQVksQ0FBQyxlQUFlLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNsRSxJQUFJLElBQUksQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxFQUFFO1FBQ3RDLE9BQU8sT0FBTyxDQUFDLGNBQWMsQ0FBQyxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQztLQUM5RDtJQUVELHNFQUFzRTtJQUN0RSxNQUFNLE9BQU8sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDcEUsSUFBSSxPQUFPLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtRQUN4QixPQUFPLFFBQVEsQ0FBQyxFQUFDLE1BQU0sRUFBRSxFQUFDLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUMsRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0tBQ3JEO0lBRUQsT0FBTyxVQUFVLENBQUMsT0FBTyxFQUFFLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQztBQUM3QyxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFpQjtJQUN4QyxVQUFVLEVBQUUsTUFBTTtJQUNsQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsTUFBK0I7Q0FDNUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtiYWNrZW5kX3V0aWwsIENvbmNhdCwgQ29uY2F0QXR0cnMsIENvbmNhdElucHV0cywgS2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBUZW5zb3JJbmZvLCB1dGlsfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcblxuaW1wb3J0IHtjb25jYXRJbXBsfSBmcm9tICcuL0NvbmNhdF9pbXBsJztcbmltcG9ydCB7aWRlbnRpdHl9IGZyb20gJy4vSWRlbnRpdHknO1xuXG5leHBvcnQgZnVuY3Rpb24gY29uY2F0KFxuICAgIGFyZ3M6IHtpbnB1dHM6IENvbmNhdElucHV0cywgYXR0cnM6IENvbmNhdEF0dHJzLCBiYWNrZW5kOiBXZWJHUFVCYWNrZW5kfSk6XG4gICAgVGVuc29ySW5mbyB7XG4gIGNvbnN0IHtpbnB1dHMsIGJhY2tlbmQsIGF0dHJzfSA9IGFyZ3M7XG4gIGNvbnN0IHtheGlzfSA9IGF0dHJzO1xuXG4gIGNvbnN0ICRheGlzID0gdXRpbC5wYXJzZUF4aXNQYXJhbShheGlzLCBpbnB1dHNbMF0uc2hhcGUpWzBdO1xuXG4gIGNvbnN0IHNoYXBlcyA9IGlucHV0cy5tYXAodCA9PiB0LnNoYXBlKTtcbiAgYmFja2VuZF91dGlsLmFzc2VydFBhcmFtc0NvbnNpc3RlbnQoc2hhcGVzLCAkYXhpcyk7XG5cbiAgY29uc3Qgb3V0U2hhcGUgPVxuICAgICAgYmFja2VuZF91dGlsLmNvbXB1dGVPdXRTaGFwZShpbnB1dHMubWFwKHQgPT4gdC5zaGFwZSksICRheGlzKTtcbiAgaWYgKHV0aWwuc2l6ZUZyb21TaGFwZShvdXRTaGFwZSkgPT09IDApIHtcbiAgICByZXR1cm4gYmFja2VuZC5tYWtlVGVuc29ySW5mbyhvdXRTaGFwZSwgaW5wdXRzWzBdLmR0eXBlLCBbXSk7XG4gIH1cblxuICAvLyBLZWVwIG9ubHkgbm9uLWVtcHR5IHRlbnNvcnMgKGlnbm9yZSB0ZW5zb3JzIHdpdGggMCBpbiB0aGVpciBzaGFwZSkuXG4gIGNvbnN0ICRpbnB1dHMgPSBpbnB1dHMuZmlsdGVyKHQgPT4gdXRpbC5zaXplRnJvbVNoYXBlKHQuc2hhcGUpID4gMCk7XG4gIGlmICgkaW5wdXRzLmxlbmd0aCA9PT0gMSkge1xuICAgIHJldHVybiBpZGVudGl0eSh7aW5wdXRzOiB7eDogJGlucHV0c1swXX0sIGJhY2tlbmR9KTtcbiAgfVxuXG4gIHJldHVybiBjb25jYXRJbXBsKCRpbnB1dHMsICRheGlzLCBiYWNrZW5kKTtcbn1cblxuZXhwb3J0IGNvbnN0IGNvbmNhdENvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBDb25jYXQsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogY29uY2F0IGFzIHVua25vd24gYXMgS2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { activationFnSnippet, biasActivationSnippet } from './activation_util';\nimport { makeMatMulPackedSource, makeMatMulPackedVec4Source } from './matmul_packed_webgpu';\nimport { typeSnippet } from './webgpu_program';\nimport { computeDispatch, computeWorkgroupSizeForConv2d, computeWorkPerThreadForConv2d } from './webgpu_util';\nfunction conv2dCommonSnippet(isChannelsLast, fitAOuter, fitBOuter, fitInner, addBias = false, activation = null, hasPreluActivationWeights = false, innerElementSizeX = 4, innerElementSizeW = 4, innerElementSize = 4) {\n    const getXSnippet = (innerElementSize) => {\n        switch (innerElementSize) {\n            case 1:\n                return 'resData = f32(x[xIndex]);';\n            case 3:\n                return 'resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);';\n            case 4:\n                return 'resData = vec4<f32>(x[xIndex / 4]);';\n            default:\n                throw new Error(`innerElementSize ${innerElementSize} is not supported.`);\n        }\n    };\n    const getWSnippet = (innerElementSize) => {\n        switch (innerElementSize) {\n            case 1:\n                return 'return f32(W[row * uniforms.wShape[3] + col]);';\n            case 4:\n                return 'return vec4<f32>(W[(row * uniforms.wShape[3] + col) / 4]);';\n            default:\n                throw new Error(`innerElementSize ${innerElementSize} is not supported.`);\n        }\n    };\n    const coordASnippet = isChannelsLast ? `\n      let coord = vec4<i32>(batch, xRow, xCol, xCh);\n      ` :\n        `\n      let coord = vec4<i32>(batch, xCh, xRow, xCol);\n      `;\n    const coordResSnippet = isChannelsLast ? `\n      let coords = vec4<i32>(\n        batch,\n        row / outWidth,\n        row % outWidth,\n        col);\n      ` :\n        `\n      let coords = vec4<i32>(\n        batch,\n        row,\n        col / outWidth,\n        col % outWidth);\n      `;\n    const xHight = isChannelsLast ? 'uniforms.xShape[1]' : 'uniforms.xShape[2]';\n    const xWidth = isChannelsLast ? 'uniforms.xShape[2]' : 'uniforms.xShape[3]';\n    const row = isChannelsLast ? 'row' : 'col';\n    const col = isChannelsLast ? 'col' : 'row';\n    const readXSnippet = `\n      let inChannels = uniforms.wShape[2];\n      let outWidth = ${isChannelsLast ? 'uniforms.outShape[2]' : 'uniforms.outShape[3]'};\n      let outRow = ${row} / outWidth;\n      let outCol = ${row} % outWidth;\n\n      let WRow = ${col} / (uniforms.filterDims[1] * inChannels);\n      let WCol = ${col} / inChannels % uniforms.filterDims[1];\n      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];\n      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];\n      let xCh = ${col} % inChannels;\n      var resData = ${typeSnippet(innerElementSizeX)}(0.0);\n      // The bounds checking is always needed since we use it to pad zero for\n      // the 'same' padding type.\n      if (xRow >= 0 && xRow < ${xHight} && xCol >= 0 && xCol < ${xWidth}) {\n        ${coordASnippet}\n        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);\n        ${getXSnippet(innerElementSizeX)}\n      }\n      return resData;`;\n    const sampleX = isChannelsLast ? (fitAOuter && fitInner ? `\n      ${readXSnippet}` :\n        `\n      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n        ${readXSnippet}\n      }\n      return ${typeSnippet(innerElementSizeX)}(0.0);`) :\n        (fitInner && fitBOuter ? `\n      ${readXSnippet}` :\n            `\n      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {\n        ${readXSnippet}\n      }\n      return ${typeSnippet(innerElementSizeX)}(0.0);`);\n    const sampleW = `${getWSnippet(innerElementSizeW)}`;\n    const resType = typeSnippet(innerElementSize);\n    const aType = isChannelsLast ? typeSnippet(innerElementSizeX) :\n        typeSnippet(innerElementSizeW);\n    const bType = isChannelsLast ? typeSnippet(innerElementSizeW) :\n        typeSnippet(innerElementSizeX);\n    const userCode = `\n      ${activationFnSnippet(activation, hasPreluActivationWeights, innerElementSize === 4, 4)}\n      fn mm_readA(batch: i32, row : i32, col : i32) -> ${aType} {\n        ${isChannelsLast ? sampleX : sampleW}\n      }\n\n      fn mm_readB(batch: i32, row : i32, col : i32) -> ${bType} {\n        ${isChannelsLast ? sampleW : sampleX}\n      }\n\n      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ${resType}) {\n        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)\n        {\n        var value = valueIn;\n        let outWidth = ${isChannelsLast ? 'uniforms.outShape[2]' : 'uniforms.outShape[3]'};\n        ${coordResSnippet}\n        ${biasActivationSnippet(addBias, activation)}\n        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }`;\n    return userCode;\n}\nexport class Conv2DMMProgram {\n    constructor(convInfo, dimAOuter, dimBOuter, dimInner, addBias = false, activation = null, hasPreluActivationWeights = false, sequentialAccessByThreads = false) {\n        this.variableNames = ['x', 'W'];\n        this.uniforms = `filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,`;\n        this.outputShape = convInfo.outShape;\n        this.isChannelsLast = convInfo.dataFormat === 'channelsLast';\n        this.isVec4 =\n            (((convInfo.inChannels % 4 === 0 || convInfo.inChannels % 3 === 0) &&\n                this.isChannelsLast) ||\n                (convInfo.outWidth % 4 === 0 && !this.isChannelsLast)) &&\n                convInfo.outChannels % 4 === 0;\n        this.dispatchLayout = this.isChannelsLast ? { x: [3], y: [1, 2], z: [0] } :\n            { x: [2, 3], y: [1], z: [0] };\n        this.workgroupSize = computeWorkgroupSizeForConv2d(this.dispatchLayout, this.outputShape, this.isVec4);\n        this.elementsPerThread = computeWorkPerThreadForConv2d(this.dispatchLayout, this.outputShape, this.isVec4);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize, this.elementsPerThread);\n        if (this.isVec4) {\n            this.outputComponent = 4;\n            if (this.isChannelsLast && convInfo.inChannels % 4 !== 0) {\n                this.innerElementSize = 3;\n                this.variableComponents = [1, 4];\n            }\n            else {\n                this.innerElementSize = 4;\n                this.variableComponents = [4, 4];\n            }\n            if (addBias) {\n                this.variableNames.push('bias');\n                this.variableComponents.push(4);\n            }\n            if (hasPreluActivationWeights) {\n                this.variableNames.push('preluActivationWeights');\n                this.variableComponents.push(4);\n            }\n        }\n        else {\n            this.innerElementSize = this.elementsPerThread[0];\n            if (addBias) {\n                this.variableNames.push('bias');\n            }\n            if (hasPreluActivationWeights) {\n                this.variableNames.push('preluActivationWeights');\n            }\n        }\n        this.sequentialAccessByThreads = sequentialAccessByThreads;\n        this.addBias = addBias;\n        this.activation = activation;\n        this.hasPreluActivationWeights = hasPreluActivationWeights;\n        this.tileAOuter = this.workgroupSize[1] * this.elementsPerThread[1];\n        this.tileBOuter = this.workgroupSize[0] * this.elementsPerThread[0];\n        this.tileInner = Math.max(this.workgroupSize[0] * this.innerElementSize, this.workgroupSize[1]);\n        this.fitAOuter = dimAOuter % this.tileAOuter === 0;\n        this.fitBOuter = dimBOuter % this.tileBOuter === 0;\n        this.fitInner = dimInner % this.tileInner === 0;\n        this.shaderKey = `conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`;\n    }\n    getUserCode() {\n        const matMulSource = this.isVec4 ?\n            makeMatMulPackedVec4Source(this.elementsPerThread, this.workgroupSize, !this.isChannelsLast, this.tileInner) :\n            makeMatMulPackedSource(this.elementsPerThread, this.workgroupSize, !this.isChannelsLast, this.tileInner, false, null, this.sequentialAccessByThreads);\n        const elementsSize = this.isVec4 ? [this.innerElementSize, 4, 4] : [1, 1, 1];\n        const userCode = `\n    ${conv2dCommonSnippet(this.isChannelsLast, this.fitAOuter, this.fitBOuter, this.fitInner, this.addBias, this.activation, this.hasPreluActivationWeights, elementsSize[0], elementsSize[1], elementsSize[2])}\n    ${matMulSource}\n  `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { activationFnSnippet, biasActivationSnippet } from './activation_util';\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch } from './webgpu_util';\nexport class Conv2DNaiveProgram {\n    constructor(convInfo, addBias = false, activation = null, hasPreluActivationWeights = false) {\n        this.variableNames = ['x', 'W'];\n        this.uniforms = 'filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,';\n        this.workgroupSize = [4, 4, 8];\n        this.outputShape = convInfo.outShape;\n        this.isChannelsLast = convInfo.dataFormat === 'channelsLast';\n        this.dispatchLayout = this.isChannelsLast ? { x: [2], y: [1], z: [0, 3] } :\n            { x: [3], y: [2], z: [0, 1] };\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.addBias = addBias;\n        this.activation = activation;\n        this.hasPreluActivationWeights = hasPreluActivationWeights;\n        if (addBias) {\n            this.variableNames.push('bias');\n        }\n        if (hasPreluActivationWeights) {\n            this.variableNames.push('preluActivationWeights');\n        }\n        this.shaderKey = `conv2dnaive_${this.activation}_${this.isChannelsLast}`;\n    }\n    getUserCode() {\n        const userCode = `\n       ${activationFnSnippet(this.activation, this.hasPreluActivationWeights, false, 4)}\n       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{\n         let coords = vec4<i32>(batch, row, col, chan);\n         if (coordsInBounds4D(coords, uniforms.xShape)) {\n           return  getX(batch, row, col, chan);\n         } else {\n          return 0.0;\n         }\n       }\n       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{\n         let coords = vec4<i32>(row, col, xChannel, outChannel);\n         if(coordsInBounds4D(coords, uniforms.wShape)) {\n           return getW(row, col, xChannel, outChannel);\n          } else {\n            return 0.0;\n          }\n       }\n       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {\n         let coords = ${this.isChannelsLast ? `vec4<i32>(batch, row, col, chan);` :\n            `vec4<i32>(batch, chan, row, col);`}\n         if (coordsInBounds4D(coords, uniforms.outShape)) {\n           var value = valueIn;\n           ${biasActivationSnippet(this.addBias, this.activation)}\n           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);\n         }\n       }\n       ${main('index')} {\n         let coords = getOutputCoords();\n         let batch = coords[0];\n         let outChannel = ${this.isChannelsLast ? `coords[3];` : `coords[1];`}\n         let outRow = ${this.isChannelsLast ? `coords[1];` : `coords[2];`}\n         let outCol = ${this.isChannelsLast ? `coords[2];` : `coords[3];`}\n         var acc : f32 = 0.0;\n         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {\n           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {\n             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];\n             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];\n             for (var xChannel = 0; xChannel < ${this.isChannelsLast ? `uniforms.xShape[3];` :\n            `uniforms.xShape[1];`} xChannel = xChannel + 1) {\n               ${this.isChannelsLast ? `let v = readInp(batch, xRow, xCol, xChannel);` :\n            `let v = readInp(batch, xChannel, xRow, xCol);`}\n               let f = readFilt(row, col, xChannel, outChannel);\n               acc = acc + v * f;\n             }\n           }\n         }\n         writeResult(batch, outRow, outCol, outChannel, acc);\n       }\n     `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class Im2ColProgram {\n    constructor(outputShape, isChannelsLast) {\n        this.variableNames = ['x'];\n        this.uniforms = `pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,\n       inChannels : i32,`;\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = outputShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.isChannelsLast = isChannelsLast;\n        this.shaderKey = `im2col_${this.isChannelsLast}`;\n    }\n    getUserCode() {\n        const rowDim = this.isChannelsLast ? 1 : 2;\n        const colDim = this.isChannelsLast ? 2 : 3;\n        const row = this.isChannelsLast ? 'coords[1]' : 'coords[2]';\n        const col = this.isChannelsLast ? 'coords[2]' : 'coords[1]';\n        const getXSnippet = this.isChannelsLast ? 'getX(batch, xRow, xCol, ch)' :\n            'getX(batch, ch, xRow, xCol)';\n        const userCode = `\n    ${main('index')} {\n      let coords = getCoordsFromIndex(index);\n      if(index < uniforms.size) {\n        let batch = coords[0];\n        let row = ${row};\n        let col = ${col};\n        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];\n        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);\n        var value = 0.0;\n        if(xRow < uniforms.xShape[${rowDim}] && xRow >= 0) {\n          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -\n              uniforms.pads[1];\n          let xCol = offsetX + uniforms.dilations[1] * ((col %\n              uniforms.itemsPerBlockRow) / uniforms.inChannels);\n          let ch = col % uniforms.inChannels;\n          if(xCol < uniforms.xShape[${colDim}] && xCol >= 0) {\n            value = ${getXSnippet};\n          }\n        }\n        setOutputAtIndex(index, value);\n      }\n    }\n   `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW0yY29sX3dlYmdwdS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2ltMmNvbF93ZWJncHUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLG1CQUFtQixJQUFJLElBQUksRUFBZ0IsTUFBTSxrQkFBa0IsQ0FBQztBQUM1RSxPQUFPLEVBQUMsZUFBZSxFQUFFLGtCQUFrQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRWxFLE1BQU0sT0FBTyxhQUFhO0lBYXhCLFlBQVksV0FBcUIsRUFBRSxjQUF1QjtRQVoxRCxrQkFBYSxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdEIsYUFBUSxHQUNKO3lCQUNtQixDQUFDO1FBS3hCLGtCQUFhLEdBQTZCLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUVyRCxTQUFJLEdBQUcsSUFBSSxDQUFDO1FBR1YsSUFBSSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUM7UUFDL0IsSUFBSSxDQUFDLGNBQWMsR0FBRyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxlQUFlLENBQzNCLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDL0QsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDckMsSUFBSSxDQUFDLFNBQVMsR0FBRyxVQUFVLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUNuRCxDQUFDO0lBRUQsV0FBVztRQUNULE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzNDLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRTNDLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDO1FBQzVELE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDO1FBQzVELE1BQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLDZCQUE2QixDQUFDLENBQUM7WUFDL0IsNkJBQTZCLENBQUM7UUFFeEUsTUFBTSxRQUFRLEdBQUc7TUFDZixJQUFJLENBQUMsT0FBTyxDQUFDOzs7O29CQUlDLEdBQUc7b0JBQ0gsR0FBRzs7OztvQ0FJYSxNQUFNOzs7Ozs7c0NBTUosTUFBTTtzQkFDdEIsV0FBVzs7Ozs7O0lBTTdCLENBQUM7UUFDRCxPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7Z2V0TWFpbkhlYWRlclN0cmluZyBhcyBtYWluLCBXZWJHUFVQcm9ncmFtfSBmcm9tICcuL3dlYmdwdV9wcm9ncmFtJztcbmltcG9ydCB7Y29tcHV0ZURpc3BhdGNoLCBmbGF0RGlzcGF0Y2hMYXlvdXR9IGZyb20gJy4vd2ViZ3B1X3V0aWwnO1xuXG5leHBvcnQgY2xhc3MgSW0yQ29sUHJvZ3JhbSBpbXBsZW1lbnRzIFdlYkdQVVByb2dyYW0ge1xuICB2YXJpYWJsZU5hbWVzID0gWyd4J107XG4gIHVuaWZvcm1zID1cbiAgICAgIGBwYWRzIDogdmVjMjxpMzI+LCBzdHJpZGVzIDogdmVjMjxpMzI+LCBkaWxhdGlvbnMgOiB2ZWMyPGkzMj4sIG91dFdpZHRoIDogaTMyLCBpdGVtc1BlckJsb2NrUm93IDogaTMyLFxuICAgICAgIGluQ2hhbm5lbHMgOiBpMzIsYDtcbiAgb3V0cHV0U2hhcGU6IG51bWJlcltdO1xuICBzaGFkZXJLZXk6IHN0cmluZztcbiAgZGlzcGF0Y2hMYXlvdXQ6IHt4OiBudW1iZXJbXX07XG4gIGRpc3BhdGNoOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl07XG4gIHdvcmtncm91cFNpemU6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXSA9IFs2NCwgMSwgMV07XG4gIGlzQ2hhbm5lbHNMYXN0OiBib29sZWFuO1xuICBzaXplID0gdHJ1ZTtcblxuICBjb25zdHJ1Y3RvcihvdXRwdXRTaGFwZTogbnVtYmVyW10sIGlzQ2hhbm5lbHNMYXN0OiBib29sZWFuKSB7XG4gICAgdGhpcy5vdXRwdXRTaGFwZSA9IG91dHB1dFNoYXBlO1xuICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQgPSBmbGF0RGlzcGF0Y2hMYXlvdXQodGhpcy5vdXRwdXRTaGFwZSk7XG4gICAgdGhpcy5kaXNwYXRjaCA9IGNvbXB1dGVEaXNwYXRjaChcbiAgICAgICAgdGhpcy5kaXNwYXRjaExheW91dCwgdGhpcy5vdXRwdXRTaGFwZSwgdGhpcy53b3JrZ3JvdXBTaXplKTtcbiAgICB0aGlzLmlzQ2hhbm5lbHNMYXN0ID0gaXNDaGFubmVsc0xhc3Q7XG4gICAgdGhpcy5zaGFkZXJLZXkgPSBgaW0yY29sXyR7dGhpcy5pc0NoYW5uZWxzTGFzdH1gO1xuICB9XG5cbiAgZ2V0VXNlckNvZGUoKTogc3RyaW5nIHtcbiAgICBjb25zdCByb3dEaW0gPSB0aGlzLmlzQ2hhbm5lbHNMYXN0ID8gMSA6IDI7XG4gICAgY29uc3QgY29sRGltID0gdGhpcy5pc0NoYW5uZWxzTGFzdCA/IDIgOiAzO1xuXG4gICAgY29uc3Qgcm93ID0gdGhpcy5pc0NoYW5uZWxzTGFzdCA/ICdjb29yZHNbMV0nIDogJ2Nvb3Jkc1syXSc7XG4gICAgY29uc3QgY29sID0gdGhpcy5pc0NoYW5uZWxzTGFzdCA/ICdjb29yZHNbMl0nIDogJ2Nvb3Jkc1sxXSc7XG4gICAgY29uc3QgZ2V0WFNuaXBwZXQgPSB0aGlzLmlzQ2hhbm5lbHNMYXN0ID8gJ2dldFgoYmF0Y2gsIHhSb3csIHhDb2wsIGNoKScgOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdnZXRYKGJhdGNoLCBjaCwgeFJvdywgeENvbCknO1xuXG4gICAgY29uc3QgdXNlckNvZGUgPSBgXG4gICAgJHttYWluKCdpbmRleCcpfSB7XG4gICAgICBsZXQgY29vcmRzID0gZ2V0Q29vcmRzRnJvbUluZGV4KGluZGV4KTtcbiAgICAgIGlmKGluZGV4IDwgdW5pZm9ybXMuc2l6ZSkge1xuICAgICAgICBsZXQgYmF0Y2ggPSBjb29yZHNbMF07XG4gICAgICAgIGxldCByb3cgPSAke3Jvd307XG4gICAgICAgIGxldCBjb2wgPSAke2NvbH07XG4gICAgICAgIGxldCBvZmZzZXRZID0gKHJvdyAvIHVuaWZvcm1zLm91dFdpZHRoKSAqIHVuaWZvcm1zLnN0cmlkZXNbMF0gLSB1bmlmb3Jtcy5wYWRzWzBdO1xuICAgICAgICBsZXQgeFJvdyA9IG9mZnNldFkgKyB1bmlmb3Jtcy5kaWxhdGlvbnNbMF0gKiAoY29sIC8gdW5pZm9ybXMuaXRlbXNQZXJCbG9ja1Jvdyk7XG4gICAgICAgIHZhciB2YWx1ZSA9IDAuMDtcbiAgICAgICAgaWYoeFJvdyA8IHVuaWZvcm1zLnhTaGFwZVske3Jvd0RpbX1dICYmIHhSb3cgPj0gMCkge1xuICAgICAgICAgIGxldCBvZmZzZXRYID0gKHJvdyAlIHVuaWZvcm1zLm91dFdpZHRoKSAqIHVuaWZvcm1zLnN0cmlkZXNbMV0gLVxuICAgICAgICAgICAgICB1bmlmb3Jtcy5wYWRzWzFdO1xuICAgICAgICAgIGxldCB4Q29sID0gb2Zmc2V0WCArIHVuaWZvcm1zLmRpbGF0aW9uc1sxXSAqICgoY29sICVcbiAgICAgICAgICAgICAgdW5pZm9ybXMuaXRlbXNQZXJCbG9ja1JvdykgLyB1bmlmb3Jtcy5pbkNoYW5uZWxzKTtcbiAgICAgICAgICBsZXQgY2ggPSBjb2wgJSB1bmlmb3Jtcy5pbkNoYW5uZWxzO1xuICAgICAgICAgIGlmKHhDb2wgPCB1bmlmb3Jtcy54U2hhcGVbJHtjb2xEaW19XSAmJiB4Q29sID49IDApIHtcbiAgICAgICAgICAgIHZhbHVlID0gJHtnZXRYU25pcHBldH07XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHNldE91dHB1dEF0SW5kZXgoaW5kZXgsIHZhbHVlKTtcbiAgICAgIH1cbiAgICB9XG4gICBgO1xuICAgIHJldHVybiB1c2VyQ29kZTtcbiAgfVxufVxuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from '@tensorflow/tfjs-core';\nimport { Conv2DMMProgram } from '../conv2d_mm_webgpu';\nimport { Conv2DNaiveProgram } from '../conv2d_naive_webgpu';\nimport { Im2ColProgram } from '../im2col_webgpu';\nimport { batchMatMulImpl } from './BatchMatMul_impl';\nimport { reshape } from './Reshape';\n// conv2dByMatMul fuses height and width into one dimension to compute\n// batchMatMul, so bias and activation weights are also supposed to fuse the two\n// dimensions into one.\n//\n// This function computes the target shape for fusing height and width\n// dimensions. Returning null means the shape is already compatible.\nfunction getShapeForBatchMatMul(shape, isChannelsLast) {\n    const length = shape.length;\n    if (length >= 3) {\n        return isChannelsLast ?\n            [\n                ...shape.slice(0, -3) /* batch */,\n                shape[length - 3] * shape[length - 2] /* height * width */,\n                shape[length - 1] /* channel */\n            ] :\n            [\n                ...shape.slice(0, -3) /* batch */, shape[length - 3] /* channel */,\n                shape[length - 2] * shape[length - 1] /* height * width */\n            ];\n    }\n    else if (!isChannelsLast && length === 1 && shape[0] > 1) {\n        return [shape[0], 1];\n    }\n    else {\n        return null;\n    }\n}\n// For 1x1 kernels that iterate through every point in the input, convolution\n// can be expressed as matrix multiplication (without need for memory\n// remapping).\nfunction conv2dByMatMul({ x, filter, convInfo, backend, bias = null, preluActivationWeights = null, leakyreluAlpha = 0, activation = null }) {\n    const isChannelsLast = convInfo.dataFormat === 'channelsLast';\n    const transposeA = isChannelsLast ? false : true;\n    const transposeB = false;\n    const sameSize = isChannelsLast &&\n        convInfo.filterHeight === convInfo.inHeight &&\n        convInfo.filterWidth === convInfo.inWidth &&\n        convInfo.padInfo.type === 'VALID';\n    const intermediates = [];\n    let xReshaped;\n    let filterReshaped;\n    if (sameSize) {\n        const sharedDim = convInfo.inHeight * convInfo.inWidth * convInfo.inChannels;\n        xReshaped = reshape({\n            inputs: { x },\n            backend,\n            attrs: { shape: [1, convInfo.batchSize, sharedDim] }\n        });\n        filterReshaped = reshape({\n            inputs: { x: filter },\n            backend,\n            attrs: { shape: [1, sharedDim, convInfo.outChannels] }\n        });\n    }\n    else {\n        xReshaped = reshape({\n            inputs: { x },\n            backend,\n            attrs: {\n                shape: isChannelsLast ?\n                    [\n                        convInfo.batchSize, convInfo.inHeight * convInfo.inWidth,\n                        convInfo.inChannels\n                    ] :\n                    [\n                        convInfo.batchSize, convInfo.inChannels,\n                        convInfo.inHeight * convInfo.inWidth\n                    ]\n            }\n        });\n        filterReshaped = reshape({\n            inputs: { x: filter },\n            backend,\n            attrs: { shape: [1, convInfo.inChannels, convInfo.outChannels] }\n        });\n    }\n    intermediates.push(xReshaped);\n    intermediates.push(filterReshaped);\n    if (preluActivationWeights != null) {\n        const targetShape = getShapeForBatchMatMul(preluActivationWeights.shape, isChannelsLast);\n        if (targetShape != null) {\n            preluActivationWeights = reshape({\n                inputs: { x: preluActivationWeights },\n                backend,\n                attrs: { shape: targetShape }\n            });\n            intermediates.push(preluActivationWeights);\n        }\n    }\n    if (bias != null) {\n        const targetShape = getShapeForBatchMatMul(bias.shape, isChannelsLast);\n        if (targetShape != null) {\n            bias = reshape({ inputs: { x: bias }, backend, attrs: { shape: targetShape } });\n            intermediates.push(bias);\n        }\n    }\n    const result = batchMatMulImpl({\n        a: isChannelsLast ? xReshaped : filterReshaped,\n        b: isChannelsLast ? filterReshaped : xReshaped,\n        transposeA,\n        transposeB,\n        backend,\n        bias,\n        activation,\n        preluActivationWeights,\n        leakyreluAlpha\n    });\n    const out = reshape({ inputs: { x: result }, backend, attrs: { shape: convInfo.outShape } });\n    intermediates.push(result);\n    for (const i of intermediates) {\n        backend.disposeData(i.dataId);\n    }\n    return out;\n}\n// Implements the im2col algorithm as outlined in \"High Performance\n// Convolutional Neural Networks for Document Processing\" (Suvisoft, 2006)\nfunction conv2dWithIm2Col({ x, filter, convInfo, backend, bias = null, preluActivationWeights = null, leakyreluAlpha = 0, activation = null }) {\n    // Rearranges conv2d input so each block to be convolved over forms the\n    // row of a new matrix with shape [outHeight * outWidth,\n    // filterWidth * filterHeight * inChannels]. The filter is also rearranged so\n    // each output channel forms a col of a new matrix with shape [\n    // filterWidth * filterHeight * inChannels, outChannels]. The convolution is\n    // then computed by multiplying these matrices and reshaping the result.\n    const { filterWidth, filterHeight, inChannels, strideWidth, strideHeight, padInfo, outWidth, outHeight, dilationWidth, dilationHeight, dataFormat } = convInfo;\n    const isChannelsLast = dataFormat === 'channelsLast';\n    const sharedDim = filterWidth * filterHeight * inChannels;\n    const numCols = outHeight * outWidth;\n    const x2ColShape = isChannelsLast ? [convInfo.batchSize, numCols, sharedDim] :\n        [convInfo.batchSize, sharedDim, numCols];\n    const im2ColProgram = new Im2ColProgram(x2ColShape, isChannelsLast);\n    const dimensions = [\n        { type: 'int32', data: [padInfo.top, padInfo.left] },\n        { type: 'int32', data: [strideHeight, strideWidth] },\n        { type: 'int32', data: [dilationHeight, dilationWidth] },\n        { type: 'int32', data: [outWidth] },\n        { type: 'int32', data: [inChannels * filterWidth] },\n        { type: 'int32', data: [inChannels] }\n    ];\n    const x2Col = backend.runWebGPUProgram(im2ColProgram, [x], x.dtype, dimensions);\n    const intermediates = [];\n    intermediates.push(x2Col);\n    const filterReshaped = reshape({ inputs: { x: filter }, backend, attrs: { shape: [1, sharedDim, -1] } });\n    intermediates.push(filterReshaped);\n    if (preluActivationWeights != null) {\n        const targetShape = getShapeForBatchMatMul(preluActivationWeights.shape, isChannelsLast);\n        if (targetShape != null) {\n            preluActivationWeights = reshape({\n                inputs: { x: preluActivationWeights },\n                backend,\n                attrs: { shape: targetShape }\n            });\n            intermediates.push(preluActivationWeights);\n        }\n    }\n    if (bias != null) {\n        const targetShape = getShapeForBatchMatMul(bias.shape, isChannelsLast);\n        if (targetShape != null) {\n            bias = reshape({ inputs: { x: bias }, backend, attrs: { shape: targetShape } });\n            intermediates.push(bias);\n        }\n    }\n    const transposeA = isChannelsLast ? false : true;\n    const transposeB = false;\n    const result = batchMatMulImpl({\n        a: isChannelsLast ? x2Col : filterReshaped,\n        b: isChannelsLast ? filterReshaped : x2Col,\n        transposeA,\n        transposeB,\n        backend,\n        bias,\n        activation,\n        preluActivationWeights,\n        leakyreluAlpha\n    });\n    const out = reshape({ inputs: { x: result }, backend, attrs: { shape: convInfo.outShape } });\n    intermediates.push(result);\n    for (const i of intermediates) {\n        backend.disposeData(i.dataId);\n    }\n    return out;\n}\nexport function conv2DImpl({ x, filter, convInfo, backend, bias = null, preluActivationWeights = null, leakyreluAlpha = 0, activation = null }) {\n    const hasBias = bias != null;\n    const hasPreluActivationWeights = preluActivationWeights != null;\n    const isChannelsLast = convInfo.dataFormat === 'channelsLast';\n    const sameSize = isChannelsLast &&\n        convInfo.filterHeight === convInfo.inHeight &&\n        convInfo.filterWidth === convInfo.inWidth &&\n        convInfo.padInfo.type === 'VALID';\n    const useNaiveConv2d = env().getBool('WEBGPU_USE_NAIVE_CONV2D_DEBUG');\n    if (!useNaiveConv2d &&\n        (sameSize ||\n            (convInfo.filterHeight === 1 && convInfo.filterWidth === 1 &&\n                convInfo.dilationHeight === 1 && convInfo.dilationWidth === 1 &&\n                convInfo.strideHeight === 1 && convInfo.strideWidth === 1 &&\n                (convInfo.padInfo.type === 'SAME' ||\n                    convInfo.padInfo.type === 'VALID')))) {\n        return conv2dByMatMul({\n            x,\n            filter,\n            convInfo,\n            backend,\n            bias,\n            activation,\n            preluActivationWeights,\n            leakyreluAlpha\n        });\n    }\n    const thresholdFlagValue = env().getNumber('WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL');\n    const thresholdToIncreaseWorkgroups = thresholdFlagValue > -1 ?\n        thresholdFlagValue :\n        backend.thresholdToIncreaseWorkgroups;\n    const workgroupsBy32x32 = convInfo.batchSize *\n        Math.ceil((convInfo.outHeight * convInfo.outWidth) / 32) *\n        Math.ceil(convInfo.outChannels / 32);\n    if (env().getBool('WEBGPU_CONV_SEPARATE_IM2COL_SHADER') ||\n        workgroupsBy32x32 <= thresholdToIncreaseWorkgroups) {\n        return conv2dWithIm2Col({\n            x,\n            filter,\n            convInfo,\n            backend,\n            bias,\n            preluActivationWeights,\n            leakyreluAlpha,\n            activation\n        });\n    }\n    let program;\n    const padInfo = [convInfo.padInfo.top, convInfo.padInfo.left];\n    const dimensions = [\n        { type: 'int32', data: [convInfo.filterHeight, convInfo.filterWidth] },\n        { type: 'int32', data: [...padInfo] },\n        { type: 'int32', data: [convInfo.strideHeight, convInfo.strideWidth] },\n        { type: 'int32', data: [convInfo.dilationHeight, convInfo.dilationWidth] }\n    ];\n    if (useNaiveConv2d) {\n        program = new Conv2DNaiveProgram(convInfo, hasBias, activation, hasPreluActivationWeights);\n    }\n    else {\n        const dimAOuter = isChannelsLast ? convInfo.outHeight * convInfo.outWidth :\n            convInfo.outChannels;\n        const dimBOuter = isChannelsLast ? convInfo.outChannels :\n            convInfo.outHeight * convInfo.outWidth;\n        const dimInner = convInfo.filterHeight * convInfo.filterWidth * convInfo.inChannels;\n        dimensions.push({ type: 'int32', data: [dimAOuter] }, { type: 'int32', data: [dimBOuter] }, { type: 'int32', data: [dimInner] });\n        // Experiments show that sequential access is more friendly for Intel GPUs.\n        const sequentialAccessByThreads = backend.adapterInfo.isIntel();\n        program = new Conv2DMMProgram(convInfo, dimAOuter, dimBOuter, dimInner, hasBias, activation, hasPreluActivationWeights, sequentialAccessByThreads);\n    }\n    const intermediates = [];\n    const inputVar = [x, filter];\n    if (hasBias) {\n        if (!isChannelsLast && bias.shape.length === 1) {\n            bias = reshape({ inputs: { x: bias }, backend, attrs: { shape: [bias.shape[0], 1, 1] } });\n            intermediates.push(bias);\n        }\n        inputVar.push(bias);\n    }\n    if (hasPreluActivationWeights) {\n        if (!isChannelsLast && preluActivationWeights.shape.length === 1) {\n            preluActivationWeights = reshape({\n                inputs: { x: preluActivationWeights },\n                backend,\n                attrs: { shape: [preluActivationWeights.shape[0], 1, 1] }\n            });\n            intermediates.push(preluActivationWeights);\n        }\n        inputVar.push(preluActivationWeights);\n    }\n    if (activation === 'leakyrelu') {\n        dimensions.push({ type: 'float32', data: [leakyreluAlpha] });\n        program.uniforms += ' alpha : f32,';\n    }\n    const out = backend.runWebGPUProgram(program, inputVar, x.dtype, dimensions);\n    for (const i of intermediates) {\n        backend.disposeData(i.dataId);\n    }\n    return out;\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv2D } from '@tensorflow/tfjs-core';\nimport { conv2DImpl } from './Conv2D_impl';\nexport function conv2d(args) {\n    const { inputs, attrs, backend } = args;\n    const { x, filter } = inputs;\n    const { strides, pad, dataFormat, dilations, dimRoundingMode } = attrs;\n    const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n    const convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, dilations, pad, dimRoundingMode, false /* depthwise */, $dataFormat);\n    return conv2DImpl({ x, filter, convInfo, backend });\n}\nexport const conv2DConfig = {\n    kernelName: Conv2D,\n    backendName: 'webgpu',\n    kernelFunc: conv2d\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udjJELmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9Db252MkQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLFlBQVksRUFBRSxNQUFNLEVBQXNELE1BQU0sdUJBQXVCLENBQUM7QUFJaEgsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUV6QyxNQUFNLFVBQVUsTUFBTSxDQUNsQixJQUF3RTtJQUMxRSxNQUFNLEVBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFDdEMsTUFBTSxFQUFDLENBQUMsRUFBRSxNQUFNLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFDM0IsTUFBTSxFQUFDLE9BQU8sRUFBRSxHQUFHLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxlQUFlLEVBQUMsR0FBRyxLQUFLLENBQUM7SUFDckUsTUFBTSxXQUFXLEdBQUcsWUFBWSxDQUFDLHVCQUF1QixDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3JFLE1BQU0sUUFBUSxHQUFHLFlBQVksQ0FBQyxpQkFBaUIsQ0FDM0MsQ0FBQyxDQUFDLEtBQXlDLEVBQzNDLE1BQU0sQ0FBQyxLQUF5QyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsR0FBRyxFQUN6RSxlQUFlLEVBQUUsS0FBSyxDQUFDLGVBQWUsRUFBRSxXQUFXLENBQUMsQ0FBQztJQUN6RCxPQUFPLFVBQVUsQ0FBQyxFQUFDLENBQUMsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFDcEQsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBaUI7SUFDeEMsVUFBVSxFQUFFLE1BQU07SUFDbEIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLE1BQStCO0NBQzVDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7YmFja2VuZF91dGlsLCBDb252MkQsIENvbnYyREF0dHJzLCBDb252MkRJbnB1dHMsIEtlcm5lbENvbmZpZywgS2VybmVsRnVuY30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5cbmltcG9ydCB7Y29udjJESW1wbH0gZnJvbSAnLi9Db252MkRfaW1wbCc7XG5cbmV4cG9ydCBmdW5jdGlvbiBjb252MmQoXG4gICAgYXJnczoge2lucHV0czogQ29udjJESW5wdXRzLCBhdHRyczogQ29udjJEQXR0cnMsIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmR9KSB7XG4gIGNvbnN0IHtpbnB1dHMsIGF0dHJzLCBiYWNrZW5kfSA9IGFyZ3M7XG4gIGNvbnN0IHt4LCBmaWx0ZXJ9ID0gaW5wdXRzO1xuICBjb25zdCB7c3RyaWRlcywgcGFkLCBkYXRhRm9ybWF0LCBkaWxhdGlvbnMsIGRpbVJvdW5kaW5nTW9kZX0gPSBhdHRycztcbiAgY29uc3QgJGRhdGFGb3JtYXQgPSBiYWNrZW5kX3V0aWwuY29udmVydENvbnYyRERhdGFGb3JtYXQoZGF0YUZvcm1hdCk7XG4gIGNvbnN0IGNvbnZJbmZvID0gYmFja2VuZF91dGlsLmNvbXB1dGVDb252MkRJbmZvKFxuICAgICAgeC5zaGFwZSBhcyBbbnVtYmVyLCBudW1iZXIsIG51bWJlciwgbnVtYmVyXSxcbiAgICAgIGZpbHRlci5zaGFwZSBhcyBbbnVtYmVyLCBudW1iZXIsIG51bWJlciwgbnVtYmVyXSwgc3RyaWRlcywgZGlsYXRpb25zLCBwYWQsXG4gICAgICBkaW1Sb3VuZGluZ01vZGUsIGZhbHNlIC8qIGRlcHRod2lzZSAqLywgJGRhdGFGb3JtYXQpO1xuICByZXR1cm4gY29udjJESW1wbCh7eCwgZmlsdGVyLCBjb252SW5mbywgYmFja2VuZH0pO1xufVxuXG5leHBvcnQgY29uc3QgY29udjJEQ29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IENvbnYyRCxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBjb252MmQgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class Conv2DDerInputProgram {\n    constructor(convInfo) {\n        this.variableNames = ['dy', 'W'];\n        this.uniforms = 'filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,';\n        this.workgroupSize = [64, 1, 1];\n        this.size = false;\n        this.isVec4 = false;\n        this.workPerThread = 1;\n        this.outputShape = convInfo.inShape;\n        this.isChannelsLast = convInfo.dataFormat === 'channelsLast';\n        this.isVec4 = this.isChannelsLast && convInfo.outChannels % 4 === 0 &&\n            convInfo.inChannels % 4 === 0;\n        if (this.isVec4) {\n            // TODO: Expand to any value.\n            this.workPerThread = 2;\n            this.outputComponent = 4;\n            this.workgroupSize = [4, 4, 4];\n            this.dispatchLayout = { x: [3], y: [2], z: [0, 1] };\n            this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize, [4, this.workPerThread, 1]);\n        }\n        else {\n            this.size = true;\n            this.workPerThread = 1;\n            this.workgroupSize = [64, 1, 1];\n            this.dispatchLayout = flatDispatchLayout(this.outputShape);\n            this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        }\n        this.shaderKey = `conv2DDerInput_${this.isChannelsLast}_${this.isVec4}_${this.workPerThread}`;\n    }\n    getUserCode() {\n        const rowDim = this.isChannelsLast ? 1 : 2;\n        const colDim = this.isChannelsLast ? 2 : 3;\n        const channelDim = this.isChannelsLast ? 3 : 1;\n        const vec4Snippet = `\n    ${main()} {\n      let batch = i32(globalId.z) / uniforms.outShape[1];\n      let r = i32(globalId.z) % uniforms.outShape[1];\n      let c = i32(globalId.y) * ${this.workPerThread};\n      let d1 = i32(globalId.x) * 4;\n\n      let dyCorner = vec2<i32>(r, c) - uniforms.pads;\n\n      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n      // ? = to be determined. : = across all values in that axis.\n      var dotProd: array<vec4<f32>, ${this.workPerThread}>;\n      for (var i = 0; i < ${this.workPerThread}; i++) {\n        dotProd[i] = vec4<f32>(0.0);\n      }\n      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {\n        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);\n        let wRPerm = uniforms.filterDims.x - 1 - wR;\n        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||\n            fract(dyR) > 0.0) {\n          continue;\n        }\n        let idyR = i32(dyR);\n\n        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {\n          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);\n          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);\n          let wCPerm = uniforms.filterDims.y - 1 - wC;\n          var bDyCVal = true;\n          var bDyCVal2 = true;\n          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||\n              fract(dyC) > 0.0) {\n            bDyCVal = false;\n          }\n          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||\n              fract(dyC2) > 0.0) {\n            bDyCVal2 = false;\n          }\n\n          let idyC = i32(dyC);\n          let idyC2 = i32(dyC2);\n          if (bDyCVal && bDyCVal2) {\n            let d2Length = uniforms.outBackprop[3];\n            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {\n              let wValue0 = getW(wRPerm, wCPerm, d1, d2);\n              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);\n              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);\n              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);\n              var xValue =  getDy(batch, idyR, idyC, d2);\n              let tmpval = vec4<f32>(dot(xValue, wValue0),\n                                     dot(xValue, wValue1),\n                                     dot(xValue, wValue2),\n                                     dot(xValue, wValue3));\n              dotProd[0] = dotProd[0] + tmpval;\n              xValue = getDy(batch, idyR, idyC2, d2);\n              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),\n                                                  dot(xValue, wValue1),\n                                                  dot(xValue, wValue2),\n                                                  dot(xValue, wValue3));\n            }\n          } else if (bDyCVal) {\n            let d2Length = uniforms.outBackprop[3];\n            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {\n              let wValue0 = getW(wRPerm, wCPerm, d1, d2);\n              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);\n              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);\n              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);\n              var xValue =  getDy(batch, idyR, idyC, d2);\n              let tmpval = vec4<f32>(dot(xValue, wValue0),\n                                     dot(xValue, wValue1),\n                                     dot(xValue, wValue2),\n                                     dot(xValue, wValue3));\n              dotProd[0] = dotProd[0] + tmpval;\n            }\n          } else if (bDyCVal2) {\n            let d2Length = uniforms.outBackprop[3];\n            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {\n              let wValue0 = getW(wRPerm, wCPerm, d1, d2);\n              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);\n              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);\n              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);\n              var xValue =  getDy(batch, idyR, idyC2, d2);\n              let tmpval = vec4<f32>(dot(xValue, wValue0),\n                                     dot(xValue, wValue1),\n                                     dot(xValue, wValue2),\n                                     dot(xValue, wValue3));\n              dotProd[1] = dotProd[1] + tmpval;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {\n        let coords = vec4<i32>(batch, r, c + i, d1);\n        if (coordsInBounds4D(coords, uniforms.outShape)) {\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);\n        }\n      }\n    }\n    `;\n        return this.isVec4 ?\n            `\n    ${vec4Snippet}\n    ` :\n            `\n    ${main('index')} {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d1 = coords[${channelDim}];\n\n        let dyCorner = vec2<i32>(coords[${rowDim}], coords[${colDim}]) - uniforms.pads;\n        let dyRCorner = dyCorner.x;\n        let dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {\n          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);\n          let wRPerm = uniforms.filterDims.x - 1 - wR;\n          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||\n              wRPerm < 0) {\n            continue;\n          }\n          let idyR = i32(dyR);\n\n          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {\n            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);\n            let wCPerm = uniforms.filterDims.y - 1 - wC;\n            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||\n                fract(dyC) > 0.0 || wCPerm < 0) {\n              continue;\n            }\n            let idyC = i32(dyC);\n\n            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {\n              let xValue = ${this.isChannelsLast ? 'getDy(batch, idyR, idyC, d2)' :\n                'getDy(batch, d2, idyR, idyC)'};\n              let wValue = getW(wRPerm, wCPerm, d1, d2);\n              dotProd = dotProd + xValue * wValue;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `;\n    }\n}\nexport class Conv2DDerFilterProgram {\n    constructor(convInfo) {\n        this.variableNames = ['x', 'dy'];\n        this.uniforms = 'pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,';\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = convInfo.filterShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.isChannelsLast = convInfo.dataFormat === 'channelsLast';\n        this.shaderKey = `conv2DDerFilter_${this.isChannelsLast}`;\n    }\n    getUserCode() {\n        return `\n    ${main('index')} {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let wR = coords[0];\n        let wC = coords[1];\n        let d1 = coords[2];\n        let d2 = coords[3];\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var b = 0; b < uniforms.batchSize; b = b + 1) {\n          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {\n            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];\n            if (xR < 0 || xR >= uniforms.inHeight) {\n              continue;\n            }\n\n            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {\n              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];\n\n              if (xC < 0 || xC >= uniforms.inWidth) {\n                continue;\n              }\n\n              if (${this.isChannelsLast}) {\n                let dyValue = getDy(b, yR, yC, d2);\n                let xValue = getX(b, xR, xC, d1);\n                dotProd = dotProd + xValue * dyValue;\n              } else {\n                let dyValue = getDy(b, d2, yR, yC);\n                let xValue = getX(b, d1, xR, xC);\n                dotProd = dotProd + xValue * dyValue;\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `;\n    }\n}\nexport class Conv3DDerFilterProgram {\n    constructor(convInfo) {\n        this.variableNames = ['x', 'dy'];\n        this.uniforms = `pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,\n       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,`;\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = convInfo.filterShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.shaderKey = `conv3DDerFilter`;\n    }\n    getUserCode() {\n        return `\n    ${main('index')} {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let wF = coords.x;\n        let wR = coords.y;\n        let wC = coords.z;\n        let d1 = coords.w;\n        let d2 = coords.u;\n\n        var dotProd = 0.0;\n        for (var b = 0; b < uniforms.batchSize; b++) {\n          for (var yF = 0; yF < uniforms.outDepth; yF++) {\n            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];\n            if (xF < 0 || xF >= uniforms.inDepth) {\n              continue;\n            }\n\n            for (var yR = 0; yR < uniforms.outHeight; yR++) {\n              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];\n              if (xR < 0 || xR >= uniforms.inHeight) {\n                continue;\n              }\n\n              for (var yC = 0; yC < uniforms.outWidth; yC++) {\n                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];\n                if (xC < 0 || xC >= uniforms.inWidth) {\n                  continue;\n                }\n\n                let dyValue = getDy(b, yF, yR, yC, d2);\n                let xValue = getX(b, xF, xR, xC, d1);\n                dotProd += xValue * dyValue;\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `;\n    }\n}\nexport class Conv3DDerInputProgram {\n    constructor(convInfo) {\n        this.variableNames = ['dy', 'W'];\n        this.uniforms = `filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,\n      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,`;\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = convInfo.inShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.shaderKey = `conv3DDerInput`;\n    }\n    getUserCode() {\n        return `\n    ${main('index')} {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords.x;\n        let d1 = coords.u;\n\n        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;\n        let dyFCorner = dyCorner.x;\n        let dyRCorner = dyCorner.y;\n        let dyCCorner = dyCorner.z;\n\n        var dotProd = 0.0;\n        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {\n          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);\n          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {\n            continue;\n          }\n          let idyF = i32(dyF);\n\n          let wFPerm = uniforms.filterDims[0] - 1 - wF;\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);\n\n            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n              continue;\n            }\n            let idyR = i32(dyR);\n\n            let wRPerm = uniforms.filterDims[1] - 1 - wR;\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);\n\n              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n                continue;\n              }\n              let idyC = i32(dyC);\n\n              let wCPerm = uniforms.filterDims[2] - 1 - wC;\n\n              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {\n                let xValue = getDy(batch, idyF, idyR, idyC, d2);\n                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv2DBackpropFilter } from '@tensorflow/tfjs-core';\nimport { Conv2DDerFilterProgram } from '../conv_backprop_webgpu';\nexport function conv2DBackpropFilter(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, dy } = inputs;\n    const { strides, pad, dataFormat, dimRoundingMode, filterShape } = attrs;\n    const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n    const convInfo = backend_util.computeConv2DInfo(x.shape, filterShape, strides, 1 /* dilations */, pad, dimRoundingMode, false /* depthwise */, $dataFormat);\n    const program = new Conv2DDerFilterProgram(convInfo);\n    const uniformData = [\n        { type: 'int32', data: [convInfo.padInfo.top, convInfo.padInfo.left] },\n        { type: 'int32', data: [convInfo.strideHeight, convInfo.strideWidth] },\n        { type: 'int32', data: [convInfo.batchSize] },\n        { type: 'int32', data: [convInfo.outHeight] },\n        { type: 'int32', data: [convInfo.outWidth] },\n        { type: 'int32', data: [convInfo.inHeight] },\n        { type: 'int32', data: [convInfo.inWidth] }\n    ];\n    return backend.runWebGPUProgram(program, [x, dy], x.dtype, uniformData);\n}\nexport const conv2DBackpropFilterConfig = {\n    kernelName: Conv2DBackpropFilter,\n    backendName: 'webgpu',\n    kernelFunc: conv2DBackpropFilter\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udjJEQmFja3Byb3BGaWx0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL0NvbnYyREJhY2twcm9wRmlsdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxZQUFZLEVBQUUsb0JBQW9CLEVBQThGLE1BQU0sdUJBQXVCLENBQUM7QUFHdEssT0FBTyxFQUFDLHNCQUFzQixFQUFDLE1BQU0seUJBQXlCLENBQUM7QUFFL0QsTUFBTSxVQUFVLG9CQUFvQixDQUFDLElBSXBDO0lBQ0MsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ3RDLE1BQU0sRUFBQyxDQUFDLEVBQUUsRUFBRSxFQUFDLEdBQUcsTUFBTSxDQUFDO0lBQ3ZCLE1BQU0sRUFBQyxPQUFPLEVBQUUsR0FBRyxFQUFFLFVBQVUsRUFBRSxlQUFlLEVBQUUsV0FBVyxFQUFDLEdBQUcsS0FBSyxDQUFDO0lBRXZFLE1BQU0sV0FBVyxHQUFHLFlBQVksQ0FBQyx1QkFBdUIsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNyRSxNQUFNLFFBQVEsR0FBRyxZQUFZLENBQUMsaUJBQWlCLENBQzNDLENBQUMsQ0FBQyxLQUF5QyxFQUFFLFdBQVcsRUFBRSxPQUFPLEVBQ2pFLENBQUMsQ0FBQyxlQUFlLEVBQUUsR0FBRyxFQUFFLGVBQWUsRUFBRSxLQUFLLENBQUMsZUFBZSxFQUM5RCxXQUFXLENBQUMsQ0FBQztJQUVqQixNQUFNLE9BQU8sR0FBRyxJQUFJLHNCQUFzQixDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JELE1BQU0sV0FBVyxHQUFHO1FBQ2xCLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFDO1FBQ3BFLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsWUFBWSxFQUFFLFFBQVEsQ0FBQyxXQUFXLENBQUMsRUFBQztRQUNwRSxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxFQUFDO1FBQzNDLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLEVBQUM7UUFDM0MsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsRUFBQztRQUMxQyxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxFQUFDO1FBQzFDLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEVBQUM7S0FDMUMsQ0FBQztJQUNGLE9BQU8sT0FBTyxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0FBQzFFLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSwwQkFBMEIsR0FBaUI7SUFDdEQsVUFBVSxFQUFFLG9CQUFvQjtJQUNoQyxXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsb0JBQTZDO0NBQzFELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7YmFja2VuZF91dGlsLCBDb252MkRCYWNrcHJvcEZpbHRlciwgQ29udjJEQmFja3Byb3BGaWx0ZXJBdHRycywgQ29udjJEQmFja3Byb3BGaWx0ZXJJbnB1dHMsIEtlcm5lbENvbmZpZywgS2VybmVsRnVuYywgVGVuc29ySW5mb30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge0NvbnYyRERlckZpbHRlclByb2dyYW19IGZyb20gJy4uL2NvbnZfYmFja3Byb3Bfd2ViZ3B1JztcblxuZXhwb3J0IGZ1bmN0aW9uIGNvbnYyREJhY2twcm9wRmlsdGVyKGFyZ3M6IHtcbiAgaW5wdXRzOiBDb252MkRCYWNrcHJvcEZpbHRlcklucHV0cyxcbiAgYmFja2VuZDogV2ViR1BVQmFja2VuZCxcbiAgYXR0cnM6IENvbnYyREJhY2twcm9wRmlsdGVyQXR0cnNcbn0pOiBUZW5zb3JJbmZvIHtcbiAgY29uc3Qge2lucHV0cywgYmFja2VuZCwgYXR0cnN9ID0gYXJncztcbiAgY29uc3Qge3gsIGR5fSA9IGlucHV0cztcbiAgY29uc3Qge3N0cmlkZXMsIHBhZCwgZGF0YUZvcm1hdCwgZGltUm91bmRpbmdNb2RlLCBmaWx0ZXJTaGFwZX0gPSBhdHRycztcblxuICBjb25zdCAkZGF0YUZvcm1hdCA9IGJhY2tlbmRfdXRpbC5jb252ZXJ0Q29udjJERGF0YUZvcm1hdChkYXRhRm9ybWF0KTtcbiAgY29uc3QgY29udkluZm8gPSBiYWNrZW5kX3V0aWwuY29tcHV0ZUNvbnYyREluZm8oXG4gICAgICB4LnNoYXBlIGFzIFtudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdLCBmaWx0ZXJTaGFwZSwgc3RyaWRlcyxcbiAgICAgIDEgLyogZGlsYXRpb25zICovLCBwYWQsIGRpbVJvdW5kaW5nTW9kZSwgZmFsc2UgLyogZGVwdGh3aXNlICovLFxuICAgICAgJGRhdGFGb3JtYXQpO1xuXG4gIGNvbnN0IHByb2dyYW0gPSBuZXcgQ29udjJERGVyRmlsdGVyUHJvZ3JhbShjb252SW5mbyk7XG4gIGNvbnN0IHVuaWZvcm1EYXRhID0gW1xuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbY29udkluZm8ucGFkSW5mby50b3AsIGNvbnZJbmZvLnBhZEluZm8ubGVmdF19LFxuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbY29udkluZm8uc3RyaWRlSGVpZ2h0LCBjb252SW5mby5zdHJpZGVXaWR0aF19LFxuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbY29udkluZm8uYmF0Y2hTaXplXX0sXG4gICAge3R5cGU6ICdpbnQzMicsIGRhdGE6IFtjb252SW5mby5vdXRIZWlnaHRdfSxcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogW2NvbnZJbmZvLm91dFdpZHRoXX0sXG4gICAge3R5cGU6ICdpbnQzMicsIGRhdGE6IFtjb252SW5mby5pbkhlaWdodF19LFxuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbY29udkluZm8uaW5XaWR0aF19XG4gIF07XG4gIHJldHVybiBiYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0ocHJvZ3JhbSwgW3gsIGR5XSwgeC5kdHlwZSwgdW5pZm9ybURhdGEpO1xufVxuXG5leHBvcnQgY29uc3QgY29udjJEQmFja3Byb3BGaWx0ZXJDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogQ29udjJEQmFja3Byb3BGaWx0ZXIsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogY29udjJEQmFja3Byb3BGaWx0ZXIgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { makeMatMulPackedSource, makeMatMulPackedVec4Source } from './matmul_packed_webgpu';\nimport { typeSnippet } from './webgpu_program';\nimport { computeDispatch, computeWorkgroupSizeForConv2d, computeWorkPerThreadForConv2d } from './webgpu_util';\nfunction conv2dTransposeCommonSnippet(innerElementSize = 4) {\n    const getWSnippet = (innerElementSize) => {\n        switch (innerElementSize) {\n            case 1:\n                return 'return W[getIndexFromCoords4D(coord, uniforms.wShape)];';\n            case 4:\n                return `\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];\n            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];\n            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];\n            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];\n            return vec4<f32>(v0, v1, v2, v3);\n            `;\n            default:\n                throw new Error(`innerElementSize ${innerElementSize} is not supported.`);\n        }\n    };\n    const readASnippet = `\n      let outRow = row / uniforms.outShape[2];\n      let outCol = row % uniforms.outShape[2];\n\n      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];\n      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {\n        return ${typeSnippet(innerElementSize)}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {\n        return ${typeSnippet(innerElementSize)}(0.0);\n      }\n      let coord = vec4<i32>(\n          batch,\n          i32(xR),\n          i32(xC),\n          col % uniforms.outBackprop[3]);\n      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${innerElementSize}];`;\n    const sampleA = `if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n        ${readASnippet}\n      }\n      return ${typeSnippet(innerElementSize)}(0.0);`;\n    const userCode = `\n  fn mm_readA(batch: i32, row : i32, col : i32) -> ${typeSnippet(innerElementSize)} {\n    ${sampleA}\n  }\n\n  fn mm_readB(batch: i32, row : i32, col : i32) -> ${typeSnippet(innerElementSize)} {\n    let coordX = uniforms.filterDims.x - 1 -\n        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n    let coordY = uniforms.filterDims.y - 1 -\n        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];\n    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&\n        coordX >= 0 && coordY >= 0) {\n      let rowInner = row % uniforms.outBackprop[3];\n      let coord = vec4<i32>(coordX, coordY, col, rowInner);\n      ${getWSnippet(innerElementSize)}\n    }\n    return ${typeSnippet(innerElementSize)}(0.0);\n  }\n\n  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ${typeSnippet(innerElementSize)}) {\n    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {\n      var value = valueInput;\n      let outCoord = vec4<i32>(\n          batch,\n          row / uniforms.outShape[2],\n          row % uniforms.outShape[2],\n          col);\n      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${innerElementSize}] = value;\n    }\n  }`;\n    return userCode;\n}\nexport class Conv2DDerInputMMProgram {\n    constructor(convInfo) {\n        this.variableNames = ['x', 'W'];\n        this.uniforms = 'filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,';\n        this.outputShape = convInfo.inShape;\n        util.assert(convInfo.dataFormat === 'channelsLast', () => 'TODO: NCHW is unimplemented');\n        this.isVec4 =\n            convInfo.inChannels % 4 === 0 && convInfo.outChannels % 4 === 0;\n        this.dispatchLayout = { x: [3], y: [1, 2], z: [0] };\n        this.workgroupSize = computeWorkgroupSizeForConv2d(this.dispatchLayout, this.outputShape, this.isVec4);\n        this.elementsPerThread = computeWorkPerThreadForConv2d(this.dispatchLayout, this.outputShape, this.isVec4);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize, this.elementsPerThread);\n        if (this.isVec4) {\n            this.outputComponent = 4;\n            this.variableComponents = [4, 1];\n        }\n        this.shaderKey =\n            `conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`;\n    }\n    getUserCode() {\n        const matMulSource = this.isVec4 ?\n            makeMatMulPackedVec4Source(this.elementsPerThread, this.workgroupSize) :\n            makeMatMulPackedSource(this.elementsPerThread, this.workgroupSize);\n        const userCode = `\n    ${conv2dTransposeCommonSnippet(this.isVec4 ? 4 : 1)}\n    ${matMulSource}\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv2DBackpropInput, env } from '@tensorflow/tfjs-core';\nimport { Conv2DDerInputMMProgram } from '../conv_backprop_mm_webgpu';\nimport { Conv2DDerInputProgram } from '../conv_backprop_webgpu';\nexport function conv2DBackpropInput(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, filter } = inputs;\n    const { inputShape, strides, pad, dataFormat, dimRoundingMode } = attrs;\n    const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n    const convInfo = backend_util.computeConv2DInfo(inputShape, filter.shape, strides, 1 /* dilations */, pad, dimRoundingMode, false, $dataFormat);\n    const dimensions = [\n        { type: 'int32', data: [convInfo.filterHeight, convInfo.filterWidth] },\n        {\n            type: 'int32',\n            data: [\n                convInfo.filterHeight - 1 - convInfo.padInfo.top,\n                convInfo.filterWidth - 1 - convInfo.padInfo.left\n            ]\n        },\n        { type: 'int32', data: [convInfo.strideHeight, convInfo.strideWidth] },\n        {\n            type: 'int32',\n            data: [\n                convInfo.batchSize, convInfo.outHeight, convInfo.outWidth,\n                convInfo.outChannels\n            ]\n        },\n    ];\n    let program;\n    // TODO: Experiment when to use Conv2DDerInputMMProgram algorithm.\n    if (env().getBool('WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE') ||\n        convInfo.dataFormat !== 'channelsLast') {\n        program = new Conv2DDerInputProgram(convInfo);\n    }\n    else {\n        program = new Conv2DDerInputMMProgram(convInfo);\n        const dimAOuter = convInfo.inHeight * convInfo.inWidth;\n        const dimBOuter = convInfo.inChannels;\n        const dimInner = convInfo.filterHeight * convInfo.filterWidth * convInfo.outChannels;\n        dimensions.push({ type: 'uint32', data: [dimAOuter] }, { type: 'uint32', data: [dimBOuter] }, { type: 'uint32', data: [dimInner] });\n    }\n    return backend.runWebGPUProgram(program, [dy, filter], 'float32', dimensions);\n}\nexport const conv2DBackpropInputConfig = {\n    kernelName: Conv2DBackpropInput,\n    backendName: 'webgpu',\n    kernelFunc: conv2DBackpropInput,\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udjJEQmFja3Byb3BJbnB1dC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvQ29udjJEQmFja3Byb3BJbnB1dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsWUFBWSxFQUFFLG1CQUFtQixFQUF1RCxHQUFHLEVBQTJCLE1BQU0sdUJBQXVCLENBQUM7QUFHNUosT0FBTyxFQUFDLHVCQUF1QixFQUFDLE1BQU0sNEJBQTRCLENBQUM7QUFDbkUsT0FBTyxFQUFDLHFCQUFxQixFQUFDLE1BQU0seUJBQXlCLENBQUM7QUFFOUQsTUFBTSxVQUFVLG1CQUFtQixDQUFDLElBSW5DO0lBQ0MsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ3RDLE1BQU0sRUFBQyxFQUFFLEVBQUUsTUFBTSxFQUFDLEdBQUcsTUFBTSxDQUFDO0lBQzVCLE1BQU0sRUFBQyxVQUFVLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxVQUFVLEVBQUUsZUFBZSxFQUFDLEdBQUcsS0FBSyxDQUFDO0lBRXRFLE1BQU0sV0FBVyxHQUFHLFlBQVksQ0FBQyx1QkFBdUIsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNyRSxNQUFNLFFBQVEsR0FBRyxZQUFZLENBQUMsaUJBQWlCLENBQzNDLFVBQVUsRUFBRSxNQUFNLENBQUMsS0FBeUMsRUFBRSxPQUFPLEVBQ3JFLENBQUMsQ0FBQyxlQUFlLEVBQUUsR0FBRyxFQUFFLGVBQWUsRUFBRSxLQUFLLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFFakUsTUFBTSxVQUFVLEdBQUc7UUFDakIsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxZQUFZLEVBQUUsUUFBUSxDQUFDLFdBQVcsQ0FBQyxFQUFDO1FBQ3BFO1lBQ0UsSUFBSSxFQUFFLE9BQU87WUFDYixJQUFJLEVBQUU7Z0JBQ0osUUFBUSxDQUFDLFlBQVksR0FBRyxDQUFDLEdBQUcsUUFBUSxDQUFDLE9BQU8sQ0FBQyxHQUFHO2dCQUNoRCxRQUFRLENBQUMsV0FBVyxHQUFHLENBQUMsR0FBRyxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUk7YUFDakQ7U0FDRjtRQUNELEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsWUFBWSxFQUFFLFFBQVEsQ0FBQyxXQUFXLENBQUMsRUFBQztRQUNwRTtZQUNFLElBQUksRUFBRSxPQUFPO1lBQ2IsSUFBSSxFQUFFO2dCQUNKLFFBQVEsQ0FBQyxTQUFTLEVBQUUsUUFBUSxDQUFDLFNBQVMsRUFBRSxRQUFRLENBQUMsUUFBUTtnQkFDekQsUUFBUSxDQUFDLFdBQVc7YUFDckI7U0FDRjtLQUNGLENBQUM7SUFDRixJQUFJLE9BQXNELENBQUM7SUFDM0Qsa0VBQWtFO0lBQ2xFLElBQUksR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLG1DQUFtQyxDQUFDO1FBQ2xELFFBQVEsQ0FBQyxVQUFVLEtBQUssY0FBYyxFQUFFO1FBQzFDLE9BQU8sR0FBRyxJQUFJLHFCQUFxQixDQUFDLFFBQVEsQ0FBQyxDQUFDO0tBQy9DO1NBQU07UUFDTCxPQUFPLEdBQUcsSUFBSSx1QkFBdUIsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNoRCxNQUFNLFNBQVMsR0FBRyxRQUFRLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQyxPQUFPLENBQUM7UUFDdkQsTUFBTSxTQUFTLEdBQUcsUUFBUSxDQUFDLFVBQVUsQ0FBQztRQUN0QyxNQUFNLFFBQVEsR0FDVixRQUFRLENBQUMsWUFBWSxHQUFHLFFBQVEsQ0FBQyxXQUFXLEdBQUcsUUFBUSxDQUFDLFdBQVcsQ0FBQztRQUN4RSxVQUFVLENBQUMsSUFBSSxDQUNYLEVBQUMsSUFBSSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQyxTQUFTLENBQUMsRUFBQyxFQUNuQyxFQUFDLElBQUksRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUMsU0FBUyxDQUFDLEVBQUMsRUFDbkMsRUFBQyxJQUFJLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFDLENBQUMsQ0FBQztLQUN6QztJQUNELE9BQU8sT0FBTyxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxDQUFDLEVBQUUsRUFBRSxNQUFNLENBQUMsRUFBRSxTQUFTLEVBQUUsVUFBVSxDQUFDLENBQUM7QUFDaEYsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLHlCQUF5QixHQUFpQjtJQUNyRCxVQUFVLEVBQUUsbUJBQW1CO0lBQy9CLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxtQkFBNEM7Q0FDekQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtiYWNrZW5kX3V0aWwsIENvbnYyREJhY2twcm9wSW5wdXQsIENvbnYyREJhY2twcm9wSW5wdXRBdHRycywgQ29udjJEQmFja3Byb3BJbnB1dElucHV0cywgZW52LCBLZXJuZWxDb25maWcsIEtlcm5lbEZ1bmN9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuaW1wb3J0IHtDb252MkREZXJJbnB1dE1NUHJvZ3JhbX0gZnJvbSAnLi4vY29udl9iYWNrcHJvcF9tbV93ZWJncHUnO1xuaW1wb3J0IHtDb252MkREZXJJbnB1dFByb2dyYW19IGZyb20gJy4uL2NvbnZfYmFja3Byb3Bfd2ViZ3B1JztcblxuZXhwb3J0IGZ1bmN0aW9uIGNvbnYyREJhY2twcm9wSW5wdXQoYXJnczoge1xuICBpbnB1dHM6IENvbnYyREJhY2twcm9wSW5wdXRJbnB1dHMsXG4gIGF0dHJzOiBDb252MkRCYWNrcHJvcElucHV0QXR0cnMsXG4gIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmRcbn0pIHtcbiAgY29uc3Qge2lucHV0cywgYmFja2VuZCwgYXR0cnN9ID0gYXJncztcbiAgY29uc3Qge2R5LCBmaWx0ZXJ9ID0gaW5wdXRzO1xuICBjb25zdCB7aW5wdXRTaGFwZSwgc3RyaWRlcywgcGFkLCBkYXRhRm9ybWF0LCBkaW1Sb3VuZGluZ01vZGV9ID0gYXR0cnM7XG5cbiAgY29uc3QgJGRhdGFGb3JtYXQgPSBiYWNrZW5kX3V0aWwuY29udmVydENvbnYyRERhdGFGb3JtYXQoZGF0YUZvcm1hdCk7XG4gIGNvbnN0IGNvbnZJbmZvID0gYmFja2VuZF91dGlsLmNvbXB1dGVDb252MkRJbmZvKFxuICAgICAgaW5wdXRTaGFwZSwgZmlsdGVyLnNoYXBlIGFzIFtudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdLCBzdHJpZGVzLFxuICAgICAgMSAvKiBkaWxhdGlvbnMgKi8sIHBhZCwgZGltUm91bmRpbmdNb2RlLCBmYWxzZSwgJGRhdGFGb3JtYXQpO1xuXG4gIGNvbnN0IGRpbWVuc2lvbnMgPSBbXG4gICAge3R5cGU6ICdpbnQzMicsIGRhdGE6IFtjb252SW5mby5maWx0ZXJIZWlnaHQsIGNvbnZJbmZvLmZpbHRlcldpZHRoXX0sXG4gICAge1xuICAgICAgdHlwZTogJ2ludDMyJyxcbiAgICAgIGRhdGE6IFtcbiAgICAgICAgY29udkluZm8uZmlsdGVySGVpZ2h0IC0gMSAtIGNvbnZJbmZvLnBhZEluZm8udG9wLFxuICAgICAgICBjb252SW5mby5maWx0ZXJXaWR0aCAtIDEgLSBjb252SW5mby5wYWRJbmZvLmxlZnRcbiAgICAgIF1cbiAgICB9LFxuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbY29udkluZm8uc3RyaWRlSGVpZ2h0LCBjb252SW5mby5zdHJpZGVXaWR0aF19LFxuICAgIHtcbiAgICAgIHR5cGU6ICdpbnQzMicsXG4gICAgICBkYXRhOiBbXG4gICAgICAgIGNvbnZJbmZvLmJhdGNoU2l6ZSwgY29udkluZm8ub3V0SGVpZ2h0LCBjb252SW5mby5vdXRXaWR0aCxcbiAgICAgICAgY29udkluZm8ub3V0Q2hhbm5lbHNcbiAgICAgIF1cbiAgICB9LFxuICBdO1xuICBsZXQgcHJvZ3JhbTogQ29udjJERGVySW5wdXRQcm9ncmFtfENvbnYyRERlcklucHV0TU1Qcm9ncmFtO1xuICAvLyBUT0RPOiBFeHBlcmltZW50IHdoZW4gdG8gdXNlIENvbnYyRERlcklucHV0TU1Qcm9ncmFtIGFsZ29yaXRobS5cbiAgaWYgKGVudigpLmdldEJvb2woJ1dFQkdQVV9VU0VfTkFJVkVfQ09OVjJEX1RSQU5TUE9TRScpIHx8XG4gICAgICBjb252SW5mby5kYXRhRm9ybWF0ICE9PSAnY2hhbm5lbHNMYXN0Jykge1xuICAgIHByb2dyYW0gPSBuZXcgQ29udjJERGVySW5wdXRQcm9ncmFtKGNvbnZJbmZvKTtcbiAgfSBlbHNlIHtcbiAgICBwcm9ncmFtID0gbmV3IENvbnYyRERlcklucHV0TU1Qcm9ncmFtKGNvbnZJbmZvKTtcbiAgICBjb25zdCBkaW1BT3V0ZXIgPSBjb252SW5mby5pbkhlaWdodCAqIGNvbnZJbmZvLmluV2lkdGg7XG4gICAgY29uc3QgZGltQk91dGVyID0gY29udkluZm8uaW5DaGFubmVscztcbiAgICBjb25zdCBkaW1Jbm5lciA9XG4gICAgICAgIGNvbnZJbmZvLmZpbHRlckhlaWdodCAqIGNvbnZJbmZvLmZpbHRlcldpZHRoICogY29udkluZm8ub3V0Q2hhbm5lbHM7XG4gICAgZGltZW5zaW9ucy5wdXNoKFxuICAgICAgICB7dHlwZTogJ3VpbnQzMicsIGRhdGE6IFtkaW1BT3V0ZXJdfSxcbiAgICAgICAge3R5cGU6ICd1aW50MzInLCBkYXRhOiBbZGltQk91dGVyXX0sXG4gICAgICAgIHt0eXBlOiAndWludDMyJywgZGF0YTogW2RpbUlubmVyXX0pO1xuICB9XG4gIHJldHVybiBiYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0ocHJvZ3JhbSwgW2R5LCBmaWx0ZXJdLCAnZmxvYXQzMicsIGRpbWVuc2lvbnMpO1xufVxuXG5leHBvcnQgY29uc3QgY29udjJEQmFja3Byb3BJbnB1dENvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBDb252MkRCYWNrcHJvcElucHV0LFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IGNvbnYyREJhY2twcm9wSW5wdXQgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jLFxufTtcbiJdfQ==","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class Conv3DNaiveProgram {\n    constructor(convInfo) {\n        this.variableNames = ['x', 'W'];\n        this.uniforms = 'filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,';\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = convInfo.outShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.shaderKey = `conv3dnaive`;\n    }\n    getUserCode() {\n        const userCode = `\n    ${main('index')} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let batch = coords.x;\n        let d2 = coords.u;\n\n        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;\n        let xFCorner = xFRCCorner.x;\n        let xRCorner = xFRCCorner.y;\n        let xCCorner = xFRCCorner.z;\n\n        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;\n        let inputDepthVec4Remainder = uniforms.xShape.u % 4;\n\n        var dotProd = 0.0;\n        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {\n          let xF = xFCorner + wF * uniforms.dilations[0];\n          if (xF < 0 || xF >= uniforms.xShape.y) {\n            continue;\n          }\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let xR = xRCorner + wR * uniforms.dilations[1];\n            if (xR < 0 || xR >= uniforms.xShape.z) {\n              continue;\n            }\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let xC = xCCorner + wC * uniforms.dilations[2];\n              if (xC < 0 || xC >= uniforms.xShape.w) {\n                continue;\n              }\n\n              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {\n                let xValues = vec4<f32>(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                let wValues = vec4<f32>(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (inputDepthVec4Remainder == 1) {\n                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *\n                  getW(wF, wR, wC, inputDepthNearestVec4, d2);\n              } else if (inputDepthVec4Remainder == 2) {\n                let xValues = vec2<f32>(\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4),\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)\n                );\n                let wValues = vec2<f32>(\n                  getW(wF, wR, wC, inputDepthNearestVec4, d2),\n                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (inputDepthVec4Remainder == 3) {\n                let xValues = vec3<f32>(\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4),\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)\n                );\n                let wValues = vec3<f32>(\n                  getW(wF, wR, wC, inputDepthNearestVec4, d2),\n                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),\n                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }`;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udjNkX25haXZlX3dlYmdwdS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2NvbnYzZF9uYWl2ZV93ZWJncHUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBSUgsT0FBTyxFQUFDLG1CQUFtQixJQUFJLElBQUksRUFBZ0IsTUFBTSxrQkFBa0IsQ0FBQztBQUM1RSxPQUFPLEVBQUMsZUFBZSxFQUFFLGtCQUFrQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRWxFLE1BQU0sT0FBTyxrQkFBa0I7SUFXN0IsWUFBWSxRQUFpQztRQU43QyxrQkFBYSxHQUFHLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQzNCLGFBQVEsR0FDSixtRkFBbUYsQ0FBQztRQUN4RixrQkFBYSxHQUE2QixDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDckQsU0FBSSxHQUFHLElBQUksQ0FBQztRQUdWLElBQUksQ0FBQyxXQUFXLEdBQUcsUUFBUSxDQUFDLFFBQVEsQ0FBQztRQUNyQyxJQUFJLENBQUMsY0FBYyxHQUFHLGtCQUFrQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUMzRCxJQUFJLENBQUMsUUFBUSxHQUFHLGVBQWUsQ0FDM0IsSUFBSSxDQUFDLGNBQWMsRUFBRSxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUUvRCxJQUFJLENBQUMsU0FBUyxHQUFHLGFBQWEsQ0FBQztJQUNqQyxDQUFDO0lBRUQsV0FBVztRQUNULE1BQU0sUUFBUSxHQUFHO01BQ2YsSUFBSSxDQUFDLE9BQU8sQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O01BaUZiLENBQUM7UUFDSCxPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMyBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7YmFja2VuZF91dGlsfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge2dldE1haW5IZWFkZXJTdHJpbmcgYXMgbWFpbiwgV2ViR1BVUHJvZ3JhbX0gZnJvbSAnLi93ZWJncHVfcHJvZ3JhbSc7XG5pbXBvcnQge2NvbXB1dGVEaXNwYXRjaCwgZmxhdERpc3BhdGNoTGF5b3V0fSBmcm9tICcuL3dlYmdwdV91dGlsJztcblxuZXhwb3J0IGNsYXNzIENvbnYzRE5haXZlUHJvZ3JhbSBpbXBsZW1lbnRzIFdlYkdQVVByb2dyYW0ge1xuICBvdXRwdXRTaGFwZTogbnVtYmVyW107XG4gIHNoYWRlcktleTogc3RyaW5nO1xuICBkaXNwYXRjaExheW91dDoge3g6IG51bWJlcltdfTtcbiAgZGlzcGF0Y2g6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXTtcbiAgdmFyaWFibGVOYW1lcyA9IFsneCcsICdXJ107XG4gIHVuaWZvcm1zID1cbiAgICAgICdmaWx0ZXJEaW1zOiB2ZWMzPGkzMj4sIHBhZHM6IHZlYzM8aTMyPiwgc3RyaWRlczogdmVjMzxpMzI+LCBkaWxhdGlvbnM6IHZlYzM8aTMyPiwnO1xuICB3b3JrZ3JvdXBTaXplOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl0gPSBbNjQsIDEsIDFdO1xuICBzaXplID0gdHJ1ZTtcblxuICBjb25zdHJ1Y3Rvcihjb252SW5mbzogYmFja2VuZF91dGlsLkNvbnYzREluZm8pIHtcbiAgICB0aGlzLm91dHB1dFNoYXBlID0gY29udkluZm8ub3V0U2hhcGU7XG4gICAgdGhpcy5kaXNwYXRjaExheW91dCA9IGZsYXREaXNwYXRjaExheW91dCh0aGlzLm91dHB1dFNoYXBlKTtcbiAgICB0aGlzLmRpc3BhdGNoID0gY29tcHV0ZURpc3BhdGNoKFxuICAgICAgICB0aGlzLmRpc3BhdGNoTGF5b3V0LCB0aGlzLm91dHB1dFNoYXBlLCB0aGlzLndvcmtncm91cFNpemUpO1xuXG4gICAgdGhpcy5zaGFkZXJLZXkgPSBgY29udjNkbmFpdmVgO1xuICB9XG5cbiAgZ2V0VXNlckNvZGUoKTogc3RyaW5nIHtcbiAgICBjb25zdCB1c2VyQ29kZSA9IGBcbiAgICAke21haW4oJ2luZGV4Jyl9IHtcbiAgICAgIGlmIChpbmRleCA8IHVuaWZvcm1zLnNpemUpIHtcbiAgICAgICAgbGV0IGNvb3JkcyA9IGdldE91dHB1dENvb3JkcygpO1xuICAgICAgICBsZXQgYmF0Y2ggPSBjb29yZHMueDtcbiAgICAgICAgbGV0IGQyID0gY29vcmRzLnU7XG5cbiAgICAgICAgbGV0IHhGUkNDb3JuZXIgPSB2ZWMzPGkzMj4oY29vcmRzLnksIGNvb3Jkcy56LCBjb29yZHMudykgKiB1bmlmb3Jtcy5zdHJpZGVzIC0gdW5pZm9ybXMucGFkcztcbiAgICAgICAgbGV0IHhGQ29ybmVyID0geEZSQ0Nvcm5lci54O1xuICAgICAgICBsZXQgeFJDb3JuZXIgPSB4RlJDQ29ybmVyLnk7XG4gICAgICAgIGxldCB4Q0Nvcm5lciA9IHhGUkNDb3JuZXIuejtcblxuICAgICAgICBsZXQgaW5wdXREZXB0aE5lYXJlc3RWZWM0ID0gKHVuaWZvcm1zLnhTaGFwZS51IC8gNCkgKiA0O1xuICAgICAgICBsZXQgaW5wdXREZXB0aFZlYzRSZW1haW5kZXIgPSB1bmlmb3Jtcy54U2hhcGUudSAlIDQ7XG5cbiAgICAgICAgdmFyIGRvdFByb2QgPSAwLjA7XG4gICAgICAgIGZvciAodmFyIHdGID0gMDsgd0YgPCB1bmlmb3Jtcy5maWx0ZXJEaW1zWzBdOyB3RisrKSB7XG4gICAgICAgICAgbGV0IHhGID0geEZDb3JuZXIgKyB3RiAqIHVuaWZvcm1zLmRpbGF0aW9uc1swXTtcbiAgICAgICAgICBpZiAoeEYgPCAwIHx8IHhGID49IHVuaWZvcm1zLnhTaGFwZS55KSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBmb3IgKHZhciB3UiA9IDA7IHdSIDwgdW5pZm9ybXMuZmlsdGVyRGltc1sxXTsgd1IrKykge1xuICAgICAgICAgICAgbGV0IHhSID0geFJDb3JuZXIgKyB3UiAqIHVuaWZvcm1zLmRpbGF0aW9uc1sxXTtcbiAgICAgICAgICAgIGlmICh4UiA8IDAgfHwgeFIgPj0gdW5pZm9ybXMueFNoYXBlLnopIHtcbiAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGZvciAodmFyIHdDID0gMDsgd0MgPCB1bmlmb3Jtcy5maWx0ZXJEaW1zWzJdOyB3QysrKSB7XG4gICAgICAgICAgICAgIGxldCB4QyA9IHhDQ29ybmVyICsgd0MgKiB1bmlmb3Jtcy5kaWxhdGlvbnNbMl07XG4gICAgICAgICAgICAgIGlmICh4QyA8IDAgfHwgeEMgPj0gdW5pZm9ybXMueFNoYXBlLncpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGZvciAodmFyIGQxID0gMDsgZDEgPCBpbnB1dERlcHRoTmVhcmVzdFZlYzQ7IGQxICs9IDQpIHtcbiAgICAgICAgICAgICAgICBsZXQgeFZhbHVlcyA9IHZlYzQ8ZjMyPihcbiAgICAgICAgICAgICAgICAgIGdldFgoYmF0Y2gsIHhGLCB4UiwgeEMsIGQxKSxcbiAgICAgICAgICAgICAgICAgIGdldFgoYmF0Y2gsIHhGLCB4UiwgeEMsIGQxICsgMSksXG4gICAgICAgICAgICAgICAgICBnZXRYKGJhdGNoLCB4RiwgeFIsIHhDLCBkMSArIDIpLFxuICAgICAgICAgICAgICAgICAgZ2V0WChiYXRjaCwgeEYsIHhSLCB4QywgZDEgKyAzKVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgbGV0IHdWYWx1ZXMgPSB2ZWM0PGYzMj4oXG4gICAgICAgICAgICAgICAgICBnZXRXKHdGLCB3Uiwgd0MsIGQxLCBkMiksXG4gICAgICAgICAgICAgICAgICBnZXRXKHdGLCB3Uiwgd0MsIGQxICsgMSwgZDIpLFxuICAgICAgICAgICAgICAgICAgZ2V0Vyh3Riwgd1IsIHdDLCBkMSArIDIsIGQyKSxcbiAgICAgICAgICAgICAgICAgIGdldFcod0YsIHdSLCB3QywgZDEgKyAzLCBkMilcbiAgICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAgICAgZG90UHJvZCArPSBkb3QoeFZhbHVlcywgd1ZhbHVlcyk7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAoaW5wdXREZXB0aFZlYzRSZW1haW5kZXIgPT0gMSkge1xuICAgICAgICAgICAgICAgIGRvdFByb2QgKz0gZ2V0WChiYXRjaCwgeEYsIHhSLCB4QywgaW5wdXREZXB0aE5lYXJlc3RWZWM0KSAqXG4gICAgICAgICAgICAgICAgICBnZXRXKHdGLCB3Uiwgd0MsIGlucHV0RGVwdGhOZWFyZXN0VmVjNCwgZDIpO1xuICAgICAgICAgICAgICB9IGVsc2UgaWYgKGlucHV0RGVwdGhWZWM0UmVtYWluZGVyID09IDIpIHtcbiAgICAgICAgICAgICAgICBsZXQgeFZhbHVlcyA9IHZlYzI8ZjMyPihcbiAgICAgICAgICAgICAgICAgIGdldFgoYmF0Y2gsIHhGLCB4UiwgeEMsIGlucHV0RGVwdGhOZWFyZXN0VmVjNCksXG4gICAgICAgICAgICAgICAgICBnZXRYKGJhdGNoLCB4RiwgeFIsIHhDLCBpbnB1dERlcHRoTmVhcmVzdFZlYzQgKyAxKVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgbGV0IHdWYWx1ZXMgPSB2ZWMyPGYzMj4oXG4gICAgICAgICAgICAgICAgICBnZXRXKHdGLCB3Uiwgd0MsIGlucHV0RGVwdGhOZWFyZXN0VmVjNCwgZDIpLFxuICAgICAgICAgICAgICAgICAgZ2V0Vyh3Riwgd1IsIHdDLCBpbnB1dERlcHRoTmVhcmVzdFZlYzQgKyAxLCBkMilcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIGRvdFByb2QgKz0gZG90KHhWYWx1ZXMsIHdWYWx1ZXMpO1xuICAgICAgICAgICAgICB9IGVsc2UgaWYgKGlucHV0RGVwdGhWZWM0UmVtYWluZGVyID09IDMpIHtcbiAgICAgICAgICAgICAgICBsZXQgeFZhbHVlcyA9IHZlYzM8ZjMyPihcbiAgICAgICAgICAgICAgICAgIGdldFgoYmF0Y2gsIHhGLCB4UiwgeEMsIGlucHV0RGVwdGhOZWFyZXN0VmVjNCksXG4gICAgICAgICAgICAgICAgICBnZXRYKGJhdGNoLCB4RiwgeFIsIHhDLCBpbnB1dERlcHRoTmVhcmVzdFZlYzQgKyAxKSxcbiAgICAgICAgICAgICAgICAgIGdldFgoYmF0Y2gsIHhGLCB4UiwgeEMsIGlucHV0RGVwdGhOZWFyZXN0VmVjNCArIDIpXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICBsZXQgd1ZhbHVlcyA9IHZlYzM8ZjMyPihcbiAgICAgICAgICAgICAgICAgIGdldFcod0YsIHdSLCB3QywgaW5wdXREZXB0aE5lYXJlc3RWZWM0LCBkMiksXG4gICAgICAgICAgICAgICAgICBnZXRXKHdGLCB3Uiwgd0MsIGlucHV0RGVwdGhOZWFyZXN0VmVjNCArIDEsIGQyKSxcbiAgICAgICAgICAgICAgICAgIGdldFcod0YsIHdSLCB3QywgaW5wdXREZXB0aE5lYXJlc3RWZWM0ICsgMiwgZDIpXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICBkb3RQcm9kICs9IGRvdCh4VmFsdWVzLCB3VmFsdWVzKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBzZXRPdXRwdXRBdEluZGV4KGluZGV4LCBkb3RQcm9kKTtcbiAgICAgIH1cbiAgICB9YDtcbiAgICByZXR1cm4gdXNlckNvZGU7XG4gIH1cbn1cbiJdfQ==","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv3D, upcastType } from '@tensorflow/tfjs-core';\nimport { Conv3DNaiveProgram } from '../conv3d_naive_webgpu';\nexport function conv3D(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, filter } = inputs;\n    const { strides, pad, dilations } = attrs;\n    const convInfo = backend_util.computeConv3DInfo(x.shape, filter.shape, strides, dilations, pad);\n    const padInfo = [convInfo.padInfo.front, convInfo.padInfo.top, convInfo.padInfo.left];\n    const dimensions = [\n        {\n            type: 'int32',\n            data: [convInfo.filterDepth, convInfo.filterHeight, convInfo.filterWidth]\n        },\n        { type: 'int32', data: [...padInfo] }, {\n            type: 'int32',\n            data: [convInfo.strideDepth, convInfo.strideHeight, convInfo.strideWidth]\n        },\n        {\n            type: 'int32',\n            data: [\n                convInfo.dilationDepth, convInfo.dilationHeight, convInfo.dilationWidth\n            ]\n        }\n    ];\n    const program = new Conv3DNaiveProgram(convInfo);\n    const dtype = upcastType(x.dtype, filter.dtype);\n    return backend.runWebGPUProgram(program, [x, filter], dtype, dimensions);\n}\nexport const conv3DConfig = {\n    kernelName: Conv3D,\n    backendName: 'webgpu',\n    kernelFunc: conv3D,\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udjNELmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9Db252M0QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLFlBQVksRUFBRSxNQUFNLEVBQXVELFVBQVUsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRzVILE9BQU8sRUFBQyxrQkFBa0IsRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBRTFELE1BQU0sVUFBVSxNQUFNLENBQ2xCLElBQXdFO0lBQzFFLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QyxNQUFNLEVBQUMsQ0FBQyxFQUFFLE1BQU0sRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUMzQixNQUFNLEVBQUMsT0FBTyxFQUFFLEdBQUcsRUFBRSxTQUFTLEVBQUMsR0FBRyxLQUFLLENBQUM7SUFFeEMsTUFBTSxRQUFRLEdBQUcsWUFBWSxDQUFDLGlCQUFpQixDQUMzQyxDQUFDLENBQUMsS0FBaUQsRUFDbkQsTUFBTSxDQUFDLEtBQWlELEVBQUUsT0FBTyxFQUNqRSxTQUFTLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFFcEIsTUFBTSxPQUFPLEdBQ1QsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzFFLE1BQU0sVUFBVSxHQUFHO1FBQ2pCO1lBQ0UsSUFBSSxFQUFFLE9BQU87WUFDYixJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsV0FBVyxFQUFFLFFBQVEsQ0FBQyxZQUFZLEVBQUUsUUFBUSxDQUFDLFdBQVcsQ0FBQztTQUMxRTtRQUNELEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxFQUFDLEVBQUU7WUFDbkMsSUFBSSxFQUFFLE9BQU87WUFDYixJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsV0FBVyxFQUFFLFFBQVEsQ0FBQyxZQUFZLEVBQUUsUUFBUSxDQUFDLFdBQVcsQ0FBQztTQUMxRTtRQUNEO1lBQ0UsSUFBSSxFQUFFLE9BQU87WUFDYixJQUFJLEVBQUU7Z0JBQ0osUUFBUSxDQUFDLGFBQWEsRUFBRSxRQUFRLENBQUMsY0FBYyxFQUFFLFFBQVEsQ0FBQyxhQUFhO2FBQ3hFO1NBQ0Y7S0FDRixDQUFDO0lBQ0YsTUFBTSxPQUFPLEdBQUcsSUFBSSxrQkFBa0IsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNqRCxNQUFNLEtBQUssR0FBRyxVQUFVLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDaEQsT0FBTyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxFQUFFLEtBQUssRUFBRSxVQUFVLENBQUMsQ0FBQztBQUMzRSxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFpQjtJQUN4QyxVQUFVLEVBQUUsTUFBTTtJQUNsQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsTUFBMEI7Q0FDdkMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIzIEdvb2dsZSBMTEMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtiYWNrZW5kX3V0aWwsIENvbnYzRCwgQ29udjNEQXR0cnMsIENvbnYzRElucHV0cywgS2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCB1cGNhc3RUeXBlfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcbmltcG9ydCB7Q29udjNETmFpdmVQcm9ncmFtfSBmcm9tICcuLi9jb252M2RfbmFpdmVfd2ViZ3B1JztcblxuZXhwb3J0IGZ1bmN0aW9uIGNvbnYzRChcbiAgICBhcmdzOiB7aW5wdXRzOiBDb252M0RJbnB1dHMsIGF0dHJzOiBDb252M0RBdHRycywgYmFja2VuZDogV2ViR1BVQmFja2VuZH0pIHtcbiAgY29uc3Qge2lucHV0cywgYmFja2VuZCwgYXR0cnN9ID0gYXJncztcbiAgY29uc3Qge3gsIGZpbHRlcn0gPSBpbnB1dHM7XG4gIGNvbnN0IHtzdHJpZGVzLCBwYWQsIGRpbGF0aW9uc30gPSBhdHRycztcblxuICBjb25zdCBjb252SW5mbyA9IGJhY2tlbmRfdXRpbC5jb21wdXRlQ29udjNESW5mbyhcbiAgICAgIHguc2hhcGUgYXMgW251bWJlciwgbnVtYmVyLCBudW1iZXIsIG51bWJlciwgbnVtYmVyXSxcbiAgICAgIGZpbHRlci5zaGFwZSBhcyBbbnVtYmVyLCBudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdLCBzdHJpZGVzLFxuICAgICAgZGlsYXRpb25zLCBwYWQpO1xuXG4gIGNvbnN0IHBhZEluZm8gPVxuICAgICAgW2NvbnZJbmZvLnBhZEluZm8uZnJvbnQsIGNvbnZJbmZvLnBhZEluZm8udG9wLCBjb252SW5mby5wYWRJbmZvLmxlZnRdO1xuICBjb25zdCBkaW1lbnNpb25zID0gW1xuICAgIHtcbiAgICAgIHR5cGU6ICdpbnQzMicsXG4gICAgICBkYXRhOiBbY29udkluZm8uZmlsdGVyRGVwdGgsIGNvbnZJbmZvLmZpbHRlckhlaWdodCwgY29udkluZm8uZmlsdGVyV2lkdGhdXG4gICAgfSxcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogWy4uLnBhZEluZm9dfSwge1xuICAgICAgdHlwZTogJ2ludDMyJyxcbiAgICAgIGRhdGE6IFtjb252SW5mby5zdHJpZGVEZXB0aCwgY29udkluZm8uc3RyaWRlSGVpZ2h0LCBjb252SW5mby5zdHJpZGVXaWR0aF1cbiAgICB9LFxuICAgIHtcbiAgICAgIHR5cGU6ICdpbnQzMicsXG4gICAgICBkYXRhOiBbXG4gICAgICAgIGNvbnZJbmZvLmRpbGF0aW9uRGVwdGgsIGNvbnZJbmZvLmRpbGF0aW9uSGVpZ2h0LCBjb252SW5mby5kaWxhdGlvbldpZHRoXG4gICAgICBdXG4gICAgfVxuICBdO1xuICBjb25zdCBwcm9ncmFtID0gbmV3IENvbnYzRE5haXZlUHJvZ3JhbShjb252SW5mbyk7XG4gIGNvbnN0IGR0eXBlID0gdXBjYXN0VHlwZSh4LmR0eXBlLCBmaWx0ZXIuZHR5cGUpO1xuICByZXR1cm4gYmFja2VuZC5ydW5XZWJHUFVQcm9ncmFtKHByb2dyYW0sIFt4LCBmaWx0ZXJdLCBkdHlwZSwgZGltZW5zaW9ucyk7XG59XG5cbmV4cG9ydCBjb25zdCBjb252M0RDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogQ29udjNELFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IGNvbnYzRCBhcyB7fSBhcyBLZXJuZWxGdW5jLFxufTtcbiJdfQ==","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv3DBackpropFilterV2 } from '@tensorflow/tfjs-core';\nimport { Conv3DDerFilterProgram } from '../conv_backprop_webgpu';\nexport function conv3DBackpropFilterV2(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, dy } = inputs;\n    const { strides, pad, filterShape } = attrs;\n    const convInfo = backend_util.computeConv3DInfo(x.shape, filterShape, strides, 1 /* dilations */, pad);\n    const program = new Conv3DDerFilterProgram(convInfo);\n    const uniformData = [\n        {\n            type: 'int32',\n            data: [convInfo.padInfo.front, convInfo.padInfo.top, convInfo.padInfo.left]\n        },\n        {\n            type: 'int32',\n            data: [convInfo.strideDepth, convInfo.strideHeight, convInfo.strideWidth]\n        },\n        { type: 'int32', data: [convInfo.batchSize] },\n        { type: 'int32', data: [convInfo.outDepth] },\n        { type: 'int32', data: [convInfo.outHeight] },\n        { type: 'int32', data: [convInfo.outWidth] },\n        { type: 'int32', data: [convInfo.inDepth] },\n        { type: 'int32', data: [convInfo.inHeight] },\n        { type: 'int32', data: [convInfo.inWidth] }\n    ];\n    return backend.runWebGPUProgram(program, [x, dy], dy.dtype, uniformData);\n}\nexport const conv3DBackpropFilterV2Config = {\n    kernelName: Conv3DBackpropFilterV2,\n    backendName: 'webgpu',\n    kernelFunc: conv3DBackpropFilterV2\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udjNEQmFja3Byb3BGaWx0ZXJWMi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvQ29udjNEQmFja3Byb3BGaWx0ZXJWMi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsWUFBWSxFQUFFLHNCQUFzQixFQUFrRyxNQUFNLHVCQUF1QixDQUFDO0FBRzVLLE9BQU8sRUFBQyxzQkFBc0IsRUFBQyxNQUFNLHlCQUF5QixDQUFDO0FBRS9ELE1BQU0sVUFBVSxzQkFBc0IsQ0FBQyxJQUl0QztJQUNDLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QyxNQUFNLEVBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUN2QixNQUFNLEVBQUMsT0FBTyxFQUFFLEdBQUcsRUFBRSxXQUFXLEVBQUMsR0FBRyxLQUFLLENBQUM7SUFFMUMsTUFBTSxRQUFRLEdBQUcsWUFBWSxDQUFDLGlCQUFpQixDQUMzQyxDQUFDLENBQUMsS0FBaUQsRUFBRSxXQUFXLEVBQUUsT0FBTyxFQUN6RSxDQUFDLENBQUMsZUFBZSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBRTVCLE1BQU0sT0FBTyxHQUFHLElBQUksc0JBQXNCLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDckQsTUFBTSxXQUFXLEdBQUc7UUFDbEI7WUFDRSxJQUFJLEVBQUUsT0FBTztZQUNiLElBQUksRUFDQSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLFFBQVEsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO1NBQzFFO1FBQ0Q7WUFDRSxJQUFJLEVBQUUsT0FBTztZQUNiLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxXQUFXLEVBQUUsUUFBUSxDQUFDLFlBQVksRUFBRSxRQUFRLENBQUMsV0FBVyxDQUFDO1NBQzFFO1FBQ0QsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsRUFBQztRQUMzQyxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxFQUFDO1FBQzFDLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLEVBQUM7UUFDM0MsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsRUFBQztRQUMxQyxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxFQUFDO1FBQ3pDLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLEVBQUM7UUFDMUMsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsRUFBQztLQUMxQyxDQUFDO0lBQ0YsT0FBTyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxLQUFLLEVBQUUsV0FBVyxDQUFDLENBQUM7QUFDM0UsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLDRCQUE0QixHQUFpQjtJQUN4RCxVQUFVLEVBQUUsc0JBQXNCO0lBQ2xDLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxzQkFBK0M7Q0FDNUQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIzIEdvb2dsZSBMTEMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtiYWNrZW5kX3V0aWwsIENvbnYzREJhY2twcm9wRmlsdGVyVjIsIENvbnYzREJhY2twcm9wRmlsdGVyVjJBdHRycywgQ29udjNEQmFja3Byb3BGaWx0ZXJWMklucHV0cywgS2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBUZW5zb3JJbmZvfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcbmltcG9ydCB7Q29udjNERGVyRmlsdGVyUHJvZ3JhbX0gZnJvbSAnLi4vY29udl9iYWNrcHJvcF93ZWJncHUnO1xuXG5leHBvcnQgZnVuY3Rpb24gY29udjNEQmFja3Byb3BGaWx0ZXJWMihhcmdzOiB7XG4gIGlucHV0czogQ29udjNEQmFja3Byb3BGaWx0ZXJWMklucHV0cyxcbiAgYXR0cnM6IENvbnYzREJhY2twcm9wRmlsdGVyVjJBdHRycyxcbiAgYmFja2VuZDogV2ViR1BVQmFja2VuZCxcbn0pOiBUZW5zb3JJbmZvIHtcbiAgY29uc3Qge2lucHV0cywgYmFja2VuZCwgYXR0cnN9ID0gYXJncztcbiAgY29uc3Qge3gsIGR5fSA9IGlucHV0cztcbiAgY29uc3Qge3N0cmlkZXMsIHBhZCwgZmlsdGVyU2hhcGV9ID0gYXR0cnM7XG5cbiAgY29uc3QgY29udkluZm8gPSBiYWNrZW5kX3V0aWwuY29tcHV0ZUNvbnYzREluZm8oXG4gICAgICB4LnNoYXBlIGFzIFtudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXIsIG51bWJlcl0sIGZpbHRlclNoYXBlLCBzdHJpZGVzLFxuICAgICAgMSAvKiBkaWxhdGlvbnMgKi8sIHBhZCk7XG5cbiAgY29uc3QgcHJvZ3JhbSA9IG5ldyBDb252M0REZXJGaWx0ZXJQcm9ncmFtKGNvbnZJbmZvKTtcbiAgY29uc3QgdW5pZm9ybURhdGEgPSBbXG4gICAge1xuICAgICAgdHlwZTogJ2ludDMyJyxcbiAgICAgIGRhdGE6XG4gICAgICAgICAgW2NvbnZJbmZvLnBhZEluZm8uZnJvbnQsIGNvbnZJbmZvLnBhZEluZm8udG9wLCBjb252SW5mby5wYWRJbmZvLmxlZnRdXG4gICAgfSxcbiAgICB7XG4gICAgICB0eXBlOiAnaW50MzInLFxuICAgICAgZGF0YTogW2NvbnZJbmZvLnN0cmlkZURlcHRoLCBjb252SW5mby5zdHJpZGVIZWlnaHQsIGNvbnZJbmZvLnN0cmlkZVdpZHRoXVxuICAgIH0sXG4gICAge3R5cGU6ICdpbnQzMicsIGRhdGE6IFtjb252SW5mby5iYXRjaFNpemVdfSxcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogW2NvbnZJbmZvLm91dERlcHRoXX0sXG4gICAge3R5cGU6ICdpbnQzMicsIGRhdGE6IFtjb252SW5mby5vdXRIZWlnaHRdfSxcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogW2NvbnZJbmZvLm91dFdpZHRoXX0sXG4gICAge3R5cGU6ICdpbnQzMicsIGRhdGE6IFtjb252SW5mby5pbkRlcHRoXX0sXG4gICAge3R5cGU6ICdpbnQzMicsIGRhdGE6IFtjb252SW5mby5pbkhlaWdodF19LFxuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbY29udkluZm8uaW5XaWR0aF19XG4gIF07XG4gIHJldHVybiBiYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0ocHJvZ3JhbSwgW3gsIGR5XSwgZHkuZHR5cGUsIHVuaWZvcm1EYXRhKTtcbn1cblxuZXhwb3J0IGNvbnN0IGNvbnYzREJhY2twcm9wRmlsdGVyVjJDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogQ29udjNEQmFja3Byb3BGaWx0ZXJWMixcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBjb252M0RCYWNrcHJvcEZpbHRlclYyIGFzIHVua25vd24gYXMgS2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv3DBackpropInputV2 } from '@tensorflow/tfjs-core';\nimport { Conv3DDerInputProgram } from '../conv_backprop_webgpu';\nexport function conv3DBackpropInputV2(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, filter } = inputs;\n    const { strides, pad, inputShape } = attrs;\n    const convInfo = backend_util.computeConv3DInfo(inputShape, filter.shape, strides, 1 /* dilations */, pad);\n    const program = new Conv3DDerInputProgram(convInfo);\n    const uniformData = [\n        {\n            type: 'int32',\n            data: [convInfo.filterDepth, convInfo.filterHeight, convInfo.filterWidth]\n        },\n        {\n            type: 'int32',\n            data: [\n                convInfo.filterDepth - 1 - convInfo.padInfo.front,\n                convInfo.filterHeight - 1 - convInfo.padInfo.top,\n                convInfo.filterWidth - 1 - convInfo.padInfo.left\n            ]\n        },\n        {\n            type: 'int32',\n            data: [convInfo.strideDepth, convInfo.strideHeight, convInfo.strideWidth]\n        },\n        { type: 'int32', data: [convInfo.outDepth] },\n        { type: 'int32', data: [convInfo.outHeight] },\n        { type: 'int32', data: [convInfo.outWidth] },\n        { type: 'int32', data: [convInfo.outChannels] }\n    ];\n    return backend.runWebGPUProgram(program, [dy, filter], dy.dtype, uniformData);\n}\nexport const conv3DBackpropInputV2Config = {\n    kernelName: Conv3DBackpropInputV2,\n    backendName: 'webgpu',\n    kernelFunc: conv3DBackpropInputV2,\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udjNEQmFja3Byb3BJbnB1dFYyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9Db252M0RCYWNrcHJvcElucHV0VjIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLFlBQVksRUFBRSxxQkFBcUIsRUFBZ0csTUFBTSx1QkFBdUIsQ0FBQztBQUd6SyxPQUFPLEVBQUMscUJBQXFCLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQUU5RCxNQUFNLFVBQVUscUJBQXFCLENBQUMsSUFJckM7SUFDQyxNQUFNLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFDdEMsTUFBTSxFQUFDLEVBQUUsRUFBRSxNQUFNLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFDNUIsTUFBTSxFQUFDLE9BQU8sRUFBRSxHQUFHLEVBQUUsVUFBVSxFQUFDLEdBQUcsS0FBSyxDQUFDO0lBRXpDLE1BQU0sUUFBUSxHQUFHLFlBQVksQ0FBQyxpQkFBaUIsQ0FDM0MsVUFBVSxFQUFFLE1BQU0sQ0FBQyxLQUFpRCxFQUNwRSxPQUFPLEVBQUUsQ0FBQyxDQUFDLGVBQWUsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUVyQyxNQUFNLE9BQU8sR0FBRyxJQUFJLHFCQUFxQixDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3BELE1BQU0sV0FBVyxHQUFHO1FBQ2xCO1lBQ0UsSUFBSSxFQUFFLE9BQU87WUFDYixJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsV0FBVyxFQUFFLFFBQVEsQ0FBQyxZQUFZLEVBQUUsUUFBUSxDQUFDLFdBQVcsQ0FBQztTQUMxRTtRQUNEO1lBQ0UsSUFBSSxFQUFFLE9BQU87WUFDYixJQUFJLEVBQUU7Z0JBQ0osUUFBUSxDQUFDLFdBQVcsR0FBRyxDQUFDLEdBQUcsUUFBUSxDQUFDLE9BQU8sQ0FBQyxLQUFLO2dCQUNqRCxRQUFRLENBQUMsWUFBWSxHQUFHLENBQUMsR0FBRyxRQUFRLENBQUMsT0FBTyxDQUFDLEdBQUc7Z0JBQ2hELFFBQVEsQ0FBQyxXQUFXLEdBQUcsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxPQUFPLENBQUMsSUFBSTthQUNqRDtTQUNGO1FBQ0Q7WUFDRSxJQUFJLEVBQUUsT0FBTztZQUNiLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxXQUFXLEVBQUUsUUFBUSxDQUFDLFlBQVksRUFBRSxRQUFRLENBQUMsV0FBVyxDQUFDO1NBQzFFO1FBQ0QsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsRUFBQztRQUMxQyxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxFQUFDO1FBQzNDLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLEVBQUM7UUFDMUMsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsRUFBQztLQUM5QyxDQUFDO0lBRUYsT0FBTyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLENBQUMsRUFBRSxFQUFFLE1BQU0sQ0FBQyxFQUFFLEVBQUUsQ0FBQyxLQUFLLEVBQUUsV0FBVyxDQUFDLENBQUM7QUFDaEYsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLDJCQUEyQixHQUFpQjtJQUN2RCxVQUFVLEVBQUUscUJBQXFCO0lBQ2pDLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxxQkFBOEM7Q0FDM0QsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIzIEdvb2dsZSBMTEMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtiYWNrZW5kX3V0aWwsIENvbnYzREJhY2twcm9wSW5wdXRWMiwgQ29udjNEQmFja3Byb3BJbnB1dFYyQXR0cnMsIENvbnYzREJhY2twcm9wSW5wdXRWMklucHV0cywgS2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBUZW5zb3JJbmZvfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcbmltcG9ydCB7Q29udjNERGVySW5wdXRQcm9ncmFtfSBmcm9tICcuLi9jb252X2JhY2twcm9wX3dlYmdwdSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBjb252M0RCYWNrcHJvcElucHV0VjIoYXJnczoge1xuICBpbnB1dHM6IENvbnYzREJhY2twcm9wSW5wdXRWMklucHV0cyxcbiAgYXR0cnM6IENvbnYzREJhY2twcm9wSW5wdXRWMkF0dHJzLFxuICBiYWNrZW5kOiBXZWJHUFVCYWNrZW5kXG59KTogVGVuc29ySW5mbyB7XG4gIGNvbnN0IHtpbnB1dHMsIGJhY2tlbmQsIGF0dHJzfSA9IGFyZ3M7XG4gIGNvbnN0IHtkeSwgZmlsdGVyfSA9IGlucHV0cztcbiAgY29uc3Qge3N0cmlkZXMsIHBhZCwgaW5wdXRTaGFwZX0gPSBhdHRycztcblxuICBjb25zdCBjb252SW5mbyA9IGJhY2tlbmRfdXRpbC5jb21wdXRlQ29udjNESW5mbyhcbiAgICAgIGlucHV0U2hhcGUsIGZpbHRlci5zaGFwZSBhcyBbbnVtYmVyLCBudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdLFxuICAgICAgc3RyaWRlcywgMSAvKiBkaWxhdGlvbnMgKi8sIHBhZCk7XG5cbiAgY29uc3QgcHJvZ3JhbSA9IG5ldyBDb252M0REZXJJbnB1dFByb2dyYW0oY29udkluZm8pO1xuICBjb25zdCB1bmlmb3JtRGF0YSA9IFtcbiAgICB7XG4gICAgICB0eXBlOiAnaW50MzInLFxuICAgICAgZGF0YTogW2NvbnZJbmZvLmZpbHRlckRlcHRoLCBjb252SW5mby5maWx0ZXJIZWlnaHQsIGNvbnZJbmZvLmZpbHRlcldpZHRoXVxuICAgIH0sXG4gICAge1xuICAgICAgdHlwZTogJ2ludDMyJyxcbiAgICAgIGRhdGE6IFtcbiAgICAgICAgY29udkluZm8uZmlsdGVyRGVwdGggLSAxIC0gY29udkluZm8ucGFkSW5mby5mcm9udCxcbiAgICAgICAgY29udkluZm8uZmlsdGVySGVpZ2h0IC0gMSAtIGNvbnZJbmZvLnBhZEluZm8udG9wLFxuICAgICAgICBjb252SW5mby5maWx0ZXJXaWR0aCAtIDEgLSBjb252SW5mby5wYWRJbmZvLmxlZnRcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgIHR5cGU6ICdpbnQzMicsXG4gICAgICBkYXRhOiBbY29udkluZm8uc3RyaWRlRGVwdGgsIGNvbnZJbmZvLnN0cmlkZUhlaWdodCwgY29udkluZm8uc3RyaWRlV2lkdGhdXG4gICAgfSxcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogW2NvbnZJbmZvLm91dERlcHRoXX0sXG4gICAge3R5cGU6ICdpbnQzMicsIGRhdGE6IFtjb252SW5mby5vdXRIZWlnaHRdfSxcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogW2NvbnZJbmZvLm91dFdpZHRoXX0sXG4gICAge3R5cGU6ICdpbnQzMicsIGRhdGE6IFtjb252SW5mby5vdXRDaGFubmVsc119XG4gIF07XG5cbiAgcmV0dXJuIGJhY2tlbmQucnVuV2ViR1BVUHJvZ3JhbShwcm9ncmFtLCBbZHksIGZpbHRlcl0sIGR5LmR0eXBlLCB1bmlmb3JtRGF0YSk7XG59XG5cbmV4cG9ydCBjb25zdCBjb252M0RCYWNrcHJvcElucHV0VjJDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogQ29udjNEQmFja3Byb3BJbnB1dFYyLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IGNvbnYzREJhY2twcm9wSW5wdXRWMiBhcyB1bmtub3duIGFzIEtlcm5lbEZ1bmMsXG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Cos } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { UnaryOpType } from '../unary_op_util';\nexport const cos = unaryKernelFunc({ opType: UnaryOpType.COS });\nexport const cosConfig = {\n    kernelName: Cos,\n    backendName: 'webgpu',\n    kernelFunc: cos\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9Db3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLEdBQUcsRUFBZSxNQUFNLHVCQUF1QixDQUFDO0FBRXhELE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUVuRSxPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sa0JBQWtCLENBQUM7QUFFN0MsTUFBTSxDQUFDLE1BQU0sR0FBRyxHQUFHLGVBQWUsQ0FBQyxFQUFDLE1BQU0sRUFBRSxXQUFXLENBQUMsR0FBRyxFQUFDLENBQUMsQ0FBQztBQUU5RCxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQWlCO0lBQ3JDLFVBQVUsRUFBRSxHQUFHO0lBQ2YsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLEdBQUc7Q0FDaEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtDb3MsIEtlcm5lbENvbmZpZ30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHt1bmFyeUtlcm5lbEZ1bmN9IGZyb20gJy4uL2tlcm5lbF91dGlscy9rZXJuZWxfZnVuY3NfdXRpbHMnO1xuXG5pbXBvcnQge1VuYXJ5T3BUeXBlfSBmcm9tICcuLi91bmFyeV9vcF91dGlsJztcblxuZXhwb3J0IGNvbnN0IGNvcyA9IHVuYXJ5S2VybmVsRnVuYyh7b3BUeXBlOiBVbmFyeU9wVHlwZS5DT1N9KTtcblxuZXhwb3J0IGNvbnN0IGNvc0NvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBDb3MsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogY29zXG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Cosh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { UnaryOpType } from '../unary_op_util';\nexport const cosh = unaryKernelFunc({ opType: UnaryOpType.COSH });\nexport const coshConfig = {\n    kernelName: Cosh,\n    backendName: 'webgpu',\n    kernelFunc: cosh\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29zaC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvQ29zaC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsSUFBSSxFQUFlLE1BQU0sdUJBQXVCLENBQUM7QUFFekQsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9DQUFvQyxDQUFDO0FBRW5FLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUU3QyxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQUcsZUFBZSxDQUFDLEVBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxJQUFJLEVBQUMsQ0FBQyxDQUFDO0FBRWhFLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBaUI7SUFDdEMsVUFBVSxFQUFFLElBQUk7SUFDaEIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLElBQUk7Q0FDakIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtDb3NoLCBLZXJuZWxDb25maWd9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7dW5hcnlLZXJuZWxGdW5jfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMva2VybmVsX2Z1bmNzX3V0aWxzJztcblxuaW1wb3J0IHtVbmFyeU9wVHlwZX0gZnJvbSAnLi4vdW5hcnlfb3BfdXRpbCc7XG5cbmV4cG9ydCBjb25zdCBjb3NoID0gdW5hcnlLZXJuZWxGdW5jKHtvcFR5cGU6IFVuYXJ5T3BUeXBlLkNPU0h9KTtcblxuZXhwb3J0IGNvbnN0IGNvc2hDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogQ29zaCxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBjb3NoXG59O1xuIl19","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class CropAndResizeProgram {\n    constructor(channnel, boxShape, cropSize, method) {\n        this.variableNames = ['Image', 'Boxes', 'BoxInd'];\n        this.uniforms = 'extrapolationValue : f32,';\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        const [numBoxes,] = boxShape;\n        this.outputShape = [numBoxes, cropSize[0], cropSize[1], channnel];\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.methodId = method === 'bilinear' ? 1 : 0;\n        this.cropHeightBiggerThan1 = this.outputShape[1] > 1;\n        this.cropWidthBiggerThan1 = this.outputShape[2] > 1;\n        this.shaderKey = `cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`;\n    }\n    getUserCode() {\n        const [inputHeightFloat, inputWidthFloat] = [`f32(uniforms.imageShape[1] - 1)`, `f32(uniforms.imageShape[2] - 1)`];\n        const [heightRatio, heightScale, inY] = this.cropHeightBiggerThan1 ?\n            [\n                `(${inputHeightFloat} / f32(uniforms.outShape[1] - 1))`,\n                '(y2-y1) * height_ratio',\n                `y1*${inputHeightFloat} + f32(y)*(height_scale)`,\n            ] :\n            [\n                '0.0',\n                '0.0',\n                `0.5 * (y1+y2) * ${inputHeightFloat}`,\n            ];\n        const [widthRatio, widthScale, inX] = this.cropWidthBiggerThan1 ?\n            [\n                `(${inputWidthFloat} / f32(uniforms.outShape[2] - 1))`,\n                '(x2-x1) * width_ratio',\n                `x1*${inputWidthFloat} + f32(x)*(width_scale)`,\n            ] :\n            [\n                '0.0',\n                '0.0',\n                `0.5 * (x1+x2) * ${inputWidthFloat}`,\n            ];\n        // Reference implementation\n        // tslint:disable-next-line:max-line-length\n        // https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/crop_and_resize_op_gpu.cu.cc\n        const userCode = `\n    ${main('index')} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let height_ratio = f32(${heightRatio});\n        let width_ratio = f32(${widthRatio});\n        let b = coords[0];\n        let y = coords[1];\n        let x = coords[2];\n        let d = coords[3];\n        // get box vals\n        let y1 = getBoxes(b, 0);\n        let x1 = getBoxes(b, 1);\n        let y2 = getBoxes(b, 2);\n        let x2 = getBoxes(b, 3);\n        // get image in batch index\n        let bInd = i32(round(getBoxInd(b)));\n        if(bInd < 0 || bInd >= uniforms.outShape[0]) {\n          return;\n        }\n        let height_scale = ${heightScale};\n        let width_scale = ${widthScale};\n        let in_y = ${inY};\n        if( in_y < 0.0 || in_y > ${inputHeightFloat} ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let in_x = ${inX};\n        if( in_x < 0.0 || in_x > ${inputWidthFloat} ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let sourceFracIndexCR = vec2<f32>(in_x,in_y);\n        if(${this.methodId} == 1) {\n          // Compute the four integer indices.\n          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);\n          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));\n          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);\n          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);\n          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);\n          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);\n          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);\n          let top = topLeft + (topRight - topLeft) * fracCR.x;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          let newValue = top + (bottom - top) * fracCR.y;\n          setOutputAtIndex(index, newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          let sourceNearestCR = vec2<i32>(floor(\n            sourceFracIndexCR + vec2<f32>(0.5,0.5)));\n          let newValue = getImage(\n            bInd, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { CropAndResize } from '@tensorflow/tfjs-core';\nimport { CropAndResizeProgram } from '../crop_and_resize_webgpu';\nexport const cropAndResize = (args) => {\n    const { inputs, backend, attrs } = args;\n    const { image, boxes, boxInd } = inputs;\n    const { cropSize, method, extrapolationValue } = attrs;\n    const program = new CropAndResizeProgram(image.shape[3], boxes.shape, cropSize, method);\n    const uniformData = [{ type: 'float32', data: [extrapolationValue] }];\n    return backend.runWebGPUProgram(program, [image, boxes, boxInd], 'float32', uniformData);\n};\nexport const cropAndResizeConfig = {\n    kernelName: CropAndResize,\n    backendName: 'webgpu',\n    kernelFunc: cropAndResize\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ3JvcEFuZFJlc2l6ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvQ3JvcEFuZFJlc2l6ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsYUFBYSxFQUFnRixNQUFNLHVCQUF1QixDQUFDO0FBR25JLE9BQU8sRUFBQyxvQkFBb0IsRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBRS9ELE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxDQUFDLElBSTdCLEVBQWMsRUFBRTtJQUNmLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QyxNQUFNLEVBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFDdEMsTUFBTSxFQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUUsa0JBQWtCLEVBQUMsR0FBRyxLQUFLLENBQUM7SUFFckQsTUFBTSxPQUFPLEdBQUcsSUFBSSxvQkFBb0IsQ0FDcEMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsS0FBeUIsRUFBRSxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDdkUsTUFBTSxXQUFXLEdBQUcsQ0FBQyxFQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLENBQUMsa0JBQWtCLENBQUMsRUFBQyxDQUFDLENBQUM7SUFDcEUsT0FBTyxPQUFPLENBQUMsZ0JBQWdCLENBQzNCLE9BQU8sRUFBRSxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsTUFBTSxDQUFDLEVBQUUsU0FBUyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0FBQy9ELENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFpQjtJQUMvQyxVQUFVLEVBQUUsYUFBYTtJQUN6QixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsYUFBc0M7Q0FDbkQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtDcm9wQW5kUmVzaXplLCBDcm9wQW5kUmVzaXplQXR0cnMsIENyb3BBbmRSZXNpemVJbnB1dHMsIEtlcm5lbENvbmZpZywgS2VybmVsRnVuYywgVGVuc29ySW5mb30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge0Nyb3BBbmRSZXNpemVQcm9ncmFtfSBmcm9tICcuLi9jcm9wX2FuZF9yZXNpemVfd2ViZ3B1JztcblxuZXhwb3J0IGNvbnN0IGNyb3BBbmRSZXNpemUgPSAoYXJnczoge1xuICBpbnB1dHM6IENyb3BBbmRSZXNpemVJbnB1dHMsXG4gIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmQsXG4gIGF0dHJzOiBDcm9wQW5kUmVzaXplQXR0cnNcbn0pOiBUZW5zb3JJbmZvID0+IHtcbiAgY29uc3Qge2lucHV0cywgYmFja2VuZCwgYXR0cnN9ID0gYXJncztcbiAgY29uc3Qge2ltYWdlLCBib3hlcywgYm94SW5kfSA9IGlucHV0cztcbiAgY29uc3Qge2Nyb3BTaXplLCBtZXRob2QsIGV4dHJhcG9sYXRpb25WYWx1ZX0gPSBhdHRycztcblxuICBjb25zdCBwcm9ncmFtID0gbmV3IENyb3BBbmRSZXNpemVQcm9ncmFtKFxuICAgICAgaW1hZ2Uuc2hhcGVbM10sIGJveGVzLnNoYXBlIGFzIFtudW1iZXIsIG51bWJlcl0sIGNyb3BTaXplLCBtZXRob2QpO1xuICBjb25zdCB1bmlmb3JtRGF0YSA9IFt7dHlwZTogJ2Zsb2F0MzInLCBkYXRhOiBbZXh0cmFwb2xhdGlvblZhbHVlXX1dO1xuICByZXR1cm4gYmFja2VuZC5ydW5XZWJHUFVQcm9ncmFtKFxuICAgICAgcHJvZ3JhbSwgW2ltYWdlLCBib3hlcywgYm94SW5kXSwgJ2Zsb2F0MzInLCB1bmlmb3JtRGF0YSk7XG59O1xuXG5leHBvcnQgY29uc3QgY3JvcEFuZFJlc2l6ZUNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBDcm9wQW5kUmVzaXplLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IGNyb3BBbmRSZXNpemUgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport var CumOpType;\n(function (CumOpType) {\n    CumOpType[\"Prod\"] = \"*\";\n    CumOpType[\"Sum\"] = \"+\";\n})(CumOpType || (CumOpType = {}));\nexport class CumProgram {\n    constructor(op, shape, exclusive, reverse) {\n        this.variableNames = ['x'];\n        // pow(i32, i32) is not supported, use pow(f32, f32) instead.\n        this.uniforms = 'index : f32,';\n        this.size = true;\n        this.workgroupSize = [128, 1, 1];\n        this.outputShape = shape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.exclusive = exclusive;\n        this.reverse = reverse;\n        this.op = op;\n        this.shaderKey = `cum_${this.op}_${this.exclusive}_${this.reverse}`;\n    }\n    getUserCode() {\n        const rank = this.outputShape.length;\n        const initVal = this.op === CumOpType.Prod ? '1.0' : '0.0';\n        const val = this.exclusive ? initVal :\n            `getX(${getCoords(rank, 'coords', this.op)})`;\n        const length = this.outputShape[this.outputShape.length - 1];\n        let condition = '';\n        let idxString = '';\n        // When exclusive is set, the cum op becomes roll op that copies the\n        // value from the previous index based on the direction specified by the\n        // reverse flag.\n        if (this.exclusive) {\n            condition = this.reverse ? `end != ${length - 1}` : 'end != 0';\n            idxString = this.reverse ? 'end + 1' : 'end - 1';\n        }\n        else {\n            condition = this.reverse ? `end + pow2 < ${length}` : 'end >= pow2';\n            idxString = (this.reverse ? 'end + pow2' : 'end - pow2');\n        }\n        return `\n      ${main('index')} {\n       if (index < uniforms.size) {\n         var coords = getCoordsFromIndex(index);\n\n         let end = ${getFinalCoord(rank, 'coords', this.op)};\n         var val = ${val};\n         let pow2 = i32(pow(2.0, uniforms.index));\n         if (${condition}) {\n           let idx = ${idxString};\n           ${getFinalCoord(rank, 'coords', this.op)} = idx;\n           val ${this.op}= getX(${getCoords(rank, 'coords', this.op)});\n         }\n         setOutputAtIndex(index, val);\n       }\n      }\n    `;\n    }\n}\nfunction getCoords(rank, name, op) {\n    if (rank === 1) {\n        return `${name}`;\n    }\n    else if (rank === 2) {\n        return `${name}.x, ${name}.y`;\n    }\n    else if (rank === 3) {\n        return `${name}.x, ${name}.y, ${name}.z`;\n    }\n    else if (rank === 4) {\n        return `${name}.x, ${name}.y, ${name}.z, ${name}.w`;\n    }\n    else {\n        throw Error(`Cumulative ${op} for rank ${rank} is not yet supported`);\n    }\n}\nfunction getFinalCoord(rank, name, op) {\n    if (rank === 1) {\n        return `${name}`;\n    }\n    else if (rank === 2) {\n        return `${name}.y`;\n    }\n    else if (rank === 3) {\n        return `${name}.z`;\n    }\n    else if (rank === 4) {\n        return `${name}.w`;\n    }\n    else {\n        throw Error(`Cumulative ${op} for rank ${rank} is not yet supported`);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nimport { CumProgram } from '../cum_webgpu';\nimport { identity } from './Identity';\nimport { transpose } from './Transpose';\nexport function cumImpl(op, x, backend, axis, exclusive, reverse) {\n    const xRank = x.shape.length;\n    const permutation = backend_util.getAxesPermutation([axis], xRank);\n    let permutedX = x;\n    if (permutation != null) {\n        permutedX = transpose({ inputs: { x }, backend, attrs: { perm: permutation } });\n    }\n    const permutedAxis = backend_util.getInnerMostAxes(1, xRank)[0];\n    if (permutedAxis !== xRank - 1) {\n        throw new Error(`WebGPU cumprod shader expects an inner-most axis=${x.shape.length - 1} ` +\n            `but got axis=${axis}`);\n    }\n    const size = permutedX.shape[permutedAxis];\n    let result = identity({ inputs: { x: permutedX }, backend });\n    // Use cum parallel algorithm, inspired by:\n    // https://developer.nvidia.com/gpugems/gpugems3/part-vi-gpu-computing/chapter-39-parallel-prefix-sum-scan-cuda\n    // Note: although the algorithm is called sum, it works for any associtative\n    // operator with an identity.\n    for (let i = 0; i <= Math.ceil(Math.log2(size)) - 1; i++) {\n        const program = new CumProgram(op, permutedX.shape, false, reverse);\n        const prevResult = result;\n        const uniformData = [{ type: 'float32', data: [i] }];\n        result =\n            backend.runWebGPUProgram(program, [result], result.dtype, uniformData);\n        backend.disposeData(prevResult.dataId);\n    }\n    // For exclusive cum, shift the end result in the direction of product or sum\n    // and add 1 for product or 0 for sum to the front index.\n    if (exclusive) {\n        const program = new CumProgram(op, permutedX.shape, exclusive, reverse);\n        const prevResult = result;\n        const uniformData = [{ type: 'float32', data: [0] }];\n        result =\n            backend.runWebGPUProgram(program, [result], result.dtype, uniformData);\n        backend.disposeData(prevResult.dataId);\n    }\n    if (permutation != null) {\n        const reversePermutation = backend_util.getUndoAxesPermutation(permutation);\n        const reverseTransposedResult = transpose({ inputs: { x: result }, backend, attrs: { perm: reversePermutation } });\n        backend.disposeData(result.dataId);\n        backend.disposeData(permutedX.dataId);\n        return reverseTransposedResult;\n    }\n    return result;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ3VtX2ltcGwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL0N1bV9pbXBsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxZQUFZLEVBQWEsTUFBTSx1QkFBdUIsQ0FBQztBQUcvRCxPQUFPLEVBQVksVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRXBELE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxZQUFZLENBQUM7QUFDcEMsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGFBQWEsQ0FBQztBQUV0QyxNQUFNLFVBQVUsT0FBTyxDQUNuQixFQUFhLEVBQUUsQ0FBYSxFQUFFLE9BQXNCLEVBQUUsSUFBWSxFQUNsRSxTQUFrQixFQUFFLE9BQWdCO0lBQ3RDLE1BQU0sS0FBSyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDO0lBQzdCLE1BQU0sV0FBVyxHQUFHLFlBQVksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ25FLElBQUksU0FBUyxHQUFHLENBQUMsQ0FBQztJQUNsQixJQUFJLFdBQVcsSUFBSSxJQUFJLEVBQUU7UUFDdkIsU0FBUyxHQUFHLFNBQVMsQ0FBQyxFQUFDLE1BQU0sRUFBRSxFQUFDLENBQUMsRUFBQyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUUsV0FBVyxFQUFDLEVBQUMsQ0FBQyxDQUFDO0tBQzNFO0lBQ0QsTUFBTSxZQUFZLEdBQUcsWUFBWSxDQUFDLGdCQUFnQixDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVoRSxJQUFJLFlBQVksS0FBSyxLQUFLLEdBQUcsQ0FBQyxFQUFFO1FBQzlCLE1BQU0sSUFBSSxLQUFLLENBQ1gsb0RBQ0ksQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxHQUFHO1lBQ3pCLGdCQUFnQixJQUFJLEVBQUUsQ0FBQyxDQUFDO0tBQzdCO0lBQ0QsTUFBTSxJQUFJLEdBQUcsU0FBUyxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUMzQyxJQUFJLE1BQU0sR0FBRyxRQUFRLENBQUMsRUFBQyxNQUFNLEVBQUUsRUFBQyxDQUFDLEVBQUUsU0FBUyxFQUFDLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztJQUN6RCwyQ0FBMkM7SUFDM0MsK0dBQStHO0lBQy9HLDRFQUE0RTtJQUM1RSw2QkFBNkI7SUFFN0IsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUN4RCxNQUFNLE9BQU8sR0FBRyxJQUFJLFVBQVUsQ0FBQyxFQUFFLEVBQUUsU0FBUyxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDcEUsTUFBTSxVQUFVLEdBQUcsTUFBTSxDQUFDO1FBQzFCLE1BQU0sV0FBVyxHQUFHLENBQUMsRUFBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQztRQUNuRCxNQUFNO1lBQ0YsT0FBTyxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxDQUFDLE1BQU0sQ0FBQyxFQUFFLE1BQU0sQ0FBQyxLQUFLLEVBQUUsV0FBVyxDQUFDLENBQUM7UUFDM0UsT0FBTyxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDeEM7SUFDRCw2RUFBNkU7SUFDN0UseURBQXlEO0lBQ3pELElBQUksU0FBUyxFQUFFO1FBQ2IsTUFBTSxPQUFPLEdBQUcsSUFBSSxVQUFVLENBQUMsRUFBRSxFQUFFLFNBQVMsQ0FBQyxLQUFLLEVBQUUsU0FBUyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ3hFLE1BQU0sVUFBVSxHQUFHLE1BQU0sQ0FBQztRQUMxQixNQUFNLFdBQVcsR0FBRyxDQUFDLEVBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUM7UUFDbkQsTUFBTTtZQUNGLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxNQUFNLENBQUMsRUFBRSxNQUFNLENBQUMsS0FBSyxFQUFFLFdBQVcsQ0FBQyxDQUFDO1FBQzNFLE9BQU8sQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0tBQ3hDO0lBRUQsSUFBSSxXQUFXLElBQUksSUFBSSxFQUFFO1FBQ3ZCLE1BQU0sa0JBQWtCLEdBQUcsWUFBWSxDQUFDLHNCQUFzQixDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQzVFLE1BQU0sdUJBQXVCLEdBQUcsU0FBUyxDQUNyQyxFQUFDLE1BQU0sRUFBRSxFQUFDLENBQUMsRUFBRSxNQUFNLEVBQUMsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLGtCQUFrQixFQUFDLEVBQUMsQ0FBQyxDQUFDO1FBRXZFLE9BQU8sQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ25DLE9BQU8sQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRXRDLE9BQU8sdUJBQXVCLENBQUM7S0FDaEM7SUFFRCxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjIgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge2JhY2tlbmRfdXRpbCwgVGVuc29ySW5mb30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge0N1bU9wVHlwZSwgQ3VtUHJvZ3JhbX0gZnJvbSAnLi4vY3VtX3dlYmdwdSc7XG5cbmltcG9ydCB7aWRlbnRpdHl9IGZyb20gJy4vSWRlbnRpdHknO1xuaW1wb3J0IHt0cmFuc3Bvc2V9IGZyb20gJy4vVHJhbnNwb3NlJztcblxuZXhwb3J0IGZ1bmN0aW9uIGN1bUltcGwoXG4gICAgb3A6IEN1bU9wVHlwZSwgeDogVGVuc29ySW5mbywgYmFja2VuZDogV2ViR1BVQmFja2VuZCwgYXhpczogbnVtYmVyLFxuICAgIGV4Y2x1c2l2ZTogYm9vbGVhbiwgcmV2ZXJzZTogYm9vbGVhbik6IFRlbnNvckluZm8ge1xuICBjb25zdCB4UmFuayA9IHguc2hhcGUubGVuZ3RoO1xuICBjb25zdCBwZXJtdXRhdGlvbiA9IGJhY2tlbmRfdXRpbC5nZXRBeGVzUGVybXV0YXRpb24oW2F4aXNdLCB4UmFuayk7XG4gIGxldCBwZXJtdXRlZFggPSB4O1xuICBpZiAocGVybXV0YXRpb24gIT0gbnVsbCkge1xuICAgIHBlcm11dGVkWCA9IHRyYW5zcG9zZSh7aW5wdXRzOiB7eH0sIGJhY2tlbmQsIGF0dHJzOiB7cGVybTogcGVybXV0YXRpb259fSk7XG4gIH1cbiAgY29uc3QgcGVybXV0ZWRBeGlzID0gYmFja2VuZF91dGlsLmdldElubmVyTW9zdEF4ZXMoMSwgeFJhbmspWzBdO1xuXG4gIGlmIChwZXJtdXRlZEF4aXMgIT09IHhSYW5rIC0gMSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgYFdlYkdQVSBjdW1wcm9kIHNoYWRlciBleHBlY3RzIGFuIGlubmVyLW1vc3QgYXhpcz0ke1xuICAgICAgICAgICAgeC5zaGFwZS5sZW5ndGggLSAxfSBgICtcbiAgICAgICAgYGJ1dCBnb3QgYXhpcz0ke2F4aXN9YCk7XG4gIH1cbiAgY29uc3Qgc2l6ZSA9IHBlcm11dGVkWC5zaGFwZVtwZXJtdXRlZEF4aXNdO1xuICBsZXQgcmVzdWx0ID0gaWRlbnRpdHkoe2lucHV0czoge3g6IHBlcm11dGVkWH0sIGJhY2tlbmR9KTtcbiAgLy8gVXNlIGN1bSBwYXJhbGxlbCBhbGdvcml0aG0sIGluc3BpcmVkIGJ5OlxuICAvLyBodHRwczovL2RldmVsb3Blci5udmlkaWEuY29tL2dwdWdlbXMvZ3B1Z2VtczMvcGFydC12aS1ncHUtY29tcHV0aW5nL2NoYXB0ZXItMzktcGFyYWxsZWwtcHJlZml4LXN1bS1zY2FuLWN1ZGFcbiAgLy8gTm90ZTogYWx0aG91Z2ggdGhlIGFsZ29yaXRobSBpcyBjYWxsZWQgc3VtLCBpdCB3b3JrcyBmb3IgYW55IGFzc29jaXRhdGl2ZVxuICAvLyBvcGVyYXRvciB3aXRoIGFuIGlkZW50aXR5LlxuXG4gIGZvciAobGV0IGkgPSAwOyBpIDw9IE1hdGguY2VpbChNYXRoLmxvZzIoc2l6ZSkpIC0gMTsgaSsrKSB7XG4gICAgY29uc3QgcHJvZ3JhbSA9IG5ldyBDdW1Qcm9ncmFtKG9wLCBwZXJtdXRlZFguc2hhcGUsIGZhbHNlLCByZXZlcnNlKTtcbiAgICBjb25zdCBwcmV2UmVzdWx0ID0gcmVzdWx0O1xuICAgIGNvbnN0IHVuaWZvcm1EYXRhID0gW3t0eXBlOiAnZmxvYXQzMicsIGRhdGE6IFtpXX1dO1xuICAgIHJlc3VsdCA9XG4gICAgICAgIGJhY2tlbmQucnVuV2ViR1BVUHJvZ3JhbShwcm9ncmFtLCBbcmVzdWx0XSwgcmVzdWx0LmR0eXBlLCB1bmlmb3JtRGF0YSk7XG4gICAgYmFja2VuZC5kaXNwb3NlRGF0YShwcmV2UmVzdWx0LmRhdGFJZCk7XG4gIH1cbiAgLy8gRm9yIGV4Y2x1c2l2ZSBjdW0sIHNoaWZ0IHRoZSBlbmQgcmVzdWx0IGluIHRoZSBkaXJlY3Rpb24gb2YgcHJvZHVjdCBvciBzdW1cbiAgLy8gYW5kIGFkZCAxIGZvciBwcm9kdWN0IG9yIDAgZm9yIHN1bSB0byB0aGUgZnJvbnQgaW5kZXguXG4gIGlmIChleGNsdXNpdmUpIHtcbiAgICBjb25zdCBwcm9ncmFtID0gbmV3IEN1bVByb2dyYW0ob3AsIHBlcm11dGVkWC5zaGFwZSwgZXhjbHVzaXZlLCByZXZlcnNlKTtcbiAgICBjb25zdCBwcmV2UmVzdWx0ID0gcmVzdWx0O1xuICAgIGNvbnN0IHVuaWZvcm1EYXRhID0gW3t0eXBlOiAnZmxvYXQzMicsIGRhdGE6IFswXX1dO1xuICAgIHJlc3VsdCA9XG4gICAgICAgIGJhY2tlbmQucnVuV2ViR1BVUHJvZ3JhbShwcm9ncmFtLCBbcmVzdWx0XSwgcmVzdWx0LmR0eXBlLCB1bmlmb3JtRGF0YSk7XG4gICAgYmFja2VuZC5kaXNwb3NlRGF0YShwcmV2UmVzdWx0LmRhdGFJZCk7XG4gIH1cblxuICBpZiAocGVybXV0YXRpb24gIT0gbnVsbCkge1xuICAgIGNvbnN0IHJldmVyc2VQZXJtdXRhdGlvbiA9IGJhY2tlbmRfdXRpbC5nZXRVbmRvQXhlc1Blcm11dGF0aW9uKHBlcm11dGF0aW9uKTtcbiAgICBjb25zdCByZXZlcnNlVHJhbnNwb3NlZFJlc3VsdCA9IHRyYW5zcG9zZShcbiAgICAgICAge2lucHV0czoge3g6IHJlc3VsdH0sIGJhY2tlbmQsIGF0dHJzOiB7cGVybTogcmV2ZXJzZVBlcm11dGF0aW9ufX0pO1xuXG4gICAgYmFja2VuZC5kaXNwb3NlRGF0YShyZXN1bHQuZGF0YUlkKTtcbiAgICBiYWNrZW5kLmRpc3Bvc2VEYXRhKHBlcm11dGVkWC5kYXRhSWQpO1xuXG4gICAgcmV0dXJuIHJldmVyc2VUcmFuc3Bvc2VkUmVzdWx0O1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbiJdfQ==","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Cumprod } from '@tensorflow/tfjs-core';\nimport { CumOpType } from '../cum_webgpu';\nimport { cumImpl } from './Cum_impl';\nexport function cumprod(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, exclusive, reverse } = attrs;\n    return cumImpl(CumOpType.Prod, x, backend, axis, exclusive, reverse);\n}\nexport const cumprodConfig = {\n    kernelName: Cumprod,\n    backendName: 'webgpu',\n    kernelFunc: cumprod\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ3VtcHJvZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvQ3VtcHJvZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsT0FBTyxFQUFvRSxNQUFNLHVCQUF1QixDQUFDO0FBR2pILE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDeEMsT0FBTyxFQUFDLE9BQU8sRUFBQyxNQUFNLFlBQVksQ0FBQztBQUVuQyxNQUFNLFVBQVUsT0FBTyxDQUNuQixJQUEwRTtJQUU1RSxNQUFNLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFDdEMsTUFBTSxFQUFDLENBQUMsRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUNuQixNQUFNLEVBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUMsR0FBRyxLQUFLLENBQUM7SUFDekMsT0FBTyxPQUFPLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxDQUFDLENBQUM7QUFDdkUsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBaUI7SUFDekMsVUFBVSxFQUFFLE9BQU87SUFDbkIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLE9BQWdDO0NBQzdDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7Q3VtcHJvZCwgQ3VtcHJvZEF0dHJzLCBDdW1wcm9kSW5wdXRzLCBLZXJuZWxDb25maWcsIEtlcm5lbEZ1bmMsIFRlbnNvckluZm99IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuaW1wb3J0IHtDdW1PcFR5cGV9IGZyb20gJy4uL2N1bV93ZWJncHUnO1xuaW1wb3J0IHtjdW1JbXBsfSBmcm9tICcuL0N1bV9pbXBsJztcblxuZXhwb3J0IGZ1bmN0aW9uIGN1bXByb2QoXG4gICAgYXJnczoge2lucHV0czogQ3VtcHJvZElucHV0cywgYmFja2VuZDogV2ViR1BVQmFja2VuZCwgYXR0cnM6IEN1bXByb2RBdHRyc30pOlxuICAgIFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7eH0gPSBpbnB1dHM7XG4gIGNvbnN0IHtheGlzLCBleGNsdXNpdmUsIHJldmVyc2V9ID0gYXR0cnM7XG4gIHJldHVybiBjdW1JbXBsKEN1bU9wVHlwZS5Qcm9kLCB4LCBiYWNrZW5kLCBheGlzLCBleGNsdXNpdmUsIHJldmVyc2UpO1xufVxuXG5leHBvcnQgY29uc3QgY3VtcHJvZENvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBDdW1wcm9kLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IGN1bXByb2QgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Cumsum } from '@tensorflow/tfjs-core';\nimport { CumOpType } from '../cum_webgpu';\nimport { cumImpl } from './Cum_impl';\nexport function cumsum(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, exclusive, reverse } = attrs;\n    return cumImpl(CumOpType.Sum, x, backend, axis, exclusive, reverse);\n}\nexport const cumsumConfig = {\n    kernelName: Cumsum,\n    backendName: 'webgpu',\n    kernelFunc: cumsum\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ3Vtc3VtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9DdW1zdW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLE1BQU0sRUFBa0UsTUFBTSx1QkFBdUIsQ0FBQztBQUc5RyxPQUFPLEVBQUMsU0FBUyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3hDLE9BQU8sRUFBQyxPQUFPLEVBQUMsTUFBTSxZQUFZLENBQUM7QUFFbkMsTUFBTSxVQUFVLE1BQU0sQ0FDbEIsSUFBd0U7SUFFMUUsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ3RDLE1BQU0sRUFBQyxDQUFDLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFDbkIsTUFBTSxFQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFDLEdBQUcsS0FBSyxDQUFDO0lBQ3pDLE9BQU8sT0FBTyxDQUFDLFNBQVMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ3RFLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQWlCO0lBQ3hDLFVBQVUsRUFBRSxNQUFNO0lBQ2xCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxNQUErQjtDQUM1QyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjIgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0N1bXN1bSwgQ3Vtc3VtQXR0cnMsIEN1bXN1bUlucHV0cywgS2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBUZW5zb3JJbmZvfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcbmltcG9ydCB7Q3VtT3BUeXBlfSBmcm9tICcuLi9jdW1fd2ViZ3B1JztcbmltcG9ydCB7Y3VtSW1wbH0gZnJvbSAnLi9DdW1faW1wbCc7XG5cbmV4cG9ydCBmdW5jdGlvbiBjdW1zdW0oXG4gICAgYXJnczoge2lucHV0czogQ3Vtc3VtSW5wdXRzLCBiYWNrZW5kOiBXZWJHUFVCYWNrZW5kLCBhdHRyczogQ3Vtc3VtQXR0cnN9KTpcbiAgICBUZW5zb3JJbmZvIHtcbiAgY29uc3Qge2lucHV0cywgYmFja2VuZCwgYXR0cnN9ID0gYXJncztcbiAgY29uc3Qge3h9ID0gaW5wdXRzO1xuICBjb25zdCB7YXhpcywgZXhjbHVzaXZlLCByZXZlcnNlfSA9IGF0dHJzO1xuICByZXR1cm4gY3VtSW1wbChDdW1PcFR5cGUuU3VtLCB4LCBiYWNrZW5kLCBheGlzLCBleGNsdXNpdmUsIHJldmVyc2UpO1xufVxuXG5leHBvcnQgY29uc3QgY3Vtc3VtQ29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IEN1bXN1bSxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBjdW1zdW0gYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { DenseBincount, util } from '@tensorflow/tfjs-core';\nimport { BincountProgram } from '../bincount_webgpu';\nimport { fill } from './Fill';\nexport function denseBincount(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, weights } = inputs;\n    const { size, binaryOutput } = attrs;\n    const xRankOne = x.shape.length === 1;\n    const weightsSize = util.sizeFromShape(weights.shape);\n    const hasWeights = weightsSize > 0;\n    const dtype = weights.dtype;\n    const xSize = xRankOne ? [x.shape[0]] : [x.shape[0], x.shape[1]];\n    const outputSize = xRankOne ? [size] : [x.shape[0], size];\n    const output = fill({ backend, attrs: { shape: outputSize, value: 0, dtype } });\n    const program = new BincountProgram(xSize, hasWeights, binaryOutput);\n    const uniformData = [{ type: 'int32', data: [size] }];\n    const bincountInputs = hasWeights ? [x, weights] : [x];\n    const res = backend.runWebGPUProgram(program, bincountInputs, dtype, uniformData, output);\n    return res;\n}\nexport const denseBincountConfig = {\n    kernelName: DenseBincount,\n    backendName: 'webgpu',\n    kernelFunc: denseBincount\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGVuc2VCaW5jb3VudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvRGVuc2VCaW5jb3VudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsYUFBYSxFQUFpRixJQUFJLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUd6SSxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFFbkQsT0FBTyxFQUFDLElBQUksRUFBQyxNQUFNLFFBQVEsQ0FBQztBQUU1QixNQUFNLFVBQVUsYUFBYSxDQUFDLElBSTdCO0lBQ0MsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ3RDLE1BQU0sRUFBQyxDQUFDLEVBQUUsT0FBTyxFQUFDLEdBQUcsTUFBTSxDQUFDO0lBQzVCLE1BQU0sRUFBQyxJQUFJLEVBQUUsWUFBWSxFQUFDLEdBQUcsS0FBSyxDQUFDO0lBRW5DLE1BQU0sUUFBUSxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQztJQUN0QyxNQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN0RCxNQUFNLFVBQVUsR0FBRyxXQUFXLEdBQUcsQ0FBQyxDQUFDO0lBQ25DLE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUM7SUFDNUIsTUFBTSxLQUFLLEdBQ1AsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN2RCxNQUFNLFVBQVUsR0FDWixRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUUzQyxNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsRUFBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLEVBQUMsS0FBSyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBQyxFQUFDLENBQUMsQ0FBQztJQUM1RSxNQUFNLE9BQU8sR0FBRyxJQUFJLGVBQWUsQ0FBQyxLQUFLLEVBQUUsVUFBVSxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ3JFLE1BQU0sV0FBVyxHQUFHLENBQUMsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFDLENBQUMsQ0FBQztJQUNwRCxNQUFNLGNBQWMsR0FBaUIsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNyRSxNQUFNLEdBQUcsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQ2hDLE9BQU8sRUFBRSxjQUFjLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUV6RCxPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBaUI7SUFDL0MsVUFBVSxFQUFFLGFBQWE7SUFDekIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLGFBQXNDO0NBQ25ELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7RGVuc2VCaW5jb3VudCwgRGVuc2VCaW5jb3VudEF0dHJzLCBEZW5zZUJpbmNvdW50SW5wdXRzLCBLZXJuZWxDb25maWcsIEtlcm5lbEZ1bmMsIFRlbnNvckluZm8sIHV0aWx9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuaW1wb3J0IHtCaW5jb3VudFByb2dyYW19IGZyb20gJy4uL2JpbmNvdW50X3dlYmdwdSc7XG5cbmltcG9ydCB7ZmlsbH0gZnJvbSAnLi9GaWxsJztcblxuZXhwb3J0IGZ1bmN0aW9uIGRlbnNlQmluY291bnQoYXJnczoge1xuICBpbnB1dHM6IERlbnNlQmluY291bnRJbnB1dHMsXG4gIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmQsXG4gIGF0dHJzOiBEZW5zZUJpbmNvdW50QXR0cnNcbn0pOiBUZW5zb3JJbmZvIHtcbiAgY29uc3Qge2lucHV0cywgYmFja2VuZCwgYXR0cnN9ID0gYXJncztcbiAgY29uc3Qge3gsIHdlaWdodHN9ID0gaW5wdXRzO1xuICBjb25zdCB7c2l6ZSwgYmluYXJ5T3V0cHV0fSA9IGF0dHJzO1xuXG4gIGNvbnN0IHhSYW5rT25lID0geC5zaGFwZS5sZW5ndGggPT09IDE7XG4gIGNvbnN0IHdlaWdodHNTaXplID0gdXRpbC5zaXplRnJvbVNoYXBlKHdlaWdodHMuc2hhcGUpO1xuICBjb25zdCBoYXNXZWlnaHRzID0gd2VpZ2h0c1NpemUgPiAwO1xuICBjb25zdCBkdHlwZSA9IHdlaWdodHMuZHR5cGU7XG4gIGNvbnN0IHhTaXplOiBbbnVtYmVyXXxbbnVtYmVyLCBudW1iZXJdID1cbiAgICAgIHhSYW5rT25lID8gW3guc2hhcGVbMF1dIDogW3guc2hhcGVbMF0sIHguc2hhcGVbMV1dO1xuICBjb25zdCBvdXRwdXRTaXplOiBbbnVtYmVyXXxbbnVtYmVyLCBudW1iZXJdID1cbiAgICAgIHhSYW5rT25lID8gW3NpemVdIDogW3guc2hhcGVbMF0sIHNpemVdO1xuXG4gIGNvbnN0IG91dHB1dCA9IGZpbGwoe2JhY2tlbmQsIGF0dHJzOiB7c2hhcGU6IG91dHB1dFNpemUsIHZhbHVlOiAwLCBkdHlwZX19KTtcbiAgY29uc3QgcHJvZ3JhbSA9IG5ldyBCaW5jb3VudFByb2dyYW0oeFNpemUsIGhhc1dlaWdodHMsIGJpbmFyeU91dHB1dCk7XG4gIGNvbnN0IHVuaWZvcm1EYXRhID0gW3t0eXBlOiAnaW50MzInLCBkYXRhOiBbc2l6ZV19XTtcbiAgY29uc3QgYmluY291bnRJbnB1dHM6IFRlbnNvckluZm9bXSA9IGhhc1dlaWdodHMgPyBbeCwgd2VpZ2h0c10gOiBbeF07XG4gIGNvbnN0IHJlcyA9IGJhY2tlbmQucnVuV2ViR1BVUHJvZ3JhbShcbiAgICAgIHByb2dyYW0sIGJpbmNvdW50SW5wdXRzLCBkdHlwZSwgdW5pZm9ybURhdGEsIG91dHB1dCk7XG5cbiAgcmV0dXJuIHJlcztcbn1cblxuZXhwb3J0IGNvbnN0IGRlbnNlQmluY291bnRDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogRGVuc2VCaW5jb3VudCxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBkZW5zZUJpbmNvdW50IGFzIHVua25vd24gYXMgS2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class DepthToSpaceProgram {\n    constructor(outputShape, dataFormat) {\n        this.variableNames = ['x'];\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.uniforms = 'blockSize : i32,';\n        this.outputShape = outputShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.shaderKey = `depthToSpace_${dataFormat}`;\n        this.dataFormat = dataFormat;\n    }\n    getUserCode() {\n        const userCode = `\n      ${main('index')} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let h = ${this.getHeightCoordString()};\n          let w = ${this.getWidthCoordString()};\n          let d = ${this.getDepthCoordString()};\n\n          let in_h = h / uniforms.blockSize;\n          let offset_h = h % uniforms.blockSize;\n          let in_w = w / uniforms.blockSize;\n          let offset_w = w % uniforms.blockSize;\n          let offset_d = (offset_h * uniforms.blockSize + offset_w) *\n            ${this.getOutputDepthSize()};\n          let in_d = d + offset_d;\n\n          let rlt = ${this.getInputSamplingString()};\n          setOutputAtIndex(index, rlt);\n        }\n      }`;\n        return userCode;\n    }\n    getHeightCoordString() {\n        if (this.dataFormat === 'NHWC') {\n            return `coords[1]`;\n        }\n        else {\n            return `coords[2]`;\n        }\n    }\n    getWidthCoordString() {\n        if (this.dataFormat === 'NHWC') {\n            return `coords[2]`;\n        }\n        else {\n            return `coords[3]`;\n        }\n    }\n    getDepthCoordString() {\n        if (this.dataFormat === 'NHWC') {\n            return `coords[3]`;\n        }\n        else {\n            return `coords[1]`;\n        }\n    }\n    getOutputDepthSize() {\n        if (this.dataFormat === 'NHWC') {\n            return `uniforms.outShape[3]`;\n        }\n        else {\n            return `uniforms.outShape[1]`;\n        }\n    }\n    getInputSamplingString() {\n        if (this.dataFormat === 'NHWC') {\n            return `getX(b, in_h, in_w, in_d)`;\n        }\n        else {\n            return `getX(b, in_d, in_h, in_w)`;\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVwdGhfdG9fc3BhY2Vfd2ViZ3B1LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMvZGVwdGhfdG9fc3BhY2Vfd2ViZ3B1LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxtQkFBbUIsSUFBSSxJQUFJLEVBQWdCLE1BQU0sa0JBQWtCLENBQUM7QUFDNUUsT0FBTyxFQUFDLGVBQWUsRUFBRSxrQkFBa0IsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUVsRSxNQUFNLE9BQU8sbUJBQW1CO0lBVzlCLFlBQVksV0FBcUIsRUFBRSxVQUF5QjtRQVY1RCxrQkFBYSxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFNdEIsa0JBQWEsR0FBNkIsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3JELFNBQUksR0FBRyxJQUFJLENBQUM7UUFDWixhQUFRLEdBQUcsa0JBQWtCLENBQUM7UUFHNUIsSUFBSSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUM7UUFDL0IsSUFBSSxDQUFDLGNBQWMsR0FBRyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxlQUFlLENBQzNCLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDL0QsSUFBSSxDQUFDLFNBQVMsR0FBRyxnQkFBZ0IsVUFBVSxFQUFFLENBQUM7UUFDOUMsSUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7SUFDL0IsQ0FBQztJQUVELFdBQVc7UUFDVCxNQUFNLFFBQVEsR0FBRztRQUNiLElBQUksQ0FBQyxPQUFPLENBQUM7Ozs7b0JBSUQsSUFBSSxDQUFDLG9CQUFvQixFQUFFO29CQUMzQixJQUFJLENBQUMsbUJBQW1CLEVBQUU7b0JBQzFCLElBQUksQ0FBQyxtQkFBbUIsRUFBRTs7Ozs7OztjQU9oQyxJQUFJLENBQUMsa0JBQWtCLEVBQUU7OztzQkFHakIsSUFBSSxDQUFDLHNCQUFzQixFQUFFOzs7UUFHM0MsQ0FBQztRQUNMLE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7SUFFTyxvQkFBb0I7UUFDMUIsSUFBSSxJQUFJLENBQUMsVUFBVSxLQUFLLE1BQU0sRUFBRTtZQUM5QixPQUFPLFdBQVcsQ0FBQztTQUNwQjthQUFNO1lBQ0wsT0FBTyxXQUFXLENBQUM7U0FDcEI7SUFDSCxDQUFDO0lBRU8sbUJBQW1CO1FBQ3pCLElBQUksSUFBSSxDQUFDLFVBQVUsS0FBSyxNQUFNLEVBQUU7WUFDOUIsT0FBTyxXQUFXLENBQUM7U0FDcEI7YUFBTTtZQUNMLE9BQU8sV0FBVyxDQUFDO1NBQ3BCO0lBQ0gsQ0FBQztJQUVPLG1CQUFtQjtRQUN6QixJQUFJLElBQUksQ0FBQyxVQUFVLEtBQUssTUFBTSxFQUFFO1lBQzlCLE9BQU8sV0FBVyxDQUFDO1NBQ3BCO2FBQU07WUFDTCxPQUFPLFdBQVcsQ0FBQztTQUNwQjtJQUNILENBQUM7SUFFTyxrQkFBa0I7UUFDeEIsSUFBSSxJQUFJLENBQUMsVUFBVSxLQUFLLE1BQU0sRUFBRTtZQUM5QixPQUFPLHNCQUFzQixDQUFDO1NBQy9CO2FBQU07WUFDTCxPQUFPLHNCQUFzQixDQUFDO1NBQy9CO0lBQ0gsQ0FBQztJQUVPLHNCQUFzQjtRQUM1QixJQUFJLElBQUksQ0FBQyxVQUFVLEtBQUssTUFBTSxFQUFFO1lBQzlCLE9BQU8sMkJBQTJCLENBQUM7U0FDcEM7YUFBTTtZQUNMLE9BQU8sMkJBQTJCLENBQUM7U0FDcEM7SUFDSCxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7Z2V0TWFpbkhlYWRlclN0cmluZyBhcyBtYWluLCBXZWJHUFVQcm9ncmFtfSBmcm9tICcuL3dlYmdwdV9wcm9ncmFtJztcbmltcG9ydCB7Y29tcHV0ZURpc3BhdGNoLCBmbGF0RGlzcGF0Y2hMYXlvdXR9IGZyb20gJy4vd2ViZ3B1X3V0aWwnO1xuXG5leHBvcnQgY2xhc3MgRGVwdGhUb1NwYWNlUHJvZ3JhbSBpbXBsZW1lbnRzIFdlYkdQVVByb2dyYW0ge1xuICB2YXJpYWJsZU5hbWVzID0gWyd4J107XG4gIG91dHB1dFNoYXBlOiBudW1iZXJbXTtcbiAgZGF0YUZvcm1hdDogc3RyaW5nO1xuICBzaGFkZXJLZXk6IHN0cmluZztcbiAgZGlzcGF0Y2hMYXlvdXQ6IHt4OiBudW1iZXJbXX07XG4gIGRpc3BhdGNoOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl07XG4gIHdvcmtncm91cFNpemU6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXSA9IFs2NCwgMSwgMV07XG4gIHNpemUgPSB0cnVlO1xuICB1bmlmb3JtcyA9ICdibG9ja1NpemUgOiBpMzIsJztcblxuICBjb25zdHJ1Y3RvcihvdXRwdXRTaGFwZTogbnVtYmVyW10sIGRhdGFGb3JtYXQ6ICdOSFdDJ3wnTkNIVycpIHtcbiAgICB0aGlzLm91dHB1dFNoYXBlID0gb3V0cHV0U2hhcGU7XG4gICAgdGhpcy5kaXNwYXRjaExheW91dCA9IGZsYXREaXNwYXRjaExheW91dCh0aGlzLm91dHB1dFNoYXBlKTtcbiAgICB0aGlzLmRpc3BhdGNoID0gY29tcHV0ZURpc3BhdGNoKFxuICAgICAgICB0aGlzLmRpc3BhdGNoTGF5b3V0LCB0aGlzLm91dHB1dFNoYXBlLCB0aGlzLndvcmtncm91cFNpemUpO1xuICAgIHRoaXMuc2hhZGVyS2V5ID0gYGRlcHRoVG9TcGFjZV8ke2RhdGFGb3JtYXR9YDtcbiAgICB0aGlzLmRhdGFGb3JtYXQgPSBkYXRhRm9ybWF0O1xuICB9XG5cbiAgZ2V0VXNlckNvZGUoKTogc3RyaW5nIHtcbiAgICBjb25zdCB1c2VyQ29kZSA9IGBcbiAgICAgICR7bWFpbignaW5kZXgnKX0ge1xuICAgICAgICBpZiAoaW5kZXggPCB1bmlmb3Jtcy5zaXplKSB7XG4gICAgICAgICAgbGV0IGNvb3JkcyA9IGdldENvb3Jkc0Zyb21JbmRleChpbmRleCk7XG4gICAgICAgICAgbGV0IGIgPSBjb29yZHNbMF07XG4gICAgICAgICAgbGV0IGggPSAke3RoaXMuZ2V0SGVpZ2h0Q29vcmRTdHJpbmcoKX07XG4gICAgICAgICAgbGV0IHcgPSAke3RoaXMuZ2V0V2lkdGhDb29yZFN0cmluZygpfTtcbiAgICAgICAgICBsZXQgZCA9ICR7dGhpcy5nZXREZXB0aENvb3JkU3RyaW5nKCl9O1xuXG4gICAgICAgICAgbGV0IGluX2ggPSBoIC8gdW5pZm9ybXMuYmxvY2tTaXplO1xuICAgICAgICAgIGxldCBvZmZzZXRfaCA9IGggJSB1bmlmb3Jtcy5ibG9ja1NpemU7XG4gICAgICAgICAgbGV0IGluX3cgPSB3IC8gdW5pZm9ybXMuYmxvY2tTaXplO1xuICAgICAgICAgIGxldCBvZmZzZXRfdyA9IHcgJSB1bmlmb3Jtcy5ibG9ja1NpemU7XG4gICAgICAgICAgbGV0IG9mZnNldF9kID0gKG9mZnNldF9oICogdW5pZm9ybXMuYmxvY2tTaXplICsgb2Zmc2V0X3cpICpcbiAgICAgICAgICAgICR7dGhpcy5nZXRPdXRwdXREZXB0aFNpemUoKX07XG4gICAgICAgICAgbGV0IGluX2QgPSBkICsgb2Zmc2V0X2Q7XG5cbiAgICAgICAgICBsZXQgcmx0ID0gJHt0aGlzLmdldElucHV0U2FtcGxpbmdTdHJpbmcoKX07XG4gICAgICAgICAgc2V0T3V0cHV0QXRJbmRleChpbmRleCwgcmx0KTtcbiAgICAgICAgfVxuICAgICAgfWA7XG4gICAgcmV0dXJuIHVzZXJDb2RlO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRIZWlnaHRDb29yZFN0cmluZygpOiBzdHJpbmcge1xuICAgIGlmICh0aGlzLmRhdGFGb3JtYXQgPT09ICdOSFdDJykge1xuICAgICAgcmV0dXJuIGBjb29yZHNbMV1gO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gYGNvb3Jkc1syXWA7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBnZXRXaWR0aENvb3JkU3RyaW5nKCk6IHN0cmluZyB7XG4gICAgaWYgKHRoaXMuZGF0YUZvcm1hdCA9PT0gJ05IV0MnKSB7XG4gICAgICByZXR1cm4gYGNvb3Jkc1syXWA7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBgY29vcmRzWzNdYDtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGdldERlcHRoQ29vcmRTdHJpbmcoKTogc3RyaW5nIHtcbiAgICBpZiAodGhpcy5kYXRhRm9ybWF0ID09PSAnTkhXQycpIHtcbiAgICAgIHJldHVybiBgY29vcmRzWzNdYDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGBjb29yZHNbMV1gO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgZ2V0T3V0cHV0RGVwdGhTaXplKCk6IHN0cmluZyB7XG4gICAgaWYgKHRoaXMuZGF0YUZvcm1hdCA9PT0gJ05IV0MnKSB7XG4gICAgICByZXR1cm4gYHVuaWZvcm1zLm91dFNoYXBlWzNdYDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGB1bmlmb3Jtcy5vdXRTaGFwZVsxXWA7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBnZXRJbnB1dFNhbXBsaW5nU3RyaW5nKCk6IHN0cmluZyB7XG4gICAgaWYgKHRoaXMuZGF0YUZvcm1hdCA9PT0gJ05IV0MnKSB7XG4gICAgICByZXR1cm4gYGdldFgoYiwgaW5faCwgaW5fdywgaW5fZClgO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gYGdldFgoYiwgaW5fZCwgaW5faCwgaW5fdylgO1xuICAgIH1cbiAgfVxufVxuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { DepthToSpace } from '@tensorflow/tfjs-core';\nimport { DepthToSpaceProgram } from '../depth_to_space_webgpu';\nexport function depthToSpace(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { blockSize, dataFormat } = attrs;\n    const batchSize = x.shape[0];\n    const inputHeight = (dataFormat === 'NHWC') ? x.shape[1] : x.shape[2];\n    const inputWidth = (dataFormat === 'NHWC') ? x.shape[2] : x.shape[3];\n    const inputDepth = (dataFormat === 'NHWC') ? x.shape[3] : x.shape[1];\n    const outputHeight = inputHeight * blockSize;\n    const outputWidth = inputWidth * blockSize;\n    const outputDepth = inputDepth / (blockSize * blockSize);\n    const outputShape = (dataFormat === 'NHWC') ?\n        [batchSize, outputHeight, outputWidth, outputDepth] :\n        [batchSize, outputDepth, outputHeight, outputWidth];\n    const uniformData = [\n        { type: 'int32', data: [blockSize] },\n    ];\n    const program = new DepthToSpaceProgram(outputShape, dataFormat);\n    return backend.runWebGPUProgram(program, [x], x.dtype, uniformData);\n}\nexport const depthToSpaceConfig = {\n    kernelName: DepthToSpace,\n    backendName: 'webgpu',\n    kernelFunc: depthToSpace\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGVwdGhUb1NwYWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9EZXB0aFRvU3BhY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLFlBQVksRUFBOEUsTUFBTSx1QkFBdUIsQ0FBQztBQUdoSSxPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQztBQUU3RCxNQUFNLFVBQVUsWUFBWSxDQUFDLElBSTVCO0lBQ0MsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ3RDLE1BQU0sRUFBQyxDQUFDLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFDbkIsTUFBTSxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUMsR0FBRyxLQUFLLENBQUM7SUFFdEMsTUFBTSxTQUFTLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUM3QixNQUFNLFdBQVcsR0FBRyxDQUFDLFVBQVUsS0FBSyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN0RSxNQUFNLFVBQVUsR0FBRyxDQUFDLFVBQVUsS0FBSyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNyRSxNQUFNLFVBQVUsR0FBRyxDQUFDLFVBQVUsS0FBSyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVyRSxNQUFNLFlBQVksR0FBRyxXQUFXLEdBQUcsU0FBUyxDQUFDO0lBQzdDLE1BQU0sV0FBVyxHQUFHLFVBQVUsR0FBRyxTQUFTLENBQUM7SUFDM0MsTUFBTSxXQUFXLEdBQUcsVUFBVSxHQUFHLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQyxDQUFDO0lBRXpELE1BQU0sV0FBVyxHQUFHLENBQUMsVUFBVSxLQUFLLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFDekMsQ0FBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxXQUFXLENBQUMsQ0FBQyxDQUFDO1FBQ3JELENBQUMsU0FBUyxFQUFFLFdBQVcsRUFBRSxZQUFZLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFFeEQsTUFBTSxXQUFXLEdBQUc7UUFDbEIsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLFNBQVMsQ0FBQyxFQUFDO0tBQ25DLENBQUM7SUFFRixNQUFNLE9BQU8sR0FBRyxJQUFJLG1CQUFtQixDQUFDLFdBQVcsRUFBRSxVQUFVLENBQUMsQ0FBQztJQUNqRSxPQUFPLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0FBQ3RFLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBaUI7SUFDOUMsVUFBVSxFQUFFLFlBQVk7SUFDeEIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLFlBQXFDO0NBQ2xELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7RGVwdGhUb1NwYWNlLCBEZXB0aFRvU3BhY2VBdHRycywgRGVwdGhUb1NwYWNlSW5wdXRzLCBLZXJuZWxDb25maWcsIEtlcm5lbEZ1bmMsIFRlbnNvckluZm99IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuaW1wb3J0IHtEZXB0aFRvU3BhY2VQcm9ncmFtfSBmcm9tICcuLi9kZXB0aF90b19zcGFjZV93ZWJncHUnO1xuXG5leHBvcnQgZnVuY3Rpb24gZGVwdGhUb1NwYWNlKGFyZ3M6IHtcbiAgaW5wdXRzOiBEZXB0aFRvU3BhY2VJbnB1dHMsXG4gIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmQsXG4gIGF0dHJzOiBEZXB0aFRvU3BhY2VBdHRyc1xufSk6IFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7eH0gPSBpbnB1dHM7XG4gIGNvbnN0IHtibG9ja1NpemUsIGRhdGFGb3JtYXR9ID0gYXR0cnM7XG5cbiAgY29uc3QgYmF0Y2hTaXplID0geC5zaGFwZVswXTtcbiAgY29uc3QgaW5wdXRIZWlnaHQgPSAoZGF0YUZvcm1hdCA9PT0gJ05IV0MnKSA/IHguc2hhcGVbMV0gOiB4LnNoYXBlWzJdO1xuICBjb25zdCBpbnB1dFdpZHRoID0gKGRhdGFGb3JtYXQgPT09ICdOSFdDJykgPyB4LnNoYXBlWzJdIDogeC5zaGFwZVszXTtcbiAgY29uc3QgaW5wdXREZXB0aCA9IChkYXRhRm9ybWF0ID09PSAnTkhXQycpID8geC5zaGFwZVszXSA6IHguc2hhcGVbMV07XG5cbiAgY29uc3Qgb3V0cHV0SGVpZ2h0ID0gaW5wdXRIZWlnaHQgKiBibG9ja1NpemU7XG4gIGNvbnN0IG91dHB1dFdpZHRoID0gaW5wdXRXaWR0aCAqIGJsb2NrU2l6ZTtcbiAgY29uc3Qgb3V0cHV0RGVwdGggPSBpbnB1dERlcHRoIC8gKGJsb2NrU2l6ZSAqIGJsb2NrU2l6ZSk7XG5cbiAgY29uc3Qgb3V0cHV0U2hhcGUgPSAoZGF0YUZvcm1hdCA9PT0gJ05IV0MnKSA/XG4gICAgICBbYmF0Y2hTaXplLCBvdXRwdXRIZWlnaHQsIG91dHB1dFdpZHRoLCBvdXRwdXREZXB0aF0gOlxuICAgICAgW2JhdGNoU2l6ZSwgb3V0cHV0RGVwdGgsIG91dHB1dEhlaWdodCwgb3V0cHV0V2lkdGhdO1xuXG4gIGNvbnN0IHVuaWZvcm1EYXRhID0gW1xuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbYmxvY2tTaXplXX0sXG4gIF07XG5cbiAgY29uc3QgcHJvZ3JhbSA9IG5ldyBEZXB0aFRvU3BhY2VQcm9ncmFtKG91dHB1dFNoYXBlLCBkYXRhRm9ybWF0KTtcbiAgcmV0dXJuIGJhY2tlbmQucnVuV2ViR1BVUHJvZ3JhbShwcm9ncmFtLCBbeF0sIHguZHR5cGUsIHVuaWZvcm1EYXRhKTtcbn1cblxuZXhwb3J0IGNvbnN0IGRlcHRoVG9TcGFjZUNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBEZXB0aFRvU3BhY2UsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogZGVwdGhUb1NwYWNlIGFzIHVua25vd24gYXMgS2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { activationFnSnippet, biasActivationSnippet } from './activation_util';\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch } from './webgpu_util';\nexport class DepthwiseConv2DNCHWSharedProgram {\n    constructor(outputShape, filterHeight, filterWidth, addBias = false, activation = null, hasPreluActivation = false) {\n        this.variableNames = ['x', 'W'];\n        this.uniforms = `pads : vec2<i32>, inDims : vec2<i32>,`;\n        this.workgroupSize = [16, 16, 1];\n        this.outputShape = outputShape;\n        this.dispatchLayout = { x: [3], y: [2], z: [0, 1] };\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        if (addBias) {\n            this.variableNames.push('bias');\n        }\n        if (hasPreluActivation) {\n            this.variableNames.push('preluActivationWeights');\n        }\n        this.addBias = addBias;\n        this.activation = activation;\n        this.hasPreluActivation = hasPreluActivation;\n        this.filterHeight = filterHeight;\n        this.filterWidth = filterWidth;\n        this.shaderKey = `depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`;\n    }\n    getUserCode() {\n        const filterSize = this.filterWidth * this.filterHeight;\n        const flatWorkgroupSize = this.workgroupSize[0] * this.workgroupSize[1] * this.workgroupSize[2];\n        const tileAHeight = this.workgroupSize[1] + this.filterHeight - 1;\n        const tileAWidth = this.workgroupSize[0] + this.filterWidth - 1;\n        const userCode = `\n      ${activationFnSnippet(this.activation, this.hasPreluActivation, false, 4)}\n\n      var<workgroup> mm_Asub : array<array<f32, ${tileAWidth}>, ${tileAHeight}>;\n      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;\n      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {\n        var value = 0.0;\n        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])\n        {\n          value = getX(batch, channel, row, col);\n        }\n        return value;\n      }\n\n      ${main()} {\n        let coords = getOutputCoords();\n        let batch = coords[0];\n        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;\n        let channelMul = uniforms.wShape[3];\n        let d1 = coords[1] / channelMul;\n        let q = coords[1] % channelMul;\n\n        let inputRowStart = xRCCorner.x;\n        let inputColStart = xRCCorner.y;\n\n        let localRow = i32(localId.y);\n        let localCol = i32(localId.x);\n\n        // Load one tile of X into local memory.\n        for (var inputRow = localRow; inputRow < ${tileAHeight}; inputRow = inputRow + ${this.workgroupSize[1]}) {\n          for (var inputCol = localCol; inputCol < ${tileAWidth}; inputCol = inputCol + ${this.workgroupSize[0]}) {\n            let rowOffset = inputRow - localRow;\n            let colOffset = inputCol - localCol;\n            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);\n          }\n        }\n\n        // Load one tile of W into local memory.\n        var wIndex = i32(localIndex);\n        ${filterSize < flatWorkgroupSize ?\n            `if (wIndex < ${filterSize})` :\n            `for(; wIndex < ${filterSize}; wIndex = wIndex + ${flatWorkgroupSize})`}\n\n        {\n          let wRow = wIndex / ${this.filterWidth};\n          let wCol = wIndex % ${this.filterWidth};\n          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);\n        }\n\n        workgroupBarrier();\n\n        var value = 0.0;\n        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {\n          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {\n            let xVal = mm_Asub[localRow + wR][localCol + wC];\n            let wVal = mm_Bsub[wR][wC];\n            value = fma(xVal, wVal, value);\n          }\n        }\n        ${biasActivationSnippet(this.addBias, this.activation)}\n        if (coordsInBounds4D(coords, uniforms.outShape)) {\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { activationFnSnippet, biasActivationSnippet } from './activation_util';\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class DepthwiseConv2DVec4Program {\n    constructor(convInfo, addBias = false, activation = null, hasPreluActivation = false) {\n        this.variableNames = ['x', 'W'];\n        this.uniforms = 'pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,';\n        this.workgroupSize = [64, 1, 1];\n        this.workPerThread = 4;\n        this.outputComponent = 4;\n        this.outputShape = convInfo.outShape;\n        this.virtualWidth = Math.ceil(this.outputShape[2] / this.workPerThread) *\n            this.workPerThread;\n        const virtualOutputShape = [\n            this.outputShape[0], this.outputShape[1], this.virtualWidth,\n            this.outputShape[3]\n        ];\n        this.dispatchLayout = flatDispatchLayout(virtualOutputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, virtualOutputShape, this.workgroupSize, [this.outputComponent * this.workPerThread, 1, 1]);\n        util.assert(convInfo.dataFormat === 'channelsLast', () => 'TODO: NCHW is unimplemented');\n        if (addBias) {\n            this.variableNames.push('bias');\n        }\n        if (hasPreluActivation) {\n            this.variableNames.push('preluActivationWeights');\n        }\n        this.convInfo = convInfo;\n        this.addBias = addBias;\n        this.activation = activation;\n        this.hasPreluActivation = hasPreluActivation;\n        this.shaderKey =\n            `depthwiseVec4_${activation}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`;\n    }\n    getUserCode() {\n        const xNumber = (this.workPerThread - 1) * this.convInfo.strideWidth +\n            this.convInfo.filterWidth;\n        const strideHeight = this.convInfo.strideHeight;\n        const strideWidth = this.convInfo.strideWidth;\n        const userCode = `\n      ${activationFnSnippet(this.activation, this.hasPreluActivation, true, 4)}\n      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {\n        var value = vec4<f32>(0.0);\n        if (col >=0 && col < uniforms.inDims[1]) {\n          value = getX(batch, row, col, channel);\n        }\n        return value;\n      }\n\n      ${main('index')} {\n        let width0 = uniforms.outShape[3] / ${this.outputComponent};\n        let d1 = (index % width0) * ${this.outputComponent};\n        var index1 = index / width0;\n        let width1 = uniforms.virtualWidth / ${this.workPerThread};\n        let c = (index1 % width1) * ${this.workPerThread};\n        index1 = index1 / width1;\n        let r = index1 % uniforms.outShape[1];\n        let batch = index1 / uniforms.outShape[1];\n\n        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${strideHeight}, ${strideWidth}) - uniforms.pads;\n\n        let xRCorner = xRCCorner.x;\n        let xCCorner = xRCCorner.y;\n        var xVals : array<vec4<f32>, ${xNumber}>;\n        var dotProd : array<vec4<f32>, ${this.workPerThread}>;\n        for (var i = 0; i < ${this.workPerThread}; i++) {\n          dotProd[i] = vec4<f32>(0.0);\n        }\n\n        // Use constant instead of uniform can give better performance.\n        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {\n          let xR = xRCorner + wR;\n          if (xR >=0 && xR < uniforms.inDims[0]) {\n            for (var i = 0; i < ${xNumber}; i++) {\n              xVals[i] = readX(batch, xR, xCCorner + i, d1);\n            }\n            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {\n              let wValue = getW(wR, wC, d1, 0);\n              for (var i = 0; i < ${this.workPerThread}; i++) {\n                dotProd[i] = fma(xVals[i * ${strideWidth} + wC], wValue, dotProd[i]);\n              }\n            }\n          }\n        }\n\n        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let coords = vec4<i32>(batch, r, c + i, d1);\n          if (coordsInBounds4D(coords, uniforms.outShape)) {\n            var value = dotProd[i];\n            ${biasActivationSnippet(this.addBias, this.activation)}\n            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n          }\n        }\n      }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { activationFnSnippet, biasActivationSnippet } from './activation_util';\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class DepthwiseConv2DProgram {\n    constructor(convInfo, addBias = false, activation = null, hasPreluActivation = false) {\n        this.variableNames = ['x', 'W'];\n        this.uniforms = `pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,\n      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,`;\n        // This is an experimental value.\n        this.workgroupSize = [256, 1, 1];\n        this.size = true;\n        this.outputShape = convInfo.outShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.isChannelsLast = convInfo.dataFormat === 'channelsLast';\n        if (addBias) {\n            this.variableNames.push('bias');\n        }\n        if (hasPreluActivation) {\n            this.variableNames.push('preluActivationWeights');\n        }\n        this.convInfo = convInfo;\n        this.addBias = addBias;\n        this.activation = activation;\n        this.hasPreluActivation = hasPreluActivation;\n        this.shaderKey = `depthwise_${this.activation}_${this.isChannelsLast}`;\n    }\n    getUserCode() {\n        const getXSnippet = this.isChannelsLast ? 'getX(batch, xR, xC, d1);' :\n            'getX(batch, d1, xR, xC);';\n        const userCode = `\n      ${activationFnSnippet(this.activation, this.hasPreluActivation, false, 4)}\n\n      ${main('index')} {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let batch = coords[0];\n          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast ? 'yz' : 'zw'}) * uniforms.strides - uniforms.pads;\n          let d2 = coords[${this.isChannelsLast ? 3 : 1}];\n          let channelMul = uniforms.wShape[3];\n          let d1 = d2 / channelMul;\n          let q = d2 % channelMul;\n\n          let inputRowStart = xRCCorner.x;\n          let inputColStart = xRCCorner.y;\n          let inputRowEnd = inputRowStart + uniforms.filterHeight *\n              uniforms.dilations[0];\n          let inputColEnd = inputColStart + uniforms.filterWidth *\n              uniforms.dilations[1];\n\n          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get\n          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all\n          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.\n          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.\n          var value = 0.0;\n\n          // Extract if checking out of for loop for performance.\n          if (inputRowStart >= 0 && inputColStart >= 0 &&\n            inputRowEnd < uniforms.inDims[0] &&\n                inputColEnd < uniforms.inDims[1]) {\n              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n                let xR = inputRowStart + wR * uniforms.dilations[0];\n\n                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                  let xC = inputColStart + wC * uniforms.dilations[1];\n\n                  let xVal = ${getXSnippet};\n                  let wVal = getW(wR, wC, d1, q);\n                  value = value + xVal * wVal;\n                }\n              }\n            } else {\n              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n                let xR = inputRowStart + wR * uniforms.dilations[0];\n\n                if (xR < 0 || xR >= uniforms.inDims[0]) {\n                  continue;\n                }\n\n                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                  let xC = inputColStart + wC * uniforms.dilations[1];\n\n                  if (xC < 0 || xC >= uniforms.inDims[1]) {\n                    continue;\n                  }\n\n                  let xVal = ${getXSnippet};\n                  let wVal = getW(wR, wC, d1, q);\n                  value = value + xVal * wVal;\n                }\n              }\n            }\n            ${biasActivationSnippet(this.addBias, this.activation)}\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, DepthwiseConv2dNative } from '@tensorflow/tfjs-core';\nimport { DepthwiseConv2DNCHWSharedProgram } from '../depthwise_conv2d_nchw_shared_webgpu';\nimport { DepthwiseConv2DVec4Program } from '../depthwise_conv2d_vec4_webgpu';\nimport { DepthwiseConv2DProgram } from '../depthwise_conv2d_webgpu';\nexport function depthwiseConv2dNative(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, filter } = inputs;\n    const { strides, pad, dataFormat, dilations, dimRoundingMode } = attrs;\n    const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n    let $dilations = dilations;\n    if ($dilations == null) {\n        $dilations = [1, 1];\n    }\n    const convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, $dilations, pad, dimRoundingMode, true /* depthwise */, $dataFormat);\n    const dimensions = [\n        { type: 'int32', data: [convInfo.padInfo.top, convInfo.padInfo.left] },\n        { type: 'int32', data: [convInfo.inHeight, convInfo.inWidth] },\n    ];\n    const isChannelsLast = convInfo.dataFormat === 'channelsLast';\n    let program;\n    if (!isChannelsLast && convInfo.inHeight > 16 && convInfo.inWidth > 16 &&\n        convInfo.strideHeight === 1 && convInfo.strideWidth === 1 &&\n        convInfo.dilationWidth === 1 && convInfo.dilationHeight === 1 &&\n        convInfo.inChannels === convInfo.outChannels) {\n        program = new DepthwiseConv2DNCHWSharedProgram(convInfo.outShape, convInfo.filterHeight, convInfo.filterWidth);\n    }\n    else if (isChannelsLast && convInfo.outHeight > 4 && convInfo.outWidth > 4 &&\n        convInfo.strideWidth <= 2 &&\n        convInfo.inChannels === convInfo.outChannels &&\n        convInfo.dilationHeight === 1 && convInfo.dilationWidth === 1 &&\n        convInfo.inChannels % 4 === 0) {\n        program = new DepthwiseConv2DVec4Program(convInfo);\n        dimensions.push({ type: 'int32', data: [program.virtualWidth] });\n    }\n    else {\n        program = new DepthwiseConv2DProgram(convInfo);\n        dimensions.push({ type: 'int32', data: [convInfo.filterHeight] }, { type: 'int32', data: [convInfo.filterWidth] }, { type: 'int32', data: [convInfo.strideHeight, convInfo.strideWidth] }, {\n            type: 'int32',\n            data: [convInfo.dilationHeight, convInfo.dilationWidth]\n        });\n    }\n    return backend.runWebGPUProgram(program, [x, filter], x.dtype, dimensions);\n}\nexport const depthwiseConv2dNativeConfig = {\n    kernelName: DepthwiseConv2dNative,\n    backendName: 'webgpu',\n    kernelFunc: depthwiseConv2dNative,\n};\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class DepthwiseConv2DDerFilterProgram {\n    constructor(convInfo) {\n        this.variableNames = ['x', 'dy'];\n        this.uniforms = `strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,\n      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,`;\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = convInfo.filterShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.shaderKey = `depthwise_conv2d_backprop_filter`;\n    }\n    getUserCode() {\n        const userCode = `\n      ${main('index')} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let wR = coords[0];\n        let wC = coords[1];\n        let d1 = coords[2];\n        let dm = coords[3];\n        let d2 = d1 * uniforms.channelMul + dm;\n\n        var dotProd = 0.0;\n        for (var b = 0; b < uniforms.batchSize; b++) {\n          for (var yR = 0; yR < uniforms.outHeight; yR++) {\n            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];\n\n            if (xR < 0 || xR >= uniforms.inHeight) {\n              continue;\n            }\n\n            for (var yC = 0; yC < uniforms.outWidth; yC++) {\n              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];\n\n              if (xC < 0 || xC >= uniforms.inWidth) {\n                continue;\n              }\n\n              let dyValue = getDy(b, yR, yC, d2);\n              let xValue = getX(b, xR, xC, d1);\n              dotProd += xValue * dyValue;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `;\n        return userCode;\n    }\n}\nexport class DepthwiseConv2DDerInputProgram {\n    constructor(convInfo) {\n        this.variableNames = ['dy', 'W'];\n        this.uniforms = `strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,\n       outHeight : i32, outWidth : i32, channelMul : i32,`;\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = convInfo.inShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.shaderKey = `depthwise_conv2d_backprop_input`;\n    }\n    getUserCode() {\n        const userCode = `\n      ${main('index')} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d1 = coords[3];\n        let dyCorner = coords.yz - uniforms.pads;\n        let dyRCorner = dyCorner.x;\n        let dyCCorner = dyCorner.y;\n\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {\n          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);\n\n          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n            continue;\n          }\n\n          let idyR = i32(dyR);\n          let wRPerm = uniforms.filterDims[0] - 1 - wR;\n\n          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {\n            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);\n\n            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n              continue;\n            }\n\n            let idyC = i32(dyC);\n            let wCPerm = uniforms.filterDims[1] - 1 - wC;\n\n            for (var dm = 0; dm < uniforms.channelMul; dm++) {\n              let d2 = d1 * uniforms.channelMul + dm;\n              let xValue = getDy(batch, idyR, idyC, d2);\n              let wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, DepthwiseConv2dNativeBackpropFilter } from '@tensorflow/tfjs-core';\nimport { DepthwiseConv2DDerFilterProgram } from '../conv_backprop_depthwise_webgpu';\nexport function depthwiseConv2dNativeBackpropFilter(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, dy } = inputs;\n    const { strides, dilations, pad, dimRoundingMode, filterShape } = attrs;\n    const convInfo = backend_util.computeConv2DInfo(x.shape, filterShape, strides, dilations, pad, dimRoundingMode, true /* depthwise */);\n    const program = new DepthwiseConv2DDerFilterProgram(convInfo);\n    const uniformData = [\n        { type: 'int32', data: [convInfo.strideHeight, convInfo.strideWidth] },\n        { type: 'int32', data: [convInfo.padInfo.top, convInfo.padInfo.left] },\n        { type: 'int32', data: [convInfo.filterHeight, convInfo.filterWidth] },\n        { type: 'int32', data: [convInfo.outHeight] },\n        { type: 'int32', data: [convInfo.outWidth] },\n        { type: 'int32', data: [convInfo.inHeight] },\n        { type: 'int32', data: [convInfo.inWidth] },\n        { type: 'int32', data: [convInfo.batchSize] },\n        { type: 'int32', data: [convInfo.outChannels / convInfo.inChannels] }\n    ];\n    return backend.runWebGPUProgram(program, [x, dy], 'float32', uniformData);\n}\nexport const depthwiseConv2dNativeBackpropFilterConfig = {\n    kernelName: DepthwiseConv2dNativeBackpropFilter,\n    backendName: 'webgpu',\n    kernelFunc: depthwiseConv2dNativeBackpropFilter\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGVwdGh3aXNlQ29udjJkTmF0aXZlQmFja3Byb3BGaWx0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL0RlcHRod2lzZUNvbnYyZE5hdGl2ZUJhY2twcm9wRmlsdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxZQUFZLEVBQUUsbUNBQW1DLEVBQWdILE1BQU0sdUJBQXVCLENBQUM7QUFHdk0sT0FBTyxFQUFDLCtCQUErQixFQUFDLE1BQU0sbUNBQW1DLENBQUM7QUFFbEYsTUFBTSxVQUFVLG1DQUFtQyxDQUFDLElBSW5EO0lBQ0MsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ3RDLE1BQU0sRUFBQyxDQUFDLEVBQUUsRUFBRSxFQUFDLEdBQUcsTUFBTSxDQUFDO0lBQ3ZCLE1BQU0sRUFBQyxPQUFPLEVBQUUsU0FBUyxFQUFFLEdBQUcsRUFBRSxlQUFlLEVBQUUsV0FBVyxFQUFDLEdBQUcsS0FBSyxDQUFDO0lBRXRFLE1BQU0sUUFBUSxHQUFHLFlBQVksQ0FBQyxpQkFBaUIsQ0FDM0MsQ0FBQyxDQUFDLEtBQXlDLEVBQUUsV0FBVyxFQUFFLE9BQU8sRUFDakUsU0FBUyxFQUFFLEdBQUcsRUFBRSxlQUFlLEVBQUUsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0lBRTNELE1BQU0sT0FBTyxHQUFHLElBQUksK0JBQStCLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDOUQsTUFBTSxXQUFXLEdBQUc7UUFDbEIsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxZQUFZLEVBQUUsUUFBUSxDQUFDLFdBQVcsQ0FBQyxFQUFDO1FBQ3BFLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFDO1FBQ3BFLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsWUFBWSxFQUFFLFFBQVEsQ0FBQyxXQUFXLENBQUMsRUFBQztRQUNwRSxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxFQUFDO1FBQzNDLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLEVBQUM7UUFDMUMsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsRUFBQztRQUMxQyxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxFQUFDO1FBQ3pDLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLEVBQUM7UUFDM0MsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxXQUFXLEdBQUcsUUFBUSxDQUFDLFVBQVUsQ0FBQyxFQUFDO0tBQ3BFLENBQUM7SUFDRixPQUFPLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsU0FBUyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0FBQzVFLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSx5Q0FBeUMsR0FBaUI7SUFDckUsVUFBVSxFQUFFLG1DQUFtQztJQUMvQyxXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsbUNBQTREO0NBQ3pFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMyBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7YmFja2VuZF91dGlsLCBEZXB0aHdpc2VDb252MmROYXRpdmVCYWNrcHJvcEZpbHRlciwgRGVwdGh3aXNlQ29udjJkTmF0aXZlQmFja3Byb3BGaWx0ZXJBdHRycywgRGVwdGh3aXNlQ29udjJkTmF0aXZlQmFja3Byb3BGaWx0ZXJJbnB1dHMsIEtlcm5lbENvbmZpZywgS2VybmVsRnVuY30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge0RlcHRod2lzZUNvbnYyRERlckZpbHRlclByb2dyYW19IGZyb20gJy4uL2NvbnZfYmFja3Byb3BfZGVwdGh3aXNlX3dlYmdwdSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBkZXB0aHdpc2VDb252MmROYXRpdmVCYWNrcHJvcEZpbHRlcihhcmdzOiB7XG4gIGlucHV0czogRGVwdGh3aXNlQ29udjJkTmF0aXZlQmFja3Byb3BGaWx0ZXJJbnB1dHMsXG4gIGF0dHJzOiBEZXB0aHdpc2VDb252MmROYXRpdmVCYWNrcHJvcEZpbHRlckF0dHJzLFxuICBiYWNrZW5kOiBXZWJHUFVCYWNrZW5kXG59KSB7XG4gIGNvbnN0IHtpbnB1dHMsIGJhY2tlbmQsIGF0dHJzfSA9IGFyZ3M7XG4gIGNvbnN0IHt4LCBkeX0gPSBpbnB1dHM7XG4gIGNvbnN0IHtzdHJpZGVzLCBkaWxhdGlvbnMsIHBhZCwgZGltUm91bmRpbmdNb2RlLCBmaWx0ZXJTaGFwZX0gPSBhdHRycztcblxuICBjb25zdCBjb252SW5mbyA9IGJhY2tlbmRfdXRpbC5jb21wdXRlQ29udjJESW5mbyhcbiAgICAgIHguc2hhcGUgYXMgW251bWJlciwgbnVtYmVyLCBudW1iZXIsIG51bWJlcl0sIGZpbHRlclNoYXBlLCBzdHJpZGVzLFxuICAgICAgZGlsYXRpb25zLCBwYWQsIGRpbVJvdW5kaW5nTW9kZSwgdHJ1ZSAvKiBkZXB0aHdpc2UgKi8pO1xuXG4gIGNvbnN0IHByb2dyYW0gPSBuZXcgRGVwdGh3aXNlQ29udjJERGVyRmlsdGVyUHJvZ3JhbShjb252SW5mbyk7XG4gIGNvbnN0IHVuaWZvcm1EYXRhID0gW1xuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbY29udkluZm8uc3RyaWRlSGVpZ2h0LCBjb252SW5mby5zdHJpZGVXaWR0aF19LFxuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbY29udkluZm8ucGFkSW5mby50b3AsIGNvbnZJbmZvLnBhZEluZm8ubGVmdF19LFxuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbY29udkluZm8uZmlsdGVySGVpZ2h0LCBjb252SW5mby5maWx0ZXJXaWR0aF19LFxuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbY29udkluZm8ub3V0SGVpZ2h0XX0sXG4gICAge3R5cGU6ICdpbnQzMicsIGRhdGE6IFtjb252SW5mby5vdXRXaWR0aF19LFxuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbY29udkluZm8uaW5IZWlnaHRdfSxcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogW2NvbnZJbmZvLmluV2lkdGhdfSxcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogW2NvbnZJbmZvLmJhdGNoU2l6ZV19LFxuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbY29udkluZm8ub3V0Q2hhbm5lbHMgLyBjb252SW5mby5pbkNoYW5uZWxzXX1cbiAgXTtcbiAgcmV0dXJuIGJhY2tlbmQucnVuV2ViR1BVUHJvZ3JhbShwcm9ncmFtLCBbeCwgZHldLCAnZmxvYXQzMicsIHVuaWZvcm1EYXRhKTtcbn1cblxuZXhwb3J0IGNvbnN0IGRlcHRod2lzZUNvbnYyZE5hdGl2ZUJhY2twcm9wRmlsdGVyQ29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IERlcHRod2lzZUNvbnYyZE5hdGl2ZUJhY2twcm9wRmlsdGVyLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IGRlcHRod2lzZUNvbnYyZE5hdGl2ZUJhY2twcm9wRmlsdGVyIGFzIHVua25vd24gYXMgS2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, DepthwiseConv2dNativeBackpropInput } from '@tensorflow/tfjs-core';\nimport { DepthwiseConv2DDerInputProgram } from '../conv_backprop_depthwise_webgpu';\nexport function depthwiseConv2dNativeBackpropInput(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, filter } = inputs;\n    const { strides, dilations, pad, dimRoundingMode, inputShape } = attrs;\n    const convInfo = backend_util.computeConv2DInfo(inputShape, filter.shape, strides, dilations, pad, dimRoundingMode, true /* depthwise */);\n    const program = new DepthwiseConv2DDerInputProgram(convInfo);\n    const uniformData = [\n        { type: 'int32', data: [convInfo.strideHeight, convInfo.strideWidth] }, {\n            type: 'int32',\n            data: [\n                convInfo.filterHeight - 1 - convInfo.padInfo.top,\n                convInfo.filterWidth - 1 - convInfo.padInfo.left\n            ]\n        },\n        { type: 'int32', data: [convInfo.filterHeight, convInfo.filterWidth] },\n        { type: 'int32', data: [convInfo.outHeight] },\n        { type: 'int32', data: [convInfo.outWidth] },\n        { type: 'int32', data: [convInfo.outChannels / convInfo.inChannels] }\n    ];\n    return backend.runWebGPUProgram(program, [dy, filter], dy.dtype, uniformData);\n}\nexport const depthwiseConv2dNativeBackpropInputConfig = {\n    kernelName: DepthwiseConv2dNativeBackpropInput,\n    backendName: 'webgpu',\n    kernelFunc: depthwiseConv2dNativeBackpropInput\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGVwdGh3aXNlQ29udjJkTmF0aXZlQmFja3Byb3BJbnB1dC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvRGVwdGh3aXNlQ29udjJkTmF0aXZlQmFja3Byb3BJbnB1dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsWUFBWSxFQUFFLGtDQUFrQyxFQUE4RyxNQUFNLHVCQUF1QixDQUFDO0FBR3BNLE9BQU8sRUFBQyw4QkFBOEIsRUFBQyxNQUFNLG1DQUFtQyxDQUFDO0FBRWpGLE1BQU0sVUFBVSxrQ0FBa0MsQ0FBQyxJQUlsRDtJQUNDLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QyxNQUFNLEVBQUMsRUFBRSxFQUFFLE1BQU0sRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUM1QixNQUFNLEVBQUMsT0FBTyxFQUFFLFNBQVMsRUFBRSxHQUFHLEVBQUUsZUFBZSxFQUFFLFVBQVUsRUFBQyxHQUFHLEtBQUssQ0FBQztJQUVyRSxNQUFNLFFBQVEsR0FBRyxZQUFZLENBQUMsaUJBQWlCLENBQzNDLFVBQVUsRUFBRSxNQUFNLENBQUMsS0FBeUMsRUFBRSxPQUFPLEVBQ3JFLFNBQVMsRUFBRSxHQUFHLEVBQUUsZUFBZSxFQUFFLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUUzRCxNQUFNLE9BQU8sR0FBRyxJQUFJLDhCQUE4QixDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzdELE1BQU0sV0FBVyxHQUFHO1FBQ2xCLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsWUFBWSxFQUFFLFFBQVEsQ0FBQyxXQUFXLENBQUMsRUFBQyxFQUFFO1lBQ3BFLElBQUksRUFBRSxPQUFPO1lBQ2IsSUFBSSxFQUFFO2dCQUNKLFFBQVEsQ0FBQyxZQUFZLEdBQUcsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxPQUFPLENBQUMsR0FBRztnQkFDaEQsUUFBUSxDQUFDLFdBQVcsR0FBRyxDQUFDLEdBQUcsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJO2FBQ2pEO1NBQ0Y7UUFDRCxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLFlBQVksRUFBRSxRQUFRLENBQUMsV0FBVyxDQUFDLEVBQUM7UUFDcEUsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsRUFBQztRQUMzQyxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxFQUFDO1FBQzFDLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQyxVQUFVLENBQUMsRUFBQztLQUNwRSxDQUFDO0lBQ0YsT0FBTyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLENBQUMsRUFBRSxFQUFFLE1BQU0sQ0FBQyxFQUFFLEVBQUUsQ0FBQyxLQUFLLEVBQUUsV0FBVyxDQUFDLENBQUM7QUFDaEYsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLHdDQUF3QyxHQUFpQjtJQUNwRSxVQUFVLEVBQUUsa0NBQWtDO0lBQzlDLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxrQ0FBMkQ7Q0FDeEUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIzIEdvb2dsZSBMTEMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtiYWNrZW5kX3V0aWwsIERlcHRod2lzZUNvbnYyZE5hdGl2ZUJhY2twcm9wSW5wdXQsIERlcHRod2lzZUNvbnYyZE5hdGl2ZUJhY2twcm9wSW5wdXRBdHRycywgRGVwdGh3aXNlQ29udjJkTmF0aXZlQmFja3Byb3BJbnB1dElucHV0cywgS2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcbmltcG9ydCB7RGVwdGh3aXNlQ29udjJERGVySW5wdXRQcm9ncmFtfSBmcm9tICcuLi9jb252X2JhY2twcm9wX2RlcHRod2lzZV93ZWJncHUnO1xuXG5leHBvcnQgZnVuY3Rpb24gZGVwdGh3aXNlQ29udjJkTmF0aXZlQmFja3Byb3BJbnB1dChhcmdzOiB7XG4gIGlucHV0czogRGVwdGh3aXNlQ29udjJkTmF0aXZlQmFja3Byb3BJbnB1dElucHV0cyxcbiAgYXR0cnM6IERlcHRod2lzZUNvbnYyZE5hdGl2ZUJhY2twcm9wSW5wdXRBdHRycyxcbiAgYmFja2VuZDogV2ViR1BVQmFja2VuZFxufSkge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7ZHksIGZpbHRlcn0gPSBpbnB1dHM7XG4gIGNvbnN0IHtzdHJpZGVzLCBkaWxhdGlvbnMsIHBhZCwgZGltUm91bmRpbmdNb2RlLCBpbnB1dFNoYXBlfSA9IGF0dHJzO1xuXG4gIGNvbnN0IGNvbnZJbmZvID0gYmFja2VuZF91dGlsLmNvbXB1dGVDb252MkRJbmZvKFxuICAgICAgaW5wdXRTaGFwZSwgZmlsdGVyLnNoYXBlIGFzIFtudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdLCBzdHJpZGVzLFxuICAgICAgZGlsYXRpb25zLCBwYWQsIGRpbVJvdW5kaW5nTW9kZSwgdHJ1ZSAvKiBkZXB0aHdpc2UgKi8pO1xuXG4gIGNvbnN0IHByb2dyYW0gPSBuZXcgRGVwdGh3aXNlQ29udjJERGVySW5wdXRQcm9ncmFtKGNvbnZJbmZvKTtcbiAgY29uc3QgdW5pZm9ybURhdGEgPSBbXG4gICAge3R5cGU6ICdpbnQzMicsIGRhdGE6IFtjb252SW5mby5zdHJpZGVIZWlnaHQsIGNvbnZJbmZvLnN0cmlkZVdpZHRoXX0sIHtcbiAgICAgIHR5cGU6ICdpbnQzMicsXG4gICAgICBkYXRhOiBbXG4gICAgICAgIGNvbnZJbmZvLmZpbHRlckhlaWdodCAtIDEgLSBjb252SW5mby5wYWRJbmZvLnRvcCxcbiAgICAgICAgY29udkluZm8uZmlsdGVyV2lkdGggLSAxIC0gY29udkluZm8ucGFkSW5mby5sZWZ0XG4gICAgICBdXG4gICAgfSxcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogW2NvbnZJbmZvLmZpbHRlckhlaWdodCwgY29udkluZm8uZmlsdGVyV2lkdGhdfSxcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogW2NvbnZJbmZvLm91dEhlaWdodF19LFxuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbY29udkluZm8ub3V0V2lkdGhdfSxcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogW2NvbnZJbmZvLm91dENoYW5uZWxzIC8gY29udkluZm8uaW5DaGFubmVsc119XG4gIF07XG4gIHJldHVybiBiYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0ocHJvZ3JhbSwgW2R5LCBmaWx0ZXJdLCBkeS5kdHlwZSwgdW5pZm9ybURhdGEpO1xufVxuXG5leHBvcnQgY29uc3QgZGVwdGh3aXNlQ29udjJkTmF0aXZlQmFja3Byb3BJbnB1dENvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBEZXB0aHdpc2VDb252MmROYXRpdmVCYWNrcHJvcElucHV0LFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IGRlcHRod2lzZUNvbnYyZE5hdGl2ZUJhY2twcm9wSW5wdXQgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class DiagProgram {\n    constructor(size) {\n        this.variableNames = ['x'];\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = [size, size];\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.shaderKey = 'diag';\n    }\n    getUserCode() {\n        const userCode = `\n      ${main('index')} {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);\n          setOutputAtIndex(index, value);\n        }\n      }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhZ193ZWJncHUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9kaWFnX3dlYmdwdS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsbUJBQW1CLElBQUksSUFBSSxFQUFnQixNQUFNLGtCQUFrQixDQUFDO0FBQzVFLE9BQU8sRUFBQyxlQUFlLEVBQUUsa0JBQWtCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFbEUsTUFBTSxPQUFPLFdBQVc7SUFTdEIsWUFBWSxJQUFZO1FBSnhCLGtCQUFhLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN0QixrQkFBYSxHQUE2QixDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDckQsU0FBSSxHQUFHLElBQUksQ0FBQztRQUdWLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDaEMsSUFBSSxDQUFDLGNBQWMsR0FBRyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxlQUFlLENBQzNCLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFFL0QsSUFBSSxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUM7SUFDMUIsQ0FBQztJQUVELFdBQVc7UUFDVCxNQUFNLFFBQVEsR0FBRztRQUNiLElBQUksQ0FBQyxPQUFPLENBQUM7Ozs7Ozs7S0FPaEIsQ0FBQztRQUNGLE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIyIEdvb2dsZSBMTEMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtnZXRNYWluSGVhZGVyU3RyaW5nIGFzIG1haW4sIFdlYkdQVVByb2dyYW19IGZyb20gJy4vd2ViZ3B1X3Byb2dyYW0nO1xuaW1wb3J0IHtjb21wdXRlRGlzcGF0Y2gsIGZsYXREaXNwYXRjaExheW91dH0gZnJvbSAnLi93ZWJncHVfdXRpbCc7XG5cbmV4cG9ydCBjbGFzcyBEaWFnUHJvZ3JhbSBpbXBsZW1lbnRzIFdlYkdQVVByb2dyYW0ge1xuICBvdXRwdXRTaGFwZTogbnVtYmVyW107XG4gIHNoYWRlcktleTogc3RyaW5nO1xuICBkaXNwYXRjaExheW91dDoge3g6IG51bWJlcltdfTtcbiAgZGlzcGF0Y2g6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXTtcbiAgdmFyaWFibGVOYW1lcyA9IFsneCddO1xuICB3b3JrZ3JvdXBTaXplOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl0gPSBbNjQsIDEsIDFdO1xuICBzaXplID0gdHJ1ZTtcblxuICBjb25zdHJ1Y3RvcihzaXplOiBudW1iZXIpIHtcbiAgICB0aGlzLm91dHB1dFNoYXBlID0gW3NpemUsIHNpemVdO1xuICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQgPSBmbGF0RGlzcGF0Y2hMYXlvdXQodGhpcy5vdXRwdXRTaGFwZSk7XG4gICAgdGhpcy5kaXNwYXRjaCA9IGNvbXB1dGVEaXNwYXRjaChcbiAgICAgICAgdGhpcy5kaXNwYXRjaExheW91dCwgdGhpcy5vdXRwdXRTaGFwZSwgdGhpcy53b3JrZ3JvdXBTaXplKTtcblxuICAgIHRoaXMuc2hhZGVyS2V5ID0gJ2RpYWcnO1xuICB9XG5cbiAgZ2V0VXNlckNvZGUoKTogc3RyaW5nIHtcbiAgICBjb25zdCB1c2VyQ29kZSA9IGBcbiAgICAgICR7bWFpbignaW5kZXgnKX0ge1xuICAgICAgICBpZiAoaW5kZXggPCB1bmlmb3Jtcy5zaXplKSB7XG4gICAgICAgICAgbGV0IGNvb3JkcyA9IGdldE91dHB1dENvb3JkcygpO1xuICAgICAgICAgIGxldCB2YWx1ZSA9IHNlbGVjdCgwLjAsIGdldFgoY29vcmRzWzBdKSwgY29vcmRzWzBdID09IGNvb3Jkc1sxXSk7XG4gICAgICAgICAgc2V0T3V0cHV0QXRJbmRleChpbmRleCwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgYDtcbiAgICByZXR1cm4gdXNlckNvZGU7XG4gIH1cbn1cbiJdfQ==","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Diag, util } from '@tensorflow/tfjs-core';\nimport { DiagProgram } from '../diag_webgpu';\nimport { reshape } from './Reshape';\nexport function diag(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    const outShape = [...x.shape, ...x.shape];\n    const xSize = util.sizeFromShape(x.shape);\n    const flat = reshape({ inputs: { x }, backend, attrs: { shape: [xSize] } });\n    const program = new DiagProgram(xSize);\n    const res = backend.runWebGPUProgram(program, [flat], flat.dtype);\n    const out = reshape({ inputs: { x: res }, backend, attrs: { shape: outShape } });\n    backend.disposeData(flat.dataId);\n    backend.disposeData(res.dataId);\n    return out;\n}\nexport const diagConfig = {\n    kernelName: Diag,\n    backendName: 'webgpu',\n    kernelFunc: diag\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGlhZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvRGlhZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsSUFBSSxFQUFvRCxJQUFJLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUduRyxPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0MsT0FBTyxFQUFDLE9BQU8sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUVsQyxNQUFNLFVBQVUsSUFBSSxDQUFDLElBQWtEO0lBRXJFLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFDLEdBQUcsSUFBSSxDQUFDO0lBQy9CLE1BQU0sRUFBQyxDQUFDLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFFbkIsTUFBTSxRQUFRLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDMUMsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7SUFFMUMsTUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFDLEVBQUMsTUFBTSxFQUFFLEVBQUMsQ0FBQyxFQUFDLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxFQUFDLEtBQUssRUFBRSxDQUFDLEtBQUssQ0FBQyxFQUFDLEVBQUMsQ0FBQyxDQUFDO0lBRXRFLE1BQU0sT0FBTyxHQUFHLElBQUksV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3ZDLE1BQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFFbEUsTUFBTSxHQUFHLEdBQUcsT0FBTyxDQUFDLEVBQUMsTUFBTSxFQUFFLEVBQUMsQ0FBQyxFQUFFLEdBQUcsRUFBQyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsRUFBQyxLQUFLLEVBQUUsUUFBUSxFQUFDLEVBQUMsQ0FBQyxDQUFDO0lBRTNFLE9BQU8sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ2pDLE9BQU8sQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRWhDLE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBaUI7SUFDdEMsVUFBVSxFQUFFLElBQUk7SUFDaEIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLElBQTZCO0NBQzFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7RGlhZywgRGlhZ0lucHV0cywgS2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBUZW5zb3JJbmZvLCB1dGlsfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcbmltcG9ydCB7RGlhZ1Byb2dyYW19IGZyb20gJy4uL2RpYWdfd2ViZ3B1JztcbmltcG9ydCB7cmVzaGFwZX0gZnJvbSAnLi9SZXNoYXBlJztcblxuZXhwb3J0IGZ1bmN0aW9uIGRpYWcoYXJnczoge2lucHV0czogRGlhZ0lucHV0cywgYmFja2VuZDogV2ViR1BVQmFja2VuZH0pOlxuICAgIFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kfSA9IGFyZ3M7XG4gIGNvbnN0IHt4fSA9IGlucHV0cztcblxuICBjb25zdCBvdXRTaGFwZSA9IFsuLi54LnNoYXBlLCAuLi54LnNoYXBlXTtcbiAgY29uc3QgeFNpemUgPSB1dGlsLnNpemVGcm9tU2hhcGUoeC5zaGFwZSk7XG5cbiAgY29uc3QgZmxhdCA9IHJlc2hhcGUoe2lucHV0czoge3h9LCBiYWNrZW5kLCBhdHRyczoge3NoYXBlOiBbeFNpemVdfX0pO1xuXG4gIGNvbnN0IHByb2dyYW0gPSBuZXcgRGlhZ1Byb2dyYW0oeFNpemUpO1xuICBjb25zdCByZXMgPSBiYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0ocHJvZ3JhbSwgW2ZsYXRdLCBmbGF0LmR0eXBlKTtcblxuICBjb25zdCBvdXQgPSByZXNoYXBlKHtpbnB1dHM6IHt4OiByZXN9LCBiYWNrZW5kLCBhdHRyczoge3NoYXBlOiBvdXRTaGFwZX19KTtcblxuICBiYWNrZW5kLmRpc3Bvc2VEYXRhKGZsYXQuZGF0YUlkKTtcbiAgYmFja2VuZC5kaXNwb3NlRGF0YShyZXMuZGF0YUlkKTtcblxuICByZXR1cm4gb3V0O1xufVxuXG5leHBvcnQgY29uc3QgZGlhZ0NvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBEaWFnLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IGRpYWcgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class Dilation2DProgram {\n    constructor(convInfo) {\n        this.variableNames = ['x', 'w'];\n        this.uniforms = 'filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>';\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = convInfo.outShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.shaderKey = 'dilation2d';\n    }\n    getUserCode() {\n        const userCode = `\n       ${main('index')} {\n         if (index < uniforms.size) {\n           let neg_infinity = -3.4e38;\n           let coords = getOutputCoords();\n           let batch = coords.x;\n           let d1 = coords.w;\n           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;\n           let hBeg = outTopLeftCorner.x;\n           let wBeg = outTopLeftCorner.y;\n\n           var curVal = neg_infinity;\n           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {\n             let hIn = hBeg + h * uniforms.dilations[0];\n\n             if (hIn >= 0 && hIn < uniforms.xShape[1]) {\n               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {\n                 let wIn = wBeg + w * uniforms.dilations[1];\n\n                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {\n                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);\n                   if (val > curVal) {\n                     curVal = val;\n                   }\n                 }\n               }\n             }\n           }\n\n           setOutputAtIndex(index, curVal);\n         }\n       }\n     `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlsYXRpb25fd2ViZ3B1LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMvZGlsYXRpb25fd2ViZ3B1LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUlILE9BQU8sRUFBQyxtQkFBbUIsSUFBSSxJQUFJLEVBQWdCLE1BQU0sa0JBQWtCLENBQUM7QUFDNUUsT0FBTyxFQUFDLGVBQWUsRUFBRSxrQkFBa0IsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUVsRSxNQUFNLE9BQU8saUJBQWlCO0lBVzVCLFlBQVksUUFBaUM7UUFON0Msa0JBQWEsR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUMzQixhQUFRLEdBQ0osa0ZBQWtGLENBQUM7UUFDdkYsa0JBQWEsR0FBNkIsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3JELFNBQUksR0FBRyxJQUFJLENBQUM7UUFHVixJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQyxRQUFRLENBQUM7UUFDckMsSUFBSSxDQUFDLGNBQWMsR0FBRyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxlQUFlLENBQzNCLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFFL0QsSUFBSSxDQUFDLFNBQVMsR0FBRyxZQUFZLENBQUM7SUFDaEMsQ0FBQztJQUVELFdBQVc7UUFDVCxNQUFNLFFBQVEsR0FBRztTQUNaLElBQUksQ0FBQyxPQUFPLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7TUErQmhCLENBQUM7UUFDSCxPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7YmFja2VuZF91dGlsfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge2dldE1haW5IZWFkZXJTdHJpbmcgYXMgbWFpbiwgV2ViR1BVUHJvZ3JhbX0gZnJvbSAnLi93ZWJncHVfcHJvZ3JhbSc7XG5pbXBvcnQge2NvbXB1dGVEaXNwYXRjaCwgZmxhdERpc3BhdGNoTGF5b3V0fSBmcm9tICcuL3dlYmdwdV91dGlsJztcblxuZXhwb3J0IGNsYXNzIERpbGF0aW9uMkRQcm9ncmFtIGltcGxlbWVudHMgV2ViR1BVUHJvZ3JhbSB7XG4gIG91dHB1dFNoYXBlOiBudW1iZXJbXTtcbiAgc2hhZGVyS2V5OiBzdHJpbmc7XG4gIGRpc3BhdGNoTGF5b3V0OiB7eDogbnVtYmVyW119O1xuICBkaXNwYXRjaDogW251bWJlciwgbnVtYmVyLCBudW1iZXJdO1xuICB2YXJpYWJsZU5hbWVzID0gWyd4JywgJ3cnXTtcbiAgdW5pZm9ybXMgPVxuICAgICAgJ2ZpbHRlckRpbXM6IHZlYzI8aTMyPiwgcGFkczogdmVjMjxpMzI+LCBzdHJpZGVzOiB2ZWMyPGkzMj4sIGRpbGF0aW9uczogdmVjMjxpMzI+JztcbiAgd29ya2dyb3VwU2l6ZTogW251bWJlciwgbnVtYmVyLCBudW1iZXJdID0gWzY0LCAxLCAxXTtcbiAgc2l6ZSA9IHRydWU7XG5cbiAgY29uc3RydWN0b3IoY29udkluZm86IGJhY2tlbmRfdXRpbC5Db252MkRJbmZvKSB7XG4gICAgdGhpcy5vdXRwdXRTaGFwZSA9IGNvbnZJbmZvLm91dFNoYXBlO1xuICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQgPSBmbGF0RGlzcGF0Y2hMYXlvdXQodGhpcy5vdXRwdXRTaGFwZSk7XG4gICAgdGhpcy5kaXNwYXRjaCA9IGNvbXB1dGVEaXNwYXRjaChcbiAgICAgICAgdGhpcy5kaXNwYXRjaExheW91dCwgdGhpcy5vdXRwdXRTaGFwZSwgdGhpcy53b3JrZ3JvdXBTaXplKTtcblxuICAgIHRoaXMuc2hhZGVyS2V5ID0gJ2RpbGF0aW9uMmQnO1xuICB9XG5cbiAgZ2V0VXNlckNvZGUoKTogc3RyaW5nIHtcbiAgICBjb25zdCB1c2VyQ29kZSA9IGBcbiAgICAgICAke21haW4oJ2luZGV4Jyl9IHtcbiAgICAgICAgIGlmIChpbmRleCA8IHVuaWZvcm1zLnNpemUpIHtcbiAgICAgICAgICAgbGV0IG5lZ19pbmZpbml0eSA9IC0zLjRlMzg7XG4gICAgICAgICAgIGxldCBjb29yZHMgPSBnZXRPdXRwdXRDb29yZHMoKTtcbiAgICAgICAgICAgbGV0IGJhdGNoID0gY29vcmRzLng7XG4gICAgICAgICAgIGxldCBkMSA9IGNvb3Jkcy53O1xuICAgICAgICAgICBsZXQgb3V0VG9wTGVmdENvcm5lciA9IGNvb3Jkcy55eiAqIHVuaWZvcm1zLnN0cmlkZXMgLSB1bmlmb3Jtcy5wYWRzO1xuICAgICAgICAgICBsZXQgaEJlZyA9IG91dFRvcExlZnRDb3JuZXIueDtcbiAgICAgICAgICAgbGV0IHdCZWcgPSBvdXRUb3BMZWZ0Q29ybmVyLnk7XG5cbiAgICAgICAgICAgdmFyIGN1clZhbCA9IG5lZ19pbmZpbml0eTtcbiAgICAgICAgICAgZm9yICh2YXIgaCA9IDA7IGggPCB1bmlmb3Jtcy5maWx0ZXJEaW1zWzBdOyBoID0gaCArIDEpIHtcbiAgICAgICAgICAgICBsZXQgaEluID0gaEJlZyArIGggKiB1bmlmb3Jtcy5kaWxhdGlvbnNbMF07XG5cbiAgICAgICAgICAgICBpZiAoaEluID49IDAgJiYgaEluIDwgdW5pZm9ybXMueFNoYXBlWzFdKSB7XG4gICAgICAgICAgICAgICBmb3IgKHZhciB3ID0gMDsgdyA8IHVuaWZvcm1zLmZpbHRlckRpbXNbMV07IHcgPSB3ICsgMSkge1xuICAgICAgICAgICAgICAgICBsZXQgd0luID0gd0JlZyArIHcgKiB1bmlmb3Jtcy5kaWxhdGlvbnNbMV07XG5cbiAgICAgICAgICAgICAgICAgaWYgKHdJbiA+PSAwICYmIHdJbiA8IHVuaWZvcm1zLnhTaGFwZVsyXSkge1xuICAgICAgICAgICAgICAgICAgIGxldCB2YWwgPSBnZXRYKGJhdGNoLCBoSW4sIHdJbiwgZDEpICsgZ2V0VyhoLCB3LCBkMSk7XG4gICAgICAgICAgICAgICAgICAgaWYgKHZhbCA+IGN1clZhbCkge1xuICAgICAgICAgICAgICAgICAgICAgY3VyVmFsID0gdmFsO1xuICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgIH1cbiAgICAgICAgICAgfVxuXG4gICAgICAgICAgIHNldE91dHB1dEF0SW5kZXgoaW5kZXgsIGN1clZhbCk7XG4gICAgICAgICB9XG4gICAgICAgfVxuICAgICBgO1xuICAgIHJldHVybiB1c2VyQ29kZTtcbiAgfVxufVxuIl19","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Dilation2D } from '@tensorflow/tfjs-core';\nimport { Dilation2DProgram } from '../dilation_webgpu';\nexport function dilation2D(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, filter } = inputs;\n    const { strides, pad, dilations } = attrs;\n    const convInfo = backend_util.computeDilation2DInfo(x.shape, filter.shape, strides, pad, 'NHWC' /* dataFormat */, dilations);\n    const padInfo = [convInfo.padInfo.top, convInfo.padInfo.left];\n    const uniformData = [\n        { type: 'int32', data: [convInfo.filterHeight, convInfo.filterWidth] },\n        { type: 'int32', data: [...padInfo] },\n        { type: 'int32', data: [convInfo.strideHeight, convInfo.strideWidth] },\n        { type: 'int32', data: [convInfo.dilationHeight, convInfo.dilationWidth] }\n    ];\n    const program = new Dilation2DProgram(convInfo);\n    const out = backend.runWebGPUProgram(program, [x, filter], x.dtype, uniformData);\n    return out;\n}\nexport const dilation2DConfig = {\n    kernelName: Dilation2D,\n    backendName: 'webgpu',\n    kernelFunc: dilation2D\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGlsYXRpb24yRC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvRGlsYXRpb24yRC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsWUFBWSxFQUFFLFVBQVUsRUFBMEUsTUFBTSx1QkFBdUIsQ0FBQztBQUd4SSxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUVyRCxNQUFNLFVBQVUsVUFBVSxDQUFDLElBSTFCO0lBQ0MsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ3RDLE1BQU0sRUFBQyxDQUFDLEVBQUUsTUFBTSxFQUFDLEdBQUcsTUFBTSxDQUFDO0lBQzNCLE1BQU0sRUFBQyxPQUFPLEVBQUUsR0FBRyxFQUFFLFNBQVMsRUFBQyxHQUFHLEtBQUssQ0FBQztJQUV4QyxNQUFNLFFBQVEsR0FBRyxZQUFZLENBQUMscUJBQXFCLENBQy9DLENBQUMsQ0FBQyxLQUF5QyxFQUMzQyxNQUFNLENBQUMsS0FBaUMsRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUN0RCxNQUFNLENBQUMsZ0JBQWdCLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDeEMsTUFBTSxPQUFPLEdBQUcsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzlELE1BQU0sV0FBVyxHQUFHO1FBQ2xCLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsWUFBWSxFQUFFLFFBQVEsQ0FBQyxXQUFXLENBQUMsRUFBQztRQUNwRSxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsR0FBRyxPQUFPLENBQUMsRUFBQztRQUNuQyxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLFlBQVksRUFBRSxRQUFRLENBQUMsV0FBVyxDQUFDLEVBQUM7UUFDcEUsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxjQUFjLEVBQUUsUUFBUSxDQUFDLGFBQWEsQ0FBQyxFQUFDO0tBQ3pFLENBQUM7SUFFRixNQUFNLE9BQU8sR0FBRyxJQUFJLGlCQUFpQixDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2hELE1BQU0sR0FBRyxHQUNMLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEtBQUssRUFBRSxXQUFXLENBQUMsQ0FBQztJQUV6RSxPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBaUI7SUFDNUMsVUFBVSxFQUFFLFVBQVU7SUFDdEIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLFVBQW1DO0NBQ2hELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7YmFja2VuZF91dGlsLCBEaWxhdGlvbjJELCBEaWxhdGlvbjJEQXR0cnMsIERpbGF0aW9uMkRJbnB1dHMsIEtlcm5lbENvbmZpZywgS2VybmVsRnVuYywgVGVuc29ySW5mb30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge0RpbGF0aW9uMkRQcm9ncmFtfSBmcm9tICcuLi9kaWxhdGlvbl93ZWJncHUnO1xuXG5leHBvcnQgZnVuY3Rpb24gZGlsYXRpb24yRChhcmdzOiB7XG4gIGlucHV0czogRGlsYXRpb24yRElucHV0cyxcbiAgYXR0cnM6IERpbGF0aW9uMkRBdHRycyxcbiAgYmFja2VuZDogV2ViR1BVQmFja2VuZFxufSk6IFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7eCwgZmlsdGVyfSA9IGlucHV0cztcbiAgY29uc3Qge3N0cmlkZXMsIHBhZCwgZGlsYXRpb25zfSA9IGF0dHJzO1xuXG4gIGNvbnN0IGNvbnZJbmZvID0gYmFja2VuZF91dGlsLmNvbXB1dGVEaWxhdGlvbjJESW5mbyhcbiAgICAgIHguc2hhcGUgYXMgW251bWJlciwgbnVtYmVyLCBudW1iZXIsIG51bWJlcl0sXG4gICAgICBmaWx0ZXIuc2hhcGUgYXMgW251bWJlciwgbnVtYmVyLCBudW1iZXJdLCBzdHJpZGVzLCBwYWQsXG4gICAgICAnTkhXQycgLyogZGF0YUZvcm1hdCAqLywgZGlsYXRpb25zKTtcbiAgY29uc3QgcGFkSW5mbyA9IFtjb252SW5mby5wYWRJbmZvLnRvcCwgY29udkluZm8ucGFkSW5mby5sZWZ0XTtcbiAgY29uc3QgdW5pZm9ybURhdGEgPSBbXG4gICAge3R5cGU6ICdpbnQzMicsIGRhdGE6IFtjb252SW5mby5maWx0ZXJIZWlnaHQsIGNvbnZJbmZvLmZpbHRlcldpZHRoXX0sXG4gICAge3R5cGU6ICdpbnQzMicsIGRhdGE6IFsuLi5wYWRJbmZvXX0sXG4gICAge3R5cGU6ICdpbnQzMicsIGRhdGE6IFtjb252SW5mby5zdHJpZGVIZWlnaHQsIGNvbnZJbmZvLnN0cmlkZVdpZHRoXX0sXG4gICAge3R5cGU6ICdpbnQzMicsIGRhdGE6IFtjb252SW5mby5kaWxhdGlvbkhlaWdodCwgY29udkluZm8uZGlsYXRpb25XaWR0aF19XG4gIF07XG5cbiAgY29uc3QgcHJvZ3JhbSA9IG5ldyBEaWxhdGlvbjJEUHJvZ3JhbShjb252SW5mbyk7XG4gIGNvbnN0IG91dCA9XG4gICAgICBiYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0ocHJvZ3JhbSwgW3gsIGZpbHRlcl0sIHguZHR5cGUsIHVuaWZvcm1EYXRhKTtcblxuICByZXR1cm4gb3V0O1xufVxuXG5leHBvcnQgY29uc3QgZGlsYXRpb24yRENvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBEaWxhdGlvbjJELFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IGRpbGF0aW9uMkQgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { atomicAddSnippet } from './shader_util';\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class Dilation2DBackpropInputProgram {\n    constructor(convInfo, outputDtype) {\n        this.variableNames = ['x', 'w', 'dy'];\n        this.uniforms = 'filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,';\n        this.workgroupSize = [64, 1, 1];\n        this.atomic = true;\n        this.outputShape = convInfo.inShape;\n        this.dispatchLayout = flatDispatchLayout(convInfo.outShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, convInfo.outShape, this.workgroupSize);\n        if (outputDtype !== 'float32' && outputDtype !== 'int32') {\n            throw new Error(`Dilation2DBackpropInput only supports float32 and int32\n          types, does not support ${outputDtype} type.`);\n        }\n        this.type = outputDtype;\n        this.shaderKey = 'dilation2DBackpropInput';\n    }\n    getUserCode() {\n        // This implementation follows the TF c++ cuda implementation:\n        // https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/dilation_ops_gpu.cu.cc\n        const userCode = `\n       ${main('index')} {\n         if (index < uniforms.dySize) {\n           let coords = getDyCoordsFromIndex(index);\n           let b = coords[0];\n           let r = coords[1];\n           let c = coords[2];\n           let d = coords[3];\n\n           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;\n           var curVal = -3.4e38;  // neg_infinity\n           var xRMax = 0;\n           var xCMax = 0;\n\n           // In the case of multiple argmax branches, we only back-propagate\n           // along the last branch, i.e., the one with largest value of\n           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling\n           // backward routines.\n           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {\n             let xR = dyCorner.x + wR * uniforms.dilations[0];\n\n             if (xR >= 0 && xR < uniforms.xShape[1]) {\n               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {\n                 let xC = dyCorner.y + wC * uniforms.dilations[1];\n\n                 if (xC >= 0 && xC < uniforms.xShape[2]) {\n                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);\n                   if (val > curVal) {\n                     curVal = val;\n                     xRMax = xR;\n                     xCMax = xC;\n                   }\n                 }\n               }\n             }\n           }\n\n           let flatIndexIn = d + uniforms.xShape[3] *\n               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));\n           let value = getDy(b, r, c, d);\n           ${atomicAddSnippet('&result[flatIndexIn]', 'value', this.type)}\n         }\n       }\n     `;\n        return userCode;\n    }\n}\nexport class Dilation2DBackpropFilterProgram {\n    constructor(convInfo, shape, outputDtype) {\n        this.variableNames = ['x', 'w', 'dy'];\n        this.uniforms = 'filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,';\n        this.workgroupSize = [64, 1, 1];\n        this.atomic = true;\n        this.outputShape = convInfo.filterShape;\n        this.dispatchLayout = flatDispatchLayout(convInfo.outShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, convInfo.outShape, this.workgroupSize);\n        if (outputDtype !== 'float32' && outputDtype !== 'int32') {\n            throw new Error(`Dilation2DBackpropFilter only supports float32 and int32\n          types, does not support ${outputDtype} type.`);\n        }\n        this.type = outputDtype;\n        this.shaderKey = 'dilation2DBackpropFilter';\n    }\n    getUserCode() {\n        // This implementation follows the TF c++ cuda implementation:\n        // https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/dilation_ops_gpu.cu.cc\n        const userCode = `\n       ${main('index')} {\n         if (index < uniforms.dySize) {\n           let coords = getDyCoordsFromIndex(index);\n           let b = coords[0];\n           let r = coords[1];\n           let c = coords[2];\n           let d = coords[3];\n\n           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;\n           var curVal = -3.4e38;  // neg_infinity\n           var wRMax = 0;\n           var wCMax = 0;\n\n           // In the case of multiple argmax branches, we only back-propagate\n           // along the last branch, i.e., the one with largest value of\n           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling\n           // backward routines.\n           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {\n             let xR = dyCorner.x + wR * uniforms.dilations[0];\n\n             if (xR >= 0 && xR < uniforms.xShape[1]) {\n               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {\n                 let xC = dyCorner.y + wC * uniforms.dilations[1];\n\n                 if (xC >= 0 && xC < uniforms.xShape[2]) {\n                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);\n                   if (val > curVal) {\n                     curVal = val;\n                     wRMax = wR;\n                     wCMax = wC;\n                   }\n                 }\n               }\n             }\n           }\n\n           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);\n           let value = getDy(b, r, c, d);\n           ${atomicAddSnippet('&result[flatIndexIn]', 'value', this.type)}\n         }\n       }\n     `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlsYXRpb25fYmFja3Byb3Bfd2ViZ3B1LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMvZGlsYXRpb25fYmFja3Byb3Bfd2ViZ3B1LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUlILE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMvQyxPQUFPLEVBQUMsbUJBQW1CLElBQUksSUFBSSxFQUFnQixNQUFNLGtCQUFrQixDQUFDO0FBQzVFLE9BQU8sRUFBQyxlQUFlLEVBQUUsa0JBQWtCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFbEUsTUFBTSxPQUFPLDhCQUE4QjtJQVl6QyxZQUFZLFFBQWlDLEVBQUUsV0FBcUI7UUFQcEUsa0JBQWEsR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDakMsYUFBUSxHQUNKLGdHQUFnRyxDQUFDO1FBQ3JHLGtCQUFhLEdBQTZCLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNyRCxXQUFNLEdBQUcsSUFBSSxDQUFDO1FBSVosSUFBSSxDQUFDLFdBQVcsR0FBRyxRQUFRLENBQUMsT0FBTyxDQUFDO1FBQ3BDLElBQUksQ0FBQyxjQUFjLEdBQUcsa0JBQWtCLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzVELElBQUksQ0FBQyxRQUFRLEdBQUcsZUFBZSxDQUMzQixJQUFJLENBQUMsY0FBYyxFQUFFLFFBQVEsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBRWhFLElBQUksV0FBVyxLQUFLLFNBQVMsSUFBSSxXQUFXLEtBQUssT0FBTyxFQUFFO1lBQ3hELE1BQU0sSUFBSSxLQUFLLENBQUM7b0NBQ2MsV0FBVyxRQUFRLENBQUMsQ0FBQztTQUNwRDtRQUNELElBQUksQ0FBQyxJQUFJLEdBQUcsV0FBVyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxTQUFTLEdBQUcseUJBQXlCLENBQUM7SUFDN0MsQ0FBQztJQUVELFdBQVc7UUFDVCw4REFBOEQ7UUFDOUQsc0dBQXNHO1FBQ3RHLE1BQU0sUUFBUSxHQUFHO1NBQ1osSUFBSSxDQUFDLE9BQU8sQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2FBd0NkLGdCQUFnQixDQUNaLHNCQUFzQixFQUFFLE9BQU8sRUFBRSxJQUFJLENBQUMsSUFBMkIsQ0FBQzs7O01BR3hFLENBQUM7UUFDSCxPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sK0JBQStCO0lBWTFDLFlBQ0ksUUFBaUMsRUFBRSxLQUFlLEVBQ2xELFdBQXFCO1FBVHpCLGtCQUFhLEdBQUcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ2pDLGFBQVEsR0FDSixnR0FBZ0csQ0FBQztRQUNyRyxrQkFBYSxHQUE2QixDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDckQsV0FBTSxHQUFHLElBQUksQ0FBQztRQU1aLElBQUksQ0FBQyxXQUFXLEdBQUcsUUFBUSxDQUFDLFdBQVcsQ0FBQztRQUN4QyxJQUFJLENBQUMsY0FBYyxHQUFHLGtCQUFrQixDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM1RCxJQUFJLENBQUMsUUFBUSxHQUFHLGVBQWUsQ0FDM0IsSUFBSSxDQUFDLGNBQWMsRUFBRSxRQUFRLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUVoRSxJQUFJLFdBQVcsS0FBSyxTQUFTLElBQUksV0FBVyxLQUFLLE9BQU8sRUFBRTtZQUN4RCxNQUFNLElBQUksS0FBSyxDQUFDO29DQUNjLFdBQVcsUUFBUSxDQUFDLENBQUM7U0FDcEQ7UUFDRCxJQUFJLENBQUMsSUFBSSxHQUFHLFdBQVcsQ0FBQztRQUN4QixJQUFJLENBQUMsU0FBUyxHQUFHLDBCQUEwQixDQUFDO0lBQzlDLENBQUM7SUFFRCxXQUFXO1FBQ1QsOERBQThEO1FBQzlELHNHQUFzRztRQUN0RyxNQUFNLFFBQVEsR0FBRztTQUNaLElBQUksQ0FBQyxPQUFPLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2FBdUNkLGdCQUFnQixDQUNaLHNCQUFzQixFQUFFLE9BQU8sRUFBRSxJQUFJLENBQUMsSUFBMkIsQ0FBQzs7O01BR3hFLENBQUM7UUFDSCxPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMyBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7YmFja2VuZF91dGlsLCBEYXRhVHlwZX0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHthdG9taWNBZGRTbmlwcGV0fSBmcm9tICcuL3NoYWRlcl91dGlsJztcbmltcG9ydCB7Z2V0TWFpbkhlYWRlclN0cmluZyBhcyBtYWluLCBXZWJHUFVQcm9ncmFtfSBmcm9tICcuL3dlYmdwdV9wcm9ncmFtJztcbmltcG9ydCB7Y29tcHV0ZURpc3BhdGNoLCBmbGF0RGlzcGF0Y2hMYXlvdXR9IGZyb20gJy4vd2ViZ3B1X3V0aWwnO1xuXG5leHBvcnQgY2xhc3MgRGlsYXRpb24yREJhY2twcm9wSW5wdXRQcm9ncmFtIGltcGxlbWVudHMgV2ViR1BVUHJvZ3JhbSB7XG4gIG91dHB1dFNoYXBlOiBudW1iZXJbXTtcbiAgc2hhZGVyS2V5OiBzdHJpbmc7XG4gIGRpc3BhdGNoTGF5b3V0OiB7eDogbnVtYmVyW119O1xuICBkaXNwYXRjaDogW251bWJlciwgbnVtYmVyLCBudW1iZXJdO1xuICB2YXJpYWJsZU5hbWVzID0gWyd4JywgJ3cnLCAnZHknXTtcbiAgdW5pZm9ybXMgPVxuICAgICAgJ2ZpbHRlckRpbXM6IHZlYzI8aTMyPiwgcGFkczogdmVjMjxpMzI+LCBzdHJpZGVzOiB2ZWMyPGkzMj4sIGRpbGF0aW9uczogdmVjMjxpMzI+LCBkeVNpemU6IGkzMiwnO1xuICB3b3JrZ3JvdXBTaXplOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl0gPSBbNjQsIDEsIDFdO1xuICBhdG9taWMgPSB0cnVlO1xuICB0eXBlOiBEYXRhVHlwZTtcblxuICBjb25zdHJ1Y3Rvcihjb252SW5mbzogYmFja2VuZF91dGlsLkNvbnYyREluZm8sIG91dHB1dER0eXBlOiBEYXRhVHlwZSkge1xuICAgIHRoaXMub3V0cHV0U2hhcGUgPSBjb252SW5mby5pblNoYXBlO1xuICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQgPSBmbGF0RGlzcGF0Y2hMYXlvdXQoY29udkluZm8ub3V0U2hhcGUpO1xuICAgIHRoaXMuZGlzcGF0Y2ggPSBjb21wdXRlRGlzcGF0Y2goXG4gICAgICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQsIGNvbnZJbmZvLm91dFNoYXBlLCB0aGlzLndvcmtncm91cFNpemUpO1xuXG4gICAgaWYgKG91dHB1dER0eXBlICE9PSAnZmxvYXQzMicgJiYgb3V0cHV0RHR5cGUgIT09ICdpbnQzMicpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRGlsYXRpb24yREJhY2twcm9wSW5wdXQgb25seSBzdXBwb3J0cyBmbG9hdDMyIGFuZCBpbnQzMlxuICAgICAgICAgIHR5cGVzLCBkb2VzIG5vdCBzdXBwb3J0ICR7b3V0cHV0RHR5cGV9IHR5cGUuYCk7XG4gICAgfVxuICAgIHRoaXMudHlwZSA9IG91dHB1dER0eXBlO1xuICAgIHRoaXMuc2hhZGVyS2V5ID0gJ2RpbGF0aW9uMkRCYWNrcHJvcElucHV0JztcbiAgfVxuXG4gIGdldFVzZXJDb2RlKCk6IHN0cmluZyB7XG4gICAgLy8gVGhpcyBpbXBsZW1lbnRhdGlvbiBmb2xsb3dzIHRoZSBURiBjKysgY3VkYSBpbXBsZW1lbnRhdGlvbjpcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vdGVuc29yZmxvdy90ZW5zb3JmbG93L2Jsb2IvbWFzdGVyL3RlbnNvcmZsb3cvY29yZS9rZXJuZWxzL2RpbGF0aW9uX29wc19ncHUuY3UuY2NcbiAgICBjb25zdCB1c2VyQ29kZSA9IGBcbiAgICAgICAke21haW4oJ2luZGV4Jyl9IHtcbiAgICAgICAgIGlmIChpbmRleCA8IHVuaWZvcm1zLmR5U2l6ZSkge1xuICAgICAgICAgICBsZXQgY29vcmRzID0gZ2V0RHlDb29yZHNGcm9tSW5kZXgoaW5kZXgpO1xuICAgICAgICAgICBsZXQgYiA9IGNvb3Jkc1swXTtcbiAgICAgICAgICAgbGV0IHIgPSBjb29yZHNbMV07XG4gICAgICAgICAgIGxldCBjID0gY29vcmRzWzJdO1xuICAgICAgICAgICBsZXQgZCA9IGNvb3Jkc1szXTtcblxuICAgICAgICAgICBsZXQgZHlDb3JuZXIgPSB2ZWMyPGkzMj4ociwgYykgKiB1bmlmb3Jtcy5zdHJpZGVzIC0gdW5pZm9ybXMucGFkcztcbiAgICAgICAgICAgdmFyIGN1clZhbCA9IC0zLjRlMzg7ICAvLyBuZWdfaW5maW5pdHlcbiAgICAgICAgICAgdmFyIHhSTWF4ID0gMDtcbiAgICAgICAgICAgdmFyIHhDTWF4ID0gMDtcblxuICAgICAgICAgICAvLyBJbiB0aGUgY2FzZSBvZiBtdWx0aXBsZSBhcmdtYXggYnJhbmNoZXMsIHdlIG9ubHkgYmFjay1wcm9wYWdhdGVcbiAgICAgICAgICAgLy8gYWxvbmcgdGhlIGxhc3QgYnJhbmNoLCBpLmUuLCB0aGUgb25lIHdpdGggbGFyZ2VzdCB2YWx1ZSBvZlxuICAgICAgICAgICAvLyAnd1IgKiB1bmlmb3Jtcy5maWx0ZXJEaW1zWzFdICsgd0MnLCBzaW1pbGFybHkgdG8gdGhlIG1heC1wb29saW5nXG4gICAgICAgICAgIC8vIGJhY2t3YXJkIHJvdXRpbmVzLlxuICAgICAgICAgICBmb3IgKHZhciB3UiA9IDA7IHdSIDwgdW5pZm9ybXMuZmlsdGVyRGltc1swXTsgd1IrKykge1xuICAgICAgICAgICAgIGxldCB4UiA9IGR5Q29ybmVyLnggKyB3UiAqIHVuaWZvcm1zLmRpbGF0aW9uc1swXTtcblxuICAgICAgICAgICAgIGlmICh4UiA+PSAwICYmIHhSIDwgdW5pZm9ybXMueFNoYXBlWzFdKSB7XG4gICAgICAgICAgICAgICBmb3IgKHZhciB3QyA9IDA7IHdDIDwgdW5pZm9ybXMuZmlsdGVyRGltc1sxXTsgd0MrKykge1xuICAgICAgICAgICAgICAgICBsZXQgeEMgPSBkeUNvcm5lci55ICsgd0MgKiB1bmlmb3Jtcy5kaWxhdGlvbnNbMV07XG5cbiAgICAgICAgICAgICAgICAgaWYgKHhDID49IDAgJiYgeEMgPCB1bmlmb3Jtcy54U2hhcGVbMl0pIHtcbiAgICAgICAgICAgICAgICAgICBsZXQgdmFsID0gZ2V0WChiLCB4UiwgeEMsIGQpICsgZ2V0Vyh3Uiwgd0MsIGQpO1xuICAgICAgICAgICAgICAgICAgIGlmICh2YWwgPiBjdXJWYWwpIHtcbiAgICAgICAgICAgICAgICAgICAgIGN1clZhbCA9IHZhbDtcbiAgICAgICAgICAgICAgICAgICAgIHhSTWF4ID0geFI7XG4gICAgICAgICAgICAgICAgICAgICB4Q01heCA9IHhDO1xuICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgIH1cbiAgICAgICAgICAgfVxuXG4gICAgICAgICAgIGxldCBmbGF0SW5kZXhJbiA9IGQgKyB1bmlmb3Jtcy54U2hhcGVbM10gKlxuICAgICAgICAgICAgICAgKHhDTWF4ICsgdW5pZm9ybXMueFNoYXBlWzJdICogKHhSTWF4ICsgdW5pZm9ybXMueFNoYXBlWzFdICogYikpO1xuICAgICAgICAgICBsZXQgdmFsdWUgPSBnZXREeShiLCByLCBjLCBkKTtcbiAgICAgICAgICAgJHtcbiAgICAgICAgYXRvbWljQWRkU25pcHBldChcbiAgICAgICAgICAgICcmcmVzdWx0W2ZsYXRJbmRleEluXScsICd2YWx1ZScsIHRoaXMudHlwZSBhcyAnZmxvYXQzMicgfCAnaW50MzInKX1cbiAgICAgICAgIH1cbiAgICAgICB9XG4gICAgIGA7XG4gICAgcmV0dXJuIHVzZXJDb2RlO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBEaWxhdGlvbjJEQmFja3Byb3BGaWx0ZXJQcm9ncmFtIGltcGxlbWVudHMgV2ViR1BVUHJvZ3JhbSB7XG4gIG91dHB1dFNoYXBlOiBudW1iZXJbXTtcbiAgc2hhZGVyS2V5OiBzdHJpbmc7XG4gIGRpc3BhdGNoTGF5b3V0OiB7eDogbnVtYmVyW119O1xuICBkaXNwYXRjaDogW251bWJlciwgbnVtYmVyLCBudW1iZXJdO1xuICB2YXJpYWJsZU5hbWVzID0gWyd4JywgJ3cnLCAnZHknXTtcbiAgdW5pZm9ybXMgPVxuICAgICAgJ2ZpbHRlckRpbXM6IHZlYzI8aTMyPiwgcGFkczogdmVjMjxpMzI+LCBzdHJpZGVzOiB2ZWMyPGkzMj4sIGRpbGF0aW9uczogdmVjMjxpMzI+LCBkeVNpemU6IGkzMiwnO1xuICB3b3JrZ3JvdXBTaXplOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl0gPSBbNjQsIDEsIDFdO1xuICBhdG9taWMgPSB0cnVlO1xuICB0eXBlOiBEYXRhVHlwZTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICAgIGNvbnZJbmZvOiBiYWNrZW5kX3V0aWwuQ29udjJESW5mbywgc2hhcGU6IG51bWJlcltdLFxuICAgICAgb3V0cHV0RHR5cGU6IERhdGFUeXBlKSB7XG4gICAgdGhpcy5vdXRwdXRTaGFwZSA9IGNvbnZJbmZvLmZpbHRlclNoYXBlO1xuICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQgPSBmbGF0RGlzcGF0Y2hMYXlvdXQoY29udkluZm8ub3V0U2hhcGUpO1xuICAgIHRoaXMuZGlzcGF0Y2ggPSBjb21wdXRlRGlzcGF0Y2goXG4gICAgICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQsIGNvbnZJbmZvLm91dFNoYXBlLCB0aGlzLndvcmtncm91cFNpemUpO1xuXG4gICAgaWYgKG91dHB1dER0eXBlICE9PSAnZmxvYXQzMicgJiYgb3V0cHV0RHR5cGUgIT09ICdpbnQzMicpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRGlsYXRpb24yREJhY2twcm9wRmlsdGVyIG9ubHkgc3VwcG9ydHMgZmxvYXQzMiBhbmQgaW50MzJcbiAgICAgICAgICB0eXBlcywgZG9lcyBub3Qgc3VwcG9ydCAke291dHB1dER0eXBlfSB0eXBlLmApO1xuICAgIH1cbiAgICB0aGlzLnR5cGUgPSBvdXRwdXREdHlwZTtcbiAgICB0aGlzLnNoYWRlcktleSA9ICdkaWxhdGlvbjJEQmFja3Byb3BGaWx0ZXInO1xuICB9XG5cbiAgZ2V0VXNlckNvZGUoKTogc3RyaW5nIHtcbiAgICAvLyBUaGlzIGltcGxlbWVudGF0aW9uIGZvbGxvd3MgdGhlIFRGIGMrKyBjdWRhIGltcGxlbWVudGF0aW9uOlxuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS90ZW5zb3JmbG93L3RlbnNvcmZsb3cvYmxvYi9tYXN0ZXIvdGVuc29yZmxvdy9jb3JlL2tlcm5lbHMvZGlsYXRpb25fb3BzX2dwdS5jdS5jY1xuICAgIGNvbnN0IHVzZXJDb2RlID0gYFxuICAgICAgICR7bWFpbignaW5kZXgnKX0ge1xuICAgICAgICAgaWYgKGluZGV4IDwgdW5pZm9ybXMuZHlTaXplKSB7XG4gICAgICAgICAgIGxldCBjb29yZHMgPSBnZXREeUNvb3Jkc0Zyb21JbmRleChpbmRleCk7XG4gICAgICAgICAgIGxldCBiID0gY29vcmRzWzBdO1xuICAgICAgICAgICBsZXQgciA9IGNvb3Jkc1sxXTtcbiAgICAgICAgICAgbGV0IGMgPSBjb29yZHNbMl07XG4gICAgICAgICAgIGxldCBkID0gY29vcmRzWzNdO1xuXG4gICAgICAgICAgIGxldCBkeUNvcm5lciA9IHZlYzI8aTMyPihyLCBjKSAqIHVuaWZvcm1zLnN0cmlkZXMgLSB1bmlmb3Jtcy5wYWRzO1xuICAgICAgICAgICB2YXIgY3VyVmFsID0gLTMuNGUzODsgIC8vIG5lZ19pbmZpbml0eVxuICAgICAgICAgICB2YXIgd1JNYXggPSAwO1xuICAgICAgICAgICB2YXIgd0NNYXggPSAwO1xuXG4gICAgICAgICAgIC8vIEluIHRoZSBjYXNlIG9mIG11bHRpcGxlIGFyZ21heCBicmFuY2hlcywgd2Ugb25seSBiYWNrLXByb3BhZ2F0ZVxuICAgICAgICAgICAvLyBhbG9uZyB0aGUgbGFzdCBicmFuY2gsIGkuZS4sIHRoZSBvbmUgd2l0aCBsYXJnZXN0IHZhbHVlIG9mXG4gICAgICAgICAgIC8vICd3UiAqIHVuaWZvcm1zLmZpbHRlckRpbXNbMV0gKyB3QycsIHNpbWlsYXJseSB0byB0aGUgbWF4LXBvb2xpbmdcbiAgICAgICAgICAgLy8gYmFja3dhcmQgcm91dGluZXMuXG4gICAgICAgICAgIGZvciAodmFyIHdSID0gMDsgd1IgPCB1bmlmb3Jtcy5maWx0ZXJEaW1zWzBdOyB3UisrKSB7XG4gICAgICAgICAgICAgbGV0IHhSID0gZHlDb3JuZXIueCArIHdSICogdW5pZm9ybXMuZGlsYXRpb25zWzBdO1xuXG4gICAgICAgICAgICAgaWYgKHhSID49IDAgJiYgeFIgPCB1bmlmb3Jtcy54U2hhcGVbMV0pIHtcbiAgICAgICAgICAgICAgIGZvciAodmFyIHdDID0gMDsgd0MgPCB1bmlmb3Jtcy5maWx0ZXJEaW1zWzFdOyB3QysrKSB7XG4gICAgICAgICAgICAgICAgIGxldCB4QyA9IGR5Q29ybmVyLnkgKyB3QyAqIHVuaWZvcm1zLmRpbGF0aW9uc1sxXTtcblxuICAgICAgICAgICAgICAgICBpZiAoeEMgPj0gMCAmJiB4QyA8IHVuaWZvcm1zLnhTaGFwZVsyXSkge1xuICAgICAgICAgICAgICAgICAgIGxldCB2YWwgPSBnZXRYKGIsIHhSLCB4QywgZCkgKyBnZXRXKHdSLCB3QywgZCk7XG4gICAgICAgICAgICAgICAgICAgaWYgKHZhbCA+IGN1clZhbCkge1xuICAgICAgICAgICAgICAgICAgICAgY3VyVmFsID0gdmFsO1xuICAgICAgICAgICAgICAgICAgICAgd1JNYXggPSB3UjtcbiAgICAgICAgICAgICAgICAgICAgIHdDTWF4ID0gd0M7XG4gICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgfVxuICAgICAgICAgICB9XG5cbiAgICAgICAgICAgbGV0IGZsYXRJbmRleEluID0gZCArIHVuaWZvcm1zLndTaGFwZVsyXSAqICh3Q01heCArIHdSTWF4ICogdW5pZm9ybXMud1NoYXBlWzFdKTtcbiAgICAgICAgICAgbGV0IHZhbHVlID0gZ2V0RHkoYiwgciwgYywgZCk7XG4gICAgICAgICAgICR7XG4gICAgICAgIGF0b21pY0FkZFNuaXBwZXQoXG4gICAgICAgICAgICAnJnJlc3VsdFtmbGF0SW5kZXhJbl0nLCAndmFsdWUnLCB0aGlzLnR5cGUgYXMgJ2Zsb2F0MzInIHwgJ2ludDMyJyl9XG4gICAgICAgICB9XG4gICAgICAgfVxuICAgICBgO1xuICAgIHJldHVybiB1c2VyQ29kZTtcbiAgfVxufVxuIl19","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Dilation2DBackpropFilter, util } from '@tensorflow/tfjs-core';\nimport { Dilation2DBackpropFilterProgram } from '../dilation_backprop_webgpu';\nimport { fill } from './Fill';\nexport function dilation2DBackpropFilter(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, filter, dy } = inputs;\n    const { strides, pad, dilations } = attrs;\n    const convInfo = backend_util.computeDilation2DInfo(x.shape, filter.shape, strides, pad, 'NHWC' /* dataFormat */, dilations);\n    const dtype = filter.dtype;\n    const program = new Dilation2DBackpropFilterProgram(convInfo, filter.shape, dtype);\n    const uniformData = [\n        { type: 'int32', data: [convInfo.filterHeight, convInfo.filterWidth] },\n        { type: 'int32', data: [convInfo.padInfo.top, convInfo.padInfo.left] },\n        { type: 'int32', data: [convInfo.strideHeight, convInfo.strideWidth] },\n        { type: 'int32', data: [convInfo.dilationHeight, convInfo.dilationWidth] },\n        { type: 'int32', data: [util.sizeFromShape(convInfo.outShape)] }\n    ];\n    const output = fill({ backend, attrs: { shape: filter.shape, value: 0, dtype } });\n    return backend.runWebGPUProgram(program, [x, filter, dy], dtype, uniformData, output);\n}\nexport const dilation2DBackpropFilterConfig = {\n    kernelName: Dilation2DBackpropFilter,\n    backendName: 'webgpu',\n    kernelFunc: dilation2DBackpropFilter\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGlsYXRpb24yREJhY2twcm9wRmlsdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9EaWxhdGlvbjJEQmFja3Byb3BGaWx0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLFlBQVksRUFBbUIsd0JBQXdCLEVBQXdFLElBQUksRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRzFLLE9BQU8sRUFBQywrQkFBK0IsRUFBQyxNQUFNLDZCQUE2QixDQUFDO0FBQzVFLE9BQU8sRUFBQyxJQUFJLEVBQUMsTUFBTSxRQUFRLENBQUM7QUFFNUIsTUFBTSxVQUFVLHdCQUF3QixDQUFDLElBSXhDO0lBQ0MsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ3RDLE1BQU0sRUFBQyxDQUFDLEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUMvQixNQUFNLEVBQUMsT0FBTyxFQUFFLEdBQUcsRUFBRSxTQUFTLEVBQUMsR0FBRyxLQUFLLENBQUM7SUFFeEMsTUFBTSxRQUFRLEdBQUcsWUFBWSxDQUFDLHFCQUFxQixDQUMvQyxDQUFDLENBQUMsS0FBeUMsRUFDM0MsTUFBTSxDQUFDLEtBQWlDLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFDdEQsTUFBTSxDQUFDLGdCQUFnQixFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBRXhDLE1BQU0sS0FBSyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUM7SUFDM0IsTUFBTSxPQUFPLEdBQ1QsSUFBSSwrQkFBK0IsQ0FBQyxRQUFRLEVBQUUsTUFBTSxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQztJQUN2RSxNQUFNLFdBQVcsR0FBRztRQUNsQixFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLFlBQVksRUFBRSxRQUFRLENBQUMsV0FBVyxDQUFDLEVBQUM7UUFDcEUsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLFFBQVEsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUM7UUFDcEUsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxZQUFZLEVBQUUsUUFBUSxDQUFDLFdBQVcsQ0FBQyxFQUFDO1FBQ3BFLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsY0FBYyxFQUFFLFFBQVEsQ0FBQyxhQUFhLENBQUMsRUFBQztRQUN4RSxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBQztLQUMvRCxDQUFDO0lBQ0YsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLEVBQUMsT0FBTyxFQUFFLEtBQUssRUFBRSxFQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFDLEVBQUMsQ0FBQyxDQUFDO0lBQzlFLE9BQU8sT0FBTyxDQUFDLGdCQUFnQixDQUMzQixPQUFPLEVBQUUsQ0FBQyxDQUFDLEVBQUUsTUFBTSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDNUQsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLDhCQUE4QixHQUFpQjtJQUMxRCxVQUFVLEVBQUUsd0JBQXdCO0lBQ3BDLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSx3QkFBaUQ7Q0FDOUQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIzIEdvb2dsZSBMTEMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtiYWNrZW5kX3V0aWwsIERpbGF0aW9uMkRBdHRycywgRGlsYXRpb24yREJhY2twcm9wRmlsdGVyLCBEaWxhdGlvbjJEQmFja3Byb3BGaWx0ZXJJbnB1dHMsIEtlcm5lbENvbmZpZywgS2VybmVsRnVuYywgVGVuc29ySW5mbywgdXRpbH0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge0RpbGF0aW9uMkRCYWNrcHJvcEZpbHRlclByb2dyYW19IGZyb20gJy4uL2RpbGF0aW9uX2JhY2twcm9wX3dlYmdwdSc7XG5pbXBvcnQge2ZpbGx9IGZyb20gJy4vRmlsbCc7XG5cbmV4cG9ydCBmdW5jdGlvbiBkaWxhdGlvbjJEQmFja3Byb3BGaWx0ZXIoYXJnczoge1xuICBpbnB1dHM6IERpbGF0aW9uMkRCYWNrcHJvcEZpbHRlcklucHV0cyxcbiAgYXR0cnM6IERpbGF0aW9uMkRBdHRycyxcbiAgYmFja2VuZDogV2ViR1BVQmFja2VuZFxufSk6IFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7eCwgZmlsdGVyLCBkeX0gPSBpbnB1dHM7XG4gIGNvbnN0IHtzdHJpZGVzLCBwYWQsIGRpbGF0aW9uc30gPSBhdHRycztcblxuICBjb25zdCBjb252SW5mbyA9IGJhY2tlbmRfdXRpbC5jb21wdXRlRGlsYXRpb24yREluZm8oXG4gICAgICB4LnNoYXBlIGFzIFtudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdLFxuICAgICAgZmlsdGVyLnNoYXBlIGFzIFtudW1iZXIsIG51bWJlciwgbnVtYmVyXSwgc3RyaWRlcywgcGFkLFxuICAgICAgJ05IV0MnIC8qIGRhdGFGb3JtYXQgKi8sIGRpbGF0aW9ucyk7XG5cbiAgY29uc3QgZHR5cGUgPSBmaWx0ZXIuZHR5cGU7XG4gIGNvbnN0IHByb2dyYW0gPVxuICAgICAgbmV3IERpbGF0aW9uMkRCYWNrcHJvcEZpbHRlclByb2dyYW0oY29udkluZm8sIGZpbHRlci5zaGFwZSwgZHR5cGUpO1xuICBjb25zdCB1bmlmb3JtRGF0YSA9IFtcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogW2NvbnZJbmZvLmZpbHRlckhlaWdodCwgY29udkluZm8uZmlsdGVyV2lkdGhdfSxcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogW2NvbnZJbmZvLnBhZEluZm8udG9wLCBjb252SW5mby5wYWRJbmZvLmxlZnRdfSxcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogW2NvbnZJbmZvLnN0cmlkZUhlaWdodCwgY29udkluZm8uc3RyaWRlV2lkdGhdfSxcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogW2NvbnZJbmZvLmRpbGF0aW9uSGVpZ2h0LCBjb252SW5mby5kaWxhdGlvbldpZHRoXX0sXG4gICAge3R5cGU6ICdpbnQzMicsIGRhdGE6IFt1dGlsLnNpemVGcm9tU2hhcGUoY29udkluZm8ub3V0U2hhcGUpXX1cbiAgXTtcbiAgY29uc3Qgb3V0cHV0ID0gZmlsbCh7YmFja2VuZCwgYXR0cnM6IHtzaGFwZTogZmlsdGVyLnNoYXBlLCB2YWx1ZTogMCwgZHR5cGV9fSk7XG4gIHJldHVybiBiYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0oXG4gICAgICBwcm9ncmFtLCBbeCwgZmlsdGVyLCBkeV0sIGR0eXBlLCB1bmlmb3JtRGF0YSwgb3V0cHV0KTtcbn1cblxuZXhwb3J0IGNvbnN0IGRpbGF0aW9uMkRCYWNrcHJvcEZpbHRlckNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBEaWxhdGlvbjJEQmFja3Byb3BGaWx0ZXIsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogZGlsYXRpb24yREJhY2twcm9wRmlsdGVyIGFzIHVua25vd24gYXMgS2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Dilation2DBackpropInput, util } from '@tensorflow/tfjs-core';\nimport { Dilation2DBackpropInputProgram } from '../dilation_backprop_webgpu';\nimport { fill } from './Fill';\nexport function dilation2DBackpropInput(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, filter, dy } = inputs;\n    const { strides, pad, dilations } = attrs;\n    const convInfo = backend_util.computeDilation2DInfo(x.shape, filter.shape, strides, pad, 'NHWC' /* dataFormat */, dilations);\n    const dtype = x.dtype;\n    const program = new Dilation2DBackpropInputProgram(convInfo, dtype);\n    const uniformData = [\n        { type: 'int32', data: [convInfo.filterHeight, convInfo.filterWidth] },\n        { type: 'int32', data: [convInfo.padInfo.top, convInfo.padInfo.left] },\n        { type: 'int32', data: [convInfo.strideHeight, convInfo.strideWidth] },\n        { type: 'int32', data: [convInfo.dilationHeight, convInfo.dilationWidth] },\n        { type: 'int32', data: [util.sizeFromShape(convInfo.outShape)] }\n    ];\n    const output = fill({ backend, attrs: { shape: convInfo.inShape, value: 0, dtype } });\n    return backend.runWebGPUProgram(program, [x, filter, dy], dtype, uniformData, output);\n}\nexport const dilation2DBackpropInputConfig = {\n    kernelName: Dilation2DBackpropInput,\n    backendName: 'webgpu',\n    kernelFunc: dilation2DBackpropInput\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGlsYXRpb24yREJhY2twcm9wSW5wdXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL0RpbGF0aW9uMkRCYWNrcHJvcElucHV0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxZQUFZLEVBQW1CLHVCQUF1QixFQUF1RSxJQUFJLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUd4SyxPQUFPLEVBQUMsOEJBQThCLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQztBQUMzRSxPQUFPLEVBQUMsSUFBSSxFQUFDLE1BQU0sUUFBUSxDQUFDO0FBRTVCLE1BQU0sVUFBVSx1QkFBdUIsQ0FBQyxJQUl2QztJQUNDLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QyxNQUFNLEVBQUMsQ0FBQyxFQUFFLE1BQU0sRUFBRSxFQUFFLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFDL0IsTUFBTSxFQUFDLE9BQU8sRUFBRSxHQUFHLEVBQUUsU0FBUyxFQUFDLEdBQUcsS0FBSyxDQUFDO0lBRXhDLE1BQU0sUUFBUSxHQUFHLFlBQVksQ0FBQyxxQkFBcUIsQ0FDL0MsQ0FBQyxDQUFDLEtBQXlDLEVBQzNDLE1BQU0sQ0FBQyxLQUFpQyxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQ3RELE1BQU0sQ0FBQyxnQkFBZ0IsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUV4QyxNQUFNLEtBQUssR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDO0lBQ3RCLE1BQU0sT0FBTyxHQUFHLElBQUksOEJBQThCLENBQUMsUUFBUSxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3BFLE1BQU0sV0FBVyxHQUFHO1FBQ2xCLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsWUFBWSxFQUFFLFFBQVEsQ0FBQyxXQUFXLENBQUMsRUFBQztRQUNwRSxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBQztRQUNwRSxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLFlBQVksRUFBRSxRQUFRLENBQUMsV0FBVyxDQUFDLEVBQUM7UUFDcEUsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxjQUFjLEVBQUUsUUFBUSxDQUFDLGFBQWEsQ0FBQyxFQUFDO1FBQ3hFLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFDO0tBQy9ELENBQUM7SUFDRixNQUFNLE1BQU0sR0FDUixJQUFJLENBQUMsRUFBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLEVBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxLQUFLLEVBQUMsRUFBQyxDQUFDLENBQUM7SUFDdkUsT0FBTyxPQUFPLENBQUMsZ0JBQWdCLENBQzNCLE9BQU8sRUFBRSxDQUFDLENBQUMsRUFBRSxNQUFNLEVBQUUsRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUM1RCxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sNkJBQTZCLEdBQWlCO0lBQ3pELFVBQVUsRUFBRSx1QkFBdUI7SUFDbkMsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLHVCQUFnRDtDQUM3RCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjMgR29vZ2xlIExMQy5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge2JhY2tlbmRfdXRpbCwgRGlsYXRpb24yREF0dHJzLCBEaWxhdGlvbjJEQmFja3Byb3BJbnB1dCwgRGlsYXRpb24yREJhY2twcm9wSW5wdXRJbnB1dHMsIEtlcm5lbENvbmZpZywgS2VybmVsRnVuYywgVGVuc29ySW5mbywgdXRpbH0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge0RpbGF0aW9uMkRCYWNrcHJvcElucHV0UHJvZ3JhbX0gZnJvbSAnLi4vZGlsYXRpb25fYmFja3Byb3Bfd2ViZ3B1JztcbmltcG9ydCB7ZmlsbH0gZnJvbSAnLi9GaWxsJztcblxuZXhwb3J0IGZ1bmN0aW9uIGRpbGF0aW9uMkRCYWNrcHJvcElucHV0KGFyZ3M6IHtcbiAgaW5wdXRzOiBEaWxhdGlvbjJEQmFja3Byb3BJbnB1dElucHV0cyxcbiAgYXR0cnM6IERpbGF0aW9uMkRBdHRycyxcbiAgYmFja2VuZDogV2ViR1BVQmFja2VuZFxufSk6IFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7eCwgZmlsdGVyLCBkeX0gPSBpbnB1dHM7XG4gIGNvbnN0IHtzdHJpZGVzLCBwYWQsIGRpbGF0aW9uc30gPSBhdHRycztcblxuICBjb25zdCBjb252SW5mbyA9IGJhY2tlbmRfdXRpbC5jb21wdXRlRGlsYXRpb24yREluZm8oXG4gICAgICB4LnNoYXBlIGFzIFtudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdLFxuICAgICAgZmlsdGVyLnNoYXBlIGFzIFtudW1iZXIsIG51bWJlciwgbnVtYmVyXSwgc3RyaWRlcywgcGFkLFxuICAgICAgJ05IV0MnIC8qIGRhdGFGb3JtYXQgKi8sIGRpbGF0aW9ucyk7XG5cbiAgY29uc3QgZHR5cGUgPSB4LmR0eXBlO1xuICBjb25zdCBwcm9ncmFtID0gbmV3IERpbGF0aW9uMkRCYWNrcHJvcElucHV0UHJvZ3JhbShjb252SW5mbywgZHR5cGUpO1xuICBjb25zdCB1bmlmb3JtRGF0YSA9IFtcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogW2NvbnZJbmZvLmZpbHRlckhlaWdodCwgY29udkluZm8uZmlsdGVyV2lkdGhdfSxcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogW2NvbnZJbmZvLnBhZEluZm8udG9wLCBjb252SW5mby5wYWRJbmZvLmxlZnRdfSxcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogW2NvbnZJbmZvLnN0cmlkZUhlaWdodCwgY29udkluZm8uc3RyaWRlV2lkdGhdfSxcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogW2NvbnZJbmZvLmRpbGF0aW9uSGVpZ2h0LCBjb252SW5mby5kaWxhdGlvbldpZHRoXX0sXG4gICAge3R5cGU6ICdpbnQzMicsIGRhdGE6IFt1dGlsLnNpemVGcm9tU2hhcGUoY29udkluZm8ub3V0U2hhcGUpXX1cbiAgXTtcbiAgY29uc3Qgb3V0cHV0ID1cbiAgICAgIGZpbGwoe2JhY2tlbmQsIGF0dHJzOiB7c2hhcGU6IGNvbnZJbmZvLmluU2hhcGUsIHZhbHVlOiAwLCBkdHlwZX19KTtcbiAgcmV0dXJuIGJhY2tlbmQucnVuV2ViR1BVUHJvZ3JhbShcbiAgICAgIHByb2dyYW0sIFt4LCBmaWx0ZXIsIGR5XSwgZHR5cGUsIHVuaWZvcm1EYXRhLCBvdXRwdXQpO1xufVxuXG5leHBvcnQgY29uc3QgZGlsYXRpb24yREJhY2twcm9wSW5wdXRDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogRGlsYXRpb24yREJhY2twcm9wSW5wdXQsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogZGlsYXRpb24yREJhY2twcm9wSW5wdXQgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main, PixelsOpType } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class DrawProgram {\n    constructor(outShape, type, textureFormat) {\n        this.variableNames = ['Image'];\n        this.uniforms = 'alpha: f32,';\n        this.workgroupSize = [64, 1, 1];\n        this.pixelsOpType = PixelsOpType.DRAW;\n        this.size = true;\n        this.outputShape = outShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.type = type;\n        this.textureFormat = textureFormat;\n        this.shaderKey = `draw_${type}_${textureFormat}`;\n    }\n    getUserCode() {\n        let calculateResult;\n        const value = this.type === 'float32' ? 'value' : 'value / 255.0';\n        calculateResult = `\n      if (uniforms.numChannels == 1) {\n        rgba[0] = ${value};\n        rgba[1] = ${value};\n        rgba[2] = ${value};\n      } else {\n        rgba[d] = ${value};\n      }`;\n        const userCode = `\n       @group(0) @binding(0) var outImage : texture_storage_2d<${this.textureFormat}, write>;\n       ${main('index')} {\n         if (index < uniforms.size) {\n           var rgba = vec4<f32>(0.0, 0.0, 0.0, uniforms.alpha);\n           for (var d = 0; d < uniforms.numChannels; d = d + 1) {\n             let value = f32(inBuf[index * uniforms.numChannels + d]);\n             ${calculateResult}\n           }\n           rgba.x = rgba.x * rgba.w;\n           rgba.y = rgba.y * rgba.w;\n           rgba.z = rgba.z * rgba.w;\n           let coords = getCoordsFromIndex(index);\n           textureStore(outImage, vec2<i32>(coords.yx), rgba);\n         }\n       }\n      `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhd193ZWJncHUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9kcmF3X3dlYmdwdS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFJSCxPQUFPLEVBQUMsbUJBQW1CLElBQUksSUFBSSxFQUFFLFlBQVksRUFBZ0IsTUFBTSxrQkFBa0IsQ0FBQztBQUMxRixPQUFPLEVBQUMsZUFBZSxFQUFFLGtCQUFrQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRWxFLE1BQU0sT0FBTyxXQUFXO0lBYXRCLFlBQ0ksUUFBa0IsRUFBRSxJQUFjLEVBQUUsYUFBK0I7UUFidkUsa0JBQWEsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzFCLGFBQVEsR0FBRyxhQUFhLENBQUM7UUFLekIsa0JBQWEsR0FBNkIsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBR3JELGlCQUFZLEdBQUcsWUFBWSxDQUFDLElBQUksQ0FBQztRQUNqQyxTQUFJLEdBQUcsSUFBSSxDQUFDO1FBSVYsSUFBSSxDQUFDLFdBQVcsR0FBRyxRQUFRLENBQUM7UUFDNUIsSUFBSSxDQUFDLGNBQWMsR0FBRyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxlQUFlLENBQzNCLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDL0QsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLGFBQWEsR0FBRyxhQUFhLENBQUM7UUFDbkMsSUFBSSxDQUFDLFNBQVMsR0FBRyxRQUFRLElBQUksSUFBSSxhQUFhLEVBQUUsQ0FBQztJQUNuRCxDQUFDO0lBRUQsV0FBVztRQUNULElBQUksZUFBZSxDQUFDO1FBQ3BCLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxJQUFJLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLGVBQWUsQ0FBQztRQUNsRSxlQUFlLEdBQUc7O29CQUVGLEtBQUs7b0JBQ0wsS0FBSztvQkFDTCxLQUFLOztvQkFFTCxLQUFLO1FBQ2pCLENBQUM7UUFFTCxNQUFNLFFBQVEsR0FBRztpRUFFYixJQUFJLENBQUMsYUFBYTtTQUNqQixJQUFJLENBQUMsT0FBTyxDQUFDOzs7OztlQUtQLGVBQWU7Ozs7Ozs7OztPQVN2QixDQUFDO1FBQ0osT0FBTyxRQUFRLENBQUM7SUFDbEIsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjMgR29vZ2xlIExMQy5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0RhdGFUeXBlfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge2dldE1haW5IZWFkZXJTdHJpbmcgYXMgbWFpbiwgUGl4ZWxzT3BUeXBlLCBXZWJHUFVQcm9ncmFtfSBmcm9tICcuL3dlYmdwdV9wcm9ncmFtJztcbmltcG9ydCB7Y29tcHV0ZURpc3BhdGNoLCBmbGF0RGlzcGF0Y2hMYXlvdXR9IGZyb20gJy4vd2ViZ3B1X3V0aWwnO1xuXG5leHBvcnQgY2xhc3MgRHJhd1Byb2dyYW0gaW1wbGVtZW50cyBXZWJHUFVQcm9ncmFtIHtcbiAgdmFyaWFibGVOYW1lcyA9IFsnSW1hZ2UnXTtcbiAgdW5pZm9ybXMgPSAnYWxwaGE6IGYzMiwnO1xuICBvdXRwdXRTaGFwZTogbnVtYmVyW107XG4gIHNoYWRlcktleTogc3RyaW5nO1xuICBkaXNwYXRjaExheW91dDoge3g6IG51bWJlcltdfTtcbiAgZGlzcGF0Y2g6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXTtcbiAgd29ya2dyb3VwU2l6ZTogW251bWJlciwgbnVtYmVyLCBudW1iZXJdID0gWzY0LCAxLCAxXTtcbiAgdHlwZTogRGF0YVR5cGU7XG4gIHRleHR1cmVGb3JtYXQ6IEdQVVRleHR1cmVGb3JtYXQ7XG4gIHBpeGVsc09wVHlwZSA9IFBpeGVsc09wVHlwZS5EUkFXO1xuICBzaXplID0gdHJ1ZTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICAgIG91dFNoYXBlOiBudW1iZXJbXSwgdHlwZTogRGF0YVR5cGUsIHRleHR1cmVGb3JtYXQ6IEdQVVRleHR1cmVGb3JtYXQpIHtcbiAgICB0aGlzLm91dHB1dFNoYXBlID0gb3V0U2hhcGU7XG4gICAgdGhpcy5kaXNwYXRjaExheW91dCA9IGZsYXREaXNwYXRjaExheW91dCh0aGlzLm91dHB1dFNoYXBlKTtcbiAgICB0aGlzLmRpc3BhdGNoID0gY29tcHV0ZURpc3BhdGNoKFxuICAgICAgICB0aGlzLmRpc3BhdGNoTGF5b3V0LCB0aGlzLm91dHB1dFNoYXBlLCB0aGlzLndvcmtncm91cFNpemUpO1xuICAgIHRoaXMudHlwZSA9IHR5cGU7XG4gICAgdGhpcy50ZXh0dXJlRm9ybWF0ID0gdGV4dHVyZUZvcm1hdDtcbiAgICB0aGlzLnNoYWRlcktleSA9IGBkcmF3XyR7dHlwZX1fJHt0ZXh0dXJlRm9ybWF0fWA7XG4gIH1cblxuICBnZXRVc2VyQ29kZSgpOiBzdHJpbmcge1xuICAgIGxldCBjYWxjdWxhdGVSZXN1bHQ7XG4gICAgY29uc3QgdmFsdWUgPSB0aGlzLnR5cGUgPT09ICdmbG9hdDMyJyA/ICd2YWx1ZScgOiAndmFsdWUgLyAyNTUuMCc7XG4gICAgY2FsY3VsYXRlUmVzdWx0ID0gYFxuICAgICAgaWYgKHVuaWZvcm1zLm51bUNoYW5uZWxzID09IDEpIHtcbiAgICAgICAgcmdiYVswXSA9ICR7dmFsdWV9O1xuICAgICAgICByZ2JhWzFdID0gJHt2YWx1ZX07XG4gICAgICAgIHJnYmFbMl0gPSAke3ZhbHVlfTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJnYmFbZF0gPSAke3ZhbHVlfTtcbiAgICAgIH1gO1xuXG4gICAgY29uc3QgdXNlckNvZGUgPSBgXG4gICAgICAgQGdyb3VwKDApIEBiaW5kaW5nKDApIHZhciBvdXRJbWFnZSA6IHRleHR1cmVfc3RvcmFnZV8yZDwke1xuICAgICAgICB0aGlzLnRleHR1cmVGb3JtYXR9LCB3cml0ZT47XG4gICAgICAgJHttYWluKCdpbmRleCcpfSB7XG4gICAgICAgICBpZiAoaW5kZXggPCB1bmlmb3Jtcy5zaXplKSB7XG4gICAgICAgICAgIHZhciByZ2JhID0gdmVjNDxmMzI+KDAuMCwgMC4wLCAwLjAsIHVuaWZvcm1zLmFscGhhKTtcbiAgICAgICAgICAgZm9yICh2YXIgZCA9IDA7IGQgPCB1bmlmb3Jtcy5udW1DaGFubmVsczsgZCA9IGQgKyAxKSB7XG4gICAgICAgICAgICAgbGV0IHZhbHVlID0gZjMyKGluQnVmW2luZGV4ICogdW5pZm9ybXMubnVtQ2hhbm5lbHMgKyBkXSk7XG4gICAgICAgICAgICAgJHtjYWxjdWxhdGVSZXN1bHR9XG4gICAgICAgICAgIH1cbiAgICAgICAgICAgcmdiYS54ID0gcmdiYS54ICogcmdiYS53O1xuICAgICAgICAgICByZ2JhLnkgPSByZ2JhLnkgKiByZ2JhLnc7XG4gICAgICAgICAgIHJnYmEueiA9IHJnYmEueiAqIHJnYmEudztcbiAgICAgICAgICAgbGV0IGNvb3JkcyA9IGdldENvb3Jkc0Zyb21JbmRleChpbmRleCk7XG4gICAgICAgICAgIHRleHR1cmVTdG9yZShvdXRJbWFnZSwgdmVjMjxpMzI+KGNvb3Jkcy55eCksIHJnYmEpO1xuICAgICAgICAgfVxuICAgICAgIH1cbiAgICAgIGA7XG4gICAgcmV0dXJuIHVzZXJDb2RlO1xuICB9XG59XG4iXX0=","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use backend file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Draw, } from '@tensorflow/tfjs-core';\nimport { DrawProgram } from '../draw_webgpu';\nexport function draw(args) {\n    const { inputs, backend, attrs } = args;\n    const { image } = inputs;\n    const { canvas, options } = attrs;\n    const [height, width] = image.shape.slice(0, 2);\n    const { imageOptions } = options || {};\n    const alpha = (imageOptions === null || imageOptions === void 0 ? void 0 : imageOptions.alpha) || 1;\n    //  'rgba8unorm' should work on macOS according to\n    //  https://bugs.chromium.org/p/chromium/issues/detail?id=1298618. But\n    //  failed on macOS/M2. So use 'bgra8unorm' first when available.\n    const format = backend.device.features.has('bgra8unorm-storage') ?\n        'bgra8unorm' :\n        'rgba8unorm';\n    const outShape = [height, width];\n    const program = new DrawProgram(outShape, image.dtype, format);\n    canvas.width = width;\n    canvas.height = height;\n    const backendName = 'webgpu';\n    let gpuContext = canvas.getContext(backendName);\n    let canvasWebGPU;\n    if (!gpuContext) {\n        canvasWebGPU = new OffscreenCanvas(width, height);\n        gpuContext = canvasWebGPU.getContext(backendName);\n    }\n    const numChannels = image.shape.length === 3 ? image.shape[2] : 1;\n    gpuContext.configure({\n        device: backend.device,\n        format,\n        usage: GPUTextureUsage.STORAGE_BINDING,\n        alphaMode: 'premultiplied'\n    });\n    const outputDtype = 'int32';\n    const output = backend.makeTensorInfo(outShape, outputDtype);\n    const info = backend.tensorMap.get(output.dataId);\n    info.resource = gpuContext.getCurrentTexture();\n    info.external = true;\n    const uniformData = [{ type: 'uint32', data: [numChannels] }, { type: 'float32', data: [alpha] }];\n    backend.runWebGPUProgram(program, [image], outputDtype, uniformData, output);\n    if (canvasWebGPU) {\n        const canvas2dContext = canvas.getContext('2d');\n        if (!canvas2dContext) {\n            throw new Error(`Please make sure this canvas has only been used for 2d or webgpu context!`);\n        }\n        canvas2dContext.drawImage(canvasWebGPU, 0, 0);\n    }\n    backend.disposeData(output.dataId);\n    return image;\n}\nexport const drawConfig = {\n    kernelName: Draw,\n    backendName: 'webgpu',\n    kernelFunc: draw\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRHJhdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvRHJhdy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFHSCxPQUFPLEVBQUMsSUFBSSxHQUF5QixNQUFNLHVCQUF1QixDQUFDO0FBR25FLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUUzQyxNQUFNLFVBQVUsSUFBSSxDQUNoQixJQUFvRTtJQUV0RSxNQUFNLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFDdEMsTUFBTSxFQUFDLEtBQUssRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUN2QixNQUFNLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBQyxHQUFHLEtBQUssQ0FBQztJQUNoQyxNQUFNLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNoRCxNQUFNLEVBQUMsWUFBWSxFQUFDLEdBQUcsT0FBTyxJQUFJLEVBQUUsQ0FBQztJQUNyQyxNQUFNLEtBQUssR0FBRyxDQUFBLFlBQVksYUFBWixZQUFZLHVCQUFaLFlBQVksQ0FBRyxLQUFLLEtBQUksQ0FBQyxDQUFDO0lBRXhDLGtEQUFrRDtJQUNsRCxzRUFBc0U7SUFDdEUsaUVBQWlFO0lBQ2pFLE1BQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLENBQUM7UUFDOUQsWUFBWSxDQUFDLENBQUM7UUFDZCxZQUFZLENBQUM7SUFDakIsTUFBTSxRQUFRLEdBQUcsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDakMsTUFBTSxPQUFPLEdBQUcsSUFBSSxXQUFXLENBQUMsUUFBUSxFQUFFLEtBQUssQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDL0QsTUFBTSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7SUFDckIsTUFBTSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7SUFDdkIsTUFBTSxXQUFXLEdBQUcsUUFBUSxDQUFDO0lBQzdCLElBQUksVUFBVSxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDaEQsSUFBSSxZQUFZLENBQUM7SUFDakIsSUFBSSxDQUFDLFVBQVUsRUFBRTtRQUNmLFlBQVksR0FBRyxJQUFJLGVBQWUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDbEQsVUFBVSxHQUFHLFlBQVksQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLENBQUM7S0FDbkQ7SUFDRCxNQUFNLFdBQVcsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNsRSxVQUFVLENBQUMsU0FBUyxDQUFDO1FBQ25CLE1BQU0sRUFBRSxPQUFPLENBQUMsTUFBTTtRQUN0QixNQUFNO1FBQ04sS0FBSyxFQUFFLGVBQWUsQ0FBQyxlQUFlO1FBQ3RDLFNBQVMsRUFBRSxlQUFlO0tBQzNCLENBQUMsQ0FBQztJQUVILE1BQU0sV0FBVyxHQUFHLE9BQU8sQ0FBQztJQUM1QixNQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsY0FBYyxDQUFDLFFBQVEsRUFBRSxXQUFXLENBQUMsQ0FBQztJQUM3RCxNQUFNLElBQUksR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbEQsSUFBSSxDQUFDLFFBQVEsR0FBRyxVQUFVLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztJQUMvQyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztJQUVyQixNQUFNLFdBQVcsR0FDYixDQUFDLEVBQUMsSUFBSSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQyxXQUFXLENBQUMsRUFBQyxFQUFFLEVBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxLQUFLLENBQUMsRUFBQyxDQUFDLENBQUM7SUFDOUUsT0FBTyxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxDQUFDLEtBQUssQ0FBQyxFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFFN0UsSUFBSSxZQUFZLEVBQUU7UUFDaEIsTUFBTSxlQUFlLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNoRCxJQUFJLENBQUMsZUFBZSxFQUFFO1lBQ3BCLE1BQU0sSUFBSSxLQUFLLENBQ1gsMkVBQTJFLENBQUMsQ0FBQztTQUNsRjtRQUNELGVBQWUsQ0FBQyxTQUFTLENBQUMsWUFBWSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztLQUMvQztJQUNELE9BQU8sQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ25DLE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBaUI7SUFDdEMsVUFBVSxFQUFFLElBQUk7SUFDaEIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLElBQTZCO0NBQzFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMyBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSBiYWNrZW5kIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7S2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBUZW5zb3JJbmZvfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuaW1wb3J0IHtEcmF3LCBEcmF3QXR0cnMsIERyYXdJbnB1dHMsfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcbmltcG9ydCB7RHJhd1Byb2dyYW19IGZyb20gJy4uL2RyYXdfd2ViZ3B1JztcblxuZXhwb3J0IGZ1bmN0aW9uIGRyYXcoXG4gICAgYXJnczoge2lucHV0czogRHJhd0lucHV0cywgYmFja2VuZDogV2ViR1BVQmFja2VuZCwgYXR0cnM6IERyYXdBdHRyc30pOlxuICAgIFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7aW1hZ2V9ID0gaW5wdXRzO1xuICBjb25zdCB7Y2FudmFzLCBvcHRpb25zfSA9IGF0dHJzO1xuICBjb25zdCBbaGVpZ2h0LCB3aWR0aF0gPSBpbWFnZS5zaGFwZS5zbGljZSgwLCAyKTtcbiAgY29uc3Qge2ltYWdlT3B0aW9uc30gPSBvcHRpb25zIHx8IHt9O1xuICBjb25zdCBhbHBoYSA9IGltYWdlT3B0aW9ucyA/LmFscGhhIHx8IDE7XG5cbiAgLy8gICdyZ2JhOHVub3JtJyBzaG91bGQgd29yayBvbiBtYWNPUyBhY2NvcmRpbmcgdG9cbiAgLy8gIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTEyOTg2MTguIEJ1dFxuICAvLyAgZmFpbGVkIG9uIG1hY09TL00yLiBTbyB1c2UgJ2JncmE4dW5vcm0nIGZpcnN0IHdoZW4gYXZhaWxhYmxlLlxuICBjb25zdCBmb3JtYXQgPSBiYWNrZW5kLmRldmljZS5mZWF0dXJlcy5oYXMoJ2JncmE4dW5vcm0tc3RvcmFnZScpID9cbiAgICAgICdiZ3JhOHVub3JtJyA6XG4gICAgICAncmdiYTh1bm9ybSc7XG4gIGNvbnN0IG91dFNoYXBlID0gW2hlaWdodCwgd2lkdGhdO1xuICBjb25zdCBwcm9ncmFtID0gbmV3IERyYXdQcm9ncmFtKG91dFNoYXBlLCBpbWFnZS5kdHlwZSwgZm9ybWF0KTtcbiAgY2FudmFzLndpZHRoID0gd2lkdGg7XG4gIGNhbnZhcy5oZWlnaHQgPSBoZWlnaHQ7XG4gIGNvbnN0IGJhY2tlbmROYW1lID0gJ3dlYmdwdSc7XG4gIGxldCBncHVDb250ZXh0ID0gY2FudmFzLmdldENvbnRleHQoYmFja2VuZE5hbWUpO1xuICBsZXQgY2FudmFzV2ViR1BVO1xuICBpZiAoIWdwdUNvbnRleHQpIHtcbiAgICBjYW52YXNXZWJHUFUgPSBuZXcgT2Zmc2NyZWVuQ2FudmFzKHdpZHRoLCBoZWlnaHQpO1xuICAgIGdwdUNvbnRleHQgPSBjYW52YXNXZWJHUFUuZ2V0Q29udGV4dChiYWNrZW5kTmFtZSk7XG4gIH1cbiAgY29uc3QgbnVtQ2hhbm5lbHMgPSBpbWFnZS5zaGFwZS5sZW5ndGggPT09IDMgPyBpbWFnZS5zaGFwZVsyXSA6IDE7XG4gIGdwdUNvbnRleHQuY29uZmlndXJlKHtcbiAgICBkZXZpY2U6IGJhY2tlbmQuZGV2aWNlLFxuICAgIGZvcm1hdCxcbiAgICB1c2FnZTogR1BVVGV4dHVyZVVzYWdlLlNUT1JBR0VfQklORElORyxcbiAgICBhbHBoYU1vZGU6ICdwcmVtdWx0aXBsaWVkJ1xuICB9KTtcblxuICBjb25zdCBvdXRwdXREdHlwZSA9ICdpbnQzMic7XG4gIGNvbnN0IG91dHB1dCA9IGJhY2tlbmQubWFrZVRlbnNvckluZm8ob3V0U2hhcGUsIG91dHB1dER0eXBlKTtcbiAgY29uc3QgaW5mbyA9IGJhY2tlbmQudGVuc29yTWFwLmdldChvdXRwdXQuZGF0YUlkKTtcbiAgaW5mby5yZXNvdXJjZSA9IGdwdUNvbnRleHQuZ2V0Q3VycmVudFRleHR1cmUoKTtcbiAgaW5mby5leHRlcm5hbCA9IHRydWU7XG5cbiAgY29uc3QgdW5pZm9ybURhdGEgPVxuICAgICAgW3t0eXBlOiAndWludDMyJywgZGF0YTogW251bUNoYW5uZWxzXX0sIHt0eXBlOiAnZmxvYXQzMicsIGRhdGE6IFthbHBoYV19XTtcbiAgYmFja2VuZC5ydW5XZWJHUFVQcm9ncmFtKHByb2dyYW0sIFtpbWFnZV0sIG91dHB1dER0eXBlLCB1bmlmb3JtRGF0YSwgb3V0cHV0KTtcblxuICBpZiAoY2FudmFzV2ViR1BVKSB7XG4gICAgY29uc3QgY2FudmFzMmRDb250ZXh0ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7XG4gICAgaWYgKCFjYW52YXMyZENvbnRleHQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICBgUGxlYXNlIG1ha2Ugc3VyZSB0aGlzIGNhbnZhcyBoYXMgb25seSBiZWVuIHVzZWQgZm9yIDJkIG9yIHdlYmdwdSBjb250ZXh0IWApO1xuICAgIH1cbiAgICBjYW52YXMyZENvbnRleHQuZHJhd0ltYWdlKGNhbnZhc1dlYkdQVSwgMCwgMCk7XG4gIH1cbiAgYmFja2VuZC5kaXNwb3NlRGF0YShvdXRwdXQuZGF0YUlkKTtcbiAgcmV0dXJuIGltYWdlO1xufVxuXG5leHBvcnQgY29uc3QgZHJhd0NvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBEcmF3LFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IGRyYXcgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Multiply } from '@tensorflow/tfjs-core';\nimport { BinaryOpType } from '../binary_op_util';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { multiplyImplCPU as cpuMultiply } from '../kernel_utils/shared';\nexport const multiplyKernelFunc = binaryKernelFunc({\n    opType: BinaryOpType.MUL,\n    cpuKernelImpl: cpuMultiply,\n    supportsComplex: true\n});\nexport const multiplyConfig = {\n    kernelName: Multiply,\n    backendName: 'webgpu',\n    kernelFunc: multiplyKernelFunc\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTXVsdGlwbHkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL011bHRpcGx5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBZSxRQUFRLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUU3RCxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFDL0MsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sb0NBQW9DLENBQUM7QUFDcEUsT0FBTyxFQUFDLGVBQWUsSUFBSSxXQUFXLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUV0RSxNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRyxnQkFBZ0IsQ0FBQztJQUNqRCxNQUFNLEVBQUUsWUFBWSxDQUFDLEdBQUc7SUFDeEIsYUFBYSxFQUFFLFdBQVc7SUFDMUIsZUFBZSxFQUFFLElBQUk7Q0FDdEIsQ0FBQyxDQUFDO0FBRUgsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFpQjtJQUMxQyxVQUFVLEVBQUUsUUFBUTtJQUNwQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsa0JBQWtCO0NBQy9CLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7S2VybmVsQ29uZmlnLCBNdWx0aXBseX0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtCaW5hcnlPcFR5cGV9IGZyb20gJy4uL2JpbmFyeV9vcF91dGlsJztcbmltcG9ydCB7YmluYXJ5S2VybmVsRnVuY30gZnJvbSAnLi4va2VybmVsX3V0aWxzL2tlcm5lbF9mdW5jc191dGlscyc7XG5pbXBvcnQge211bHRpcGx5SW1wbENQVSBhcyBjcHVNdWx0aXBseX0gZnJvbSAnLi4va2VybmVsX3V0aWxzL3NoYXJlZCc7XG5cbmV4cG9ydCBjb25zdCBtdWx0aXBseUtlcm5lbEZ1bmMgPSBiaW5hcnlLZXJuZWxGdW5jKHtcbiAgb3BUeXBlOiBCaW5hcnlPcFR5cGUuTVVMLFxuICBjcHVLZXJuZWxJbXBsOiBjcHVNdWx0aXBseSxcbiAgc3VwcG9ydHNDb21wbGV4OiB0cnVlXG59KTtcblxuZXhwb3J0IGNvbnN0IG11bHRpcGx5Q29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IE11bHRpcGx5LFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IG11bHRpcGx5S2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sum } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nexport function sum(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, keepDims } = attrs;\n    return reduce(x, axis, keepDims, 'sum', backend);\n}\nexport const sumConfig = {\n    kernelName: Sum,\n    backendName: 'webgpu',\n    kernelFunc: sum\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3VtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9TdW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUEyQixHQUFHLEVBQWtDLE1BQU0sdUJBQXVCLENBQUM7QUFHckcsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBRTlDLE1BQU0sVUFBVSxHQUFHLENBQ2YsSUFBa0U7SUFFcEUsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ3RDLE1BQU0sRUFBQyxDQUFDLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFDbkIsTUFBTSxFQUFDLElBQUksRUFBRSxRQUFRLEVBQUMsR0FBRyxLQUFLLENBQUM7SUFFL0IsT0FBTyxNQUFNLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ25ELENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQWlCO0lBQ3JDLFVBQVUsRUFBRSxHQUFHO0lBQ2YsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLEdBQTRCO0NBQ3pDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7S2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBTdW0sIFN1bUF0dHJzLCBTdW1JbnB1dHMsIFRlbnNvckluZm99IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuaW1wb3J0IHtyZWR1Y2V9IGZyb20gJy4uL2tlcm5lbF91dGlscy9yZWR1Y2UnO1xuXG5leHBvcnQgZnVuY3Rpb24gc3VtKFxuICAgIGFyZ3M6IHtpbnB1dHM6IFN1bUlucHV0cywgYmFja2VuZDogV2ViR1BVQmFja2VuZCwgYXR0cnM6IFN1bUF0dHJzfSk6XG4gICAgVGVuc29ySW5mbyB7XG4gIGNvbnN0IHtpbnB1dHMsIGJhY2tlbmQsIGF0dHJzfSA9IGFyZ3M7XG4gIGNvbnN0IHt4fSA9IGlucHV0cztcbiAgY29uc3Qge2F4aXMsIGtlZXBEaW1zfSA9IGF0dHJzO1xuXG4gIHJldHVybiByZWR1Y2UoeCwgYXhpcywga2VlcERpbXMsICdzdW0nLCBiYWNrZW5kKTtcbn1cblxuZXhwb3J0IGNvbnN0IHN1bUNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBTdW0sXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogc3VtIGFzIHVua25vd24gYXMgS2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Einsum, util } from '@tensorflow/tfjs-core';\nimport { multiplyKernelFunc } from './Multiply';\nimport { reshape } from './Reshape';\nimport { sum } from './Sum';\nimport { transpose } from './Transpose';\nexport function einsum(args) {\n    const { inputs, backend, attrs } = args;\n    const { equation } = attrs;\n    const tensors = inputs;\n    const { allDims, summedDims, idDims } = backend_util.decodeEinsumEquation(equation, tensors.length);\n    backend_util.checkEinsumDimSizes(allDims.length, idDims, tensors);\n    const { path, steps } = backend_util.getEinsumComputePath(summedDims, idDims);\n    const nSteps = steps.length;\n    let out = null;\n    let numDimsRemaining = allDims.length;\n    const tensorsToDispose = [];\n    for (let i = 0; i < nSteps; ++i) {\n        for (const idTerm of steps[i]) {\n            const { permutationIndices: perm, expandDims: dimsToExpand } = backend_util.getEinsumPermutation(numDimsRemaining, idDims[idTerm]);\n            let x;\n            if (backend_util.isIdentityPermutation(perm)) {\n                x = tensors[idTerm];\n            }\n            else {\n                x = transpose({ inputs: { x: tensors[idTerm] }, backend, attrs: { perm } });\n                tensorsToDispose.push(x);\n            }\n            const targetShape = x.shape.slice();\n            for (let k = 0; k < dimsToExpand.length; ++k) {\n                targetShape.splice(dimsToExpand[k], 0, 1);\n            }\n            if (!util.arraysEqual(x.shape, targetShape)) {\n                x = reshape({ inputs: { x }, backend, attrs: { shape: targetShape } });\n                tensorsToDispose.push(x);\n            }\n            if (out === null) {\n                out = x;\n            }\n            else {\n                // tslint:disable-next-line: no-unnecessary-type-assertion\n                out =\n                    multiplyKernelFunc({ inputs: { a: x, b: out }, backend });\n                tensorsToDispose.push(out);\n            }\n        }\n        if (i < nSteps - 1) {\n            if (path[i] >= 0) {\n                out = sum({\n                    inputs: { x: out },\n                    backend,\n                    attrs: {\n                        axis: path[i] - (allDims.length - numDimsRemaining),\n                        keepDims: false\n                    }\n                });\n                tensorsToDispose.push(out);\n            }\n            numDimsRemaining--;\n        }\n    }\n    // Clean up intermediate tensors.\n    for (const tensorInfo of tensorsToDispose) {\n        if (tensorInfo === out) {\n            continue;\n        }\n        backend.disposeData(tensorInfo.dataId);\n    }\n    return out;\n}\nexport const einsumConfig = {\n    kernelName: Einsum,\n    backendName: 'webgpu',\n    kernelFunc: einsum\n};\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Elu } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { UnaryOpType } from '../unary_op_util';\nexport const elu = unaryKernelFunc({ opType: UnaryOpType.ELU });\nexport const eluConfig = {\n    kernelName: Elu,\n    backendName: 'webgpu',\n    kernelFunc: elu\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRWx1LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9FbHUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLEdBQUcsRUFBZSxNQUFNLHVCQUF1QixDQUFDO0FBQ3hELE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUNuRSxPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sa0JBQWtCLENBQUM7QUFFN0MsTUFBTSxDQUFDLE1BQU0sR0FBRyxHQUFHLGVBQWUsQ0FBQyxFQUFDLE1BQU0sRUFBRSxXQUFXLENBQUMsR0FBRyxFQUFDLENBQUMsQ0FBQztBQUU5RCxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQWlCO0lBQ3JDLFVBQVUsRUFBRSxHQUFHO0lBQ2YsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLEdBQUc7Q0FDaEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtFbHUsIEtlcm5lbENvbmZpZ30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcbmltcG9ydCB7dW5hcnlLZXJuZWxGdW5jfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMva2VybmVsX2Z1bmNzX3V0aWxzJztcbmltcG9ydCB7VW5hcnlPcFR5cGV9IGZyb20gJy4uL3VuYXJ5X29wX3V0aWwnO1xuXG5leHBvcnQgY29uc3QgZWx1ID0gdW5hcnlLZXJuZWxGdW5jKHtvcFR5cGU6IFVuYXJ5T3BUeXBlLkVMVX0pO1xuXG5leHBvcnQgY29uc3QgZWx1Q29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IEVsdSxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBlbHVcbn07XG4iXX0=","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { EluGrad } from '@tensorflow/tfjs-core';\nimport { BinaryOpType } from '../binary_op_util';\nimport { BinaryOpProgram } from '../binary_op_webgpu';\nexport const eluGrad = (args) => {\n    const { inputs, backend } = args;\n    const { dy, y } = inputs;\n    const program = new BinaryOpProgram(BinaryOpType.ELU_DER, dy.shape, y.shape);\n    return backend.runWebGPUProgram(program, [dy, y], dy.dtype);\n};\nexport const eluGradConfig = {\n    kernelName: EluGrad,\n    backendName: 'webgpu',\n    kernelFunc: eluGrad\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRWx1R3JhZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvRWx1R3JhZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsT0FBTyxFQUFzRCxNQUFNLHVCQUF1QixDQUFDO0FBR25HLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUMvQyxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFFcEQsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUNoQixDQUFDLElBQXFELEVBQWMsRUFBRTtJQUNwRSxNQUFNLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBQyxHQUFHLElBQUksQ0FBQztJQUMvQixNQUFNLEVBQUMsRUFBRSxFQUFFLENBQUMsRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUV2QixNQUFNLE9BQU8sR0FDVCxJQUFJLGVBQWUsQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2pFLE9BQU8sT0FBTyxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDOUQsQ0FBQyxDQUFDO0FBRU4sTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFpQjtJQUN6QyxVQUFVLEVBQUUsT0FBTztJQUNuQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsT0FBZ0M7Q0FDN0MsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIzIEdvb2dsZSBMTEMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtFbHVHcmFkLCBFbHVHcmFkSW5wdXRzLCBLZXJuZWxDb25maWcsIEtlcm5lbEZ1bmMsIFRlbnNvckluZm99IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuaW1wb3J0IHtCaW5hcnlPcFR5cGV9IGZyb20gJy4uL2JpbmFyeV9vcF91dGlsJztcbmltcG9ydCB7QmluYXJ5T3BQcm9ncmFtfSBmcm9tICcuLi9iaW5hcnlfb3Bfd2ViZ3B1JztcblxuZXhwb3J0IGNvbnN0IGVsdUdyYWQgPVxuICAgIChhcmdzOiB7aW5wdXRzOiBFbHVHcmFkSW5wdXRzLCBiYWNrZW5kOiBXZWJHUFVCYWNrZW5kfSk6IFRlbnNvckluZm8gPT4ge1xuICAgICAgY29uc3Qge2lucHV0cywgYmFja2VuZH0gPSBhcmdzO1xuICAgICAgY29uc3Qge2R5LCB5fSA9IGlucHV0cztcblxuICAgICAgY29uc3QgcHJvZ3JhbSA9XG4gICAgICAgICAgbmV3IEJpbmFyeU9wUHJvZ3JhbShCaW5hcnlPcFR5cGUuRUxVX0RFUiwgZHkuc2hhcGUsIHkuc2hhcGUpO1xuICAgICAgcmV0dXJuIGJhY2tlbmQucnVuV2ViR1BVUHJvZ3JhbShwcm9ncmFtLCBbZHksIHldLCBkeS5kdHlwZSk7XG4gICAgfTtcblxuZXhwb3J0IGNvbnN0IGVsdUdyYWRDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogRWx1R3JhZCxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBlbHVHcmFkIGFzIHVua25vd24gYXMgS2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Equal } from '@tensorflow/tfjs-core';\nimport { BinaryOpType } from '../binary_op_util';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { equalImplCPU as cpuEqual } from '../kernel_utils/shared';\nexport const equal = binaryKernelFunc({ opType: BinaryOpType.EQUAL, dtype: 'bool', cpuKernelImpl: cpuEqual });\nexport const equalConfig = {\n    kernelName: Equal,\n    backendName: 'webgpu',\n    kernelFunc: equal\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXF1YWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL0VxdWFsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxLQUFLLEVBQWUsTUFBTSx1QkFBdUIsQ0FBQztBQUUxRCxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFDL0MsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sb0NBQW9DLENBQUM7QUFDcEUsT0FBTyxFQUFDLFlBQVksSUFBSSxRQUFRLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUVoRSxNQUFNLENBQUMsTUFBTSxLQUFLLEdBQUcsZ0JBQWdCLENBQ2pDLEVBQUMsTUFBTSxFQUFFLFlBQVksQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxhQUFhLEVBQUUsUUFBUSxFQUFDLENBQUMsQ0FBQztBQUUxRSxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQWlCO0lBQ3ZDLFVBQVUsRUFBRSxLQUFLO0lBQ2pCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxLQUFLO0NBQ2xCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7RXF1YWwsIEtlcm5lbENvbmZpZ30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtCaW5hcnlPcFR5cGV9IGZyb20gJy4uL2JpbmFyeV9vcF91dGlsJztcbmltcG9ydCB7YmluYXJ5S2VybmVsRnVuY30gZnJvbSAnLi4va2VybmVsX3V0aWxzL2tlcm5lbF9mdW5jc191dGlscyc7XG5pbXBvcnQge2VxdWFsSW1wbENQVSBhcyBjcHVFcXVhbH0gZnJvbSAnLi4va2VybmVsX3V0aWxzL3NoYXJlZCc7XG5cbmV4cG9ydCBjb25zdCBlcXVhbCA9IGJpbmFyeUtlcm5lbEZ1bmMoXG4gICAge29wVHlwZTogQmluYXJ5T3BUeXBlLkVRVUFMLCBkdHlwZTogJ2Jvb2wnLCBjcHVLZXJuZWxJbXBsOiBjcHVFcXVhbH0pO1xuXG5leHBvcnQgY29uc3QgZXF1YWxDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogRXF1YWwsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogZXF1YWxcbn07XG4iXX0=","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Erf } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { UnaryOpType } from '../unary_op_util';\nexport const erf = unaryKernelFunc({ opType: UnaryOpType.ERF });\nexport const erfConfig = {\n    kernelName: Erf,\n    backendName: 'webgpu',\n    kernelFunc: erf\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXJmLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9FcmYudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLEdBQUcsRUFBZSxNQUFNLHVCQUF1QixDQUFDO0FBRXhELE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUVuRSxPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sa0JBQWtCLENBQUM7QUFFN0MsTUFBTSxDQUFDLE1BQU0sR0FBRyxHQUFHLGVBQWUsQ0FBQyxFQUFDLE1BQU0sRUFBRSxXQUFXLENBQUMsR0FBRyxFQUFDLENBQUMsQ0FBQztBQUU5RCxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQWlCO0lBQ3JDLFVBQVUsRUFBRSxHQUFHO0lBQ2YsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLEdBQUc7Q0FDaEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIyIEdvb2dsZSBMTEMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtFcmYsIEtlcm5lbENvbmZpZ30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHt1bmFyeUtlcm5lbEZ1bmN9IGZyb20gJy4uL2tlcm5lbF91dGlscy9rZXJuZWxfZnVuY3NfdXRpbHMnO1xuXG5pbXBvcnQge1VuYXJ5T3BUeXBlfSBmcm9tICcuLi91bmFyeV9vcF91dGlsJztcblxuZXhwb3J0IGNvbnN0IGVyZiA9IHVuYXJ5S2VybmVsRnVuYyh7b3BUeXBlOiBVbmFyeU9wVHlwZS5FUkZ9KTtcblxuZXhwb3J0IGNvbnN0IGVyZkNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBFcmYsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogZXJmXG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Exp } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { expImplCPU } from '../kernel_utils/shared';\nimport { UnaryOpType } from '../unary_op_util';\nexport const exp = unaryKernelFunc({\n    opType: UnaryOpType.EXP,\n    cpuKernelImpl: expImplCPU,\n    dtype: 'float32',\n});\nexport const expConfig = {\n    kernelName: Exp,\n    backendName: 'webgpu',\n    kernelFunc: exp\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXhwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9FeHAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLEdBQUcsRUFBZSxNQUFNLHVCQUF1QixDQUFDO0FBQ3hELE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUNuRSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sd0JBQXdCLENBQUM7QUFDbEQsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBRTdDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsR0FBRyxlQUFlLENBQUM7SUFDakMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxHQUFHO0lBQ3ZCLGFBQWEsRUFBRSxVQUFVO0lBQ3pCLEtBQUssRUFBRSxTQUFTO0NBQ2pCLENBQUMsQ0FBQztBQUVILE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBaUI7SUFDckMsVUFBVSxFQUFFLEdBQUc7SUFDZixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsR0FBRztDQUNoQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0V4cCwgS2VybmVsQ29uZmlnfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuaW1wb3J0IHt1bmFyeUtlcm5lbEZ1bmN9IGZyb20gJy4uL2tlcm5lbF91dGlscy9rZXJuZWxfZnVuY3NfdXRpbHMnO1xuaW1wb3J0IHtleHBJbXBsQ1BVfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMvc2hhcmVkJztcbmltcG9ydCB7VW5hcnlPcFR5cGV9IGZyb20gJy4uL3VuYXJ5X29wX3V0aWwnO1xuXG5leHBvcnQgY29uc3QgZXhwID0gdW5hcnlLZXJuZWxGdW5jKHtcbiAgb3BUeXBlOiBVbmFyeU9wVHlwZS5FWFAsXG4gIGNwdUtlcm5lbEltcGw6IGV4cEltcGxDUFUsXG4gIGR0eXBlOiAnZmxvYXQzMicsXG59KTtcblxuZXhwb3J0IGNvbnN0IGV4cENvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBFeHAsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogZXhwXG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ExpandDims, util } from '@tensorflow/tfjs-core';\nimport { reshape } from './Reshape';\nexport function expandDims(args) {\n    const { inputs, attrs, backend } = args;\n    const { dim } = attrs;\n    const { input } = inputs;\n    const inputRank = input.shape.length;\n    const newShape = input.shape.slice();\n    let $dim = dim;\n    if (dim < 0) {\n        // Negative value is counted from the tail of rank.\n        util.assert(-(inputRank + 1) <= dim, () => `Axis must be in the interval [${-(inputRank + 1)}, ${inputRank}]`);\n        $dim = inputRank + dim + 1;\n    }\n    newShape.splice($dim, 0, 1);\n    return reshape({ inputs: { x: input }, backend, attrs: { shape: newShape } });\n}\nexport const expandDimsConfig = {\n    kernelName: ExpandDims,\n    backendName: 'webgpu',\n    kernelFunc: expandDims,\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXhwYW5kRGltcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvRXhwYW5kRGltcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsVUFBVSxFQUEyRSxJQUFJLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUdoSSxPQUFPLEVBQUMsT0FBTyxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBRWxDLE1BQU0sVUFBVSxVQUFVLENBQUMsSUFJMUI7SUFDQyxNQUFNLEVBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFDdEMsTUFBTSxFQUFDLEdBQUcsRUFBQyxHQUFHLEtBQUssQ0FBQztJQUNwQixNQUFNLEVBQUMsS0FBSyxFQUFDLEdBQUcsTUFBTSxDQUFDO0lBRXZCLE1BQU0sU0FBUyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDO0lBQ3JDLE1BQU0sUUFBUSxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDckMsSUFBSSxJQUFJLEdBQUcsR0FBRyxDQUFDO0lBQ2YsSUFBSSxHQUFHLEdBQUcsQ0FBQyxFQUFFO1FBQ1gsbURBQW1EO1FBQ25ELElBQUksQ0FBQyxNQUFNLENBQ1AsQ0FBQyxDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUMsSUFBSSxHQUFHLEVBQ3ZCLEdBQUcsRUFBRSxDQUFDLGlDQUFpQyxDQUFFLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxLQUNwRCxTQUFTLEdBQUcsQ0FBQyxDQUFDO1FBQ3RCLElBQUksR0FBRyxTQUFTLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBQztLQUM1QjtJQUNELFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUU1QixPQUFPLE9BQU8sQ0FBQyxFQUFDLE1BQU0sRUFBRSxFQUFDLENBQUMsRUFBRSxLQUFLLEVBQUMsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLEVBQUMsS0FBSyxFQUFFLFFBQVEsRUFBQyxFQUFDLENBQUMsQ0FBQztBQUMxRSxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQWlCO0lBQzVDLFVBQVUsRUFBRSxVQUFVO0lBQ3RCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxVQUFtQztDQUNoRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBMaWNlbnNlKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIEFTIElTIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtFeHBhbmREaW1zLCBFeHBhbmREaW1zQXR0cnMsIEV4cGFuZERpbXNJbnB1dHMsIEtlcm5lbENvbmZpZywgS2VybmVsRnVuYywgVGVuc29ySW5mbywgdXRpbH0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge3Jlc2hhcGV9IGZyb20gJy4vUmVzaGFwZSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBleHBhbmREaW1zKGFyZ3M6IHtcbiAgaW5wdXRzOiBFeHBhbmREaW1zSW5wdXRzLFxuICBhdHRyczogRXhwYW5kRGltc0F0dHJzLFxuICBiYWNrZW5kOiBXZWJHUFVCYWNrZW5kXG59KTogVGVuc29ySW5mbyB7XG4gIGNvbnN0IHtpbnB1dHMsIGF0dHJzLCBiYWNrZW5kfSA9IGFyZ3M7XG4gIGNvbnN0IHtkaW19ID0gYXR0cnM7XG4gIGNvbnN0IHtpbnB1dH0gPSBpbnB1dHM7XG5cbiAgY29uc3QgaW5wdXRSYW5rID0gaW5wdXQuc2hhcGUubGVuZ3RoO1xuICBjb25zdCBuZXdTaGFwZSA9IGlucHV0LnNoYXBlLnNsaWNlKCk7XG4gIGxldCAkZGltID0gZGltO1xuICBpZiAoZGltIDwgMCkge1xuICAgIC8vIE5lZ2F0aXZlIHZhbHVlIGlzIGNvdW50ZWQgZnJvbSB0aGUgdGFpbCBvZiByYW5rLlxuICAgIHV0aWwuYXNzZXJ0KFxuICAgICAgICAtKGlucHV0UmFuayArIDEpIDw9IGRpbSxcbiAgICAgICAgKCkgPT4gYEF4aXMgbXVzdCBiZSBpbiB0aGUgaW50ZXJ2YWwgWyR7LSAoaW5wdXRSYW5rICsgMSl9LCAke1xuICAgICAgICAgICAgaW5wdXRSYW5rfV1gKTtcbiAgICAkZGltID0gaW5wdXRSYW5rICsgZGltICsgMTtcbiAgfVxuICBuZXdTaGFwZS5zcGxpY2UoJGRpbSwgMCwgMSk7XG5cbiAgcmV0dXJuIHJlc2hhcGUoe2lucHV0czoge3g6IGlucHV0fSwgYmFja2VuZCwgYXR0cnM6IHtzaGFwZTogbmV3U2hhcGV9fSk7XG59XG5cbmV4cG9ydCBjb25zdCBleHBhbmREaW1zQ29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IEV4cGFuZERpbXMsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogZXhwYW5kRGltcyBhcyB1bmtub3duIGFzIEtlcm5lbEZ1bmMsXG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Expm1 } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { expm1ImplCPU } from '../kernel_utils/shared';\nimport { UnaryOpType } from '../unary_op_util';\nexport const expm1 = unaryKernelFunc({ opType: UnaryOpType.EXPM1, cpuKernelImpl: expm1ImplCPU });\nexport const expm1Config = {\n    kernelName: Expm1,\n    backendName: 'webgpu',\n    kernelFunc: expm1\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXhwbTEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL0V4cG0xLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxLQUFLLEVBQWUsTUFBTSx1QkFBdUIsQ0FBQztBQUMxRCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sb0NBQW9DLENBQUM7QUFDbkUsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBQ3BELE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUU3QyxNQUFNLENBQUMsTUFBTSxLQUFLLEdBQ2QsZUFBZSxDQUFDLEVBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxLQUFLLEVBQUUsYUFBYSxFQUFFLFlBQVksRUFBQyxDQUFDLENBQUM7QUFFOUUsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFpQjtJQUN2QyxVQUFVLEVBQUUsS0FBSztJQUNqQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsS0FBSztDQUNsQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0V4cG0xLCBLZXJuZWxDb25maWd9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5pbXBvcnQge3VuYXJ5S2VybmVsRnVuY30gZnJvbSAnLi4va2VybmVsX3V0aWxzL2tlcm5lbF9mdW5jc191dGlscyc7XG5pbXBvcnQge2V4cG0xSW1wbENQVX0gZnJvbSAnLi4va2VybmVsX3V0aWxzL3NoYXJlZCc7XG5pbXBvcnQge1VuYXJ5T3BUeXBlfSBmcm9tICcuLi91bmFyeV9vcF91dGlsJztcblxuZXhwb3J0IGNvbnN0IGV4cG0xID1cbiAgICB1bmFyeUtlcm5lbEZ1bmMoe29wVHlwZTogVW5hcnlPcFR5cGUuRVhQTTEsIGNwdUtlcm5lbEltcGw6IGV4cG0xSW1wbENQVX0pO1xuXG5leHBvcnQgY29uc3QgZXhwbTFDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogRXhwbTEsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogZXhwbTFcbn07XG4iXX0=","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class FFTProgram {\n    constructor(component, shape) {\n        this.variableNames = ['real', 'imag'];\n        this.outputShape = [];\n        this.uniforms = 'exponentMultiplier : f32, denominator: f32,';\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = shape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.component = component;\n        this.shaderKey = `fft_${component}`;\n    }\n    getUserCode() {\n        const opString = this.component === 'real' ?\n            'return real * expR - imag * expI;' :\n            'return real * expI + imag * expR;';\n        const userCode = `\n    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {\n      ${opString}\n    }\n\n    fn mulMatDFT(batch: i32, index: i32) -> f32 {\n      let indexRatio = f32(index) / f32(uniforms.realShape[1]);\n      let exponentMultiplierTimesIndexRatio =\n          uniforms.exponentMultiplier * indexRatio;\n\n      var result = 0.0;\n\n      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {\n        // x = (-2|2 * PI / N) * index * i;\n        let x = exponentMultiplierTimesIndexRatio * f32(i);\n        let expR = cos(x);\n        let expI = sin(x);\n        let real = getReal(batch, i);\n        let imag = getImag(batch, i);\n\n        result = result +\n            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;\n      }\n\n      return result;\n    }\n\n    ${main('index')} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));\n      }\n    }\n  `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmZ0X3dlYmdwdS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2ZmdF93ZWJncHUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLG1CQUFtQixJQUFJLElBQUksRUFBZ0IsTUFBTSxrQkFBa0IsQ0FBQztBQUM1RSxPQUFPLEVBQUMsZUFBZSxFQUFFLGtCQUFrQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRWxFLE1BQU0sT0FBTyxVQUFVO0lBV3JCLFlBQVksU0FBd0IsRUFBRSxLQUF1QjtRQVY3RCxrQkFBYSxHQUFhLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQzNDLGdCQUFXLEdBQWEsRUFBRSxDQUFDO1FBSTNCLGFBQVEsR0FBRyw2Q0FBNkMsQ0FBQztRQUN6RCxrQkFBYSxHQUE2QixDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDckQsU0FBSSxHQUFHLElBQUksQ0FBQztRQUlWLElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO1FBQ3pCLElBQUksQ0FBQyxjQUFjLEdBQUcsa0JBQWtCLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQzNELElBQUksQ0FBQyxRQUFRLEdBQUcsZUFBZSxDQUMzQixJQUFJLENBQUMsY0FBYyxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBRS9ELElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBQzNCLElBQUksQ0FBQyxTQUFTLEdBQUcsT0FBTyxTQUFTLEVBQUUsQ0FBQztJQUN0QyxDQUFDO0lBRUQsV0FBVztRQUNULE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxTQUFTLEtBQUssTUFBTSxDQUFDLENBQUM7WUFDeEMsbUNBQW1DLENBQUMsQ0FBQztZQUNyQyxtQ0FBbUMsQ0FBQztRQUN4QyxNQUFNLFFBQVEsR0FBRzs7UUFFYixRQUFROzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O01BeUJWLElBQUksQ0FBQyxPQUFPLENBQUM7Ozs7OztHQU1oQixDQUFDO1FBQ0EsT0FBTyxRQUFRLENBQUM7SUFDbEIsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjIgR29vZ2xlIExMQy5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge2dldE1haW5IZWFkZXJTdHJpbmcgYXMgbWFpbiwgV2ViR1BVUHJvZ3JhbX0gZnJvbSAnLi93ZWJncHVfcHJvZ3JhbSc7XG5pbXBvcnQge2NvbXB1dGVEaXNwYXRjaCwgZmxhdERpc3BhdGNoTGF5b3V0fSBmcm9tICcuL3dlYmdwdV91dGlsJztcblxuZXhwb3J0IGNsYXNzIEZGVFByb2dyYW0gaW1wbGVtZW50cyBXZWJHUFVQcm9ncmFtIHtcbiAgdmFyaWFibGVOYW1lczogc3RyaW5nW10gPSBbJ3JlYWwnLCAnaW1hZyddO1xuICBvdXRwdXRTaGFwZTogbnVtYmVyW10gPSBbXTtcbiAgc2hhZGVyS2V5OiBzdHJpbmc7XG4gIGRpc3BhdGNoTGF5b3V0OiB7eDogbnVtYmVyW119O1xuICBkaXNwYXRjaDogW251bWJlciwgbnVtYmVyLCBudW1iZXJdO1xuICB1bmlmb3JtcyA9ICdleHBvbmVudE11bHRpcGxpZXIgOiBmMzIsIGRlbm9taW5hdG9yOiBmMzIsJztcbiAgd29ya2dyb3VwU2l6ZTogW251bWJlciwgbnVtYmVyLCBudW1iZXJdID0gWzY0LCAxLCAxXTtcbiAgc2l6ZSA9IHRydWU7XG4gIGNvbXBvbmVudDogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKGNvbXBvbmVudDogJ3JlYWwnfCdpbWFnJywgc2hhcGU6IFtudW1iZXIsIG51bWJlcl0pIHtcbiAgICB0aGlzLm91dHB1dFNoYXBlID0gc2hhcGU7XG4gICAgdGhpcy5kaXNwYXRjaExheW91dCA9IGZsYXREaXNwYXRjaExheW91dCh0aGlzLm91dHB1dFNoYXBlKTtcbiAgICB0aGlzLmRpc3BhdGNoID0gY29tcHV0ZURpc3BhdGNoKFxuICAgICAgICB0aGlzLmRpc3BhdGNoTGF5b3V0LCB0aGlzLm91dHB1dFNoYXBlLCB0aGlzLndvcmtncm91cFNpemUpO1xuXG4gICAgdGhpcy5jb21wb25lbnQgPSBjb21wb25lbnQ7XG4gICAgdGhpcy5zaGFkZXJLZXkgPSBgZmZ0XyR7Y29tcG9uZW50fWA7XG4gIH1cblxuICBnZXRVc2VyQ29kZSgpOiBzdHJpbmcge1xuICAgIGNvbnN0IG9wU3RyaW5nID0gdGhpcy5jb21wb25lbnQgPT09ICdyZWFsJyA/XG4gICAgICAgICdyZXR1cm4gcmVhbCAqIGV4cFIgLSBpbWFnICogZXhwSTsnIDpcbiAgICAgICAgJ3JldHVybiByZWFsICogZXhwSSArIGltYWcgKiBleHBSOyc7XG4gICAgY29uc3QgdXNlckNvZGUgPSBgXG4gICAgZm4gdW5hcnlPcENvbXBsZXgocmVhbDogZjMyLCBleHBSOiBmMzIsIGltYWc6IGYzMiwgZXhwSTogZjMyKSAtPiBmMzIge1xuICAgICAgJHtvcFN0cmluZ31cbiAgICB9XG5cbiAgICBmbiBtdWxNYXRERlQoYmF0Y2g6IGkzMiwgaW5kZXg6IGkzMikgLT4gZjMyIHtcbiAgICAgIGxldCBpbmRleFJhdGlvID0gZjMyKGluZGV4KSAvIGYzMih1bmlmb3Jtcy5yZWFsU2hhcGVbMV0pO1xuICAgICAgbGV0IGV4cG9uZW50TXVsdGlwbGllclRpbWVzSW5kZXhSYXRpbyA9XG4gICAgICAgICAgdW5pZm9ybXMuZXhwb25lbnRNdWx0aXBsaWVyICogaW5kZXhSYXRpbztcblxuICAgICAgdmFyIHJlc3VsdCA9IDAuMDtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB1bmlmb3Jtcy5yZWFsU2hhcGVbMV07IGkgPSBpICsgMSkge1xuICAgICAgICAvLyB4ID0gKC0yfDIgKiBQSSAvIE4pICogaW5kZXggKiBpO1xuICAgICAgICBsZXQgeCA9IGV4cG9uZW50TXVsdGlwbGllclRpbWVzSW5kZXhSYXRpbyAqIGYzMihpKTtcbiAgICAgICAgbGV0IGV4cFIgPSBjb3MoeCk7XG4gICAgICAgIGxldCBleHBJID0gc2luKHgpO1xuICAgICAgICBsZXQgcmVhbCA9IGdldFJlYWwoYmF0Y2gsIGkpO1xuICAgICAgICBsZXQgaW1hZyA9IGdldEltYWcoYmF0Y2gsIGkpO1xuXG4gICAgICAgIHJlc3VsdCA9IHJlc3VsdCArXG4gICAgICAgICAgICB1bmFyeU9wQ29tcGxleChyZWFsLCBleHBSLCBpbWFnLCBleHBJKSAvIHVuaWZvcm1zLmRlbm9taW5hdG9yO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICAgICR7bWFpbignaW5kZXgnKX0ge1xuICAgICAgaWYgKGluZGV4IDwgdW5pZm9ybXMuc2l6ZSkge1xuICAgICAgICBsZXQgY29vcmRzID0gZ2V0T3V0cHV0Q29vcmRzKCk7XG4gICAgICAgIHNldE91dHB1dEF0SW5kZXgoaW5kZXgsIG11bE1hdERGVChjb29yZHNbMF0sIGNvb3Jkc1sxXSkpO1xuICAgICAgfVxuICAgIH1cbiAgYDtcbiAgICByZXR1cm4gdXNlckNvZGU7XG4gIH1cbn1cbiJdfQ==","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { FFTProgram } from '../fft_webgpu';\nimport { complex } from './Complex';\nimport { reshape } from './Reshape';\nexport function fftImpl(x, inverse, backend) {\n    const xData = backend.tensorMap.get(x.dataId);\n    const inputSize = util.sizeFromShape(x.shape);\n    // Collapse all outer dimensions to a single batch dimension.\n    const innerDimensionSize = x.shape[x.shape.length - 1];\n    const batch = inputSize / innerDimensionSize;\n    const toDispose = [];\n    const input2D = reshape({ inputs: { x }, backend, attrs: { shape: [batch, innerDimensionSize] } });\n    toDispose.push(input2D);\n    const xShape = input2D.shape;\n    const realProgram = new FFTProgram('real', xShape);\n    const imagProgram = new FFTProgram('imag', xShape);\n    const inputs = [\n        {\n            dataId: xData.complexTensorInfos.real.dataId,\n            dtype: xData.complexTensorInfos.real.dtype,\n            shape: xShape\n        },\n        {\n            dataId: xData.complexTensorInfos.imag.dataId,\n            dtype: xData.complexTensorInfos.imag.dtype,\n            shape: xShape\n        }\n    ];\n    const exponentMultiplier = inverse ? 2.0 * Math.PI : -2.0 * Math.PI;\n    const denominator = inverse ? xShape[1] : 1.0;\n    const uniformData = [\n        { type: 'float32', data: [exponentMultiplier] },\n        { type: 'float32', data: [denominator] }\n    ];\n    const realPart = backend.runWebGPUProgram(realProgram, inputs, 'float32', uniformData);\n    toDispose.push(realPart);\n    const imagPart = backend.runWebGPUProgram(imagProgram, inputs, 'float32', uniformData);\n    toDispose.push(imagPart);\n    const complexOutput = complex({ inputs: { real: realPart, imag: imagPart }, backend });\n    toDispose.push(complexOutput);\n    const complexOutputReshaped = reshape({ inputs: { x: complexOutput }, backend, attrs: { shape: x.shape } });\n    toDispose.forEach(t => backend.disposeData(t.dataId));\n    return complexOutputReshaped;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRkZUX2ltcGwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL0ZGVF9pbXBsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBYSxJQUFJLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUd2RCxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRXpDLE9BQU8sRUFBQyxPQUFPLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFDbEMsT0FBTyxFQUFDLE9BQU8sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUVsQyxNQUFNLFVBQVUsT0FBTyxDQUNuQixDQUFhLEVBQUUsT0FBZ0IsRUFBRSxPQUFzQjtJQUN6RCxNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFOUMsTUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDOUMsNkRBQTZEO0lBQzdELE1BQU0sa0JBQWtCLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUN2RCxNQUFNLEtBQUssR0FBRyxTQUFTLEdBQUcsa0JBQWtCLENBQUM7SUFFN0MsTUFBTSxTQUFTLEdBQUcsRUFBRSxDQUFDO0lBQ3JCLE1BQU0sT0FBTyxHQUFHLE9BQU8sQ0FDbkIsRUFBQyxNQUFNLEVBQUUsRUFBQyxDQUFDLEVBQUMsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLEVBQUMsS0FBSyxFQUFFLENBQUMsS0FBSyxFQUFFLGtCQUFrQixDQUFDLEVBQUMsRUFBQyxDQUFDLENBQUM7SUFDekUsU0FBUyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUV4QixNQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsS0FBeUIsQ0FBQztJQUNqRCxNQUFNLFdBQVcsR0FBRyxJQUFJLFVBQVUsQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDbkQsTUFBTSxXQUFXLEdBQUcsSUFBSSxVQUFVLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBRW5ELE1BQU0sTUFBTSxHQUFHO1FBQ2I7WUFDRSxNQUFNLEVBQUUsS0FBSyxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxNQUFNO1lBQzVDLEtBQUssRUFBRSxLQUFLLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLEtBQUs7WUFDMUMsS0FBSyxFQUFFLE1BQU07U0FDZDtRQUNEO1lBQ0UsTUFBTSxFQUFFLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsTUFBTTtZQUM1QyxLQUFLLEVBQUUsS0FBSyxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxLQUFLO1lBQzFDLEtBQUssRUFBRSxNQUFNO1NBQ2Q7S0FDRixDQUFDO0lBRUYsTUFBTSxrQkFBa0IsR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDO0lBQ3BFLE1BQU0sV0FBVyxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUM7SUFDOUMsTUFBTSxXQUFXLEdBQUc7UUFDbEIsRUFBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDLGtCQUFrQixDQUFDLEVBQUM7UUFDN0MsRUFBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDLFdBQVcsQ0FBQyxFQUFDO0tBQ3ZDLENBQUM7SUFFRixNQUFNLFFBQVEsR0FDVixPQUFPLENBQUMsZ0JBQWdCLENBQUMsV0FBVyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDMUUsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN6QixNQUFNLFFBQVEsR0FDVixPQUFPLENBQUMsZ0JBQWdCLENBQUMsV0FBVyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDMUUsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUV6QixNQUFNLGFBQWEsR0FDZixPQUFPLENBQUMsRUFBQyxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUMsRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO0lBQ2pFLFNBQVMsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7SUFFOUIsTUFBTSxxQkFBcUIsR0FDdkIsT0FBTyxDQUFDLEVBQUMsTUFBTSxFQUFFLEVBQUMsQ0FBQyxFQUFFLGFBQWEsRUFBQyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsRUFBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLEtBQUssRUFBQyxFQUFDLENBQUMsQ0FBQztJQUU1RSxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUV0RCxPQUFPLHFCQUFxQixDQUFDO0FBQy9CLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7VGVuc29ySW5mbywgdXRpbH0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge0ZGVFByb2dyYW19IGZyb20gJy4uL2ZmdF93ZWJncHUnO1xuXG5pbXBvcnQge2NvbXBsZXh9IGZyb20gJy4vQ29tcGxleCc7XG5pbXBvcnQge3Jlc2hhcGV9IGZyb20gJy4vUmVzaGFwZSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBmZnRJbXBsKFxuICAgIHg6IFRlbnNvckluZm8sIGludmVyc2U6IGJvb2xlYW4sIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmQpOiBUZW5zb3JJbmZvIHtcbiAgY29uc3QgeERhdGEgPSBiYWNrZW5kLnRlbnNvck1hcC5nZXQoeC5kYXRhSWQpO1xuXG4gIGNvbnN0IGlucHV0U2l6ZSA9IHV0aWwuc2l6ZUZyb21TaGFwZSh4LnNoYXBlKTtcbiAgLy8gQ29sbGFwc2UgYWxsIG91dGVyIGRpbWVuc2lvbnMgdG8gYSBzaW5nbGUgYmF0Y2ggZGltZW5zaW9uLlxuICBjb25zdCBpbm5lckRpbWVuc2lvblNpemUgPSB4LnNoYXBlW3guc2hhcGUubGVuZ3RoIC0gMV07XG4gIGNvbnN0IGJhdGNoID0gaW5wdXRTaXplIC8gaW5uZXJEaW1lbnNpb25TaXplO1xuXG4gIGNvbnN0IHRvRGlzcG9zZSA9IFtdO1xuICBjb25zdCBpbnB1dDJEID0gcmVzaGFwZShcbiAgICAgIHtpbnB1dHM6IHt4fSwgYmFja2VuZCwgYXR0cnM6IHtzaGFwZTogW2JhdGNoLCBpbm5lckRpbWVuc2lvblNpemVdfX0pO1xuICB0b0Rpc3Bvc2UucHVzaChpbnB1dDJEKTtcblxuICBjb25zdCB4U2hhcGUgPSBpbnB1dDJELnNoYXBlIGFzIFtudW1iZXIsIG51bWJlcl07XG4gIGNvbnN0IHJlYWxQcm9ncmFtID0gbmV3IEZGVFByb2dyYW0oJ3JlYWwnLCB4U2hhcGUpO1xuICBjb25zdCBpbWFnUHJvZ3JhbSA9IG5ldyBGRlRQcm9ncmFtKCdpbWFnJywgeFNoYXBlKTtcblxuICBjb25zdCBpbnB1dHMgPSBbXG4gICAge1xuICAgICAgZGF0YUlkOiB4RGF0YS5jb21wbGV4VGVuc29ySW5mb3MucmVhbC5kYXRhSWQsXG4gICAgICBkdHlwZTogeERhdGEuY29tcGxleFRlbnNvckluZm9zLnJlYWwuZHR5cGUsXG4gICAgICBzaGFwZTogeFNoYXBlXG4gICAgfSxcbiAgICB7XG4gICAgICBkYXRhSWQ6IHhEYXRhLmNvbXBsZXhUZW5zb3JJbmZvcy5pbWFnLmRhdGFJZCxcbiAgICAgIGR0eXBlOiB4RGF0YS5jb21wbGV4VGVuc29ySW5mb3MuaW1hZy5kdHlwZSxcbiAgICAgIHNoYXBlOiB4U2hhcGVcbiAgICB9XG4gIF07XG5cbiAgY29uc3QgZXhwb25lbnRNdWx0aXBsaWVyID0gaW52ZXJzZSA/IDIuMCAqIE1hdGguUEkgOiAtMi4wICogTWF0aC5QSTtcbiAgY29uc3QgZGVub21pbmF0b3IgPSBpbnZlcnNlID8geFNoYXBlWzFdIDogMS4wO1xuICBjb25zdCB1bmlmb3JtRGF0YSA9IFtcbiAgICB7dHlwZTogJ2Zsb2F0MzInLCBkYXRhOiBbZXhwb25lbnRNdWx0aXBsaWVyXX0sXG4gICAge3R5cGU6ICdmbG9hdDMyJywgZGF0YTogW2Rlbm9taW5hdG9yXX1cbiAgXTtcblxuICBjb25zdCByZWFsUGFydCA9XG4gICAgICBiYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0ocmVhbFByb2dyYW0sIGlucHV0cywgJ2Zsb2F0MzInLCB1bmlmb3JtRGF0YSk7XG4gIHRvRGlzcG9zZS5wdXNoKHJlYWxQYXJ0KTtcbiAgY29uc3QgaW1hZ1BhcnQgPVxuICAgICAgYmFja2VuZC5ydW5XZWJHUFVQcm9ncmFtKGltYWdQcm9ncmFtLCBpbnB1dHMsICdmbG9hdDMyJywgdW5pZm9ybURhdGEpO1xuICB0b0Rpc3Bvc2UucHVzaChpbWFnUGFydCk7XG5cbiAgY29uc3QgY29tcGxleE91dHB1dCA9XG4gICAgICBjb21wbGV4KHtpbnB1dHM6IHtyZWFsOiByZWFsUGFydCwgaW1hZzogaW1hZ1BhcnR9LCBiYWNrZW5kfSk7XG4gIHRvRGlzcG9zZS5wdXNoKGNvbXBsZXhPdXRwdXQpO1xuXG4gIGNvbnN0IGNvbXBsZXhPdXRwdXRSZXNoYXBlZCA9XG4gICAgICByZXNoYXBlKHtpbnB1dHM6IHt4OiBjb21wbGV4T3V0cHV0fSwgYmFja2VuZCwgYXR0cnM6IHtzaGFwZTogeC5zaGFwZX19KTtcblxuICB0b0Rpc3Bvc2UuZm9yRWFjaCh0ID0+IGJhY2tlbmQuZGlzcG9zZURhdGEodC5kYXRhSWQpKTtcblxuICByZXR1cm4gY29tcGxleE91dHB1dFJlc2hhcGVkO1xufVxuIl19","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FFT } from '@tensorflow/tfjs-core';\nimport { fftImpl } from './FFT_impl';\nexport function fft(args) {\n    const { inputs, backend } = args;\n    const { input } = inputs;\n    return fftImpl(input, false /* inverse */, backend);\n}\nexport const fftConfig = {\n    kernelName: FFT,\n    backendName: 'webgpu',\n    kernelFunc: fft\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRkZULmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9GRlQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLEdBQUcsRUFBc0MsTUFBTSx1QkFBdUIsQ0FBQztBQUkvRSxPQUFPLEVBQUMsT0FBTyxFQUFDLE1BQU0sWUFBWSxDQUFDO0FBRW5DLE1BQU0sVUFBVSxHQUFHLENBQUMsSUFBaUQ7SUFFbkUsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFDL0IsTUFBTSxFQUFDLEtBQUssRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUV2QixPQUFPLE9BQU8sQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLGFBQWEsRUFBRSxPQUFPLENBQUMsQ0FBQztBQUN0RCxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFpQjtJQUNyQyxVQUFVLEVBQUUsR0FBRztJQUNmLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxHQUFHO0NBQ2hCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7RkZULCBGRlRJbnB1dHMsIEtlcm5lbENvbmZpZywgVGVuc29ySW5mb30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5cbmltcG9ydCB7ZmZ0SW1wbH0gZnJvbSAnLi9GRlRfaW1wbCc7XG5cbmV4cG9ydCBmdW5jdGlvbiBmZnQoYXJnczoge2lucHV0czogRkZUSW5wdXRzLCBiYWNrZW5kOiBXZWJHUFVCYWNrZW5kfSk6XG4gICAgVGVuc29ySW5mbyB7XG4gIGNvbnN0IHtpbnB1dHMsIGJhY2tlbmR9ID0gYXJncztcbiAgY29uc3Qge2lucHV0fSA9IGlucHV0cztcblxuICByZXR1cm4gZmZ0SW1wbChpbnB1dCwgZmFsc2UgLyogaW52ZXJzZSAqLywgYmFja2VuZCk7XG59XG5cbmV4cG9ydCBjb25zdCBmZnRDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogRkZULFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IGZmdFxufTtcbiJdfQ==","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class FlipLeftRightProgram {\n    constructor(imageShape) {\n        this.outputShape = [];\n        this.variableNames = ['x'];\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = imageShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.shaderKey = 'flipLeftRight';\n    }\n    getUserCode() {\n        const userCode = `\n      ${main('index')} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let coordX = uniforms.xShape[2] - coords[2] - 1;\n          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);\n          setOutputAtIndex(index, outputValue);\n        }\n      }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmxpcF9sZWZ0X3JpZ2h0X3dlYmdwdS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2ZsaXBfbGVmdF9yaWdodF93ZWJncHUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLG1CQUFtQixJQUFJLElBQUksRUFBZ0IsTUFBTSxrQkFBa0IsQ0FBQztBQUM1RSxPQUFPLEVBQUMsZUFBZSxFQUFFLGtCQUFrQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRWxFLE1BQU0sT0FBTyxvQkFBb0I7SUFTL0IsWUFBWSxVQUE0QztRQVJ4RCxnQkFBVyxHQUFhLEVBQUUsQ0FBQztRQUkzQixrQkFBYSxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdEIsa0JBQWEsR0FBNkIsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3JELFNBQUksR0FBRyxJQUFJLENBQUM7UUFHVixJQUFJLENBQUMsV0FBVyxHQUFHLFVBQVUsQ0FBQztRQUM5QixJQUFJLENBQUMsY0FBYyxHQUFHLGtCQUFrQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUMzRCxJQUFJLENBQUMsUUFBUSxHQUFHLGVBQWUsQ0FDM0IsSUFBSSxDQUFDLGNBQWMsRUFBRSxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUMvRCxJQUFJLENBQUMsU0FBUyxHQUFHLGVBQWUsQ0FBQztJQUNuQyxDQUFDO0lBRUQsV0FBVztRQUNULE1BQU0sUUFBUSxHQUFHO1FBQ2IsSUFBSSxDQUFDLE9BQU8sQ0FBQzs7Ozs7Ozs7S0FRaEIsQ0FBQztRQUNGLE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtnZXRNYWluSGVhZGVyU3RyaW5nIGFzIG1haW4sIFdlYkdQVVByb2dyYW19IGZyb20gJy4vd2ViZ3B1X3Byb2dyYW0nO1xuaW1wb3J0IHtjb21wdXRlRGlzcGF0Y2gsIGZsYXREaXNwYXRjaExheW91dH0gZnJvbSAnLi93ZWJncHVfdXRpbCc7XG5cbmV4cG9ydCBjbGFzcyBGbGlwTGVmdFJpZ2h0UHJvZ3JhbSBpbXBsZW1lbnRzIFdlYkdQVVByb2dyYW0ge1xuICBvdXRwdXRTaGFwZTogbnVtYmVyW10gPSBbXTtcbiAgc2hhZGVyS2V5OiBzdHJpbmc7XG4gIGRpc3BhdGNoTGF5b3V0OiB7eDogbnVtYmVyW119O1xuICBkaXNwYXRjaDogW251bWJlciwgbnVtYmVyLCBudW1iZXJdO1xuICB2YXJpYWJsZU5hbWVzID0gWyd4J107XG4gIHdvcmtncm91cFNpemU6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXSA9IFs2NCwgMSwgMV07XG4gIHNpemUgPSB0cnVlO1xuXG4gIGNvbnN0cnVjdG9yKGltYWdlU2hhcGU6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdKSB7XG4gICAgdGhpcy5vdXRwdXRTaGFwZSA9IGltYWdlU2hhcGU7XG4gICAgdGhpcy5kaXNwYXRjaExheW91dCA9IGZsYXREaXNwYXRjaExheW91dCh0aGlzLm91dHB1dFNoYXBlKTtcbiAgICB0aGlzLmRpc3BhdGNoID0gY29tcHV0ZURpc3BhdGNoKFxuICAgICAgICB0aGlzLmRpc3BhdGNoTGF5b3V0LCB0aGlzLm91dHB1dFNoYXBlLCB0aGlzLndvcmtncm91cFNpemUpO1xuICAgIHRoaXMuc2hhZGVyS2V5ID0gJ2ZsaXBMZWZ0UmlnaHQnO1xuICB9XG5cbiAgZ2V0VXNlckNvZGUoKTogc3RyaW5nIHtcbiAgICBjb25zdCB1c2VyQ29kZSA9IGBcbiAgICAgICR7bWFpbignaW5kZXgnKX0ge1xuICAgICAgICBpZiAoaW5kZXggPCB1bmlmb3Jtcy5zaXplKSB7XG4gICAgICAgICAgbGV0IGNvb3JkcyA9IGdldENvb3Jkc0Zyb21JbmRleChpbmRleCk7XG4gICAgICAgICAgbGV0IGNvb3JkWCA9IHVuaWZvcm1zLnhTaGFwZVsyXSAtIGNvb3Jkc1syXSAtIDE7XG4gICAgICAgICAgbGV0IG91dHB1dFZhbHVlID0gZ2V0WChjb29yZHNbMF0sIGNvb3Jkc1sxXSwgY29vcmRYLCBjb29yZHNbM10pO1xuICAgICAgICAgIHNldE91dHB1dEF0SW5kZXgoaW5kZXgsIG91dHB1dFZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIGA7XG4gICAgcmV0dXJuIHVzZXJDb2RlO1xuICB9XG59XG4iXX0=","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FlipLeftRight } from '@tensorflow/tfjs-core';\nimport { FlipLeftRightProgram } from '../flip_left_right_webgpu';\nexport const flipLeftRightConfig = {\n    kernelName: FlipLeftRight,\n    backendName: 'webgpu',\n    kernelFunc: ({ inputs, backend }) => {\n        const { image } = inputs;\n        const webgpuBackend = backend;\n        const program = new FlipLeftRightProgram(image.shape);\n        const output = webgpuBackend.runWebGPUProgram(program, [image], image.dtype);\n        return output;\n    }\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmxpcExlZnRSaWdodC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvRmxpcExlZnRSaWdodC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFHSCxPQUFPLEVBQUMsYUFBYSxFQUFzQixNQUFNLHVCQUF1QixDQUFDO0FBR3pFLE9BQU8sRUFBQyxvQkFBb0IsRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBRS9ELE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFpQjtJQUM3QyxVQUFVLEVBQUUsYUFBYTtJQUN6QixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsQ0FBQyxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUMsRUFBRSxFQUFFO1FBQ2hDLE1BQU0sRUFBQyxLQUFLLEVBQUMsR0FBRyxNQUE2QixDQUFDO1FBQzlDLE1BQU0sYUFBYSxHQUFHLE9BQXdCLENBQUM7UUFFL0MsTUFBTSxPQUFPLEdBQUcsSUFBSSxvQkFBb0IsQ0FBRSxLQUFrQixDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3BFLE1BQU0sTUFBTSxHQUNSLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxLQUFLLENBQUMsRUFBRSxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDbEUsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztDQUNGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7S2VybmVsQ29uZmlnLCBUZW5zb3I0RH0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcbmltcG9ydCB7RmxpcExlZnRSaWdodCwgRmxpcExlZnRSaWdodElucHV0c30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge0ZsaXBMZWZ0UmlnaHRQcm9ncmFtfSBmcm9tICcuLi9mbGlwX2xlZnRfcmlnaHRfd2ViZ3B1JztcblxuZXhwb3J0IGNvbnN0IGZsaXBMZWZ0UmlnaHRDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAgICBrZXJuZWxOYW1lOiBGbGlwTGVmdFJpZ2h0LFxuICAgIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAgICBrZXJuZWxGdW5jOiAoe2lucHV0cywgYmFja2VuZH0pID0+IHtcbiAgICAgIGNvbnN0IHtpbWFnZX0gPSBpbnB1dHMgYXMgRmxpcExlZnRSaWdodElucHV0cztcbiAgICAgIGNvbnN0IHdlYmdwdUJhY2tlbmQgPSBiYWNrZW5kIGFzIFdlYkdQVUJhY2tlbmQ7XG5cbiAgICAgIGNvbnN0IHByb2dyYW0gPSBuZXcgRmxpcExlZnRSaWdodFByb2dyYW0oKGltYWdlIGFzIFRlbnNvcjREKS5zaGFwZSk7XG4gICAgICBjb25zdCBvdXRwdXQgPVxuICAgICAgICAgIHdlYmdwdUJhY2tlbmQucnVuV2ViR1BVUHJvZ3JhbShwcm9ncmFtLCBbaW1hZ2VdLCBpbWFnZS5kdHlwZSk7XG4gICAgICByZXR1cm4gb3V0cHV0O1xuICB9XG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Floor } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { floorImplCPU } from '../kernel_utils/shared';\nimport { UnaryOpType } from '../unary_op_util';\nexport const floor = unaryKernelFunc({ opType: UnaryOpType.FLOOR, cpuKernelImpl: floorImplCPU });\nexport const floorConfig = {\n    kernelName: Floor,\n    backendName: 'webgpu',\n    kernelFunc: floor\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmxvb3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL0Zsb29yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxLQUFLLEVBQWUsTUFBTSx1QkFBdUIsQ0FBQztBQUMxRCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sb0NBQW9DLENBQUM7QUFDbkUsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBQ3BELE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUU3QyxNQUFNLENBQUMsTUFBTSxLQUFLLEdBQ2QsZUFBZSxDQUFDLEVBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxLQUFLLEVBQUUsYUFBYSxFQUFFLFlBQVksRUFBQyxDQUFDLENBQUM7QUFFOUUsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFpQjtJQUN2QyxVQUFVLEVBQUUsS0FBSztJQUNqQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsS0FBSztDQUNsQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7Rmxvb3IsIEtlcm5lbENvbmZpZ30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcbmltcG9ydCB7dW5hcnlLZXJuZWxGdW5jfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMva2VybmVsX2Z1bmNzX3V0aWxzJztcbmltcG9ydCB7Zmxvb3JJbXBsQ1BVfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMvc2hhcmVkJztcbmltcG9ydCB7VW5hcnlPcFR5cGV9IGZyb20gJy4uL3VuYXJ5X29wX3V0aWwnO1xuXG5leHBvcnQgY29uc3QgZmxvb3IgPVxuICAgIHVuYXJ5S2VybmVsRnVuYyh7b3BUeXBlOiBVbmFyeU9wVHlwZS5GTE9PUiwgY3B1S2VybmVsSW1wbDogZmxvb3JJbXBsQ1BVfSk7XG5cbmV4cG9ydCBjb25zdCBmbG9vckNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBGbG9vcixcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBmbG9vclxufTtcbiJdfQ==","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FloorDiv } from '@tensorflow/tfjs-core';\nimport { BinaryOpType } from '../binary_op_util';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { floorDivImplCPU } from '../kernel_utils/shared';\nexport const floorDiv = binaryKernelFunc({\n    opType: BinaryOpType.FLOOR_DIV,\n    cpuKernelImpl: floorDivImplCPU,\n    dtype: 'int32'\n});\nexport const floorDivConfig = {\n    kernelName: FloorDiv,\n    backendName: 'webgpu',\n    kernelFunc: floorDiv\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmxvb3JEaXYuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL0Zsb29yRGl2LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxRQUFRLEVBQWUsTUFBTSx1QkFBdUIsQ0FBQztBQUU3RCxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFDL0MsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sb0NBQW9DLENBQUM7QUFDcEUsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBRXZELE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBRyxnQkFBZ0IsQ0FBQztJQUN2QyxNQUFNLEVBQUUsWUFBWSxDQUFDLFNBQVM7SUFDOUIsYUFBYSxFQUFFLGVBQWU7SUFDOUIsS0FBSyxFQUFFLE9BQU87Q0FDZixDQUFDLENBQUM7QUFFSCxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQWlCO0lBQzFDLFVBQVUsRUFBRSxRQUFRO0lBQ3BCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxRQUFRO0NBQ3JCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7Rmxvb3JEaXYsIEtlcm5lbENvbmZpZ30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtCaW5hcnlPcFR5cGV9IGZyb20gJy4uL2JpbmFyeV9vcF91dGlsJztcbmltcG9ydCB7YmluYXJ5S2VybmVsRnVuY30gZnJvbSAnLi4va2VybmVsX3V0aWxzL2tlcm5lbF9mdW5jc191dGlscyc7XG5pbXBvcnQge2Zsb29yRGl2SW1wbENQVX0gZnJvbSAnLi4va2VybmVsX3V0aWxzL3NoYXJlZCc7XG5cbmV4cG9ydCBjb25zdCBmbG9vckRpdiA9IGJpbmFyeUtlcm5lbEZ1bmMoe1xuICBvcFR5cGU6IEJpbmFyeU9wVHlwZS5GTE9PUl9ESVYsXG4gIGNwdUtlcm5lbEltcGw6IGZsb29yRGl2SW1wbENQVSxcbiAgZHR5cGU6ICdpbnQzMidcbn0pO1xuXG5leHBvcnQgY29uc3QgZmxvb3JEaXZDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogRmxvb3JEaXYsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogZmxvb3JEaXZcbn07XG4iXX0=","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main, PixelsOpType } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class FromPixelsProgram {\n    constructor(outputShape, numChannels, importVideo = false) {\n        this.pixelsOpType = PixelsOpType.FROM_PIXELS;\n        this.outputShape = [0];\n        this.variableNames = [];\n        this.workgroupSize = [256, 1, 1]; // The empirical value.\n        this.outputShape = outputShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize, [numChannels, 1, 1]);\n        this.importVideo = importVideo;\n        this.shaderKey = `fromPixels_${this.importVideo}`;\n    }\n    getUserCode() {\n        const textureLoad = this.importVideo ?\n            'textureLoad(src, vec2<i32>(coords.yx));' :\n            'textureLoad(src, vec2<i32>(coords.yx), 0)';\n        const textureType = this.importVideo ? 'texture_external' : 'texture_2d<f32>';\n        return `\n      @binding(1) @group(0) var src: ${textureType};\n      ${main('index')} {\n        let flatIndex = index * uniforms.numChannels;\n        if (flatIndex < uniforms.size) {\n          let coords = getCoordsFromIndex(flatIndex);\n          let values = ${textureLoad};\n          for (var i = 0; i < uniforms.numChannels; i = i + 1) {\n            result[flatIndex + i] = i32(floor(255.0 * values[i]));\n          }\n        }\n      }\n  `;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbV9waXhlbHNfd2ViZ3B1LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMvZnJvbV9waXhlbHNfd2ViZ3B1LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxtQkFBbUIsSUFBSSxJQUFJLEVBQUUsWUFBWSxFQUFnQixNQUFNLGtCQUFrQixDQUFDO0FBQzFGLE9BQU8sRUFBQyxlQUFlLEVBQUUsa0JBQWtCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFbEUsTUFBTSxPQUFPLGlCQUFpQjtJQVc1QixZQUFZLFdBQXFCLEVBQUUsV0FBbUIsRUFBRSxXQUFXLEdBQUcsS0FBSztRQVIzRSxpQkFBWSxHQUFHLFlBQVksQ0FBQyxXQUFXLENBQUM7UUFDeEMsZ0JBQVcsR0FBYSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRzVCLGtCQUFhLEdBQWEsRUFBRSxDQUFDO1FBQzdCLGtCQUFhLEdBQ1QsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUUsdUJBQXVCO1FBR3ZDLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO1FBQy9CLElBQUksQ0FBQyxjQUFjLEdBQUcsa0JBQWtCLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQzNELElBQUksQ0FBQyxRQUFRLEdBQUcsZUFBZSxDQUMzQixJQUFJLENBQUMsY0FBYyxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLGFBQWEsRUFDekQsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFekIsSUFBSSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUM7UUFDL0IsSUFBSSxDQUFDLFNBQVMsR0FBRyxjQUFjLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNwRCxDQUFDO0lBRUQsV0FBVztRQUNULE1BQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUNsQyx5Q0FBeUMsQ0FBQyxDQUFDO1lBQzNDLDJDQUEyQyxDQUFDO1FBQ2hELE1BQU0sV0FBVyxHQUNiLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQztRQUM5RCxPQUFPO3VDQUM0QixXQUFXO1FBQzFDLElBQUksQ0FBQyxPQUFPLENBQUM7Ozs7eUJBSUksV0FBVzs7Ozs7O0dBTWpDLENBQUM7SUFDRixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7Z2V0TWFpbkhlYWRlclN0cmluZyBhcyBtYWluLCBQaXhlbHNPcFR5cGUsIFdlYkdQVVByb2dyYW19IGZyb20gJy4vd2ViZ3B1X3Byb2dyYW0nO1xuaW1wb3J0IHtjb21wdXRlRGlzcGF0Y2gsIGZsYXREaXNwYXRjaExheW91dH0gZnJvbSAnLi93ZWJncHVfdXRpbCc7XG5cbmV4cG9ydCBjbGFzcyBGcm9tUGl4ZWxzUHJvZ3JhbSBpbXBsZW1lbnRzIFdlYkdQVVByb2dyYW0ge1xuICBkaXNwYXRjaDogW251bWJlciwgbnVtYmVyLCBudW1iZXJdO1xuICBkaXNwYXRjaExheW91dDoge3g6IG51bWJlcltdfTtcbiAgcGl4ZWxzT3BUeXBlID0gUGl4ZWxzT3BUeXBlLkZST01fUElYRUxTO1xuICBvdXRwdXRTaGFwZTogbnVtYmVyW10gPSBbMF07XG4gIHNoYWRlcktleTogc3RyaW5nO1xuICBpbXBvcnRWaWRlbzogYm9vbGVhbjtcbiAgdmFyaWFibGVOYW1lczogc3RyaW5nW10gPSBbXTtcbiAgd29ya2dyb3VwU2l6ZTogW251bWJlciwgbnVtYmVyLCBudW1iZXJdID1cbiAgICAgIFsyNTYsIDEsIDFdOyAgLy8gVGhlIGVtcGlyaWNhbCB2YWx1ZS5cblxuICBjb25zdHJ1Y3RvcihvdXRwdXRTaGFwZTogbnVtYmVyW10sIG51bUNoYW5uZWxzOiBudW1iZXIsIGltcG9ydFZpZGVvID0gZmFsc2UpIHtcbiAgICB0aGlzLm91dHB1dFNoYXBlID0gb3V0cHV0U2hhcGU7XG4gICAgdGhpcy5kaXNwYXRjaExheW91dCA9IGZsYXREaXNwYXRjaExheW91dCh0aGlzLm91dHB1dFNoYXBlKTtcbiAgICB0aGlzLmRpc3BhdGNoID0gY29tcHV0ZURpc3BhdGNoKFxuICAgICAgICB0aGlzLmRpc3BhdGNoTGF5b3V0LCB0aGlzLm91dHB1dFNoYXBlLCB0aGlzLndvcmtncm91cFNpemUsXG4gICAgICAgIFtudW1DaGFubmVscywgMSwgMV0pO1xuXG4gICAgdGhpcy5pbXBvcnRWaWRlbyA9IGltcG9ydFZpZGVvO1xuICAgIHRoaXMuc2hhZGVyS2V5ID0gYGZyb21QaXhlbHNfJHt0aGlzLmltcG9ydFZpZGVvfWA7XG4gIH1cblxuICBnZXRVc2VyQ29kZSgpOiBzdHJpbmcge1xuICAgIGNvbnN0IHRleHR1cmVMb2FkID0gdGhpcy5pbXBvcnRWaWRlbyA/XG4gICAgICAgICd0ZXh0dXJlTG9hZChzcmMsIHZlYzI8aTMyPihjb29yZHMueXgpKTsnIDpcbiAgICAgICAgJ3RleHR1cmVMb2FkKHNyYywgdmVjMjxpMzI+KGNvb3Jkcy55eCksIDApJztcbiAgICBjb25zdCB0ZXh0dXJlVHlwZSA9XG4gICAgICAgIHRoaXMuaW1wb3J0VmlkZW8gPyAndGV4dHVyZV9leHRlcm5hbCcgOiAndGV4dHVyZV8yZDxmMzI+JztcbiAgICByZXR1cm4gYFxuICAgICAgQGJpbmRpbmcoMSkgQGdyb3VwKDApIHZhciBzcmM6ICR7dGV4dHVyZVR5cGV9O1xuICAgICAgJHttYWluKCdpbmRleCcpfSB7XG4gICAgICAgIGxldCBmbGF0SW5kZXggPSBpbmRleCAqIHVuaWZvcm1zLm51bUNoYW5uZWxzO1xuICAgICAgICBpZiAoZmxhdEluZGV4IDwgdW5pZm9ybXMuc2l6ZSkge1xuICAgICAgICAgIGxldCBjb29yZHMgPSBnZXRDb29yZHNGcm9tSW5kZXgoZmxhdEluZGV4KTtcbiAgICAgICAgICBsZXQgdmFsdWVzID0gJHt0ZXh0dXJlTG9hZH07XG4gICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB1bmlmb3Jtcy5udW1DaGFubmVsczsgaSA9IGkgKyAxKSB7XG4gICAgICAgICAgICByZXN1bHRbZmxhdEluZGV4ICsgaV0gPSBpMzIoZmxvb3IoMjU1LjAgKiB2YWx1ZXNbaV0pKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgYDtcbiAgfVxufVxuIl19","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use backend file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from '@tensorflow/tfjs-core';\nimport { FromPixels, util } from '@tensorflow/tfjs-core';\nimport { FromPixelsProgram } from '../from_pixels_webgpu';\nexport const fromPixelsConfig = {\n    kernelName: FromPixels,\n    backendName: 'webgpu',\n    kernelFunc: fromPixels,\n};\nlet fromPixels2DContext;\nlet willReadFrequently = env().getBool('CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU');\nexport function fromPixels(args) {\n    const { inputs, backend, attrs } = args;\n    let { pixels } = inputs;\n    const { numChannels } = attrs;\n    if (pixels == null) {\n        throw new Error('pixels passed to tf.browser.fromPixels() can not be null');\n    }\n    const isVideo = typeof (HTMLVideoElement) !== 'undefined' &&\n        pixels instanceof HTMLVideoElement;\n    const isImage = typeof (HTMLImageElement) !== 'undefined' &&\n        pixels instanceof HTMLImageElement;\n    const isCanvas = (typeof (HTMLCanvasElement) !== 'undefined' &&\n        pixels instanceof HTMLCanvasElement) ||\n        (typeof (OffscreenCanvas) !== 'undefined' &&\n            pixels instanceof OffscreenCanvas);\n    const isImageBitmap = typeof (ImageBitmap) !== 'undefined' && pixels instanceof ImageBitmap;\n    const [width, height] = isVideo ?\n        [\n            pixels.videoWidth,\n            pixels.videoHeight\n        ] :\n        [pixels.width, pixels.height];\n    const outputShape = [height, width, numChannels];\n    const importVideo = env().getBool('WEBGPU_IMPORT_EXTERNAL_TEXTURE') && isVideo;\n    const isVideoOrImage = isVideo || isImage;\n    if (isImageBitmap || isCanvas || isVideoOrImage) {\n        let resource;\n        if (importVideo) {\n            resource = backend.device.importExternalTexture({ source: pixels });\n        }\n        else {\n            if (isVideoOrImage) {\n                const newWillReadFrequently = env().getBool('CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU');\n                if (fromPixels2DContext == null ||\n                    newWillReadFrequently !== willReadFrequently) {\n                    willReadFrequently = newWillReadFrequently;\n                    fromPixels2DContext = document.createElement('canvas').getContext('2d', { willReadFrequently });\n                }\n                fromPixels2DContext.canvas.width = width;\n                fromPixels2DContext.canvas.height = height;\n                fromPixels2DContext.drawImage(pixels, 0, 0, width, height);\n                pixels = fromPixels2DContext.canvas;\n            }\n            const usage = GPUTextureUsage.COPY_DST |\n                GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING;\n            const format = 'rgba8unorm';\n            const texture = backend.textureManager.acquireTexture(outputShape[1], outputShape[0], format, usage);\n            backend.queue.copyExternalImageToTexture({ source: pixels }, { texture }, [outputShape[1], outputShape[0]]);\n            resource = texture;\n        }\n        const size = util.sizeFromShape(outputShape);\n        const strides = util.computeStrides(outputShape);\n        const program = new FromPixelsProgram(outputShape, numChannels, importVideo);\n        const uniformData = [\n            { type: 'uint32', data: [size] }, { type: 'uint32', data: [numChannels] },\n            { type: 'uint32', data: [...strides] }\n        ];\n        const input = backend.makeTensorInfo([height, width], 'int32');\n        const info = backend.tensorMap.get(input.dataId);\n        info.resource = resource;\n        const result = backend.runWebGPUProgram(program, [input], 'int32', uniformData);\n        backend.disposeData(input.dataId);\n        return result;\n    }\n    // TODO: Encoding should happen on GPU once we no longer have to download\n    // image data to the CPU.\n    const imageData = pixels.data;\n    let pixelArray = imageData;\n    if (numChannels != null && numChannels !== 4) {\n        pixelArray = new Uint8Array(pixels.width * pixels.height * numChannels);\n        const dataLength = imageData.length;\n        let j = 0;\n        for (let i = 0; i < dataLength; i++) {\n            if (i % 4 < numChannels) {\n                pixelArray[j++] = imageData[i];\n            }\n        }\n    }\n    const output = backend.makeTensorInfo(outputShape, 'int32', new Int32Array(pixelArray));\n    backend.uploadToGPU(output.dataId);\n    return output;\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class BatchNormProgram {\n    constructor(xShape, meanShape, varianceShape, offsetShape, scaleShape) {\n        this.uniforms = 'varianceEpsilon : f32,';\n        // This is an experimental value.\n        this.workgroupSize = [128, 1, 1];\n        this.size = true;\n        this.variableNames = ['x', 'mean', 'variance'];\n        backend_util.assertAndGetBroadcastShape(xShape, meanShape);\n        backend_util.assertAndGetBroadcastShape(xShape, varianceShape);\n        this.outputShape = xShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        if (offsetShape != null) {\n            backend_util.assertAndGetBroadcastShape(xShape, offsetShape);\n            this.variableNames.push('offset');\n        }\n        if (scaleShape != null) {\n            backend_util.assertAndGetBroadcastShape(xShape, scaleShape);\n            this.variableNames.push('scale');\n        }\n        this.offsetShape = offsetShape;\n        this.scaleShape = scaleShape;\n        this.shaderKey = 'batchNorm';\n    }\n    getUserCode() {\n        let offsetSnippet = '0.0';\n        if (this.offsetShape != null) {\n            offsetSnippet = 'getOffsetByOutputIndex(index)';\n        }\n        let scaleSnippet = '1.0';\n        if (this.scaleShape != null) {\n            scaleSnippet = 'getScaleByOutputIndex(index)';\n        }\n        const userCode = `\n      ${main('index')} {\n        if (index < uniforms.size)\n        {\n          let xValue = getXByOutputIndex(index);\n          let meanValue = getMeanByOutputIndex(index);\n          let varianValue = getVarianceByOutputIndex(index);\n          let offsetValue = ${offsetSnippet};\n          let scaleValue = ${scaleSnippet};\n          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));\n          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));\n        }\n      }\n  `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmF0Y2hub3JtX3dlYmdwdS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2JhdGNobm9ybV93ZWJncHUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBQ25ELE9BQU8sRUFBQyxtQkFBbUIsSUFBSSxJQUFJLEVBQWdCLE1BQU0sa0JBQWtCLENBQUM7QUFDNUUsT0FBTyxFQUFDLGVBQWUsRUFBRSxrQkFBa0IsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUVsRSxNQUFNLE9BQU8sZ0JBQWdCO0lBYzNCLFlBQ0ksTUFBZ0IsRUFBRSxTQUFtQixFQUFFLGFBQXVCLEVBQzlELFdBQTBCLEVBQUUsVUFBeUI7UUFWekQsYUFBUSxHQUFHLHdCQUF3QixDQUFDO1FBQ3BDLGlDQUFpQztRQUNqQyxrQkFBYSxHQUE2QixDQUFDLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFJdEQsU0FBSSxHQUFHLElBQUksQ0FBQztRQUtWLElBQUksQ0FBQyxhQUFhLEdBQUcsQ0FBQyxHQUFHLEVBQUUsTUFBTSxFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBQy9DLFlBQVksQ0FBQywwQkFBMEIsQ0FBQyxNQUFNLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDM0QsWUFBWSxDQUFDLDBCQUEwQixDQUFDLE1BQU0sRUFBRSxhQUFhLENBQUMsQ0FBQztRQUMvRCxJQUFJLENBQUMsV0FBVyxHQUFHLE1BQU0sQ0FBQztRQUMxQixJQUFJLENBQUMsY0FBYyxHQUFHLGtCQUFrQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUMzRCxJQUFJLENBQUMsUUFBUSxHQUFHLGVBQWUsQ0FDM0IsSUFBSSxDQUFDLGNBQWMsRUFBRSxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUUvRCxJQUFJLFdBQVcsSUFBSSxJQUFJLEVBQUU7WUFDdkIsWUFBWSxDQUFDLDBCQUEwQixDQUFDLE1BQU0sRUFBRSxXQUFXLENBQUMsQ0FBQztZQUM3RCxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUNuQztRQUNELElBQUksVUFBVSxJQUFJLElBQUksRUFBRTtZQUN0QixZQUFZLENBQUMsMEJBQTBCLENBQUMsTUFBTSxFQUFFLFVBQVUsQ0FBQyxDQUFDO1lBQzVELElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQ2xDO1FBQ0QsSUFBSSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUM7UUFDL0IsSUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7UUFDN0IsSUFBSSxDQUFDLFNBQVMsR0FBRyxXQUFXLENBQUM7SUFDL0IsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLGFBQWEsR0FBRyxLQUFLLENBQUM7UUFDMUIsSUFBSSxJQUFJLENBQUMsV0FBVyxJQUFJLElBQUksRUFBRTtZQUM1QixhQUFhLEdBQUcsK0JBQStCLENBQUM7U0FDakQ7UUFFRCxJQUFJLFlBQVksR0FBRyxLQUFLLENBQUM7UUFDekIsSUFBSSxJQUFJLENBQUMsVUFBVSxJQUFJLElBQUksRUFBRTtZQUMzQixZQUFZLEdBQUcsOEJBQThCLENBQUM7U0FDL0M7UUFFRCxNQUFNLFFBQVEsR0FBRztRQUNiLElBQUksQ0FBQyxPQUFPLENBQUM7Ozs7Ozs4QkFNUyxhQUFhOzZCQUNkLFlBQVk7Ozs7O0dBS3RDLENBQUM7UUFDQSxPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7YmFja2VuZF91dGlsfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuaW1wb3J0IHtnZXRNYWluSGVhZGVyU3RyaW5nIGFzIG1haW4sIFdlYkdQVVByb2dyYW19IGZyb20gJy4vd2ViZ3B1X3Byb2dyYW0nO1xuaW1wb3J0IHtjb21wdXRlRGlzcGF0Y2gsIGZsYXREaXNwYXRjaExheW91dH0gZnJvbSAnLi93ZWJncHVfdXRpbCc7XG5cbmV4cG9ydCBjbGFzcyBCYXRjaE5vcm1Qcm9ncmFtIGltcGxlbWVudHMgV2ViR1BVUHJvZ3JhbSB7XG4gIG91dHB1dFNoYXBlOiBudW1iZXJbXTtcbiAgc2hhZGVyS2V5OiBzdHJpbmc7XG4gIGRpc3BhdGNoTGF5b3V0OiB7eDogbnVtYmVyW10sIHk/OiBudW1iZXJbXSwgej86IG51bWJlcltdfTtcbiAgZGlzcGF0Y2g6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXTtcbiAgdmFyaWFibGVOYW1lczogc3RyaW5nW107XG4gIHVuaWZvcm1zID0gJ3ZhcmlhbmNlRXBzaWxvbiA6IGYzMiwnO1xuICAvLyBUaGlzIGlzIGFuIGV4cGVyaW1lbnRhbCB2YWx1ZS5cbiAgd29ya2dyb3VwU2l6ZTogW251bWJlciwgbnVtYmVyLCBudW1iZXJdID0gWzEyOCwgMSwgMV07XG4gIG9mZnNldFNoYXBlOiBudW1iZXJbXXxudWxsO1xuICBzY2FsZVNoYXBlOiBudW1iZXJbXXxudWxsO1xuICB2YXJpYW5jZUVwc2lsb246IG51bWJlcjtcbiAgc2l6ZSA9IHRydWU7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgICB4U2hhcGU6IG51bWJlcltdLCBtZWFuU2hhcGU6IG51bWJlcltdLCB2YXJpYW5jZVNoYXBlOiBudW1iZXJbXSxcbiAgICAgIG9mZnNldFNoYXBlOiBudW1iZXJbXXxudWxsLCBzY2FsZVNoYXBlOiBudW1iZXJbXXxudWxsKSB7XG4gICAgdGhpcy52YXJpYWJsZU5hbWVzID0gWyd4JywgJ21lYW4nLCAndmFyaWFuY2UnXTtcbiAgICBiYWNrZW5kX3V0aWwuYXNzZXJ0QW5kR2V0QnJvYWRjYXN0U2hhcGUoeFNoYXBlLCBtZWFuU2hhcGUpO1xuICAgIGJhY2tlbmRfdXRpbC5hc3NlcnRBbmRHZXRCcm9hZGNhc3RTaGFwZSh4U2hhcGUsIHZhcmlhbmNlU2hhcGUpO1xuICAgIHRoaXMub3V0cHV0U2hhcGUgPSB4U2hhcGU7XG4gICAgdGhpcy5kaXNwYXRjaExheW91dCA9IGZsYXREaXNwYXRjaExheW91dCh0aGlzLm91dHB1dFNoYXBlKTtcbiAgICB0aGlzLmRpc3BhdGNoID0gY29tcHV0ZURpc3BhdGNoKFxuICAgICAgICB0aGlzLmRpc3BhdGNoTGF5b3V0LCB0aGlzLm91dHB1dFNoYXBlLCB0aGlzLndvcmtncm91cFNpemUpO1xuXG4gICAgaWYgKG9mZnNldFNoYXBlICE9IG51bGwpIHtcbiAgICAgIGJhY2tlbmRfdXRpbC5hc3NlcnRBbmRHZXRCcm9hZGNhc3RTaGFwZSh4U2hhcGUsIG9mZnNldFNoYXBlKTtcbiAgICAgIHRoaXMudmFyaWFibGVOYW1lcy5wdXNoKCdvZmZzZXQnKTtcbiAgICB9XG4gICAgaWYgKHNjYWxlU2hhcGUgIT0gbnVsbCkge1xuICAgICAgYmFja2VuZF91dGlsLmFzc2VydEFuZEdldEJyb2FkY2FzdFNoYXBlKHhTaGFwZSwgc2NhbGVTaGFwZSk7XG4gICAgICB0aGlzLnZhcmlhYmxlTmFtZXMucHVzaCgnc2NhbGUnKTtcbiAgICB9XG4gICAgdGhpcy5vZmZzZXRTaGFwZSA9IG9mZnNldFNoYXBlO1xuICAgIHRoaXMuc2NhbGVTaGFwZSA9IHNjYWxlU2hhcGU7XG4gICAgdGhpcy5zaGFkZXJLZXkgPSAnYmF0Y2hOb3JtJztcbiAgfVxuXG4gIGdldFVzZXJDb2RlKCk6IHN0cmluZyB7XG4gICAgbGV0IG9mZnNldFNuaXBwZXQgPSAnMC4wJztcbiAgICBpZiAodGhpcy5vZmZzZXRTaGFwZSAhPSBudWxsKSB7XG4gICAgICBvZmZzZXRTbmlwcGV0ID0gJ2dldE9mZnNldEJ5T3V0cHV0SW5kZXgoaW5kZXgpJztcbiAgICB9XG5cbiAgICBsZXQgc2NhbGVTbmlwcGV0ID0gJzEuMCc7XG4gICAgaWYgKHRoaXMuc2NhbGVTaGFwZSAhPSBudWxsKSB7XG4gICAgICBzY2FsZVNuaXBwZXQgPSAnZ2V0U2NhbGVCeU91dHB1dEluZGV4KGluZGV4KSc7XG4gICAgfVxuXG4gICAgY29uc3QgdXNlckNvZGUgPSBgXG4gICAgICAke21haW4oJ2luZGV4Jyl9IHtcbiAgICAgICAgaWYgKGluZGV4IDwgdW5pZm9ybXMuc2l6ZSlcbiAgICAgICAge1xuICAgICAgICAgIGxldCB4VmFsdWUgPSBnZXRYQnlPdXRwdXRJbmRleChpbmRleCk7XG4gICAgICAgICAgbGV0IG1lYW5WYWx1ZSA9IGdldE1lYW5CeU91dHB1dEluZGV4KGluZGV4KTtcbiAgICAgICAgICBsZXQgdmFyaWFuVmFsdWUgPSBnZXRWYXJpYW5jZUJ5T3V0cHV0SW5kZXgoaW5kZXgpO1xuICAgICAgICAgIGxldCBvZmZzZXRWYWx1ZSA9ICR7b2Zmc2V0U25pcHBldH07XG4gICAgICAgICAgbGV0IHNjYWxlVmFsdWUgPSAke3NjYWxlU25pcHBldH07XG4gICAgICAgICAgbGV0IGludiA9IHNjYWxlVmFsdWUgKiBpbnZlcnNlU3FydCh2YXJpYW5WYWx1ZSArIGYzMih1bmlmb3Jtcy52YXJpYW5jZUVwc2lsb24pKTtcbiAgICAgICAgICBzZXRPdXRwdXRBdEluZGV4KGluZGV4LGRvdCh2ZWMzPGYzMj4oeFZhbHVlLCAtbWVhblZhbHVlLCBvZmZzZXRWYWx1ZSksIHZlYzM8ZjMyPihpbnYsIGludiwgMS4wKSkpO1xuICAgICAgICB9XG4gICAgICB9XG4gIGA7XG4gICAgcmV0dXJuIHVzZXJDb2RlO1xuICB9XG59XG4iXX0=","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FusedBatchNorm } from '@tensorflow/tfjs-core';\nimport { BatchNormProgram } from '../batchnorm_webgpu';\nexport const fusedBatchNormConfig = {\n    kernelName: FusedBatchNorm,\n    backendName: 'webgpu',\n    kernelFunc: ({ inputs, attrs, backend }) => {\n        const { x, scale, offset, mean, variance } = inputs;\n        const { varianceEpsilon } = attrs;\n        const webGPUBackend = backend;\n        const batchNormInputs = [x, mean, variance];\n        let offsetShape = null;\n        if (offset != null) {\n            offsetShape = offset.shape;\n            batchNormInputs.push(offset);\n        }\n        let scaleShape = null;\n        if (scale != null) {\n            scaleShape = scale.shape;\n            batchNormInputs.push(scale);\n        }\n        const program = new BatchNormProgram(x.shape, mean.shape, variance.shape, offsetShape, scaleShape);\n        const uniformData = [{ type: 'float32', data: [varianceEpsilon] }];\n        return webGPUBackend.runWebGPUProgram(program, batchNormInputs, x.dtype, uniformData);\n    }\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRnVzZWRCYXRjaE5vcm0uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL0Z1c2VkQmF0Y2hOb3JtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxjQUFjLEVBQWtFLE1BQU0sdUJBQXVCLENBQUM7QUFJdEgsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFFckQsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQWlCO0lBQ2hELFVBQVUsRUFBRSxjQUFjO0lBQzFCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxDQUFDLEVBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUMsRUFBRSxFQUFFO1FBQ3ZDLE1BQU0sRUFBQyxDQUFDLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFDLEdBQUcsTUFBOEIsQ0FBQztRQUMxRSxNQUFNLEVBQUMsZUFBZSxFQUFDLEdBQUcsS0FBdUMsQ0FBQztRQUNsRSxNQUFNLGFBQWEsR0FBRyxPQUF3QixDQUFDO1FBQy9DLE1BQU0sZUFBZSxHQUFHLENBQUMsQ0FBVyxFQUFFLElBQWMsRUFBRSxRQUFrQixDQUFDLENBQUM7UUFDMUUsSUFBSSxXQUFXLEdBQUcsSUFBSSxDQUFDO1FBQ3ZCLElBQUksTUFBTSxJQUFJLElBQUksRUFBRTtZQUNsQixXQUFXLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQztZQUMzQixlQUFlLENBQUMsSUFBSSxDQUFDLE1BQWdCLENBQUMsQ0FBQztTQUN4QztRQUNELElBQUksVUFBVSxHQUFHLElBQUksQ0FBQztRQUN0QixJQUFJLEtBQUssSUFBSSxJQUFJLEVBQUU7WUFDakIsVUFBVSxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUM7WUFDekIsZUFBZSxDQUFDLElBQUksQ0FBQyxLQUFlLENBQUMsQ0FBQztTQUN2QztRQUNELE1BQU0sT0FBTyxHQUFHLElBQUksZ0JBQWdCLENBQ2hDLENBQUMsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsS0FBSyxFQUFFLFdBQVcsRUFBRSxVQUFVLENBQUMsQ0FBQztRQUNsRSxNQUFNLFdBQVcsR0FBRyxDQUFDLEVBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxlQUFlLENBQUMsRUFBQyxDQUFDLENBQUM7UUFDakUsT0FBTyxhQUFhLENBQUMsZ0JBQWdCLENBQ2pDLE9BQU8sRUFBRSxlQUFlLEVBQUUsQ0FBQyxDQUFDLEtBQUssRUFBRSxXQUFXLENBQUMsQ0FBQztJQUN0RCxDQUFDO0NBQ0YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtGdXNlZEJhdGNoTm9ybSwgRnVzZWRCYXRjaE5vcm1BdHRycywgRnVzZWRCYXRjaE5vcm1JbnB1dHMsIEtlcm5lbENvbmZpZywgVGVuc29yfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcblxuaW1wb3J0IHtCYXRjaE5vcm1Qcm9ncmFtfSBmcm9tICcuLi9iYXRjaG5vcm1fd2ViZ3B1JztcblxuZXhwb3J0IGNvbnN0IGZ1c2VkQmF0Y2hOb3JtQ29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IEZ1c2VkQmF0Y2hOb3JtLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6ICh7aW5wdXRzLCBhdHRycywgYmFja2VuZH0pID0+IHtcbiAgICBjb25zdCB7eCwgc2NhbGUsIG9mZnNldCwgbWVhbiwgdmFyaWFuY2V9ID0gaW5wdXRzIGFzIEZ1c2VkQmF0Y2hOb3JtSW5wdXRzO1xuICAgIGNvbnN0IHt2YXJpYW5jZUVwc2lsb259ID0gYXR0cnMgYXMgdW5rbm93biBhcyBGdXNlZEJhdGNoTm9ybUF0dHJzO1xuICAgIGNvbnN0IHdlYkdQVUJhY2tlbmQgPSBiYWNrZW5kIGFzIFdlYkdQVUJhY2tlbmQ7XG4gICAgY29uc3QgYmF0Y2hOb3JtSW5wdXRzID0gW3ggYXMgVGVuc29yLCBtZWFuIGFzIFRlbnNvciwgdmFyaWFuY2UgYXMgVGVuc29yXTtcbiAgICBsZXQgb2Zmc2V0U2hhcGUgPSBudWxsO1xuICAgIGlmIChvZmZzZXQgIT0gbnVsbCkge1xuICAgICAgb2Zmc2V0U2hhcGUgPSBvZmZzZXQuc2hhcGU7XG4gICAgICBiYXRjaE5vcm1JbnB1dHMucHVzaChvZmZzZXQgYXMgVGVuc29yKTtcbiAgICB9XG4gICAgbGV0IHNjYWxlU2hhcGUgPSBudWxsO1xuICAgIGlmIChzY2FsZSAhPSBudWxsKSB7XG4gICAgICBzY2FsZVNoYXBlID0gc2NhbGUuc2hhcGU7XG4gICAgICBiYXRjaE5vcm1JbnB1dHMucHVzaChzY2FsZSBhcyBUZW5zb3IpO1xuICAgIH1cbiAgICBjb25zdCBwcm9ncmFtID0gbmV3IEJhdGNoTm9ybVByb2dyYW0oXG4gICAgICAgIHguc2hhcGUsIG1lYW4uc2hhcGUsIHZhcmlhbmNlLnNoYXBlLCBvZmZzZXRTaGFwZSwgc2NhbGVTaGFwZSk7XG4gICAgY29uc3QgdW5pZm9ybURhdGEgPSBbe3R5cGU6ICdmbG9hdDMyJywgZGF0YTogW3ZhcmlhbmNlRXBzaWxvbl19XTtcbiAgICByZXR1cm4gd2ViR1BVQmFja2VuZC5ydW5XZWJHUFVQcm9ncmFtKFxuICAgICAgICBwcm9ncmFtLCBiYXRjaE5vcm1JbnB1dHMsIHguZHR5cGUsIHVuaWZvcm1EYXRhKTtcbiAgfVxufTtcbiJdfQ==","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, FusedConv2D } from '@tensorflow/tfjs-core';\nimport { conv2DImpl } from './Conv2D_impl';\nexport function fusedConv2d(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, filter, bias, preluActivationWeights } = inputs;\n    const { strides, pad, dataFormat, dilations, dimRoundingMode, activation, leakyreluAlpha } = attrs;\n    const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n    const convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, dilations, pad, dimRoundingMode, false /* depthwise */, $dataFormat);\n    return conv2DImpl({\n        x,\n        filter,\n        convInfo,\n        backend,\n        bias,\n        preluActivationWeights,\n        leakyreluAlpha,\n        activation\n    });\n}\nexport const fusedConv2DConfig = {\n    kernelName: FusedConv2D,\n    backendName: 'webgpu',\n    kernelFunc: fusedConv2d,\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRnVzZWRDb252MkQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL0Z1c2VkQ29udjJELnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxZQUFZLEVBQUUsV0FBVyxFQUFnRSxNQUFNLHVCQUF1QixDQUFDO0FBSS9ILE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFekMsTUFBTSxVQUFVLFdBQVcsQ0FBQyxJQUkzQjtJQUNDLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QyxNQUFNLEVBQUMsQ0FBQyxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsc0JBQXNCLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFDekQsTUFBTSxFQUNKLE9BQU8sRUFDUCxHQUFHLEVBQ0gsVUFBVSxFQUNWLFNBQVMsRUFDVCxlQUFlLEVBQ2YsVUFBVSxFQUNWLGNBQWMsRUFDZixHQUFHLEtBQUssQ0FBQztJQUVWLE1BQU0sV0FBVyxHQUFHLFlBQVksQ0FBQyx1QkFBdUIsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNyRSxNQUFNLFFBQVEsR0FBRyxZQUFZLENBQUMsaUJBQWlCLENBQzNDLENBQUMsQ0FBQyxLQUF5QyxFQUMzQyxNQUFNLENBQUMsS0FBeUMsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLEdBQUcsRUFDekUsZUFBZSxFQUFFLEtBQUssQ0FBQyxlQUFlLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFFekQsT0FBTyxVQUFVLENBQUM7UUFDaEIsQ0FBQztRQUNELE1BQU07UUFDTixRQUFRO1FBQ1IsT0FBTztRQUNQLElBQUk7UUFDSixzQkFBc0I7UUFDdEIsY0FBYztRQUNkLFVBQVU7S0FDWCxDQUFDLENBQUM7QUFDTCxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQWlCO0lBQzdDLFVBQVUsRUFBRSxXQUFXO0lBQ3ZCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxXQUFvQztDQUNqRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge2JhY2tlbmRfdXRpbCwgRnVzZWRDb252MkQsIEZ1c2VkQ29udjJEQXR0cnMsIEZ1c2VkQ29udjJESW5wdXRzLCBLZXJuZWxDb25maWcsIEtlcm5lbEZ1bmN9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuXG5pbXBvcnQge2NvbnYyREltcGx9IGZyb20gJy4vQ29udjJEX2ltcGwnO1xuXG5leHBvcnQgZnVuY3Rpb24gZnVzZWRDb252MmQoYXJnczoge1xuICBpbnB1dHM6IEZ1c2VkQ29udjJESW5wdXRzLFxuICBhdHRyczogRnVzZWRDb252MkRBdHRycyxcbiAgYmFja2VuZDogV2ViR1BVQmFja2VuZFxufSkge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7eCwgZmlsdGVyLCBiaWFzLCBwcmVsdUFjdGl2YXRpb25XZWlnaHRzfSA9IGlucHV0cztcbiAgY29uc3Qge1xuICAgIHN0cmlkZXMsXG4gICAgcGFkLFxuICAgIGRhdGFGb3JtYXQsXG4gICAgZGlsYXRpb25zLFxuICAgIGRpbVJvdW5kaW5nTW9kZSxcbiAgICBhY3RpdmF0aW9uLFxuICAgIGxlYWt5cmVsdUFscGhhXG4gIH0gPSBhdHRycztcblxuICBjb25zdCAkZGF0YUZvcm1hdCA9IGJhY2tlbmRfdXRpbC5jb252ZXJ0Q29udjJERGF0YUZvcm1hdChkYXRhRm9ybWF0KTtcbiAgY29uc3QgY29udkluZm8gPSBiYWNrZW5kX3V0aWwuY29tcHV0ZUNvbnYyREluZm8oXG4gICAgICB4LnNoYXBlIGFzIFtudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdLFxuICAgICAgZmlsdGVyLnNoYXBlIGFzIFtudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdLCBzdHJpZGVzLCBkaWxhdGlvbnMsIHBhZCxcbiAgICAgIGRpbVJvdW5kaW5nTW9kZSwgZmFsc2UgLyogZGVwdGh3aXNlICovLCAkZGF0YUZvcm1hdCk7XG5cbiAgcmV0dXJuIGNvbnYyREltcGwoe1xuICAgIHgsXG4gICAgZmlsdGVyLFxuICAgIGNvbnZJbmZvLFxuICAgIGJhY2tlbmQsXG4gICAgYmlhcyxcbiAgICBwcmVsdUFjdGl2YXRpb25XZWlnaHRzLFxuICAgIGxlYWt5cmVsdUFscGhhLFxuICAgIGFjdGl2YXRpb25cbiAgfSk7XG59XG5cbmV4cG9ydCBjb25zdCBmdXNlZENvbnYyRENvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBGdXNlZENvbnYyRCxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBmdXNlZENvbnYyZCBhcyB1bmtub3duIGFzIEtlcm5lbEZ1bmMsXG59O1xuIl19","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, FusedDepthwiseConv2D, util } from '@tensorflow/tfjs-core';\nimport { DepthwiseConv2DVec4Program } from '../depthwise_conv2d_vec4_webgpu';\nimport { DepthwiseConv2DProgram } from '../depthwise_conv2d_webgpu';\nexport function fusedDepthwiseConv2D(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, filter, bias, preluActivationWeights } = inputs;\n    const { strides, pad, dilations, dimRoundingMode, activation, leakyreluAlpha } = attrs;\n    let $dilations = dilations;\n    if ($dilations == null) {\n        $dilations = [1, 1];\n    }\n    util.assert(backend_util.eitherStridesOrDilationsAreOne(strides, $dilations), () => 'Error in depthwiseConv2d: Either strides or dilations must be ' +\n        `1. Got strides ${strides} and dilations '${$dilations}'`);\n    const convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, $dilations, pad, dimRoundingMode, true /* depthwise */);\n    const programInputs = [x, filter];\n    const hasBias = bias != null;\n    const hasPreluActivationWeights = preluActivationWeights != null;\n    if (hasBias) {\n        programInputs.push(bias);\n    }\n    if (hasPreluActivationWeights) {\n        programInputs.push(preluActivationWeights);\n    }\n    const dimensions = [\n        { type: 'int32', data: [convInfo.padInfo.top, convInfo.padInfo.left] },\n        { type: 'int32', data: [convInfo.inHeight, convInfo.inWidth] },\n    ];\n    let program;\n    if (convInfo.outHeight > 4 && convInfo.outWidth > 4 &&\n        convInfo.strideWidth <= 2 &&\n        convInfo.inChannels === convInfo.outChannels &&\n        convInfo.dilationHeight === 1 && convInfo.dilationWidth === 1 &&\n        convInfo.inChannels % 4 === 0) {\n        program = new DepthwiseConv2DVec4Program(convInfo, hasBias, activation, hasPreluActivationWeights);\n        dimensions.push({ type: 'int32', data: [program.virtualWidth] });\n    }\n    else {\n        program = new DepthwiseConv2DProgram(convInfo, hasBias, activation, hasPreluActivationWeights);\n        dimensions.push({ type: 'int32', data: [convInfo.filterHeight] }, { type: 'int32', data: [convInfo.filterWidth] }, { type: 'int32', data: [convInfo.strideHeight, convInfo.strideWidth] }, {\n            type: 'int32',\n            data: [convInfo.dilationHeight, convInfo.dilationWidth]\n        });\n    }\n    if (activation === 'leakyrelu') {\n        dimensions.push({ type: 'float32', data: [leakyreluAlpha] });\n        program.uniforms += ' alpha : f32,';\n    }\n    const result = backend.runWebGPUProgram(program, programInputs, 'float32', dimensions);\n    return result;\n}\nexport const fusedDepthwiseConv2DConfig = {\n    kernelName: FusedDepthwiseConv2D,\n    backendName: 'webgpu',\n    kernelFunc: fusedDepthwiseConv2D,\n};\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType, getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class GatherNDProgram {\n    constructor(sliceDim, shape) {\n        this.variableNames = ['A', 'indices'];\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = shape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.shaderKey = `gathernd_${sliceDim}`;\n        this.sliceDim = sliceDim;\n        this.uniforms = `sliceDim : i32, strides : ${getCoordsDataType(sliceDim)},`;\n    }\n    getUserCode() {\n        let strideString;\n        if (this.sliceDim > 1) {\n            strideString = 'uniforms.strides[j]';\n        }\n        else {\n            strideString = 'uniforms.strides';\n        }\n        const userCode = `\n      ${main('index')} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          var flattenIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexTemp = i32(round(getIndices(coords[0], j)));\n            let strideNum = ${strideString};\n            flattenIndex = flattenIndex + indexTemp * strideNum;\n          }\n\n          setOutputAtIndex(index, getA(flattenIndex, coords[1]));\n        }\n      }\n      `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2F0aGVyX25kX3dlYmdwdS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2dhdGhlcl9uZF93ZWJncHUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLGlCQUFpQixFQUFFLG1CQUFtQixJQUFJLElBQUksRUFBZ0IsTUFBTSxrQkFBa0IsQ0FBQztBQUMvRixPQUFPLEVBQUMsZUFBZSxFQUFFLGtCQUFrQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRWxFLE1BQU0sT0FBTyxlQUFlO0lBVTFCLFlBQVksUUFBZ0IsRUFBRSxLQUFlO1FBTDdDLGtCQUFhLEdBQWEsQ0FBQyxHQUFHLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFFM0Msa0JBQWEsR0FBNkIsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3JELFNBQUksR0FBRyxJQUFJLENBQUM7UUFHVixJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztRQUN6QixJQUFJLENBQUMsY0FBYyxHQUFHLGtCQUFrQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUMzRCxJQUFJLENBQUMsUUFBUSxHQUFHLGVBQWUsQ0FDM0IsSUFBSSxDQUFDLGNBQWMsRUFBRSxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUMvRCxJQUFJLENBQUMsU0FBUyxHQUFHLFlBQVksUUFBUSxFQUFFLENBQUM7UUFDeEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLFFBQVEsR0FBRyw2QkFBNkIsaUJBQWlCLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQztJQUM5RSxDQUFDO0lBRUQsV0FBVztRQUNULElBQUksWUFBWSxDQUFDO1FBQ2pCLElBQUksSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLEVBQUU7WUFDckIsWUFBWSxHQUFHLHFCQUFxQixDQUFDO1NBQ3RDO2FBQU07WUFDTCxZQUFZLEdBQUcsa0JBQWtCLENBQUM7U0FDbkM7UUFDRCxNQUFNLFFBQVEsR0FBRztRQUNiLElBQUksQ0FBQyxPQUFPLENBQUM7Ozs7Ozs4QkFNUyxZQUFZOzs7Ozs7O09BT25DLENBQUM7UUFDSixPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7Z2V0Q29vcmRzRGF0YVR5cGUsIGdldE1haW5IZWFkZXJTdHJpbmcgYXMgbWFpbiwgV2ViR1BVUHJvZ3JhbX0gZnJvbSAnLi93ZWJncHVfcHJvZ3JhbSc7XG5pbXBvcnQge2NvbXB1dGVEaXNwYXRjaCwgZmxhdERpc3BhdGNoTGF5b3V0fSBmcm9tICcuL3dlYmdwdV91dGlsJztcblxuZXhwb3J0IGNsYXNzIEdhdGhlck5EUHJvZ3JhbSBpbXBsZW1lbnRzIFdlYkdQVVByb2dyYW0ge1xuICBvdXRwdXRTaGFwZTogbnVtYmVyW107XG4gIHNoYWRlcktleTogc3RyaW5nO1xuICBkaXNwYXRjaExheW91dDoge3g6IG51bWJlcltdfTtcbiAgZGlzcGF0Y2g6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXTtcbiAgdmFyaWFibGVOYW1lczogc3RyaW5nW10gPSBbJ0EnLCAnaW5kaWNlcyddO1xuICB1bmlmb3Jtczogc3RyaW5nO1xuICB3b3JrZ3JvdXBTaXplOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl0gPSBbNjQsIDEsIDFdO1xuICBzaXplID0gdHJ1ZTtcbiAgc2xpY2VEaW06IG51bWJlcjtcbiAgY29uc3RydWN0b3Ioc2xpY2VEaW06IG51bWJlciwgc2hhcGU6IG51bWJlcltdKSB7XG4gICAgdGhpcy5vdXRwdXRTaGFwZSA9IHNoYXBlO1xuICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQgPSBmbGF0RGlzcGF0Y2hMYXlvdXQodGhpcy5vdXRwdXRTaGFwZSk7XG4gICAgdGhpcy5kaXNwYXRjaCA9IGNvbXB1dGVEaXNwYXRjaChcbiAgICAgICAgdGhpcy5kaXNwYXRjaExheW91dCwgdGhpcy5vdXRwdXRTaGFwZSwgdGhpcy53b3JrZ3JvdXBTaXplKTtcbiAgICB0aGlzLnNoYWRlcktleSA9IGBnYXRoZXJuZF8ke3NsaWNlRGltfWA7XG4gICAgdGhpcy5zbGljZURpbSA9IHNsaWNlRGltO1xuICAgIHRoaXMudW5pZm9ybXMgPSBgc2xpY2VEaW0gOiBpMzIsIHN0cmlkZXMgOiAke2dldENvb3Jkc0RhdGFUeXBlKHNsaWNlRGltKX0sYDtcbiAgfVxuXG4gIGdldFVzZXJDb2RlKCk6IHN0cmluZyB7XG4gICAgbGV0IHN0cmlkZVN0cmluZztcbiAgICBpZiAodGhpcy5zbGljZURpbSA+IDEpIHtcbiAgICAgIHN0cmlkZVN0cmluZyA9ICd1bmlmb3Jtcy5zdHJpZGVzW2pdJztcbiAgICB9IGVsc2Uge1xuICAgICAgc3RyaWRlU3RyaW5nID0gJ3VuaWZvcm1zLnN0cmlkZXMnO1xuICAgIH1cbiAgICBjb25zdCB1c2VyQ29kZSA9IGBcbiAgICAgICR7bWFpbignaW5kZXgnKX0ge1xuICAgICAgICBpZiAoaW5kZXggPCB1bmlmb3Jtcy5zaXplKSB7XG4gICAgICAgICAgbGV0IGNvb3JkcyA9IGdldENvb3Jkc0Zyb21JbmRleChpbmRleCk7XG4gICAgICAgICAgdmFyIGZsYXR0ZW5JbmRleCA9IDA7XG4gICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB1bmlmb3Jtcy5zbGljZURpbTsgaiA9IGogKyAxKSB7XG4gICAgICAgICAgICBsZXQgaW5kZXhUZW1wID0gaTMyKHJvdW5kKGdldEluZGljZXMoY29vcmRzWzBdLCBqKSkpO1xuICAgICAgICAgICAgbGV0IHN0cmlkZU51bSA9ICR7c3RyaWRlU3RyaW5nfTtcbiAgICAgICAgICAgIGZsYXR0ZW5JbmRleCA9IGZsYXR0ZW5JbmRleCArIGluZGV4VGVtcCAqIHN0cmlkZU51bTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBzZXRPdXRwdXRBdEluZGV4KGluZGV4LCBnZXRBKGZsYXR0ZW5JbmRleCwgY29vcmRzWzFdKSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGA7XG4gICAgcmV0dXJuIHVzZXJDb2RlO1xuICB9XG59XG4iXX0=","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, GatherNd, util } from '@tensorflow/tfjs-core';\nimport { GatherNDProgram } from '../gather_nd_webgpu';\nimport { gatherNdImplCPU } from '../kernel_utils/shared';\nimport { reshape } from './Reshape';\nexport function gatherNd(args) {\n    const { inputs, backend } = args;\n    const { params, indices } = inputs;\n    const indicesShape = indices.shape;\n    const sliceRank = indicesShape[indicesShape.length - 1];\n    const paramsSize = util.sizeFromShape(params.shape);\n    const [resultShape, numSlices, sliceSize, strides] = backend_util.prepareAndValidate(params, indices);\n    const flattenIndices = reshape({ inputs: { x: indices }, backend, attrs: { shape: [numSlices, sliceRank] } });\n    const flattenX = reshape({\n        inputs: { x: params },\n        backend,\n        attrs: { shape: [(util.sizeFromShape(params.shape) / sliceSize), sliceSize] }\n    });\n    if (backend.shouldExecuteOnCPU([params, indices]) ||\n        params.dtype === 'string') {\n        const indicesData = backend.readSync(indices.dataId);\n        const paramsBuf = backend.bufferSync(params);\n        const outValue = gatherNdImplCPU(indicesData, paramsBuf, params.dtype, numSlices, sliceRank, sliceSize, strides, params.shape, paramsSize);\n        return backend.makeTensorInfo(resultShape, params.dtype, outValue.values);\n    }\n    const program = new GatherNDProgram(sliceRank, [numSlices, sliceSize]);\n    const uniformData = [{ type: 'int32', data: [sliceRank] }, { type: 'int32', data: strides }];\n    const res = backend.runWebGPUProgram(program, [flattenX, flattenIndices], flattenX.dtype, uniformData);\n    const reshaped = reshape({ inputs: { x: res }, backend, attrs: { shape: resultShape } });\n    backend.disposeData(flattenIndices.dataId);\n    backend.disposeData(flattenX.dataId);\n    backend.disposeData(res.dataId);\n    return reshaped;\n}\nexport const gatherNdConfig = {\n    kernelName: GatherNd,\n    backendName: 'webgpu',\n    kernelFunc: gatherNd\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2F0aGVyTmQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL0dhdGhlck5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxZQUFZLEVBQUUsUUFBUSxFQUEwRSxJQUFJLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUczSSxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFDcEQsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBRXZELE9BQU8sRUFBQyxPQUFPLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFFbEMsTUFBTSxVQUFVLFFBQVEsQ0FDcEIsSUFBc0Q7SUFDeEQsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFDL0IsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFFakMsTUFBTSxZQUFZLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQztJQUNuQyxNQUFNLFNBQVMsR0FBRyxZQUFZLENBQUMsWUFBWSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUN4RCxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUVwRCxNQUFNLENBQUMsV0FBVyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsT0FBTyxDQUFDLEdBQzlDLFlBQVksQ0FBQyxrQkFBa0IsQ0FBQyxNQUFNLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFFckQsTUFBTSxjQUFjLEdBQUcsT0FBTyxDQUMxQixFQUFDLE1BQU0sRUFBRSxFQUFDLENBQUMsRUFBRSxPQUFPLEVBQUMsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLEVBQUMsS0FBSyxFQUFFLENBQUMsU0FBUyxFQUFFLFNBQVMsQ0FBQyxFQUFDLEVBQUMsQ0FBQyxDQUFDO0lBQzdFLE1BQU0sUUFBUSxHQUFHLE9BQU8sQ0FBQztRQUN2QixNQUFNLEVBQUUsRUFBQyxDQUFDLEVBQUUsTUFBTSxFQUFDO1FBQ25CLE9BQU87UUFDUCxLQUFLLEVBQUUsRUFBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLFNBQVMsQ0FBQyxFQUFFLFNBQVMsQ0FBQyxFQUFDO0tBQzVFLENBQUMsQ0FBQztJQUNILElBQUksT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUMsTUFBTSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQzdDLE1BQU0sQ0FBQyxLQUFLLEtBQUssUUFBUSxFQUFFO1FBQzdCLE1BQU0sV0FBVyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBZSxDQUFDO1FBQ25FLE1BQU0sU0FBUyxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQWtCLE1BQU0sQ0FBQyxDQUFDO1FBQzlELE1BQU0sUUFBUSxHQUFHLGVBQWUsQ0FDNUIsV0FBVyxFQUFFLFNBQVMsRUFBRSxNQUFNLENBQUMsS0FBSyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUNyRSxPQUFPLEVBQUUsTUFBTSxDQUFDLEtBQUssRUFBRSxVQUFVLENBQUMsQ0FBQztRQUV2QyxPQUFPLE9BQU8sQ0FBQyxjQUFjLENBQUMsV0FBVyxFQUFFLE1BQU0sQ0FBQyxLQUFLLEVBQUUsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0tBQzNFO0lBQ0QsTUFBTSxPQUFPLEdBQUcsSUFBSSxlQUFlLENBQUMsU0FBUyxFQUFFLENBQUMsU0FBUyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUM7SUFDdkUsTUFBTSxXQUFXLEdBQ2IsQ0FBQyxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsU0FBUyxDQUFDLEVBQUMsRUFBRSxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7SUFDekUsTUFBTSxHQUFHLEdBQUcsT0FBTyxDQUFDLGdCQUFnQixDQUNoQyxPQUFPLEVBQUUsQ0FBQyxRQUFRLEVBQUUsY0FBYyxDQUFDLEVBQUUsUUFBUSxDQUFDLEtBQUssRUFBRSxXQUFXLENBQUMsQ0FBQztJQUV0RSxNQUFNLFFBQVEsR0FDVixPQUFPLENBQUMsRUFBQyxNQUFNLEVBQUUsRUFBQyxDQUFDLEVBQUUsR0FBRyxFQUFDLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxFQUFDLEtBQUssRUFBRSxXQUFXLEVBQUMsRUFBQyxDQUFDLENBQUM7SUFFdEUsT0FBTyxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDM0MsT0FBTyxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDckMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFaEMsT0FBTyxRQUFRLENBQUM7QUFDbEIsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBaUI7SUFDMUMsVUFBVSxFQUFFLFFBQVE7SUFDcEIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLFFBQWlDO0NBQzlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7YmFja2VuZF91dGlsLCBHYXRoZXJOZCwgR2F0aGVyTmRJbnB1dHMsIEtlcm5lbENvbmZpZywgS2VybmVsRnVuYywgUmFuaywgVGVuc29ySW5mbywgVHlwZWRBcnJheSwgdXRpbH0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge0dhdGhlck5EUHJvZ3JhbX0gZnJvbSAnLi4vZ2F0aGVyX25kX3dlYmdwdSc7XG5pbXBvcnQge2dhdGhlck5kSW1wbENQVX0gZnJvbSAnLi4va2VybmVsX3V0aWxzL3NoYXJlZCc7XG5cbmltcG9ydCB7cmVzaGFwZX0gZnJvbSAnLi9SZXNoYXBlJztcblxuZXhwb3J0IGZ1bmN0aW9uIGdhdGhlck5kKFxuICAgIGFyZ3M6IHtpbnB1dHM6IEdhdGhlck5kSW5wdXRzLCBiYWNrZW5kOiBXZWJHUFVCYWNrZW5kfSk6IFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kfSA9IGFyZ3M7XG4gIGNvbnN0IHtwYXJhbXMsIGluZGljZXN9ID0gaW5wdXRzO1xuXG4gIGNvbnN0IGluZGljZXNTaGFwZSA9IGluZGljZXMuc2hhcGU7XG4gIGNvbnN0IHNsaWNlUmFuayA9IGluZGljZXNTaGFwZVtpbmRpY2VzU2hhcGUubGVuZ3RoIC0gMV07XG4gIGNvbnN0IHBhcmFtc1NpemUgPSB1dGlsLnNpemVGcm9tU2hhcGUocGFyYW1zLnNoYXBlKTtcblxuICBjb25zdCBbcmVzdWx0U2hhcGUsIG51bVNsaWNlcywgc2xpY2VTaXplLCBzdHJpZGVzXSA9XG4gICAgICBiYWNrZW5kX3V0aWwucHJlcGFyZUFuZFZhbGlkYXRlKHBhcmFtcywgaW5kaWNlcyk7XG5cbiAgY29uc3QgZmxhdHRlbkluZGljZXMgPSByZXNoYXBlKFxuICAgICAge2lucHV0czoge3g6IGluZGljZXN9LCBiYWNrZW5kLCBhdHRyczoge3NoYXBlOiBbbnVtU2xpY2VzLCBzbGljZVJhbmtdfX0pO1xuICBjb25zdCBmbGF0dGVuWCA9IHJlc2hhcGUoe1xuICAgIGlucHV0czoge3g6IHBhcmFtc30sXG4gICAgYmFja2VuZCxcbiAgICBhdHRyczoge3NoYXBlOiBbKHV0aWwuc2l6ZUZyb21TaGFwZShwYXJhbXMuc2hhcGUpIC8gc2xpY2VTaXplKSwgc2xpY2VTaXplXX1cbiAgfSk7XG4gIGlmIChiYWNrZW5kLnNob3VsZEV4ZWN1dGVPbkNQVShbcGFyYW1zLCBpbmRpY2VzXSkgfHxcbiAgICAgIHBhcmFtcy5kdHlwZSA9PT0gJ3N0cmluZycpIHtcbiAgICBjb25zdCBpbmRpY2VzRGF0YSA9IGJhY2tlbmQucmVhZFN5bmMoaW5kaWNlcy5kYXRhSWQpIGFzIFR5cGVkQXJyYXk7XG4gICAgY29uc3QgcGFyYW1zQnVmID0gYmFja2VuZC5idWZmZXJTeW5jPFJhbmssICdmbG9hdDMyJz4ocGFyYW1zKTtcbiAgICBjb25zdCBvdXRWYWx1ZSA9IGdhdGhlck5kSW1wbENQVShcbiAgICAgICAgaW5kaWNlc0RhdGEsIHBhcmFtc0J1ZiwgcGFyYW1zLmR0eXBlLCBudW1TbGljZXMsIHNsaWNlUmFuaywgc2xpY2VTaXplLFxuICAgICAgICBzdHJpZGVzLCBwYXJhbXMuc2hhcGUsIHBhcmFtc1NpemUpO1xuXG4gICAgcmV0dXJuIGJhY2tlbmQubWFrZVRlbnNvckluZm8ocmVzdWx0U2hhcGUsIHBhcmFtcy5kdHlwZSwgb3V0VmFsdWUudmFsdWVzKTtcbiAgfVxuICBjb25zdCBwcm9ncmFtID0gbmV3IEdhdGhlck5EUHJvZ3JhbShzbGljZVJhbmssIFtudW1TbGljZXMsIHNsaWNlU2l6ZV0pO1xuICBjb25zdCB1bmlmb3JtRGF0YSA9XG4gICAgICBbe3R5cGU6ICdpbnQzMicsIGRhdGE6IFtzbGljZVJhbmtdfSwge3R5cGU6ICdpbnQzMicsIGRhdGE6IHN0cmlkZXN9XTtcbiAgY29uc3QgcmVzID0gYmFja2VuZC5ydW5XZWJHUFVQcm9ncmFtKFxuICAgICAgcHJvZ3JhbSwgW2ZsYXR0ZW5YLCBmbGF0dGVuSW5kaWNlc10sIGZsYXR0ZW5YLmR0eXBlLCB1bmlmb3JtRGF0YSk7XG5cbiAgY29uc3QgcmVzaGFwZWQgPVxuICAgICAgcmVzaGFwZSh7aW5wdXRzOiB7eDogcmVzfSwgYmFja2VuZCwgYXR0cnM6IHtzaGFwZTogcmVzdWx0U2hhcGV9fSk7XG5cbiAgYmFja2VuZC5kaXNwb3NlRGF0YShmbGF0dGVuSW5kaWNlcy5kYXRhSWQpO1xuICBiYWNrZW5kLmRpc3Bvc2VEYXRhKGZsYXR0ZW5YLmRhdGFJZCk7XG4gIGJhY2tlbmQuZGlzcG9zZURhdGEocmVzLmRhdGFJZCk7XG5cbiAgcmV0dXJuIHJlc2hhcGVkO1xufVxuXG5leHBvcnQgY29uc3QgZ2F0aGVyTmRDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogR2F0aGVyTmQsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogZ2F0aGVyTmQgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class GatherProgram {\n    constructor(aShape, outputShape) {\n        this.variableNames = ['A', 'indices'];\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = aShape.slice();\n        this.aShape = aShape;\n        this.outputShape = outputShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.shaderKey = `gather`;\n    }\n    getUserCode() {\n        const sourceCoords = getSourceCoords(this.aShape);\n        const userCode = `\n      ${main('index')} {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let indexZ = i32(getIndices(resRC.x, resRC.z));\n          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);\n          setOutputAtIndex(index, inBounds * getA(${sourceCoords}));\n        }\n      }\n    `;\n        return userCode;\n    }\n}\n// The input and output are always flattened into rank 4 tensors.\nfunction getSourceCoords(aShape) {\n    const currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n    const sourceCoords = [];\n    for (let i = 0; i < aShape.length; i++) {\n        if (i === 2) {\n            sourceCoords.push('indexZ');\n        }\n        else {\n            sourceCoords.push(`${currentCoords[i]}`);\n        }\n    }\n    return sourceCoords.join();\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2F0aGVyX3dlYmdwdS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2dhdGhlcl93ZWJncHUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLG1CQUFtQixJQUFJLElBQUksRUFBZ0IsTUFBTSxrQkFBa0IsQ0FBQztBQUM1RSxPQUFPLEVBQUMsZUFBZSxFQUFFLGtCQUFrQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRWxFLE1BQU0sT0FBTyxhQUFhO0lBVXhCLFlBQVksTUFBZ0IsRUFBRSxXQUFxQjtRQUxuRCxrQkFBYSxHQUFhLENBQUMsR0FBRyxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBQzNDLGtCQUFhLEdBQTZCLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUVyRCxTQUFJLEdBQUcsSUFBSSxDQUFDO1FBR1YsSUFBSSxDQUFDLFdBQVcsR0FBRyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDbEMsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDckIsSUFBSSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUM7UUFDL0IsSUFBSSxDQUFDLGNBQWMsR0FBRyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxlQUFlLENBQzNCLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDL0QsSUFBSSxDQUFDLFNBQVMsR0FBRyxRQUFRLENBQUM7SUFDNUIsQ0FBQztJQUVELFdBQVc7UUFDVCxNQUFNLFlBQVksR0FBRyxlQUFlLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ2xELE1BQU0sUUFBUSxHQUFHO1FBQ2IsSUFBSSxDQUFDLE9BQU8sQ0FBQzs7Ozs7b0RBSytCLFlBQVk7OztLQUczRCxDQUFDO1FBQ0YsT0FBTyxRQUFRLENBQUM7SUFDbEIsQ0FBQztDQUNGO0FBRUQsaUVBQWlFO0FBQ2pFLFNBQVMsZUFBZSxDQUFDLE1BQWdCO0lBQ3ZDLE1BQU0sYUFBYSxHQUFHLENBQUMsU0FBUyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDbkUsTUFBTSxZQUFZLEdBQUcsRUFBRSxDQUFDO0lBQ3hCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQ3RDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNYLFlBQVksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDN0I7YUFBTTtZQUNMLFlBQVksQ0FBQyxJQUFJLENBQUMsR0FBRyxhQUFhLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1NBQzFDO0tBQ0Y7SUFDRCxPQUFPLFlBQVksQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUM3QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge2dldE1haW5IZWFkZXJTdHJpbmcgYXMgbWFpbiwgV2ViR1BVUHJvZ3JhbX0gZnJvbSAnLi93ZWJncHVfcHJvZ3JhbSc7XG5pbXBvcnQge2NvbXB1dGVEaXNwYXRjaCwgZmxhdERpc3BhdGNoTGF5b3V0fSBmcm9tICcuL3dlYmdwdV91dGlsJztcblxuZXhwb3J0IGNsYXNzIEdhdGhlclByb2dyYW0gaW1wbGVtZW50cyBXZWJHUFVQcm9ncmFtIHtcbiAgb3V0cHV0U2hhcGU6IG51bWJlcltdO1xuICBzaGFkZXJLZXk6IHN0cmluZztcbiAgZGlzcGF0Y2hMYXlvdXQ6IHt4OiBudW1iZXJbXX07XG4gIGRpc3BhdGNoOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl07XG4gIHZhcmlhYmxlTmFtZXM6IHN0cmluZ1tdID0gWydBJywgJ2luZGljZXMnXTtcbiAgd29ya2dyb3VwU2l6ZTogW251bWJlciwgbnVtYmVyLCBudW1iZXJdID0gWzY0LCAxLCAxXTtcbiAgYVNoYXBlOiBudW1iZXJbXTtcbiAgc2l6ZSA9IHRydWU7XG5cbiAgY29uc3RydWN0b3IoYVNoYXBlOiBudW1iZXJbXSwgb3V0cHV0U2hhcGU6IG51bWJlcltdKSB7XG4gICAgdGhpcy5vdXRwdXRTaGFwZSA9IGFTaGFwZS5zbGljZSgpO1xuICAgIHRoaXMuYVNoYXBlID0gYVNoYXBlO1xuICAgIHRoaXMub3V0cHV0U2hhcGUgPSBvdXRwdXRTaGFwZTtcbiAgICB0aGlzLmRpc3BhdGNoTGF5b3V0ID0gZmxhdERpc3BhdGNoTGF5b3V0KHRoaXMub3V0cHV0U2hhcGUpO1xuICAgIHRoaXMuZGlzcGF0Y2ggPSBjb21wdXRlRGlzcGF0Y2goXG4gICAgICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQsIHRoaXMub3V0cHV0U2hhcGUsIHRoaXMud29ya2dyb3VwU2l6ZSk7XG4gICAgdGhpcy5zaGFkZXJLZXkgPSBgZ2F0aGVyYDtcbiAgfVxuXG4gIGdldFVzZXJDb2RlKCk6IHN0cmluZyB7XG4gICAgY29uc3Qgc291cmNlQ29vcmRzID0gZ2V0U291cmNlQ29vcmRzKHRoaXMuYVNoYXBlKTtcbiAgICBjb25zdCB1c2VyQ29kZSA9IGBcbiAgICAgICR7bWFpbignaW5kZXgnKX0ge1xuICAgICAgICBpZiAoaW5kZXggPCB1bmlmb3Jtcy5zaXplKSB7XG4gICAgICAgICAgbGV0IHJlc1JDID0gZ2V0Q29vcmRzRnJvbUluZGV4KGluZGV4KTtcbiAgICAgICAgICBsZXQgaW5kZXhaID0gaTMyKGdldEluZGljZXMocmVzUkMueCwgcmVzUkMueikpO1xuICAgICAgICAgIGxldCBpbkJvdW5kcyA9IHNlbGVjdCgwLjAsIDEuMCwgaW5kZXhaID49IDAgJiYgaW5kZXhaIDwgdW5pZm9ybXMuYVNoYXBlWzJdKTtcbiAgICAgICAgICBzZXRPdXRwdXRBdEluZGV4KGluZGV4LCBpbkJvdW5kcyAqIGdldEEoJHtzb3VyY2VDb29yZHN9KSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICBgO1xuICAgIHJldHVybiB1c2VyQ29kZTtcbiAgfVxufVxuXG4vLyBUaGUgaW5wdXQgYW5kIG91dHB1dCBhcmUgYWx3YXlzIGZsYXR0ZW5lZCBpbnRvIHJhbmsgNCB0ZW5zb3JzLlxuZnVuY3Rpb24gZ2V0U291cmNlQ29vcmRzKGFTaGFwZTogbnVtYmVyW10pOiBzdHJpbmcge1xuICBjb25zdCBjdXJyZW50Q29vcmRzID0gWydyZXNSQy54JywgJ3Jlc1JDLnknLCAncmVzUkMueicsICdyZXNSQy53J107XG4gIGNvbnN0IHNvdXJjZUNvb3JkcyA9IFtdO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGFTaGFwZS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChpID09PSAyKSB7XG4gICAgICBzb3VyY2VDb29yZHMucHVzaCgnaW5kZXhaJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNvdXJjZUNvb3Jkcy5wdXNoKGAke2N1cnJlbnRDb29yZHNbaV19YCk7XG4gICAgfVxuICB9XG4gIHJldHVybiBzb3VyY2VDb29yZHMuam9pbigpO1xufVxuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, buffer, GatherV2, util } from '@tensorflow/tfjs-core';\nimport { GatherProgram } from '../gather_webgpu';\nimport { gatherV2ImplCPU } from '../kernel_utils/shared';\nimport { reshape } from './Reshape';\nexport function gatherV2(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, indices } = inputs;\n    const { axis, batchDims } = attrs;\n    // Unlike WebGL, WebGPU won't check if index is out of bound by calling\n    // backend.readSync() function in debug mode.\n    const parsedAxis = util.parseAxisParam(axis, x.shape)[0];\n    const shapeInfo = backend_util.segment_util.collectGatherOpShapeInfo(x, indices, parsedAxis, batchDims);\n    const indicesSize = util.sizeFromShape(indices.shape);\n    const toDispose = [];\n    const flattenX = reshape({\n        inputs: { x },\n        backend,\n        attrs: {\n            shape: [\n                shapeInfo.batchSize, shapeInfo.outerSize, shapeInfo.dimSize,\n                shapeInfo.sliceSize\n            ]\n        }\n    });\n    const flattenIndex = reshape({\n        inputs: { x: indices },\n        backend,\n        attrs: { shape: [shapeInfo.batchSize, indicesSize / shapeInfo.batchSize] }\n    });\n    toDispose.push(flattenX);\n    toDispose.push(flattenIndex);\n    const flattenOutputShape = [\n        shapeInfo.batchSize, shapeInfo.outerSize, indicesSize / shapeInfo.batchSize,\n        shapeInfo.sliceSize\n    ];\n    if (backend.shouldExecuteOnCPU([x, indices])) {\n        const indicesTensorData = backend.tensorMap.get(flattenIndex.dataId);\n        const indicesValues = indicesTensorData.values;\n        const indicesBuffer = buffer(flattenIndex.shape, flattenIndex.dtype, indicesValues);\n        const flattenXTensorData = backend.tensorMap.get(flattenX.dataId);\n        const xValues = flattenXTensorData.values;\n        const xBuffer = buffer(flattenX.shape, flattenX.dtype, xValues);\n        const outBuf = gatherV2ImplCPU(xBuffer, indicesBuffer, flattenOutputShape);\n        toDispose.forEach(t => backend.disposeData(t.dataId));\n        return backend.makeTensorInfo(shapeInfo.outputShape, outBuf.dtype, outBuf.values);\n    }\n    const program = new GatherProgram(flattenX.shape, flattenOutputShape);\n    const res = backend.runWebGPUProgram(program, [flattenX, flattenIndex], flattenX.dtype);\n    toDispose.push(res);\n    const reshaped = reshape({ inputs: { x: res }, backend, attrs: { shape: shapeInfo.outputShape } });\n    toDispose.forEach(t => backend.disposeData(t.dataId));\n    return reshaped;\n}\nexport const gatherV2Config = {\n    kernelName: GatherV2,\n    backendName: 'webgpu',\n    kernelFunc: gatherV2\n};\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Greater } from '@tensorflow/tfjs-core';\nimport { BinaryOpType } from '../binary_op_util';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { greaterImplCPU as cpuGreater } from '../kernel_utils/shared';\nexport const greater = binaryKernelFunc({\n    opType: BinaryOpType.GREATER,\n    cpuKernelImpl: cpuGreater,\n    dtype: 'bool',\n});\nexport const greaterConfig = {\n    kernelName: Greater,\n    backendName: 'webgpu',\n    kernelFunc: greater\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR3JlYXRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvR3JlYXRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsT0FBTyxFQUFlLE1BQU0sdUJBQXVCLENBQUM7QUFFNUQsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLG1CQUFtQixDQUFDO0FBQy9DLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLG9DQUFvQyxDQUFDO0FBQ3BFLE9BQU8sRUFBQyxjQUFjLElBQUksVUFBVSxFQUFDLE1BQU0sd0JBQXdCLENBQUM7QUFFcEUsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLGdCQUFnQixDQUFDO0lBQ3RDLE1BQU0sRUFBRSxZQUFZLENBQUMsT0FBTztJQUM1QixhQUFhLEVBQUUsVUFBVTtJQUN6QixLQUFLLEVBQUUsTUFBTTtDQUNkLENBQUMsQ0FBQztBQUVILE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBaUI7SUFDekMsVUFBVSxFQUFFLE9BQU87SUFDbkIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLE9BQU87Q0FDcEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtHcmVhdGVyLCBLZXJuZWxDb25maWd9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7QmluYXJ5T3BUeXBlfSBmcm9tICcuLi9iaW5hcnlfb3BfdXRpbCc7XG5pbXBvcnQge2JpbmFyeUtlcm5lbEZ1bmN9IGZyb20gJy4uL2tlcm5lbF91dGlscy9rZXJuZWxfZnVuY3NfdXRpbHMnO1xuaW1wb3J0IHtncmVhdGVySW1wbENQVSBhcyBjcHVHcmVhdGVyfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMvc2hhcmVkJztcblxuZXhwb3J0IGNvbnN0IGdyZWF0ZXIgPSBiaW5hcnlLZXJuZWxGdW5jKHtcbiAgb3BUeXBlOiBCaW5hcnlPcFR5cGUuR1JFQVRFUixcbiAgY3B1S2VybmVsSW1wbDogY3B1R3JlYXRlcixcbiAgZHR5cGU6ICdib29sJyxcbn0pO1xuXG5leHBvcnQgY29uc3QgZ3JlYXRlckNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBHcmVhdGVyLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IGdyZWF0ZXJcbn07XG4iXX0=","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { GreaterEqual } from '@tensorflow/tfjs-core';\nimport { BinaryOpType } from '../binary_op_util';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { greaterEqualImplCPU as cpuGreaterEqual } from '../kernel_utils/shared';\nexport const greaterEqual = binaryKernelFunc({\n    opType: BinaryOpType.GREATER_EQUAL,\n    dtype: 'bool',\n    cpuKernelImpl: cpuGreaterEqual\n});\nexport const greaterEqualConfig = {\n    kernelName: GreaterEqual,\n    backendName: 'webgpu',\n    kernelFunc: greaterEqual\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR3JlYXRlckVxdWFsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9HcmVhdGVyRXF1YWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLFlBQVksRUFBZSxNQUFNLHVCQUF1QixDQUFDO0FBRWpFLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUMvQyxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUNwRSxPQUFPLEVBQUMsbUJBQW1CLElBQUksZUFBZSxFQUFDLE1BQU0sd0JBQXdCLENBQUM7QUFFOUUsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLGdCQUFnQixDQUFDO0lBQzNDLE1BQU0sRUFBRSxZQUFZLENBQUMsYUFBYTtJQUNsQyxLQUFLLEVBQUUsTUFBTTtJQUNiLGFBQWEsRUFBRSxlQUFlO0NBQy9CLENBQUMsQ0FBQztBQUVILE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFpQjtJQUM5QyxVQUFVLEVBQUUsWUFBWTtJQUN4QixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsWUFBWTtDQUN6QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0dyZWF0ZXJFcXVhbCwgS2VybmVsQ29uZmlnfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge0JpbmFyeU9wVHlwZX0gZnJvbSAnLi4vYmluYXJ5X29wX3V0aWwnO1xuaW1wb3J0IHtiaW5hcnlLZXJuZWxGdW5jfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMva2VybmVsX2Z1bmNzX3V0aWxzJztcbmltcG9ydCB7Z3JlYXRlckVxdWFsSW1wbENQVSBhcyBjcHVHcmVhdGVyRXF1YWx9IGZyb20gJy4uL2tlcm5lbF91dGlscy9zaGFyZWQnO1xuXG5leHBvcnQgY29uc3QgZ3JlYXRlckVxdWFsID0gYmluYXJ5S2VybmVsRnVuYyh7XG4gIG9wVHlwZTogQmluYXJ5T3BUeXBlLkdSRUFURVJfRVFVQUwsXG4gIGR0eXBlOiAnYm9vbCcsXG4gIGNwdUtlcm5lbEltcGw6IGNwdUdyZWF0ZXJFcXVhbFxufSk7XG5cbmV4cG9ydCBjb25zdCBncmVhdGVyRXF1YWxDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogR3JlYXRlckVxdWFsLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IGdyZWF0ZXJFcXVhbFxufTtcbiJdfQ==","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { IFFT } from '@tensorflow/tfjs-core';\nimport { fftImpl } from './FFT_impl';\nexport function ifft(args) {\n    const { inputs, backend } = args;\n    const { input } = inputs;\n    return fftImpl(input, true /* inverse */, backend);\n}\nexport const ifftConfig = {\n    kernelName: IFFT,\n    backendName: 'webgpu',\n    kernelFunc: ifft\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSUZGVC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvSUZGVC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsSUFBSSxFQUF1QyxNQUFNLHVCQUF1QixDQUFDO0FBSWpGLE9BQU8sRUFBQyxPQUFPLEVBQUMsTUFBTSxZQUFZLENBQUM7QUFFbkMsTUFBTSxVQUFVLElBQUksQ0FBQyxJQUFrRDtJQUVyRSxNQUFNLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBQyxHQUFHLElBQUksQ0FBQztJQUMvQixNQUFNLEVBQUMsS0FBSyxFQUFDLEdBQUcsTUFBTSxDQUFDO0lBRXZCLE9BQU8sT0FBTyxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsYUFBYSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ3JELENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQWlCO0lBQ3RDLFVBQVUsRUFBRSxJQUFJO0lBQ2hCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxJQUFJO0NBQ2pCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7SUZGVCwgSUZGVElucHV0cywgS2VybmVsQ29uZmlnLCBUZW5zb3JJbmZvfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcblxuaW1wb3J0IHtmZnRJbXBsfSBmcm9tICcuL0ZGVF9pbXBsJztcblxuZXhwb3J0IGZ1bmN0aW9uIGlmZnQoYXJnczoge2lucHV0czogSUZGVElucHV0cywgYmFja2VuZDogV2ViR1BVQmFja2VuZH0pOlxuICAgIFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kfSA9IGFyZ3M7XG4gIGNvbnN0IHtpbnB1dH0gPSBpbnB1dHM7XG5cbiAgcmV0dXJuIGZmdEltcGwoaW5wdXQsIHRydWUgLyogaW52ZXJzZSAqLywgYmFja2VuZCk7XG59XG5cbmV4cG9ydCBjb25zdCBpZmZ0Q29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IElGRlQsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogaWZmdFxufTtcbiJdfQ==","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { IsFinite } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { UnaryOpType } from '../unary_op_util';\nexport const isFinite = unaryKernelFunc({ opType: UnaryOpType.IS_FINITE, dtype: 'bool' });\nexport const isFiniteConfig = {\n    kernelName: IsFinite,\n    backendName: 'webgpu',\n    kernelFunc: isFinite\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSXNGaW5pdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL0lzRmluaXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxRQUFRLEVBQWUsTUFBTSx1QkFBdUIsQ0FBQztBQUU3RCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sb0NBQW9DLENBQUM7QUFFbkUsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBRTdDLE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FDakIsZUFBZSxDQUFDLEVBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBQyxDQUFDLENBQUM7QUFFcEUsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFpQjtJQUMxQyxVQUFVLEVBQUUsUUFBUTtJQUNwQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsUUFBUTtDQUNyQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjIgR29vZ2xlIExMQy5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0lzRmluaXRlLCBLZXJuZWxDb25maWd9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7dW5hcnlLZXJuZWxGdW5jfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMva2VybmVsX2Z1bmNzX3V0aWxzJztcblxuaW1wb3J0IHtVbmFyeU9wVHlwZX0gZnJvbSAnLi4vdW5hcnlfb3BfdXRpbCc7XG5cbmV4cG9ydCBjb25zdCBpc0Zpbml0ZSA9XG4gICAgdW5hcnlLZXJuZWxGdW5jKHtvcFR5cGU6IFVuYXJ5T3BUeXBlLklTX0ZJTklURSwgZHR5cGU6ICdib29sJ30pO1xuXG5leHBvcnQgY29uc3QgaXNGaW5pdGVDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogSXNGaW5pdGUsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogaXNGaW5pdGVcbn07XG4iXX0=","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { IsInf } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { UnaryOpType } from '../unary_op_util';\nexport const isInf = unaryKernelFunc({ opType: UnaryOpType.IS_INF, dtype: 'bool' });\nexport const isInfConfig = {\n    kernelName: IsInf,\n    backendName: 'webgpu',\n    kernelFunc: isInf\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSXNJbmYuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL0lzSW5mLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxLQUFLLEVBQWUsTUFBTSx1QkFBdUIsQ0FBQztBQUUxRCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sb0NBQW9DLENBQUM7QUFFbkUsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBRTdDLE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FDZCxlQUFlLENBQUMsRUFBQyxNQUFNLEVBQUUsV0FBVyxDQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFDLENBQUMsQ0FBQztBQUVqRSxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQWlCO0lBQ3ZDLFVBQVUsRUFBRSxLQUFLO0lBQ2pCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxLQUFLO0NBQ2xCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7SXNJbmYsIEtlcm5lbENvbmZpZ30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHt1bmFyeUtlcm5lbEZ1bmN9IGZyb20gJy4uL2tlcm5lbF91dGlscy9rZXJuZWxfZnVuY3NfdXRpbHMnO1xuXG5pbXBvcnQge1VuYXJ5T3BUeXBlfSBmcm9tICcuLi91bmFyeV9vcF91dGlsJztcblxuZXhwb3J0IGNvbnN0IGlzSW5mID1cbiAgICB1bmFyeUtlcm5lbEZ1bmMoe29wVHlwZTogVW5hcnlPcFR5cGUuSVNfSU5GLCBkdHlwZTogJ2Jvb2wnfSk7XG5cbmV4cG9ydCBjb25zdCBpc0luZkNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBJc0luZixcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBpc0luZlxufTtcbiJdfQ==","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { IsNan } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { UnaryOpType } from '../unary_op_util';\nexport const isNaN = unaryKernelFunc({ opType: UnaryOpType.IS_NAN, dtype: 'bool' });\nexport const isNaNConfig = {\n    kernelName: IsNan,\n    backendName: 'webgpu',\n    kernelFunc: isNaN\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSXNOYU4uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL0lzTmFOLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxLQUFLLEVBQWUsTUFBTSx1QkFBdUIsQ0FBQztBQUMxRCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sb0NBQW9DLENBQUM7QUFDbkUsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBRTdDLE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FDZCxlQUFlLENBQUMsRUFBQyxNQUFNLEVBQUUsV0FBVyxDQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFDLENBQUMsQ0FBQztBQUVqRSxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQWlCO0lBQ3ZDLFVBQVUsRUFBRSxLQUFLO0lBQ2pCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxLQUFLO0NBQ2xCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7SXNOYW4sIEtlcm5lbENvbmZpZ30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcbmltcG9ydCB7dW5hcnlLZXJuZWxGdW5jfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMva2VybmVsX2Z1bmNzX3V0aWxzJztcbmltcG9ydCB7VW5hcnlPcFR5cGV9IGZyb20gJy4uL3VuYXJ5X29wX3V0aWwnO1xuXG5leHBvcnQgY29uc3QgaXNOYU4gPVxuICAgIHVuYXJ5S2VybmVsRnVuYyh7b3BUeXBlOiBVbmFyeU9wVHlwZS5JU19OQU4sIGR0eXBlOiAnYm9vbCd9KTtcblxuZXhwb3J0IGNvbnN0IGlzTmFOQ29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IElzTmFuLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IGlzTmFOXG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LeakyRelu } from '@tensorflow/tfjs-core';\nimport { UnaryOpType } from '../unary_op_util';\nimport { UnaryOpProgram } from '../unary_op_webgpu';\nexport function leakyRelu(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { alpha } = attrs;\n    const uniformData = [{ type: 'float32', data: [alpha] }];\n    const program = new UnaryOpProgram(x.shape, UnaryOpType.LEAKYRELU, 'alpha : f32,');\n    return backend.runWebGPUProgram(program, [x], 'float32', uniformData);\n}\nexport const leakyReluConfig = {\n    kernelName: LeakyRelu,\n    backendName: 'webgpu',\n    kernelFunc: leakyRelu\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTGVha3lSZWx1LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9MZWFreVJlbHUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUEyQixTQUFTLEVBQThDLE1BQU0sdUJBQXVCLENBQUM7QUFHdkgsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUVsRCxNQUFNLFVBQVUsU0FBUyxDQUFDLElBSXpCO0lBQ0MsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ3RDLE1BQU0sRUFBQyxDQUFDLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFDbkIsTUFBTSxFQUFDLEtBQUssRUFBQyxHQUFHLEtBQUssQ0FBQztJQUN0QixNQUFNLFdBQVcsR0FBRyxDQUFDLEVBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxLQUFLLENBQUMsRUFBQyxDQUFDLENBQUM7SUFDdkQsTUFBTSxPQUFPLEdBQ1QsSUFBSSxjQUFjLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxXQUFXLENBQUMsU0FBUyxFQUFFLGNBQWMsQ0FBQyxDQUFDO0lBQ3ZFLE9BQU8sT0FBTyxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLFNBQVMsRUFBRSxXQUFXLENBQUMsQ0FBQztBQUN4RSxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFpQjtJQUMzQyxVQUFVLEVBQUUsU0FBUztJQUNyQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsU0FBa0M7Q0FDL0MsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtLZXJuZWxDb25maWcsIEtlcm5lbEZ1bmMsIExlYWt5UmVsdSwgTGVha3lSZWx1QXR0cnMsIExlYWt5UmVsdUlucHV0cywgVGVuc29ySW5mb30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge1VuYXJ5T3BUeXBlfSBmcm9tICcuLi91bmFyeV9vcF91dGlsJztcbmltcG9ydCB7VW5hcnlPcFByb2dyYW19IGZyb20gJy4uL3VuYXJ5X29wX3dlYmdwdSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBsZWFreVJlbHUoYXJnczoge1xuICBpbnB1dHM6IExlYWt5UmVsdUlucHV0cyxcbiAgYmFja2VuZDogV2ViR1BVQmFja2VuZCxcbiAgYXR0cnM6IExlYWt5UmVsdUF0dHJzXG59KTogVGVuc29ySW5mbyB7XG4gIGNvbnN0IHtpbnB1dHMsIGJhY2tlbmQsIGF0dHJzfSA9IGFyZ3M7XG4gIGNvbnN0IHt4fSA9IGlucHV0cztcbiAgY29uc3Qge2FscGhhfSA9IGF0dHJzO1xuICBjb25zdCB1bmlmb3JtRGF0YSA9IFt7dHlwZTogJ2Zsb2F0MzInLCBkYXRhOiBbYWxwaGFdfV07XG4gIGNvbnN0IHByb2dyYW0gPVxuICAgICAgbmV3IFVuYXJ5T3BQcm9ncmFtKHguc2hhcGUsIFVuYXJ5T3BUeXBlLkxFQUtZUkVMVSwgJ2FscGhhIDogZjMyLCcpO1xuICByZXR1cm4gYmFja2VuZC5ydW5XZWJHUFVQcm9ncmFtKHByb2dyYW0sIFt4XSwgJ2Zsb2F0MzInLCB1bmlmb3JtRGF0YSk7XG59XG5cbmV4cG9ydCBjb25zdCBsZWFreVJlbHVDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogTGVha3lSZWx1LFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IGxlYWt5UmVsdSBhcyB1bmtub3duIGFzIEtlcm5lbEZ1bmNcbn07XG4iXX0=","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Less } from '@tensorflow/tfjs-core';\nimport { BinaryOpType } from '../binary_op_util';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { lessImplCPU as cpuLess } from '../kernel_utils/shared';\nexport const less = binaryKernelFunc({ opType: BinaryOpType.LESS, dtype: 'bool', cpuKernelImpl: cpuLess });\nexport const lessConfig = {\n    kernelName: Less,\n    backendName: 'webgpu',\n    kernelFunc: less\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTGVzcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvTGVzcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQWUsSUFBSSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFFekQsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLG1CQUFtQixDQUFDO0FBQy9DLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLG9DQUFvQyxDQUFDO0FBQ3BFLE9BQU8sRUFBQyxXQUFXLElBQUksT0FBTyxFQUFDLE1BQU0sd0JBQXdCLENBQUM7QUFFOUQsTUFBTSxDQUFDLE1BQU0sSUFBSSxHQUFHLGdCQUFnQixDQUNoQyxFQUFDLE1BQU0sRUFBRSxZQUFZLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsYUFBYSxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFFeEUsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFpQjtJQUN0QyxVQUFVLEVBQUUsSUFBSTtJQUNoQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsSUFBSTtDQUNqQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0tlcm5lbENvbmZpZywgTGVzc30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtCaW5hcnlPcFR5cGV9IGZyb20gJy4uL2JpbmFyeV9vcF91dGlsJztcbmltcG9ydCB7YmluYXJ5S2VybmVsRnVuY30gZnJvbSAnLi4va2VybmVsX3V0aWxzL2tlcm5lbF9mdW5jc191dGlscyc7XG5pbXBvcnQge2xlc3NJbXBsQ1BVIGFzIGNwdUxlc3N9IGZyb20gJy4uL2tlcm5lbF91dGlscy9zaGFyZWQnO1xuXG5leHBvcnQgY29uc3QgbGVzcyA9IGJpbmFyeUtlcm5lbEZ1bmMoXG4gICAge29wVHlwZTogQmluYXJ5T3BUeXBlLkxFU1MsIGR0eXBlOiAnYm9vbCcsIGNwdUtlcm5lbEltcGw6IGNwdUxlc3N9KTtcblxuZXhwb3J0IGNvbnN0IGxlc3NDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogTGVzcyxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBsZXNzXG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LessEqual } from '@tensorflow/tfjs-core';\nimport { BinaryOpType } from '../binary_op_util';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { lessEqualImplCPU as cpuLessEqual } from '../kernel_utils/shared';\nexport const lessEqual = binaryKernelFunc({\n    opType: BinaryOpType.LESS_EQUAL,\n    dtype: 'bool',\n    cpuKernelImpl: cpuLessEqual\n});\nexport const lessEqualConfig = {\n    kernelName: LessEqual,\n    backendName: 'webgpu',\n    kernelFunc: lessEqual\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTGVzc0VxdWFsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9MZXNzRXF1YWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFlLFNBQVMsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRTlELE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUMvQyxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUNwRSxPQUFPLEVBQUMsZ0JBQWdCLElBQUksWUFBWSxFQUFDLE1BQU0sd0JBQXdCLENBQUM7QUFFeEUsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLGdCQUFnQixDQUFDO0lBQ3hDLE1BQU0sRUFBRSxZQUFZLENBQUMsVUFBVTtJQUMvQixLQUFLLEVBQUUsTUFBTTtJQUNiLGFBQWEsRUFBRSxZQUFZO0NBQzVCLENBQUMsQ0FBQztBQUVILE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBaUI7SUFDM0MsVUFBVSxFQUFFLFNBQVM7SUFDckIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLFNBQVM7Q0FDdEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtLZXJuZWxDb25maWcsIExlc3NFcXVhbH0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtCaW5hcnlPcFR5cGV9IGZyb20gJy4uL2JpbmFyeV9vcF91dGlsJztcbmltcG9ydCB7YmluYXJ5S2VybmVsRnVuY30gZnJvbSAnLi4va2VybmVsX3V0aWxzL2tlcm5lbF9mdW5jc191dGlscyc7XG5pbXBvcnQge2xlc3NFcXVhbEltcGxDUFUgYXMgY3B1TGVzc0VxdWFsfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMvc2hhcmVkJztcblxuZXhwb3J0IGNvbnN0IGxlc3NFcXVhbCA9IGJpbmFyeUtlcm5lbEZ1bmMoe1xuICBvcFR5cGU6IEJpbmFyeU9wVHlwZS5MRVNTX0VRVUFMLFxuICBkdHlwZTogJ2Jvb2wnLFxuICBjcHVLZXJuZWxJbXBsOiBjcHVMZXNzRXF1YWxcbn0pO1xuXG5leHBvcnQgY29uc3QgbGVzc0VxdWFsQ29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IExlc3NFcXVhbCxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBsZXNzRXF1YWxcbn07XG4iXX0=","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class LinSpaceProgram {\n    constructor(shape) {\n        this.variableNames = [];\n        this.outputShape = [];\n        this.uniforms = 'start : f32, step : f32,';\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = [shape];\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.shaderKey = 'linSpace';\n    }\n    getUserCode() {\n        const userCode = `\n      ${main('index')} {\n        if (index < uniforms.size) {\n          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);\n        }\n      }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGluX3NwYWNlX3dlYmdwdS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2xpbl9zcGFjZV93ZWJncHUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLG1CQUFtQixJQUFJLElBQUksRUFBZ0IsTUFBTSxrQkFBa0IsQ0FBQztBQUM1RSxPQUFPLEVBQUMsZUFBZSxFQUFFLGtCQUFrQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRWxFLE1BQU0sT0FBTyxlQUFlO0lBVTFCLFlBQVksS0FBYTtRQVR6QixrQkFBYSxHQUFhLEVBQUUsQ0FBQztRQUM3QixnQkFBVyxHQUFhLEVBQUUsQ0FBQztRQUkzQixhQUFRLEdBQUcsMEJBQTBCLENBQUM7UUFDdEMsa0JBQWEsR0FBNkIsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3JELFNBQUksR0FBRyxJQUFJLENBQUM7UUFHVixJQUFJLENBQUMsV0FBVyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDM0IsSUFBSSxDQUFDLGNBQWMsR0FBRyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxlQUFlLENBQzNCLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFFL0QsSUFBSSxDQUFDLFNBQVMsR0FBRyxVQUFVLENBQUM7SUFDOUIsQ0FBQztJQUVELFdBQVc7UUFDVCxNQUFNLFFBQVEsR0FBRztRQUNiLElBQUksQ0FBQyxPQUFPLENBQUM7Ozs7O0tBS2hCLENBQUM7UUFDRixPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7Z2V0TWFpbkhlYWRlclN0cmluZyBhcyBtYWluLCBXZWJHUFVQcm9ncmFtfSBmcm9tICcuL3dlYmdwdV9wcm9ncmFtJztcbmltcG9ydCB7Y29tcHV0ZURpc3BhdGNoLCBmbGF0RGlzcGF0Y2hMYXlvdXR9IGZyb20gJy4vd2ViZ3B1X3V0aWwnO1xuXG5leHBvcnQgY2xhc3MgTGluU3BhY2VQcm9ncmFtIGltcGxlbWVudHMgV2ViR1BVUHJvZ3JhbSB7XG4gIHZhcmlhYmxlTmFtZXM6IHN0cmluZ1tdID0gW107XG4gIG91dHB1dFNoYXBlOiBudW1iZXJbXSA9IFtdO1xuICBzaGFkZXJLZXk6IHN0cmluZztcbiAgZGlzcGF0Y2hMYXlvdXQ6IHt4OiBudW1iZXJbXX07XG4gIGRpc3BhdGNoOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl07XG4gIHVuaWZvcm1zID0gJ3N0YXJ0IDogZjMyLCBzdGVwIDogZjMyLCc7XG4gIHdvcmtncm91cFNpemU6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXSA9IFs2NCwgMSwgMV07XG4gIHNpemUgPSB0cnVlO1xuXG4gIGNvbnN0cnVjdG9yKHNoYXBlOiBudW1iZXIpIHtcbiAgICB0aGlzLm91dHB1dFNoYXBlID0gW3NoYXBlXTtcbiAgICB0aGlzLmRpc3BhdGNoTGF5b3V0ID0gZmxhdERpc3BhdGNoTGF5b3V0KHRoaXMub3V0cHV0U2hhcGUpO1xuICAgIHRoaXMuZGlzcGF0Y2ggPSBjb21wdXRlRGlzcGF0Y2goXG4gICAgICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQsIHRoaXMub3V0cHV0U2hhcGUsIHRoaXMud29ya2dyb3VwU2l6ZSk7XG5cbiAgICB0aGlzLnNoYWRlcktleSA9ICdsaW5TcGFjZSc7XG4gIH1cblxuICBnZXRVc2VyQ29kZSgpOiBzdHJpbmcge1xuICAgIGNvbnN0IHVzZXJDb2RlID0gYFxuICAgICAgJHttYWluKCdpbmRleCcpfSB7XG4gICAgICAgIGlmIChpbmRleCA8IHVuaWZvcm1zLnNpemUpIHtcbiAgICAgICAgICBzZXRPdXRwdXRBdEluZGV4KGluZGV4LCB1bmlmb3Jtcy5zdGFydCArIGYzMihpbmRleCkgKiB1bmlmb3Jtcy5zdGVwKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIGA7XG4gICAgcmV0dXJuIHVzZXJDb2RlO1xuICB9XG59XG4iXX0=","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LinSpace } from '@tensorflow/tfjs-core';\nimport { LinSpaceProgram } from '../lin_space_webgpu';\nexport function linSpace(args) {\n    const { backend, attrs } = args;\n    const { start, stop, num } = attrs;\n    const step = (stop - start) / (num - 1);\n    const program = new LinSpaceProgram(num);\n    const uniformData = [{ type: 'float32', data: [start] }, { type: 'float32', data: [step] }];\n    return backend.runWebGPUProgram(program, [], 'float32', uniformData);\n}\nexport const linSpaceConfig = {\n    kernelName: LinSpace,\n    backendName: 'webgpu',\n    kernelFunc: linSpace\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTGluU3BhY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL0xpblNwYWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBMkIsUUFBUSxFQUE0QixNQUFNLHVCQUF1QixDQUFDO0FBR3BHLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUVwRCxNQUFNLFVBQVUsUUFBUSxDQUFDLElBQW9EO0lBRTNFLE1BQU0sRUFBQyxPQUFPLEVBQUUsS0FBSyxFQUFDLEdBQUcsSUFBSSxDQUFDO0lBQzlCLE1BQU0sRUFBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBQyxHQUFHLEtBQUssQ0FBQztJQUNqQyxNQUFNLElBQUksR0FBRyxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUV4QyxNQUFNLE9BQU8sR0FBRyxJQUFJLGVBQWUsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN6QyxNQUFNLFdBQVcsR0FDYixDQUFDLEVBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxLQUFLLENBQUMsRUFBQyxFQUFFLEVBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxJQUFJLENBQUMsRUFBQyxDQUFDLENBQUM7SUFDeEUsT0FBTyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLEVBQUUsRUFBRSxTQUFTLEVBQUUsV0FBVyxDQUFDLENBQUM7QUFDdkUsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBaUI7SUFDMUMsVUFBVSxFQUFFLFFBQVE7SUFDcEIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLFFBQWlDO0NBQzlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7S2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBMaW5TcGFjZSwgTGluU3BhY2VBdHRycywgVGVuc29ySW5mb30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge0xpblNwYWNlUHJvZ3JhbX0gZnJvbSAnLi4vbGluX3NwYWNlX3dlYmdwdSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBsaW5TcGFjZShhcmdzOiB7YmFja2VuZDogV2ViR1BVQmFja2VuZCwgYXR0cnM6IExpblNwYWNlQXR0cnN9KTpcbiAgICBUZW5zb3JJbmZvIHtcbiAgY29uc3Qge2JhY2tlbmQsIGF0dHJzfSA9IGFyZ3M7XG4gIGNvbnN0IHtzdGFydCwgc3RvcCwgbnVtfSA9IGF0dHJzO1xuICBjb25zdCBzdGVwID0gKHN0b3AgLSBzdGFydCkgLyAobnVtIC0gMSk7XG5cbiAgY29uc3QgcHJvZ3JhbSA9IG5ldyBMaW5TcGFjZVByb2dyYW0obnVtKTtcbiAgY29uc3QgdW5pZm9ybURhdGEgPVxuICAgICAgW3t0eXBlOiAnZmxvYXQzMicsIGRhdGE6IFtzdGFydF19LCB7dHlwZTogJ2Zsb2F0MzInLCBkYXRhOiBbc3RlcF19XTtcbiAgcmV0dXJuIGJhY2tlbmQucnVuV2ViR1BVUHJvZ3JhbShwcm9ncmFtLCBbXSwgJ2Zsb2F0MzInLCB1bmlmb3JtRGF0YSk7XG59XG5cbmV4cG9ydCBjb25zdCBsaW5TcGFjZUNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBMaW5TcGFjZSxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBsaW5TcGFjZSBhcyB1bmtub3duIGFzIEtlcm5lbEZ1bmNcbn07XG4iXX0=","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Log } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { logImplCPU } from '../kernel_utils/shared';\nimport { UnaryOpType } from '../unary_op_util';\nexport const log = unaryKernelFunc({ opType: UnaryOpType.LOG, cpuKernelImpl: logImplCPU });\nexport const logConfig = {\n    kernelName: Log,\n    backendName: 'webgpu',\n    kernelFunc: log\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTG9nLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9Mb2cudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFlLEdBQUcsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBQ3hELE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUNuRSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sd0JBQXdCLENBQUM7QUFDbEQsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBRTdDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsR0FDWixlQUFlLENBQUMsRUFBQyxNQUFNLEVBQUUsV0FBVyxDQUFDLEdBQUcsRUFBRSxhQUFhLEVBQUUsVUFBVSxFQUFDLENBQUMsQ0FBQztBQUUxRSxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQWlCO0lBQ3JDLFVBQVUsRUFBRSxHQUFHO0lBQ2YsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLEdBQUc7Q0FDaEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtLZXJuZWxDb25maWcsIExvZ30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcbmltcG9ydCB7dW5hcnlLZXJuZWxGdW5jfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMva2VybmVsX2Z1bmNzX3V0aWxzJztcbmltcG9ydCB7bG9nSW1wbENQVX0gZnJvbSAnLi4va2VybmVsX3V0aWxzL3NoYXJlZCc7XG5pbXBvcnQge1VuYXJ5T3BUeXBlfSBmcm9tICcuLi91bmFyeV9vcF91dGlsJztcblxuZXhwb3J0IGNvbnN0IGxvZyA9XG4gICAgdW5hcnlLZXJuZWxGdW5jKHtvcFR5cGU6IFVuYXJ5T3BUeXBlLkxPRywgY3B1S2VybmVsSW1wbDogbG9nSW1wbENQVX0pO1xuXG5leHBvcnQgY29uc3QgbG9nQ29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IExvZyxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBsb2dcbn07XG4iXX0=","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Log1p } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { UnaryOpType } from '../unary_op_util';\nexport const log1p = unaryKernelFunc({ opType: UnaryOpType.LOG1P });\nexport const log1pConfig = {\n    kernelName: Log1p,\n    backendName: 'webgpu',\n    kernelFunc: log1p\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTG9nMXAuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL0xvZzFwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBZSxLQUFLLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUUxRCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sb0NBQW9DLENBQUM7QUFFbkUsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBRTdDLE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBRyxlQUFlLENBQUMsRUFBQyxNQUFNLEVBQUUsV0FBVyxDQUFDLEtBQUssRUFBQyxDQUFDLENBQUM7QUFFbEUsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFpQjtJQUN2QyxVQUFVLEVBQUUsS0FBSztJQUNqQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsS0FBSztDQUNsQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjIgR29vZ2xlIExMQy5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0tlcm5lbENvbmZpZywgTG9nMXB9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7dW5hcnlLZXJuZWxGdW5jfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMva2VybmVsX2Z1bmNzX3V0aWxzJztcblxuaW1wb3J0IHtVbmFyeU9wVHlwZX0gZnJvbSAnLi4vdW5hcnlfb3BfdXRpbCc7XG5cbmV4cG9ydCBjb25zdCBsb2cxcCA9IHVuYXJ5S2VybmVsRnVuYyh7b3BUeXBlOiBVbmFyeU9wVHlwZS5MT0cxUH0pO1xuXG5leHBvcnQgY29uc3QgbG9nMXBDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogTG9nMXAsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogbG9nMXBcbn07XG4iXX0=","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LogicalAnd } from '@tensorflow/tfjs-core';\nimport { BinaryOpType } from '../binary_op_util';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nexport const logicalAnd = binaryKernelFunc({ opType: BinaryOpType.LOGICAL_AND, dtype: 'bool' });\nexport const logicalAndConfig = {\n    kernelName: LogicalAnd,\n    backendName: 'webgpu',\n    kernelFunc: logicalAnd\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTG9naWNhbEFuZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvTG9naWNhbEFuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQWUsVUFBVSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFFL0QsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLG1CQUFtQixDQUFDO0FBQy9DLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLG9DQUFvQyxDQUFDO0FBRXBFLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FDbkIsZ0JBQWdCLENBQUMsRUFBQyxNQUFNLEVBQUUsWUFBWSxDQUFDLFdBQVcsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFDLENBQUMsQ0FBQztBQUV4RSxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBaUI7SUFDNUMsVUFBVSxFQUFFLFVBQVU7SUFDdEIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLFVBQVU7Q0FDdkIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtLZXJuZWxDb25maWcsIExvZ2ljYWxBbmR9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7QmluYXJ5T3BUeXBlfSBmcm9tICcuLi9iaW5hcnlfb3BfdXRpbCc7XG5pbXBvcnQge2JpbmFyeUtlcm5lbEZ1bmN9IGZyb20gJy4uL2tlcm5lbF91dGlscy9rZXJuZWxfZnVuY3NfdXRpbHMnO1xuXG5leHBvcnQgY29uc3QgbG9naWNhbEFuZCA9XG4gICAgYmluYXJ5S2VybmVsRnVuYyh7b3BUeXBlOiBCaW5hcnlPcFR5cGUuTE9HSUNBTF9BTkQsIGR0eXBlOiAnYm9vbCd9KTtcblxuZXhwb3J0IGNvbnN0IGxvZ2ljYWxBbmRDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogTG9naWNhbEFuZCxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBsb2dpY2FsQW5kXG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LogicalNot } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { UnaryOpType } from '../unary_op_util';\nexport const logicalNot = unaryKernelFunc({ opType: UnaryOpType.LOGICAL_NOT });\nexport const logicalNotConfig = {\n    kernelName: LogicalNot,\n    backendName: 'webgpu',\n    kernelFunc: logicalNot\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTG9naWNhbE5vdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvTG9naWNhbE5vdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQWUsVUFBVSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFFL0QsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9DQUFvQyxDQUFDO0FBRW5FLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUU3QyxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsZUFBZSxDQUFDLEVBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxXQUFXLEVBQUMsQ0FBQyxDQUFDO0FBRTdFLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFpQjtJQUM1QyxVQUFVLEVBQUUsVUFBVTtJQUN0QixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsVUFBVTtDQUN2QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0tlcm5lbENvbmZpZywgTG9naWNhbE5vdH0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHt1bmFyeUtlcm5lbEZ1bmN9IGZyb20gJy4uL2tlcm5lbF91dGlscy9rZXJuZWxfZnVuY3NfdXRpbHMnO1xuXG5pbXBvcnQge1VuYXJ5T3BUeXBlfSBmcm9tICcuLi91bmFyeV9vcF91dGlsJztcblxuZXhwb3J0IGNvbnN0IGxvZ2ljYWxOb3QgPSB1bmFyeUtlcm5lbEZ1bmMoe29wVHlwZTogVW5hcnlPcFR5cGUuTE9HSUNBTF9OT1R9KTtcblxuZXhwb3J0IGNvbnN0IGxvZ2ljYWxOb3RDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogTG9naWNhbE5vdCxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBsb2dpY2FsTm90XG59O1xuIl19","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LogicalOr } from '@tensorflow/tfjs-core';\nimport { BinaryOpType } from '../binary_op_util';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nexport const logicalOr = binaryKernelFunc({ opType: BinaryOpType.LOGICAL_OR });\nexport const logicalOrConfig = {\n    kernelName: LogicalOr,\n    backendName: 'webgpu',\n    kernelFunc: logicalOr\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTG9naWNhbE9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9Mb2dpY2FsT3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFlLFNBQVMsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRTlELE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUMvQyxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUVwRSxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsZ0JBQWdCLENBQUMsRUFBQyxNQUFNLEVBQUUsWUFBWSxDQUFDLFVBQVUsRUFBQyxDQUFDLENBQUM7QUFFN0UsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFpQjtJQUMzQyxVQUFVLEVBQUUsU0FBUztJQUNyQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsU0FBUztDQUN0QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjIgR29vZ2xlIExMQy5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0tlcm5lbENvbmZpZywgTG9naWNhbE9yfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge0JpbmFyeU9wVHlwZX0gZnJvbSAnLi4vYmluYXJ5X29wX3V0aWwnO1xuaW1wb3J0IHtiaW5hcnlLZXJuZWxGdW5jfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMva2VybmVsX2Z1bmNzX3V0aWxzJztcblxuZXhwb3J0IGNvbnN0IGxvZ2ljYWxPciA9IGJpbmFyeUtlcm5lbEZ1bmMoe29wVHlwZTogQmluYXJ5T3BUeXBlLkxPR0lDQUxfT1J9KTtcblxuZXhwb3J0IGNvbnN0IGxvZ2ljYWxPckNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBMb2dpY2FsT3IsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogbG9naWNhbE9yXG59O1xuIl19","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nconst powOperatorSnippet = `\n  var powValue = 0.0;\n  let basis = uniforms.bias + uniforms.alpha * sum;\n  if (uniforms.beta == 0.5) {\n    powValue = inverseSqrt(basis);\n  } else if (uniforms.beta == 1.0) {\n    powValue = 1.0 / basis;\n  } else {\n    powValue = exp(log(basis) * (-uniforms.beta));\n  }\n`;\nexport class LRNProgram {\n    constructor(xShape) {\n        this.outputShape = [];\n        this.variableNames = ['x'];\n        this.uniforms = 'radius : i32, bias : f32, alpha : f32, beta : f32,';\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = xShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.shaderKey = 'lrn';\n    }\n    getUserCode() {\n        const userCode = `\n    ${main('index')} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let b = coords[0];\n        let r = coords[1];\n        let c = coords[2];\n        let d = coords[3];\n\n        let x = getX(b, r, c, d);\n        var sum = 0.0;\n        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {\n          let idx = d + i;\n          if (idx >= 0 && idx < uniforms.xShape[3]) {\n            let z = getX(b, r, c, idx);\n            sum = sum + z * z;\n          }\n        }\n        ${powOperatorSnippet}\n\n        setOutputAtIndex(index, x * powValue);\n      }\n    }\n  `;\n        return userCode;\n    }\n}\nexport class LRNSharedProgram {\n    constructor(xShape, radius) {\n        this.outputShape = [];\n        this.variableNames = ['x'];\n        this.uniforms = 'radius : i32, bias : f32, alpha : f32, beta : f32,';\n        this.workgroupSize = [256, 1, 1];\n        this.maxAllowRadius = 16;\n        util.assert(radius <= this.maxAllowRadius, () => `Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${radius}`);\n        this.outputShape = xShape;\n        // The reason why not using this.workgroupSize[0] + 2 * maxAllowRadius here\n        // is to make sure that there is only one time global memory load access for\n        // each thread.\n        this.elementsPerWorkgroup = this.workgroupSize[0] - 2 * this.maxAllowRadius;\n        this.dispatchLayout = { x: [3], y: [2], z: [0, 1] };\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, [\n            this.elementsPerWorkgroup, this.workgroupSize[1], this.workgroupSize[2]\n        ]);\n        this.shaderKey = 'lrn_shared';\n    }\n    getUserCode() {\n        const userCode = `\n    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;\n    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};\n    const maxAllowRadius = ${this.maxAllowRadius};\n\n    ${main()} {\n      let localDepth = i32(localId.x);\n      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;\n      let xDepth = workgroupDepth + localDepth - maxAllowRadius;\n      let b = i32(globalId.z) / uniforms.xShape[1];\n      let r = i32(globalId.z) - b * uniforms.xShape[1];\n      let c = i32(globalId.y);\n      let d = workgroupDepth + localDepth;\n\n      var x = 0.0;\n      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {\n        x = getX(b, r, c, xDepth);\n      }\n      lrnSub[localDepth] = x;\n      workgroupBarrier();\n\n      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {\n        var sum = 0.0;\n        let index = localDepth + maxAllowRadius;\n        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {\n          let z = lrnSub[index + i];\n          sum = sum + z * z;\n        }\n        ${powOperatorSnippet}\n\n        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);\n      }\n    } `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LRN } from '@tensorflow/tfjs-core';\nimport { LRNProgram, LRNSharedProgram } from '../lrn_webgpu';\nexport function lrn(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { depthRadius, bias, alpha, beta } = attrs;\n    // When the adjacent channels is less than or equal to 16, which could cover\n    // most cases, we use shared memory version to get better performance.\n    // The theoretical adjacent channels may be very large, but the shared memory\n    // size of hardware is limited, so we use the naive version when the adjacent\n    // channels is large.\n    let program;\n    if (depthRadius > 16) {\n        program = new LRNProgram(x.shape);\n    }\n    else {\n        program = new LRNSharedProgram(x.shape, depthRadius);\n    }\n    const uniformData = [\n        { type: 'int32', data: [depthRadius] }, { type: 'float32', data: [bias] },\n        { type: 'float32', data: [alpha] }, { type: 'float32', data: [beta] }\n    ];\n    const res = backend.runWebGPUProgram(program, [x], x.dtype, uniformData);\n    return res;\n}\nexport const lrnConfig = {\n    kernelName: LRN,\n    backendName: 'webgpu',\n    kernelFunc: lrn\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTFJOLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9MUk4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUEyQixHQUFHLEVBQWtDLE1BQU0sdUJBQXVCLENBQUM7QUFHckcsT0FBTyxFQUFDLFVBQVUsRUFBRSxnQkFBZ0IsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUUzRCxNQUFNLFVBQVUsR0FBRyxDQUNmLElBQWtFO0lBRXBFLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QyxNQUFNLEVBQUMsQ0FBQyxFQUFDLEdBQUcsTUFBTSxDQUFDO0lBQ25CLE1BQU0sRUFBQyxXQUFXLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUMsR0FBRyxLQUFLLENBQUM7SUFFL0MsNEVBQTRFO0lBQzVFLHNFQUFzRTtJQUN0RSw2RUFBNkU7SUFDN0UsNkVBQTZFO0lBQzdFLHFCQUFxQjtJQUNyQixJQUFJLE9BQW9DLENBQUM7SUFDekMsSUFBSSxXQUFXLEdBQUcsRUFBRSxFQUFFO1FBQ3BCLE9BQU8sR0FBRyxJQUFJLFVBQVUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDbkM7U0FBTTtRQUNMLE9BQU8sR0FBRyxJQUFJLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsV0FBVyxDQUFDLENBQUM7S0FDdEQ7SUFDRCxNQUFNLFdBQVcsR0FBRztRQUNsQixFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsV0FBVyxDQUFDLEVBQUMsRUFBRSxFQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUM7UUFDckUsRUFBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDLEtBQUssQ0FBQyxFQUFDLEVBQUUsRUFBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFDO0tBQ2xFLENBQUM7SUFDRixNQUFNLEdBQUcsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEtBQUssRUFBRSxXQUFXLENBQUMsQ0FBQztJQUV6RSxPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQWlCO0lBQ3JDLFVBQVUsRUFBRSxHQUFHO0lBQ2YsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLEdBQTRCO0NBQ3pDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7S2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBMUk4sIExSTkF0dHJzLCBMUk5JbnB1dHMsIFRlbnNvckluZm99IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuaW1wb3J0IHtMUk5Qcm9ncmFtLCBMUk5TaGFyZWRQcm9ncmFtfSBmcm9tICcuLi9scm5fd2ViZ3B1JztcblxuZXhwb3J0IGZ1bmN0aW9uIGxybihcbiAgICBhcmdzOiB7aW5wdXRzOiBMUk5JbnB1dHMsIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmQsIGF0dHJzOiBMUk5BdHRyc30pOlxuICAgIFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7eH0gPSBpbnB1dHM7XG4gIGNvbnN0IHtkZXB0aFJhZGl1cywgYmlhcywgYWxwaGEsIGJldGF9ID0gYXR0cnM7XG5cbiAgLy8gV2hlbiB0aGUgYWRqYWNlbnQgY2hhbm5lbHMgaXMgbGVzcyB0aGFuIG9yIGVxdWFsIHRvIDE2LCB3aGljaCBjb3VsZCBjb3ZlclxuICAvLyBtb3N0IGNhc2VzLCB3ZSB1c2Ugc2hhcmVkIG1lbW9yeSB2ZXJzaW9uIHRvIGdldCBiZXR0ZXIgcGVyZm9ybWFuY2UuXG4gIC8vIFRoZSB0aGVvcmV0aWNhbCBhZGphY2VudCBjaGFubmVscyBtYXkgYmUgdmVyeSBsYXJnZSwgYnV0IHRoZSBzaGFyZWQgbWVtb3J5XG4gIC8vIHNpemUgb2YgaGFyZHdhcmUgaXMgbGltaXRlZCwgc28gd2UgdXNlIHRoZSBuYWl2ZSB2ZXJzaW9uIHdoZW4gdGhlIGFkamFjZW50XG4gIC8vIGNoYW5uZWxzIGlzIGxhcmdlLlxuICBsZXQgcHJvZ3JhbTogTFJOUHJvZ3JhbXxMUk5TaGFyZWRQcm9ncmFtO1xuICBpZiAoZGVwdGhSYWRpdXMgPiAxNikge1xuICAgIHByb2dyYW0gPSBuZXcgTFJOUHJvZ3JhbSh4LnNoYXBlKTtcbiAgfSBlbHNlIHtcbiAgICBwcm9ncmFtID0gbmV3IExSTlNoYXJlZFByb2dyYW0oeC5zaGFwZSwgZGVwdGhSYWRpdXMpO1xuICB9XG4gIGNvbnN0IHVuaWZvcm1EYXRhID0gW1xuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbZGVwdGhSYWRpdXNdfSwge3R5cGU6ICdmbG9hdDMyJywgZGF0YTogW2JpYXNdfSxcbiAgICB7dHlwZTogJ2Zsb2F0MzInLCBkYXRhOiBbYWxwaGFdfSwge3R5cGU6ICdmbG9hdDMyJywgZGF0YTogW2JldGFdfVxuICBdO1xuICBjb25zdCByZXMgPSBiYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0ocHJvZ3JhbSwgW3hdLCB4LmR0eXBlLCB1bmlmb3JtRGF0YSk7XG5cbiAgcmV0dXJuIHJlcztcbn1cblxuZXhwb3J0IGNvbnN0IGxybkNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBMUk4sXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogbHJuIGFzIHVua25vd24gYXMgS2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class LRNGradProgram {\n    constructor(inputShape) {\n        this.outputShape = [];\n        this.variableNames = ['inputImage', 'outputImage', 'dy'];\n        this.uniforms = 'depthRadius : i32, bias : f32, alpha : f32, beta : f32,';\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = inputShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.shaderKey = 'lrn_grad';\n    }\n    getUserCode() {\n        const userCode = `\n    ${main('index')} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let b = coords[0];\n        let r = coords[1];\n        let c = coords[2];\n\n        let MIN_DEPTH_BEGIN = 0;\n        let MAX_DEPTH_END = uniforms.outShape[3];\n        var result = 0.0;\n        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {\n          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);\n          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);\n\n          var norm = 0.0;\n          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {\n            if (k < depthBegin) {\n              continue;\n            } else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            } else {\n              break;\n            }\n          }\n\n          norm = uniforms.alpha * norm + uniforms.bias;\n\n          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {\n            if (k < depthBegin) {\n              continue;\n            } else if (k >= depthBegin && k < depthEnd) {\n              var dyi = -2.0 * uniforms.alpha * uniforms.beta\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * uniforms.beta);\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        setOutputAtIndex(index, result);\n      }\n    }\n  `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHJuX2dyYWRfd2ViZ3B1LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMvbHJuX2dyYWRfd2ViZ3B1LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxtQkFBbUIsSUFBSSxJQUFJLEVBQWdCLE1BQU0sa0JBQWtCLENBQUM7QUFDNUUsT0FBTyxFQUFDLGVBQWUsRUFBRSxrQkFBa0IsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUVsRSxNQUFNLE9BQU8sY0FBYztJQVV6QixZQUFZLFVBQW9CO1FBVGhDLGdCQUFXLEdBQWEsRUFBRSxDQUFDO1FBSTNCLGtCQUFhLEdBQUcsQ0FBQyxZQUFZLEVBQUUsYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3BELGFBQVEsR0FBRyx5REFBeUQsQ0FBQztRQUNyRSxrQkFBYSxHQUE2QixDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDckQsU0FBSSxHQUFHLElBQUksQ0FBQztRQUdWLElBQUksQ0FBQyxXQUFXLEdBQUcsVUFBVSxDQUFDO1FBQzlCLElBQUksQ0FBQyxjQUFjLEdBQUcsa0JBQWtCLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQzNELElBQUksQ0FBQyxRQUFRLEdBQUcsZUFBZSxDQUMzQixJQUFJLENBQUMsY0FBYyxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQy9ELElBQUksQ0FBQyxTQUFTLEdBQUcsVUFBVSxDQUFDO0lBQzlCLENBQUM7SUFFRCxXQUFXO1FBQ1QsTUFBTSxRQUFRLEdBQUc7TUFDZixJQUFJLENBQUMsT0FBTyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBaURoQixDQUFDO1FBQ0EsT0FBTyxRQUFRLENBQUM7SUFDbEIsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjMgR29vZ2xlIExMQy5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge2dldE1haW5IZWFkZXJTdHJpbmcgYXMgbWFpbiwgV2ViR1BVUHJvZ3JhbX0gZnJvbSAnLi93ZWJncHVfcHJvZ3JhbSc7XG5pbXBvcnQge2NvbXB1dGVEaXNwYXRjaCwgZmxhdERpc3BhdGNoTGF5b3V0fSBmcm9tICcuL3dlYmdwdV91dGlsJztcblxuZXhwb3J0IGNsYXNzIExSTkdyYWRQcm9ncmFtIGltcGxlbWVudHMgV2ViR1BVUHJvZ3JhbSB7XG4gIG91dHB1dFNoYXBlOiBudW1iZXJbXSA9IFtdO1xuICBzaGFkZXJLZXk6IHN0cmluZztcbiAgZGlzcGF0Y2hMYXlvdXQ6IHt4OiBudW1iZXJbXX07XG4gIGRpc3BhdGNoOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl07XG4gIHZhcmlhYmxlTmFtZXMgPSBbJ2lucHV0SW1hZ2UnLCAnb3V0cHV0SW1hZ2UnLCAnZHknXTtcbiAgdW5pZm9ybXMgPSAnZGVwdGhSYWRpdXMgOiBpMzIsIGJpYXMgOiBmMzIsIGFscGhhIDogZjMyLCBiZXRhIDogZjMyLCc7XG4gIHdvcmtncm91cFNpemU6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXSA9IFs2NCwgMSwgMV07XG4gIHNpemUgPSB0cnVlO1xuXG4gIGNvbnN0cnVjdG9yKGlucHV0U2hhcGU6IG51bWJlcltdKSB7XG4gICAgdGhpcy5vdXRwdXRTaGFwZSA9IGlucHV0U2hhcGU7XG4gICAgdGhpcy5kaXNwYXRjaExheW91dCA9IGZsYXREaXNwYXRjaExheW91dCh0aGlzLm91dHB1dFNoYXBlKTtcbiAgICB0aGlzLmRpc3BhdGNoID0gY29tcHV0ZURpc3BhdGNoKFxuICAgICAgICB0aGlzLmRpc3BhdGNoTGF5b3V0LCB0aGlzLm91dHB1dFNoYXBlLCB0aGlzLndvcmtncm91cFNpemUpO1xuICAgIHRoaXMuc2hhZGVyS2V5ID0gJ2xybl9ncmFkJztcbiAgfVxuXG4gIGdldFVzZXJDb2RlKCk6IHN0cmluZyB7XG4gICAgY29uc3QgdXNlckNvZGUgPSBgXG4gICAgJHttYWluKCdpbmRleCcpfSB7XG4gICAgICBpZiAoaW5kZXggPCB1bmlmb3Jtcy5zaXplKSB7XG4gICAgICAgIGxldCBjb29yZHMgPSBnZXRPdXRwdXRDb29yZHMoKTtcbiAgICAgICAgbGV0IGIgPSBjb29yZHNbMF07XG4gICAgICAgIGxldCByID0gY29vcmRzWzFdO1xuICAgICAgICBsZXQgYyA9IGNvb3Jkc1syXTtcblxuICAgICAgICBsZXQgTUlOX0RFUFRIX0JFR0lOID0gMDtcbiAgICAgICAgbGV0IE1BWF9ERVBUSF9FTkQgPSB1bmlmb3Jtcy5vdXRTaGFwZVszXTtcbiAgICAgICAgdmFyIHJlc3VsdCA9IDAuMDtcbiAgICAgICAgZm9yICh2YXIgZCA9IE1JTl9ERVBUSF9CRUdJTjsgZCA8IE1BWF9ERVBUSF9FTkQ7IGQrKykge1xuICAgICAgICAgIGxldCBkZXB0aEJlZ2luID0gbWF4KE1JTl9ERVBUSF9CRUdJTiwgZCAtIHVuaWZvcm1zLmRlcHRoUmFkaXVzKTtcbiAgICAgICAgICBsZXQgZGVwdGhFbmQgPSBtaW4oTUFYX0RFUFRIX0VORCwgZCArIHVuaWZvcm1zLmRlcHRoUmFkaXVzICsgMSk7XG5cbiAgICAgICAgICB2YXIgbm9ybSA9IDAuMDtcbiAgICAgICAgICBmb3IgKHZhciBrID0gTUlOX0RFUFRIX0JFR0lOOyBrIDwgTUFYX0RFUFRIX0VORDsgaysrKSB7XG4gICAgICAgICAgICBpZiAoayA8IGRlcHRoQmVnaW4pIHtcbiAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGsgPj0gZGVwdGhCZWdpbiAmJiBrIDwgZGVwdGhFbmQpIHtcbiAgICAgICAgICAgICAgbm9ybSArPSBnZXRJbnB1dEltYWdlKGIsIHIsIGMsIGspICogZ2V0SW5wdXRJbWFnZShiLCByLCBjLCBrKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIG5vcm0gPSB1bmlmb3Jtcy5hbHBoYSAqIG5vcm0gKyB1bmlmb3Jtcy5iaWFzO1xuXG4gICAgICAgICAgZm9yICh2YXIgayA9IE1JTl9ERVBUSF9CRUdJTjsgayA8IE1BWF9ERVBUSF9FTkQ7IGsrKykge1xuICAgICAgICAgICAgaWYgKGsgPCBkZXB0aEJlZ2luKSB7XG4gICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChrID49IGRlcHRoQmVnaW4gJiYgayA8IGRlcHRoRW5kKSB7XG4gICAgICAgICAgICAgIHZhciBkeWkgPSAtMi4wICogdW5pZm9ybXMuYWxwaGEgKiB1bmlmb3Jtcy5iZXRhXG4gICAgICAgICAgICAgICAgKiBnZXRJbnB1dEltYWdlKGIsIHIsIGMsIGspICogZ2V0T3V0cHV0SW1hZ2UoYiwgciwgYywgZCkgLyBub3JtO1xuICAgICAgICAgICAgICBpZiAoayA9PSBkKSB7XG4gICAgICAgICAgICAgICAgZHlpICs9IHBvdyhub3JtLCAtMS4wICogdW5pZm9ybXMuYmV0YSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgaWYgKGsgPT0gY29vcmRzWzNdKSB7XG4gICAgICAgICAgICAgICAgZHlpICo9IGdldER5KGIsIHIsIGMsIGQpO1xuICAgICAgICAgICAgICAgIHJlc3VsdCArPSBkeWk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHNldE91dHB1dEF0SW5kZXgoaW5kZXgsIHJlc3VsdCk7XG4gICAgICB9XG4gICAgfVxuICBgO1xuICAgIHJldHVybiB1c2VyQ29kZTtcbiAgfVxufVxuIl19","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LRNGrad } from '@tensorflow/tfjs-core';\nimport { LRNGradProgram } from '../lrn_grad_webgpu';\nexport function lrnGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, y, dy } = inputs;\n    const { depthRadius, bias, alpha, beta } = attrs;\n    const program = new LRNGradProgram(x.shape);\n    const uniformData = [\n        { type: 'int32', data: [depthRadius] }, { type: 'float32', data: [bias] },\n        { type: 'float32', data: [alpha] }, { type: 'float32', data: [beta] }\n    ];\n    const res = backend.runWebGPUProgram(program, [x, y, dy], x.dtype, uniformData);\n    return res;\n}\nexport const lrnGradConfig = {\n    kernelName: LRNGrad,\n    backendName: 'webgpu',\n    kernelFunc: lrnGrad\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTFJOR3JhZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvTFJOR3JhZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQTJCLE9BQU8sRUFBMEMsTUFBTSx1QkFBdUIsQ0FBQztBQUdqSCxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFFbEQsTUFBTSxVQUFVLE9BQU8sQ0FDbkIsSUFBMEU7SUFFNUUsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ3RDLE1BQU0sRUFBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUMxQixNQUFNLEVBQUMsV0FBVyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFDLEdBQUcsS0FBSyxDQUFDO0lBRS9DLE1BQU0sT0FBTyxHQUFHLElBQUksY0FBYyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM1QyxNQUFNLFdBQVcsR0FBRztRQUNsQixFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsV0FBVyxDQUFDLEVBQUMsRUFBRSxFQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUM7UUFDckUsRUFBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDLEtBQUssQ0FBQyxFQUFDLEVBQUUsRUFBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFDO0tBQ2xFLENBQUM7SUFDRixNQUFNLEdBQUcsR0FDTCxPQUFPLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBRXhFLE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBaUI7SUFDekMsVUFBVSxFQUFFLE9BQU87SUFDbkIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLE9BQWdDO0NBQzdDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMyBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7S2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBMUk5HcmFkLCBMUk5HcmFkQXR0cnMsIExSTkdyYWRJbnB1dHMsIFRlbnNvckluZm99IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuaW1wb3J0IHtMUk5HcmFkUHJvZ3JhbX0gZnJvbSAnLi4vbHJuX2dyYWRfd2ViZ3B1JztcblxuZXhwb3J0IGZ1bmN0aW9uIGxybkdyYWQoXG4gICAgYXJnczoge2lucHV0czogTFJOR3JhZElucHV0cywgYmFja2VuZDogV2ViR1BVQmFja2VuZCwgYXR0cnM6IExSTkdyYWRBdHRyc30pOlxuICAgIFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7eCwgeSwgZHl9ID0gaW5wdXRzO1xuICBjb25zdCB7ZGVwdGhSYWRpdXMsIGJpYXMsIGFscGhhLCBiZXRhfSA9IGF0dHJzO1xuXG4gIGNvbnN0IHByb2dyYW0gPSBuZXcgTFJOR3JhZFByb2dyYW0oeC5zaGFwZSk7XG4gIGNvbnN0IHVuaWZvcm1EYXRhID0gW1xuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbZGVwdGhSYWRpdXNdfSwge3R5cGU6ICdmbG9hdDMyJywgZGF0YTogW2JpYXNdfSxcbiAgICB7dHlwZTogJ2Zsb2F0MzInLCBkYXRhOiBbYWxwaGFdfSwge3R5cGU6ICdmbG9hdDMyJywgZGF0YTogW2JldGFdfVxuICBdO1xuICBjb25zdCByZXMgPVxuICAgICAgYmFja2VuZC5ydW5XZWJHUFVQcm9ncmFtKHByb2dyYW0sIFt4LCB5LCBkeV0sIHguZHR5cGUsIHVuaWZvcm1EYXRhKTtcblxuICByZXR1cm4gcmVzO1xufVxuXG5leHBvcnQgY29uc3QgbHJuR3JhZENvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBMUk5HcmFkLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IGxybkdyYWQgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Maximum } from '@tensorflow/tfjs-core';\nimport { BinaryOpType } from '../binary_op_util';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { maximumImplCPU as cpuMaximum } from '../kernel_utils/shared';\nexport const maximum = binaryKernelFunc({\n    opType: BinaryOpType.MAX,\n    cpuKernelImpl: cpuMaximum,\n});\nexport const maximumConfig = {\n    kernelName: Maximum,\n    backendName: 'webgpu',\n    kernelFunc: maximum\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWF4aW11bS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvTWF4aW11bS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQWUsT0FBTyxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFFNUQsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLG1CQUFtQixDQUFDO0FBQy9DLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLG9DQUFvQyxDQUFDO0FBQ3BFLE9BQU8sRUFBQyxjQUFjLElBQUksVUFBVSxFQUFDLE1BQU0sd0JBQXdCLENBQUM7QUFFcEUsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLGdCQUFnQixDQUFDO0lBQ3RDLE1BQU0sRUFBRSxZQUFZLENBQUMsR0FBRztJQUN4QixhQUFhLEVBQUUsVUFBVTtDQUMxQixDQUFDLENBQUM7QUFFSCxNQUFNLENBQUMsTUFBTSxhQUFhLEdBQWlCO0lBQ3pDLFVBQVUsRUFBRSxPQUFPO0lBQ25CLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxPQUFPO0NBQ3BCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7S2VybmVsQ29uZmlnLCBNYXhpbXVtfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge0JpbmFyeU9wVHlwZX0gZnJvbSAnLi4vYmluYXJ5X29wX3V0aWwnO1xuaW1wb3J0IHtiaW5hcnlLZXJuZWxGdW5jfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMva2VybmVsX2Z1bmNzX3V0aWxzJztcbmltcG9ydCB7bWF4aW11bUltcGxDUFUgYXMgY3B1TWF4aW11bX0gZnJvbSAnLi4va2VybmVsX3V0aWxzL3NoYXJlZCc7XG5cbmV4cG9ydCBjb25zdCBtYXhpbXVtID0gYmluYXJ5S2VybmVsRnVuYyh7XG4gIG9wVHlwZTogQmluYXJ5T3BUeXBlLk1BWCxcbiAgY3B1S2VybmVsSW1wbDogY3B1TWF4aW11bSxcbn0pO1xuXG5leHBvcnQgY29uc3QgbWF4aW11bUNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBNYXhpbXVtLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IG1heGltdW1cbn07XG4iXX0=","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, MaxPool } from '@tensorflow/tfjs-core';\nimport { poolImpl } from './Pool_impl';\nexport function maxPool(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { filterSize, strides, pad, dimRoundingMode } = attrs;\n    const dilations = 1;\n    const convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n    return poolImpl(x, convInfo, 'max', backend);\n}\nexport const maxPoolConfig = {\n    kernelName: MaxPool,\n    backendName: 'webgpu',\n    kernelFunc: maxPool\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWF4UG9vbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvTWF4UG9vbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFDSCxPQUFPLEVBQUMsWUFBWSxFQUE0QixPQUFPLEVBQTBDLE1BQU0sdUJBQXVCLENBQUM7QUFHL0gsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLGFBQWEsQ0FBQztBQUVyQyxNQUFNLFVBQVUsT0FBTyxDQUNuQixJQUEwRTtJQUU1RSxNQUFNLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFDdEMsTUFBTSxFQUFDLENBQUMsRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUNuQixNQUFNLEVBQUMsVUFBVSxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsZUFBZSxFQUFDLEdBQUcsS0FBSyxDQUFDO0lBQzFELE1BQU0sU0FBUyxHQUFHLENBQUMsQ0FBQztJQUNwQixNQUFNLFFBQVEsR0FBRyxZQUFZLENBQUMsaUJBQWlCLENBQzNDLENBQUMsQ0FBQyxLQUF5QyxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQ2hFLFNBQVMsRUFBRSxHQUFHLEVBQUUsZUFBZSxDQUFDLENBQUM7SUFFckMsT0FBTyxRQUFRLENBQUMsQ0FBQyxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUM7QUFDL0MsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBaUI7SUFDekMsVUFBVSxFQUFFLE9BQU87SUFDbkIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLE9BQWdDO0NBQzdDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5pbXBvcnQge2JhY2tlbmRfdXRpbCwgS2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBNYXhQb29sLCBNYXhQb29sQXR0cnMsIE1heFBvb2xJbnB1dHMsIFRlbnNvckluZm99IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuaW1wb3J0IHtwb29sSW1wbH0gZnJvbSAnLi9Qb29sX2ltcGwnO1xuXG5leHBvcnQgZnVuY3Rpb24gbWF4UG9vbChcbiAgICBhcmdzOiB7aW5wdXRzOiBNYXhQb29sSW5wdXRzLCBiYWNrZW5kOiBXZWJHUFVCYWNrZW5kLCBhdHRyczogTWF4UG9vbEF0dHJzfSk6XG4gICAgVGVuc29ySW5mbyB7XG4gIGNvbnN0IHtpbnB1dHMsIGJhY2tlbmQsIGF0dHJzfSA9IGFyZ3M7XG4gIGNvbnN0IHt4fSA9IGlucHV0cztcbiAgY29uc3Qge2ZpbHRlclNpemUsIHN0cmlkZXMsIHBhZCwgZGltUm91bmRpbmdNb2RlfSA9IGF0dHJzO1xuICBjb25zdCBkaWxhdGlvbnMgPSAxO1xuICBjb25zdCBjb252SW5mbyA9IGJhY2tlbmRfdXRpbC5jb21wdXRlUG9vbDJESW5mbyhcbiAgICAgIHguc2hhcGUgYXMgW251bWJlciwgbnVtYmVyLCBudW1iZXIsIG51bWJlcl0sIGZpbHRlclNpemUsIHN0cmlkZXMsXG4gICAgICBkaWxhdGlvbnMsIHBhZCwgZGltUm91bmRpbmdNb2RlKTtcblxuICByZXR1cm4gcG9vbEltcGwoeCwgY29udkluZm8sICdtYXgnLCBiYWNrZW5kKTtcbn1cblxuZXhwb3J0IGNvbnN0IG1heFBvb2xDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogTWF4UG9vbCxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBtYXhQb29sIGFzIHVua25vd24gYXMgS2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, MaxPool3D } from '@tensorflow/tfjs-core';\nimport { Pool3DProgram } from '../pool_webgpu';\nexport function maxPool3d(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { filterSize, strides, pad, dataFormat, dimRoundingMode } = attrs;\n    const dilations = [1, 1, 1];\n    const convInfo = backend_util.computePool3DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode, dataFormat);\n    const maxPoolProgram = new Pool3DProgram(convInfo, 'max');\n    const dimensions = [\n        {\n            type: 'int32',\n            data: [convInfo.strideDepth, convInfo.strideHeight, convInfo.strideWidth]\n        },\n        {\n            type: 'int32',\n            data: [convInfo.padInfo.front, convInfo.padInfo.top, convInfo.padInfo.left]\n        },\n        {\n            type: 'int32',\n            data: [convInfo.inDepth, convInfo.inHeight, convInfo.inWidth]\n        },\n        {\n            type: 'int32',\n            data: [\n                convInfo.effectiveFilterDepth, convInfo.effectiveFilterHeight,\n                convInfo.effectiveFilterWidth\n            ]\n        }\n    ];\n    return backend.runWebGPUProgram(maxPoolProgram, [x], x.dtype, dimensions);\n}\nexport const maxPool3DConfig = {\n    kernelName: MaxPool3D,\n    backendName: 'webgpu',\n    kernelFunc: maxPool3d\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWF4UG9vbDNELmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9NYXhQb29sM0QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBQ0gsT0FBTyxFQUFDLFlBQVksRUFBNEIsU0FBUyxFQUE4QyxNQUFNLHVCQUF1QixDQUFDO0FBR3JJLE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUU3QyxNQUFNLFVBQVUsU0FBUyxDQUFDLElBSXpCO0lBQ0MsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ3RDLE1BQU0sRUFBQyxDQUFDLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFDbkIsTUFBTSxFQUFDLFVBQVUsRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLFVBQVUsRUFBRSxlQUFlLEVBQUMsR0FBRyxLQUFLLENBQUM7SUFDdEUsTUFBTSxTQUFTLEdBQTZCLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUV0RCxNQUFNLFFBQVEsR0FBRyxZQUFZLENBQUMsaUJBQWlCLENBQzNDLENBQUMsQ0FBQyxLQUFpRCxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQ3hFLFNBQVMsRUFBRSxHQUFHLEVBQUUsZUFBZSxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBQ2pELE1BQU0sY0FBYyxHQUFHLElBQUksYUFBYSxDQUFDLFFBQVEsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUMxRCxNQUFNLFVBQVUsR0FBRztRQUNqQjtZQUNFLElBQUksRUFBRSxPQUFPO1lBQ2IsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLFdBQVcsRUFBRSxRQUFRLENBQUMsWUFBWSxFQUFFLFFBQVEsQ0FBQyxXQUFXLENBQUM7U0FDMUU7UUFDRDtZQUNFLElBQUksRUFBRSxPQUFPO1lBQ2IsSUFBSSxFQUNBLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsUUFBUSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUM7U0FDMUU7UUFDRDtZQUNFLElBQUksRUFBRSxPQUFPO1lBQ2IsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxRQUFRLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxPQUFPLENBQUM7U0FDOUQ7UUFDRDtZQUNFLElBQUksRUFBRSxPQUFPO1lBQ2IsSUFBSSxFQUFFO2dCQUNKLFFBQVEsQ0FBQyxvQkFBb0IsRUFBRSxRQUFRLENBQUMscUJBQXFCO2dCQUM3RCxRQUFRLENBQUMsb0JBQW9CO2FBQzlCO1NBQ0Y7S0FDRixDQUFDO0lBQ0YsT0FBTyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsY0FBYyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEtBQUssRUFBRSxVQUFVLENBQUMsQ0FBQztBQUM1RSxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFpQjtJQUMzQyxVQUFVLEVBQUUsU0FBUztJQUNyQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsU0FBa0M7Q0FDL0MsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIzIEdvb2dsZSBMTEMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cbmltcG9ydCB7YmFja2VuZF91dGlsLCBLZXJuZWxDb25maWcsIEtlcm5lbEZ1bmMsIE1heFBvb2wzRCwgTWF4UG9vbDNEQXR0cnMsIE1heFBvb2wzRElucHV0cywgVGVuc29ySW5mb30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge1Bvb2wzRFByb2dyYW19IGZyb20gJy4uL3Bvb2xfd2ViZ3B1JztcblxuZXhwb3J0IGZ1bmN0aW9uIG1heFBvb2wzZChhcmdzOiB7XG4gIGlucHV0czogTWF4UG9vbDNESW5wdXRzLFxuICBiYWNrZW5kOiBXZWJHUFVCYWNrZW5kLFxuICBhdHRyczogTWF4UG9vbDNEQXR0cnNcbn0pOiBUZW5zb3JJbmZvIHtcbiAgY29uc3Qge2lucHV0cywgYmFja2VuZCwgYXR0cnN9ID0gYXJncztcbiAgY29uc3Qge3h9ID0gaW5wdXRzO1xuICBjb25zdCB7ZmlsdGVyU2l6ZSwgc3RyaWRlcywgcGFkLCBkYXRhRm9ybWF0LCBkaW1Sb3VuZGluZ01vZGV9ID0gYXR0cnM7XG4gIGNvbnN0IGRpbGF0aW9uczogW251bWJlciwgbnVtYmVyLCBudW1iZXJdID0gWzEsIDEsIDFdO1xuXG4gIGNvbnN0IGNvbnZJbmZvID0gYmFja2VuZF91dGlsLmNvbXB1dGVQb29sM0RJbmZvKFxuICAgICAgeC5zaGFwZSBhcyBbbnVtYmVyLCBudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdLCBmaWx0ZXJTaXplLCBzdHJpZGVzLFxuICAgICAgZGlsYXRpb25zLCBwYWQsIGRpbVJvdW5kaW5nTW9kZSwgZGF0YUZvcm1hdCk7XG4gIGNvbnN0IG1heFBvb2xQcm9ncmFtID0gbmV3IFBvb2wzRFByb2dyYW0oY29udkluZm8sICdtYXgnKTtcbiAgY29uc3QgZGltZW5zaW9ucyA9IFtcbiAgICB7XG4gICAgICB0eXBlOiAnaW50MzInLFxuICAgICAgZGF0YTogW2NvbnZJbmZvLnN0cmlkZURlcHRoLCBjb252SW5mby5zdHJpZGVIZWlnaHQsIGNvbnZJbmZvLnN0cmlkZVdpZHRoXVxuICAgIH0sXG4gICAge1xuICAgICAgdHlwZTogJ2ludDMyJyxcbiAgICAgIGRhdGE6XG4gICAgICAgICAgW2NvbnZJbmZvLnBhZEluZm8uZnJvbnQsIGNvbnZJbmZvLnBhZEluZm8udG9wLCBjb252SW5mby5wYWRJbmZvLmxlZnRdXG4gICAgfSxcbiAgICB7XG4gICAgICB0eXBlOiAnaW50MzInLFxuICAgICAgZGF0YTogW2NvbnZJbmZvLmluRGVwdGgsIGNvbnZJbmZvLmluSGVpZ2h0LCBjb252SW5mby5pbldpZHRoXVxuICAgIH0sXG4gICAge1xuICAgICAgdHlwZTogJ2ludDMyJyxcbiAgICAgIGRhdGE6IFtcbiAgICAgICAgY29udkluZm8uZWZmZWN0aXZlRmlsdGVyRGVwdGgsIGNvbnZJbmZvLmVmZmVjdGl2ZUZpbHRlckhlaWdodCxcbiAgICAgICAgY29udkluZm8uZWZmZWN0aXZlRmlsdGVyV2lkdGhcbiAgICAgIF1cbiAgICB9XG4gIF07XG4gIHJldHVybiBiYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0obWF4UG9vbFByb2dyYW0sIFt4XSwgeC5kdHlwZSwgZGltZW5zaW9ucyk7XG59XG5cbmV4cG9ydCBjb25zdCBtYXhQb29sM0RDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogTWF4UG9vbDNELFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IG1heFBvb2wzZCBhcyB1bmtub3duIGFzIEtlcm5lbEZ1bmNcbn07XG4iXX0=","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class MaxPool2DBackpropProgram {\n    constructor(convInfo) {\n        this.variableNames = ['dy', 'maxPos'];\n        this.uniforms = `strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,\n       outHeight : i32, outWidth : i32`;\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = convInfo.inShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.shaderKey = 'maxPool2DBackprop';\n    }\n    getUserCode() {\n        const userCode = `\n      ${main('index')} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d = coords[3];\n\n        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;\n        let dyRCorner = dyRCCorner.x;\n        let dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;\n        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {\n          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);\n\n          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n            continue;\n          }\n          let idyR = i32(dyR);\n\n          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {\n            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);\n\n            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n              continue;\n            }\n            let idyC = i32(dyC);\n\n            let dyValue = getDy(batch, idyR, idyC, d);\n            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            let curPosValue = wR * uniforms.filterDims[1] + wC;\n            let mask = select(0.0, 1.0, maxPosValue == curPosValue);\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `;\n        return userCode;\n    }\n}\nexport class MaxPool3DBackpropProgram {\n    constructor(convInfo) {\n        this.variableNames = ['dy', 'maxPos'];\n        this.uniforms = `strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,\n      outDepth : i32, outHeight : i32, outWidth : i32`;\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = convInfo.inShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.shaderKey = 'maxPool3DBackprop';\n    }\n    getUserCode() {\n        const userCode = `\n      ${main('index')} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords.x;\n        let ch = coords.u;\n\n        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;\n        let dyDCorner = dyCorner.x;\n        let dyRCorner = dyCorner.y;\n        let dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;\n\n        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {\n          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);\n\n          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {\n            continue;\n          }\n          let idyD = i32(dyD);\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);\n\n            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n              continue;\n            }\n            let idyR = i32(dyR);\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);\n\n              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n                continue;\n              }\n              let idyC = i32(dyC);\n\n              let dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;\n              let mask = select(0.0, 1.0, maxPosValue == curPosValue);\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, MaxPool3DGrad } from '@tensorflow/tfjs-core';\nimport { MaxPool3DBackpropProgram } from '../max_pool_backprop_webgpu';\nimport { Pool3DProgram } from '../pool_webgpu';\nexport function maxPool3DGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, input } = inputs;\n    const x = input;\n    const { filterSize, strides, pad, dimRoundingMode } = attrs;\n    const dilations = [1, 1, 1];\n    const convInfo = backend_util.computePool3DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n    const maxPool3dPositionsProgram = new Pool3DProgram(convInfo, 'max', true /* get positions */);\n    let uniformData = [\n        {\n            type: 'int32',\n            data: [convInfo.strideDepth, convInfo.strideHeight, convInfo.strideWidth]\n        },\n        {\n            type: 'int32',\n            data: [convInfo.padInfo.front, convInfo.padInfo.top, convInfo.padInfo.left]\n        },\n        {\n            type: 'int32',\n            data: [convInfo.inDepth, convInfo.inHeight, convInfo.inWidth]\n        },\n        {\n            type: 'int32',\n            data: [\n                convInfo.effectiveFilterDepth, convInfo.effectiveFilterHeight,\n                convInfo.effectiveFilterWidth\n            ]\n        }\n    ];\n    const maxPool3dPositions = backend.runWebGPUProgram(maxPool3dPositionsProgram, [x], 'int32', uniformData);\n    const maxPool3dBackpropProgram = new MaxPool3DBackpropProgram(convInfo);\n    uniformData = [\n        {\n            type: 'int32',\n            data: [convInfo.strideDepth, convInfo.strideHeight, convInfo.strideWidth]\n        },\n        {\n            type: 'int32',\n            data: [\n                convInfo.effectiveFilterDepth - 1 - convInfo.padInfo.front,\n                convInfo.effectiveFilterHeight - 1 - convInfo.padInfo.top,\n                convInfo.effectiveFilterWidth - 1 - convInfo.padInfo.left\n            ]\n        },\n        {\n            type: 'int32',\n            data: [\n                convInfo.effectiveFilterDepth, convInfo.effectiveFilterHeight,\n                convInfo.effectiveFilterWidth\n            ]\n        },\n        { type: 'int32', data: [convInfo.outDepth] },\n        { type: 'int32', data: [convInfo.outHeight] },\n        { type: 'int32', data: [convInfo.outWidth] }\n    ];\n    const result = backend.runWebGPUProgram(maxPool3dBackpropProgram, [dy, maxPool3dPositions], x.dtype, uniformData);\n    backend.disposeData(maxPool3dPositions.dataId);\n    return result;\n}\nexport const maxPool3DGradConfig = {\n    kernelName: MaxPool3DGrad,\n    backendName: 'webgpu',\n    kernelFunc: maxPool3DGrad\n};\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, MaxPoolGrad } from '@tensorflow/tfjs-core';\nimport { MaxPool2DBackpropProgram } from '../max_pool_backprop_webgpu';\nimport { Pool2DProgram } from '../pool_webgpu';\nimport { assertNotComplex } from '../webgpu_util';\nexport function maxPoolGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, input, output } = inputs;\n    const x = input;\n    assertNotComplex([input, output], 'maxPoolGrad');\n    const { filterSize, strides, pad, dimRoundingMode } = attrs;\n    const convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n    const maxPoolPositionsProgram = new Pool2DProgram(convInfo, 'max', true);\n    let uniformData = [\n        { type: 'int32', data: [convInfo.strideHeight, convInfo.strideWidth] },\n        { type: 'int32', data: [convInfo.padInfo.top, convInfo.padInfo.left] },\n        { type: 'int32', data: [convInfo.dilationHeight, convInfo.dilationWidth] },\n        { type: 'int32', data: [convInfo.inHeight, convInfo.inWidth] }, {\n            type: 'int32',\n            data: [convInfo.effectiveFilterHeight, convInfo.effectiveFilterWidth]\n        }\n    ];\n    const maxPoolPositions = backend.runWebGPUProgram(maxPoolPositionsProgram, [x], 'int32', uniformData);\n    const maxPoolBackpropProgram = new MaxPool2DBackpropProgram(convInfo);\n    uniformData = [\n        { type: 'int32', data: [convInfo.strideHeight, convInfo.strideWidth] }, {\n            type: 'int32',\n            data: [\n                convInfo.effectiveFilterHeight - 1 - convInfo.padInfo.top,\n                convInfo.effectiveFilterWidth - 1 - convInfo.padInfo.left\n            ]\n        },\n        { type: 'int32', data: [convInfo.dilationHeight, convInfo.dilationWidth] }, {\n            type: 'int32',\n            data: [convInfo.effectiveFilterHeight, convInfo.effectiveFilterWidth]\n        },\n        { type: 'int32', data: [convInfo.outHeight] },\n        { type: 'int32', data: [convInfo.outWidth] }\n    ];\n    const result = backend.runWebGPUProgram(maxPoolBackpropProgram, [dy, maxPoolPositions], x.dtype, uniformData);\n    backend.disposeData(maxPoolPositions.dataId);\n    return result;\n}\nexport const maxPoolGradConfig = {\n    kernelName: MaxPoolGrad,\n    backendName: 'webgpu',\n    kernelFunc: maxPoolGrad\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWF4UG9vbEdyYWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL01heFBvb2xHcmFkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxZQUFZLEVBQTRCLFdBQVcsRUFBa0QsTUFBTSx1QkFBdUIsQ0FBQztBQUczSSxPQUFPLEVBQUMsd0JBQXdCLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQztBQUNyRSxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFFaEQsTUFBTSxVQUFVLFdBQVcsQ0FBQyxJQUkzQjtJQUNDLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QyxNQUFNLEVBQUMsRUFBRSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFDbkMsTUFBTSxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQ2hCLGdCQUFnQixDQUFDLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxFQUFFLGFBQWEsQ0FBQyxDQUFDO0lBQ2pELE1BQU0sRUFBQyxVQUFVLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxlQUFlLEVBQUMsR0FBRyxLQUFLLENBQUM7SUFFMUQsTUFBTSxRQUFRLEdBQUcsWUFBWSxDQUFDLGlCQUFpQixDQUMzQyxDQUFDLENBQUMsS0FBeUMsRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUNoRSxDQUFDLENBQUMsZUFBZSxFQUFFLEdBQUcsRUFBRSxlQUFlLENBQUMsQ0FBQztJQUU3QyxNQUFNLHVCQUF1QixHQUFHLElBQUksYUFBYSxDQUFDLFFBQVEsRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDekUsSUFBSSxXQUFXLEdBQUc7UUFDaEIsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxZQUFZLEVBQUUsUUFBUSxDQUFDLFdBQVcsQ0FBQyxFQUFDO1FBQ3BFLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFDO1FBQ3BFLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsY0FBYyxFQUFFLFFBQVEsQ0FBQyxhQUFhLENBQUMsRUFBQztRQUN4RSxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLFFBQVEsRUFBRSxRQUFRLENBQUMsT0FBTyxDQUFDLEVBQUMsRUFBRTtZQUM1RCxJQUFJLEVBQUUsT0FBTztZQUNiLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxxQkFBcUIsRUFBRSxRQUFRLENBQUMsb0JBQW9CLENBQUM7U0FDdEU7S0FDRixDQUFDO0lBQ0YsTUFBTSxnQkFBZ0IsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQzdDLHVCQUF1QixFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsT0FBTyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBRXhELE1BQU0sc0JBQXNCLEdBQUcsSUFBSSx3QkFBd0IsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN0RSxXQUFXLEdBQUc7UUFDWixFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLFlBQVksRUFBRSxRQUFRLENBQUMsV0FBVyxDQUFDLEVBQUMsRUFBRTtZQUNwRSxJQUFJLEVBQUUsT0FBTztZQUNiLElBQUksRUFBRTtnQkFDSixRQUFRLENBQUMscUJBQXFCLEdBQUcsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxPQUFPLENBQUMsR0FBRztnQkFDekQsUUFBUSxDQUFDLG9CQUFvQixHQUFHLENBQUMsR0FBRyxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUk7YUFDMUQ7U0FDRjtRQUNELEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsY0FBYyxFQUFFLFFBQVEsQ0FBQyxhQUFhLENBQUMsRUFBQyxFQUFFO1lBQ3hFLElBQUksRUFBRSxPQUFPO1lBQ2IsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLHFCQUFxQixFQUFFLFFBQVEsQ0FBQyxvQkFBb0IsQ0FBQztTQUN0RTtRQUNELEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLEVBQUM7UUFDM0MsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsRUFBQztLQUMzQyxDQUFDO0lBQ0YsTUFBTSxNQUFNLEdBQUcsT0FBTyxDQUFDLGdCQUFnQixDQUNuQyxzQkFBc0IsRUFBRSxDQUFDLEVBQUUsRUFBRSxnQkFBZ0IsQ0FBQyxFQUFFLENBQUMsQ0FBQyxLQUFLLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDMUUsT0FBTyxDQUFDLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUU3QyxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQWlCO0lBQzdDLFVBQVUsRUFBRSxXQUFXO0lBQ3ZCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxXQUFvQztDQUNqRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjMgR29vZ2xlIExMQy5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge2JhY2tlbmRfdXRpbCwgS2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBNYXhQb29sR3JhZCwgTWF4UG9vbEdyYWRBdHRycywgTWF4UG9vbEdyYWRJbnB1dHMsIFRlbnNvckluZm99IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuaW1wb3J0IHtNYXhQb29sMkRCYWNrcHJvcFByb2dyYW19IGZyb20gJy4uL21heF9wb29sX2JhY2twcm9wX3dlYmdwdSc7XG5pbXBvcnQge1Bvb2wyRFByb2dyYW19IGZyb20gJy4uL3Bvb2xfd2ViZ3B1JztcbmltcG9ydCB7YXNzZXJ0Tm90Q29tcGxleH0gZnJvbSAnLi4vd2ViZ3B1X3V0aWwnO1xuXG5leHBvcnQgZnVuY3Rpb24gbWF4UG9vbEdyYWQoYXJnczoge1xuICBpbnB1dHM6IE1heFBvb2xHcmFkSW5wdXRzLFxuICBiYWNrZW5kOiBXZWJHUFVCYWNrZW5kLFxuICBhdHRyczogTWF4UG9vbEdyYWRBdHRyc1xufSk6IFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7ZHksIGlucHV0LCBvdXRwdXR9ID0gaW5wdXRzO1xuICBjb25zdCB4ID0gaW5wdXQ7XG4gIGFzc2VydE5vdENvbXBsZXgoW2lucHV0LCBvdXRwdXRdLCAnbWF4UG9vbEdyYWQnKTtcbiAgY29uc3Qge2ZpbHRlclNpemUsIHN0cmlkZXMsIHBhZCwgZGltUm91bmRpbmdNb2RlfSA9IGF0dHJzO1xuXG4gIGNvbnN0IGNvbnZJbmZvID0gYmFja2VuZF91dGlsLmNvbXB1dGVQb29sMkRJbmZvKFxuICAgICAgeC5zaGFwZSBhcyBbbnVtYmVyLCBudW1iZXIsIG51bWJlciwgbnVtYmVyXSwgZmlsdGVyU2l6ZSwgc3RyaWRlcyxcbiAgICAgIDEgLyogZGlsYXRpb25zICovLCBwYWQsIGRpbVJvdW5kaW5nTW9kZSk7XG5cbiAgY29uc3QgbWF4UG9vbFBvc2l0aW9uc1Byb2dyYW0gPSBuZXcgUG9vbDJEUHJvZ3JhbShjb252SW5mbywgJ21heCcsIHRydWUpO1xuICBsZXQgdW5pZm9ybURhdGEgPSBbXG4gICAge3R5cGU6ICdpbnQzMicsIGRhdGE6IFtjb252SW5mby5zdHJpZGVIZWlnaHQsIGNvbnZJbmZvLnN0cmlkZVdpZHRoXX0sXG4gICAge3R5cGU6ICdpbnQzMicsIGRhdGE6IFtjb252SW5mby5wYWRJbmZvLnRvcCwgY29udkluZm8ucGFkSW5mby5sZWZ0XX0sXG4gICAge3R5cGU6ICdpbnQzMicsIGRhdGE6IFtjb252SW5mby5kaWxhdGlvbkhlaWdodCwgY29udkluZm8uZGlsYXRpb25XaWR0aF19LFxuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbY29udkluZm8uaW5IZWlnaHQsIGNvbnZJbmZvLmluV2lkdGhdfSwge1xuICAgICAgdHlwZTogJ2ludDMyJyxcbiAgICAgIGRhdGE6IFtjb252SW5mby5lZmZlY3RpdmVGaWx0ZXJIZWlnaHQsIGNvbnZJbmZvLmVmZmVjdGl2ZUZpbHRlcldpZHRoXVxuICAgIH1cbiAgXTtcbiAgY29uc3QgbWF4UG9vbFBvc2l0aW9ucyA9IGJhY2tlbmQucnVuV2ViR1BVUHJvZ3JhbShcbiAgICAgIG1heFBvb2xQb3NpdGlvbnNQcm9ncmFtLCBbeF0sICdpbnQzMicsIHVuaWZvcm1EYXRhKTtcblxuICBjb25zdCBtYXhQb29sQmFja3Byb3BQcm9ncmFtID0gbmV3IE1heFBvb2wyREJhY2twcm9wUHJvZ3JhbShjb252SW5mbyk7XG4gIHVuaWZvcm1EYXRhID0gW1xuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbY29udkluZm8uc3RyaWRlSGVpZ2h0LCBjb252SW5mby5zdHJpZGVXaWR0aF19LCB7XG4gICAgICB0eXBlOiAnaW50MzInLFxuICAgICAgZGF0YTogW1xuICAgICAgICBjb252SW5mby5lZmZlY3RpdmVGaWx0ZXJIZWlnaHQgLSAxIC0gY29udkluZm8ucGFkSW5mby50b3AsXG4gICAgICAgIGNvbnZJbmZvLmVmZmVjdGl2ZUZpbHRlcldpZHRoIC0gMSAtIGNvbnZJbmZvLnBhZEluZm8ubGVmdFxuICAgICAgXVxuICAgIH0sXG4gICAge3R5cGU6ICdpbnQzMicsIGRhdGE6IFtjb252SW5mby5kaWxhdGlvbkhlaWdodCwgY29udkluZm8uZGlsYXRpb25XaWR0aF19LCB7XG4gICAgICB0eXBlOiAnaW50MzInLFxuICAgICAgZGF0YTogW2NvbnZJbmZvLmVmZmVjdGl2ZUZpbHRlckhlaWdodCwgY29udkluZm8uZWZmZWN0aXZlRmlsdGVyV2lkdGhdXG4gICAgfSxcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogW2NvbnZJbmZvLm91dEhlaWdodF19LFxuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbY29udkluZm8ub3V0V2lkdGhdfVxuICBdO1xuICBjb25zdCByZXN1bHQgPSBiYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0oXG4gICAgICBtYXhQb29sQmFja3Byb3BQcm9ncmFtLCBbZHksIG1heFBvb2xQb3NpdGlvbnNdLCB4LmR0eXBlLCB1bmlmb3JtRGF0YSk7XG4gIGJhY2tlbmQuZGlzcG9zZURhdGEobWF4UG9vbFBvc2l0aW9ucy5kYXRhSWQpO1xuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBjb25zdCBtYXhQb29sR3JhZENvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBNYXhQb29sR3JhZCxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBtYXhQb29sR3JhZCBhcyB1bmtub3duIGFzIEtlcm5lbEZ1bmNcbn07XG4iXX0=","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { MaxPoolWithArgmax } from '@tensorflow/tfjs-core';\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nimport { Pool2DProgram } from '../pool_webgpu';\nexport function maxPoolWithArgmax(args) {\n    const { inputs, backend, attrs } = args;\n    const { filterSize, strides, pad, includeBatchInIndex } = attrs;\n    const { x } = inputs;\n    util.assert(x.shape.length === 4, () => `Error in maxPool: input must be rank 4 but got rank ${x.shape.length}.`);\n    const dilations = [1, 1];\n    util.assert(backend_util.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in maxPool: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    const convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, dilations, pad);\n    const uniformData = [\n        { type: 'int32', data: [convInfo.strideHeight, convInfo.strideWidth] },\n        { type: 'int32', data: [convInfo.padInfo.top, convInfo.padInfo.left] },\n        { type: 'int32', data: [convInfo.dilationHeight, convInfo.dilationWidth] },\n        { type: 'int32', data: [convInfo.inHeight, convInfo.inWidth] }, {\n            type: 'int32',\n            data: [convInfo.effectiveFilterHeight, convInfo.effectiveFilterWidth]\n        }\n    ];\n    let program = new Pool2DProgram(convInfo, 'max', false);\n    const poolOutput = backend.runWebGPUProgram(program, [x], x.dtype, uniformData);\n    program = new Pool2DProgram(convInfo, 'max', true, true, includeBatchInIndex);\n    const indexOutput = backend.runWebGPUProgram(program, [x], 'int32', uniformData);\n    return [poolOutput, indexOutput];\n}\nexport const maxPoolWithArgmaxConfig = {\n    kernelName: MaxPoolWithArgmax,\n    backendName: 'webgpu',\n    kernelFunc: maxPoolWithArgmax\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWF4UG9vbFdpdGhBcmdtYXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL01heFBvb2xXaXRoQXJnbWF4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxpQkFBaUIsRUFBa0QsTUFBTSx1QkFBdUIsQ0FBQztBQUN6RyxPQUFPLEVBQUMsWUFBWSxFQUF3QyxJQUFJLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUcvRixPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFFN0MsTUFBTSxVQUFVLGlCQUFpQixDQUFDLElBSWpDO0lBQ0MsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ3RDLE1BQU0sRUFBQyxVQUFVLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxtQkFBbUIsRUFBQyxHQUFHLEtBQUssQ0FBQztJQUM5RCxNQUFNLEVBQUMsQ0FBQyxFQUFDLEdBQUcsTUFBTSxDQUFDO0lBRW5CLElBQUksQ0FBQyxNQUFNLENBQ1AsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUNwQixHQUFHLEVBQUUsQ0FBQyx1REFDRixDQUFDLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDM0IsTUFBTSxTQUFTLEdBQXFCLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQzNDLElBQUksQ0FBQyxNQUFNLENBQ1AsWUFBWSxDQUFDLDhCQUE4QixDQUFDLE9BQU8sRUFBRSxTQUFTLENBQUMsRUFDL0QsR0FBRyxFQUFFLENBQUMsMkRBQTJEO1FBQzdELGVBQWUsT0FBTyxtQkFBbUIsU0FBUyxHQUFHLENBQUMsQ0FBQztJQUUvRCxNQUFNLFFBQVEsR0FBRyxZQUFZLENBQUMsaUJBQWlCLENBQzNDLENBQUMsQ0FBQyxLQUF5QyxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQ2hFLFNBQVMsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUVwQixNQUFNLFdBQVcsR0FBRztRQUNsQixFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLFlBQVksRUFBRSxRQUFRLENBQUMsV0FBVyxDQUFDLEVBQUM7UUFDcEUsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLFFBQVEsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUM7UUFDcEUsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxjQUFjLEVBQUUsUUFBUSxDQUFDLGFBQWEsQ0FBQyxFQUFDO1FBQ3hFLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxPQUFPLENBQUMsRUFBQyxFQUFFO1lBQzVELElBQUksRUFBRSxPQUFPO1lBQ2IsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLHFCQUFxQixFQUFFLFFBQVEsQ0FBQyxvQkFBb0IsQ0FBQztTQUN0RTtLQUNGLENBQUM7SUFDRixJQUFJLE9BQU8sR0FBRyxJQUFJLGFBQWEsQ0FBQyxRQUFRLEVBQUUsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3hELE1BQU0sVUFBVSxHQUNaLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBRWpFLE9BQU8sR0FBRyxJQUFJLGFBQWEsQ0FBQyxRQUFRLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsbUJBQW1CLENBQUMsQ0FBQztJQUM5RSxNQUFNLFdBQVcsR0FDYixPQUFPLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsT0FBTyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ2pFLE9BQU8sQ0FBQyxVQUFVLEVBQUUsV0FBVyxDQUFDLENBQUM7QUFDbkMsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUFpQjtJQUNuRCxVQUFVLEVBQUUsaUJBQWlCO0lBQzdCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxpQkFBMEM7Q0FDdkQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIyIEdvb2dsZSBMTEMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtNYXhQb29sV2l0aEFyZ21heCwgTWF4UG9vbFdpdGhBcmdtYXhBdHRycywgTWF4UG9vbFdpdGhBcmdtYXhJbnB1dHN9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5pbXBvcnQge2JhY2tlbmRfdXRpbCwgS2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBUZW5zb3JJbmZvLCB1dGlsfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcbmltcG9ydCB7UG9vbDJEUHJvZ3JhbX0gZnJvbSAnLi4vcG9vbF93ZWJncHUnO1xuXG5leHBvcnQgZnVuY3Rpb24gbWF4UG9vbFdpdGhBcmdtYXgoYXJnczoge1xuICBpbnB1dHM6IE1heFBvb2xXaXRoQXJnbWF4SW5wdXRzLFxuICBhdHRyczogTWF4UG9vbFdpdGhBcmdtYXhBdHRycyxcbiAgYmFja2VuZDogV2ViR1BVQmFja2VuZFxufSk6IFRlbnNvckluZm9bXSB7XG4gIGNvbnN0IHtpbnB1dHMsIGJhY2tlbmQsIGF0dHJzfSA9IGFyZ3M7XG4gIGNvbnN0IHtmaWx0ZXJTaXplLCBzdHJpZGVzLCBwYWQsIGluY2x1ZGVCYXRjaEluSW5kZXh9ID0gYXR0cnM7XG4gIGNvbnN0IHt4fSA9IGlucHV0cztcblxuICB1dGlsLmFzc2VydChcbiAgICAgIHguc2hhcGUubGVuZ3RoID09PSA0LFxuICAgICAgKCkgPT4gYEVycm9yIGluIG1heFBvb2w6IGlucHV0IG11c3QgYmUgcmFuayA0IGJ1dCBnb3QgcmFuayAke1xuICAgICAgICAgIHguc2hhcGUubGVuZ3RofS5gKTtcbiAgY29uc3QgZGlsYXRpb25zOiBbbnVtYmVyLCBudW1iZXJdID0gWzEsIDFdO1xuICB1dGlsLmFzc2VydChcbiAgICAgIGJhY2tlbmRfdXRpbC5laXRoZXJTdHJpZGVzT3JEaWxhdGlvbnNBcmVPbmUoc3RyaWRlcywgZGlsYXRpb25zKSxcbiAgICAgICgpID0+ICdFcnJvciBpbiBtYXhQb29sOiBFaXRoZXIgc3RyaWRlcyBvciBkaWxhdGlvbnMgbXVzdCBiZSAxLiAnICtcbiAgICAgICAgICBgR290IHN0cmlkZXMgJHtzdHJpZGVzfSBhbmQgZGlsYXRpb25zICcke2RpbGF0aW9uc30nYCk7XG5cbiAgY29uc3QgY29udkluZm8gPSBiYWNrZW5kX3V0aWwuY29tcHV0ZVBvb2wyREluZm8oXG4gICAgICB4LnNoYXBlIGFzIFtudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdLCBmaWx0ZXJTaXplLCBzdHJpZGVzLFxuICAgICAgZGlsYXRpb25zLCBwYWQpO1xuXG4gIGNvbnN0IHVuaWZvcm1EYXRhID0gW1xuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbY29udkluZm8uc3RyaWRlSGVpZ2h0LCBjb252SW5mby5zdHJpZGVXaWR0aF19LFxuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbY29udkluZm8ucGFkSW5mby50b3AsIGNvbnZJbmZvLnBhZEluZm8ubGVmdF19LFxuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbY29udkluZm8uZGlsYXRpb25IZWlnaHQsIGNvbnZJbmZvLmRpbGF0aW9uV2lkdGhdfSxcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogW2NvbnZJbmZvLmluSGVpZ2h0LCBjb252SW5mby5pbldpZHRoXX0sIHtcbiAgICAgIHR5cGU6ICdpbnQzMicsXG4gICAgICBkYXRhOiBbY29udkluZm8uZWZmZWN0aXZlRmlsdGVySGVpZ2h0LCBjb252SW5mby5lZmZlY3RpdmVGaWx0ZXJXaWR0aF1cbiAgICB9XG4gIF07XG4gIGxldCBwcm9ncmFtID0gbmV3IFBvb2wyRFByb2dyYW0oY29udkluZm8sICdtYXgnLCBmYWxzZSk7XG4gIGNvbnN0IHBvb2xPdXRwdXQgPVxuICAgICAgYmFja2VuZC5ydW5XZWJHUFVQcm9ncmFtKHByb2dyYW0sIFt4XSwgeC5kdHlwZSwgdW5pZm9ybURhdGEpO1xuXG4gIHByb2dyYW0gPSBuZXcgUG9vbDJEUHJvZ3JhbShjb252SW5mbywgJ21heCcsIHRydWUsIHRydWUsIGluY2x1ZGVCYXRjaEluSW5kZXgpO1xuICBjb25zdCBpbmRleE91dHB1dCA9XG4gICAgICBiYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0ocHJvZ3JhbSwgW3hdLCAnaW50MzInLCB1bmlmb3JtRGF0YSk7XG4gIHJldHVybiBbcG9vbE91dHB1dCwgaW5kZXhPdXRwdXRdO1xufVxuXG5leHBvcnQgY29uc3QgbWF4UG9vbFdpdGhBcmdtYXhDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogTWF4UG9vbFdpdGhBcmdtYXgsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogbWF4UG9vbFdpdGhBcmdtYXggYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Min } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nexport function min(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, keepDims } = attrs;\n    return reduce(x, axis, keepDims, 'min', backend);\n}\nexport const minConfig = {\n    kernelName: Min,\n    backendName: 'webgpu',\n    kernelFunc: min\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWluLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9NaW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUEyQixHQUFHLEVBQWtDLE1BQU0sdUJBQXVCLENBQUM7QUFHckcsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBRTlDLE1BQU0sVUFBVSxHQUFHLENBQ2YsSUFBa0U7SUFFcEUsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ3RDLE1BQU0sRUFBQyxDQUFDLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFDbkIsTUFBTSxFQUFDLElBQUksRUFBRSxRQUFRLEVBQUMsR0FBRyxLQUFLLENBQUM7SUFFL0IsT0FBTyxNQUFNLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ25ELENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQWlCO0lBQ3JDLFVBQVUsRUFBRSxHQUFHO0lBQ2YsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLEdBQTRCO0NBQ3pDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7S2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBNaW4sIE1pbkF0dHJzLCBNaW5JbnB1dHMsIFRlbnNvckluZm99IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuaW1wb3J0IHtyZWR1Y2V9IGZyb20gJy4uL2tlcm5lbF91dGlscy9yZWR1Y2UnO1xuXG5leHBvcnQgZnVuY3Rpb24gbWluKFxuICAgIGFyZ3M6IHtpbnB1dHM6IE1pbklucHV0cywgYmFja2VuZDogV2ViR1BVQmFja2VuZCwgYXR0cnM6IE1pbkF0dHJzfSk6XG4gICAgVGVuc29ySW5mbyB7XG4gIGNvbnN0IHtpbnB1dHMsIGJhY2tlbmQsIGF0dHJzfSA9IGFyZ3M7XG4gIGNvbnN0IHt4fSA9IGlucHV0cztcbiAgY29uc3Qge2F4aXMsIGtlZXBEaW1zfSA9IGF0dHJzO1xuXG4gIHJldHVybiByZWR1Y2UoeCwgYXhpcywga2VlcERpbXMsICdtaW4nLCBiYWNrZW5kKTtcbn1cblxuZXhwb3J0IGNvbnN0IG1pbkNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBNaW4sXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogbWluIGFzIHVua25vd24gYXMgS2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Minimum } from '@tensorflow/tfjs-core';\nimport { BinaryOpType } from '../binary_op_util';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { minimumImplCPU as cpuMinimum } from '../kernel_utils/shared';\nexport const minimum = binaryKernelFunc({\n    opType: BinaryOpType.MIN,\n    cpuKernelImpl: cpuMinimum,\n});\nexport const minimumConfig = {\n    kernelName: Minimum,\n    backendName: 'webgpu',\n    kernelFunc: minimum\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWluaW11bS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvTWluaW11bS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQWUsT0FBTyxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFFNUQsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLG1CQUFtQixDQUFDO0FBQy9DLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLG9DQUFvQyxDQUFDO0FBQ3BFLE9BQU8sRUFBQyxjQUFjLElBQUksVUFBVSxFQUFDLE1BQU0sd0JBQXdCLENBQUM7QUFFcEUsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLGdCQUFnQixDQUFDO0lBQ3RDLE1BQU0sRUFBRSxZQUFZLENBQUMsR0FBRztJQUN4QixhQUFhLEVBQUUsVUFBVTtDQUMxQixDQUFDLENBQUM7QUFFSCxNQUFNLENBQUMsTUFBTSxhQUFhLEdBQWlCO0lBQ3pDLFVBQVUsRUFBRSxPQUFPO0lBQ25CLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxPQUFPO0NBQ3BCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7S2VybmVsQ29uZmlnLCBNaW5pbXVtfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge0JpbmFyeU9wVHlwZX0gZnJvbSAnLi4vYmluYXJ5X29wX3V0aWwnO1xuaW1wb3J0IHtiaW5hcnlLZXJuZWxGdW5jfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMva2VybmVsX2Z1bmNzX3V0aWxzJztcbmltcG9ydCB7bWluaW11bUltcGxDUFUgYXMgY3B1TWluaW11bX0gZnJvbSAnLi4va2VybmVsX3V0aWxzL3NoYXJlZCc7XG5cbmV4cG9ydCBjb25zdCBtaW5pbXVtID0gYmluYXJ5S2VybmVsRnVuYyh7XG4gIG9wVHlwZTogQmluYXJ5T3BUeXBlLk1JTixcbiAgY3B1S2VybmVsSW1wbDogY3B1TWluaW11bSxcbn0pO1xuXG5leHBvcnQgY29uc3QgbWluaW11bUNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBNaW5pbXVtLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IG1pbmltdW1cbn07XG4iXX0=","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType, getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class MirrorPadProgram {\n    constructor(xShape, paddings, mode) {\n        this.uniforms = '';\n        this.variableNames = ['x'];\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = paddings.map((p, i) => p[0] /* beforePad */ + xShape[i] + p[1] /* afterPad */);\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.xShape = xShape;\n        paddings.map((_, i) => {\n            this.uniforms += ` pad${i} : vec2<i32>,`;\n        });\n        this.offset = mode === 'reflect' ? 0 : 1;\n        this.shaderKey = `mirrorPad_${mode}`;\n    }\n    getUserCode() {\n        const rank = this.xShape.length;\n        // The length of paddings are same with the rank of the input tensor.\n        const start = this.xShape.map((_, i) => `uniforms.pad${i}[0]`).join(',');\n        const end = this.xShape\n            .map((_, i) => `uniforms.pad${i}[0] + uniforms.xShape${rank > 1 ? `[${i}]` : ''}`)\n            .join(',');\n        const shaderStart = rank === 1 ? 'start' : 'start[i]';\n        const shaderEnd = rank === 1 ? 'end' : 'end[i]';\n        const shaderOutC = rank === 1 ? 'outC' : 'outC[i]';\n        const dtype = getCoordsDataType(rank);\n        const unpackedCoords = rank > 1 ?\n            ['coords[0]', 'coords[1]', 'coords[2]', 'coords[3]'].slice(0, rank) :\n            'coords';\n        return `\n      ${main('index')} {\n        if (index < uniforms.size) {\n          let start = ${dtype}(${start});\n          let end = ${dtype}(${end});\n          var outC = getCoordsFromIndex(index);\n          for (var i = 0; i < ${rank}; i = i + 1) {\n            if (${shaderOutC} < ${shaderStart}) {\n              ${shaderOutC} = ${shaderStart} * 2 - ${shaderOutC} - ${this.offset};\n            } else if(${shaderOutC} >= ${shaderEnd}) {\n              ${shaderOutC} = (${shaderEnd} - 1) * 2 - ${shaderOutC} + ${this.offset};\n            }\n          }\n          let coords = outC - start;\n          setOutputAtIndex(index, getX(${unpackedCoords}));\n        }\n      }\n    `;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWlycm9yX3BhZF93ZWJncHUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9taXJyb3JfcGFkX3dlYmdwdS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsaUJBQWlCLEVBQUUsbUJBQW1CLElBQUksSUFBSSxFQUFnQixNQUFNLGtCQUFrQixDQUFDO0FBQy9GLE9BQU8sRUFBQyxlQUFlLEVBQUUsa0JBQWtCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFbEUsTUFBTSxPQUFPLGdCQUFnQjtJQVkzQixZQUNJLE1BQWdCLEVBQUUsUUFBaUMsRUFDbkQsSUFBMkI7UUFYL0IsYUFBUSxHQUFHLEVBQUUsQ0FBQztRQUdkLGtCQUFhLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN0QixrQkFBYSxHQUE2QixDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFHckQsU0FBSSxHQUFHLElBQUksQ0FBQztRQUtWLElBQUksQ0FBQyxXQUFXLEdBQUcsUUFBUSxDQUFDLEdBQUcsQ0FDM0IsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsZUFBZSxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDdEUsSUFBSSxDQUFDLGNBQWMsR0FBRyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxlQUFlLENBQzNCLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFFL0QsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDckIsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUNwQixJQUFJLENBQUMsUUFBUSxJQUFJLE9BQU8sQ0FBQyxlQUFlLENBQUM7UUFDM0MsQ0FBQyxDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxTQUFTLEdBQUcsYUFBYSxJQUFJLEVBQUUsQ0FBQztJQUN2QyxDQUFDO0lBRUQsV0FBVztRQUNULE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDO1FBQ2hDLHFFQUFxRTtRQUNyRSxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLGVBQWUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDekUsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU07YUFDTixHQUFHLENBQ0EsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxlQUFlLENBQUMsd0JBQ3RCLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDO2FBQ2xDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUUzQixNQUFNLFdBQVcsR0FBRyxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQztRQUN0RCxNQUFNLFNBQVMsR0FBRyxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQztRQUNoRCxNQUFNLFVBQVUsR0FBRyxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztRQUNuRCxNQUFNLEtBQUssR0FBRyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN0QyxNQUFNLGNBQWMsR0FBRyxJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDN0IsQ0FBQyxXQUFXLEVBQUUsV0FBVyxFQUFFLFdBQVcsRUFBRSxXQUFXLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDckUsUUFBUSxDQUFDO1FBRWIsT0FBTztRQUNILElBQUksQ0FBQyxPQUFPLENBQUM7O3dCQUVHLEtBQUssSUFBSSxLQUFLO3NCQUNoQixLQUFLLElBQUksR0FBRzs7Z0NBRUYsSUFBSTtrQkFDbEIsVUFBVSxNQUFNLFdBQVc7Z0JBQzdCLFVBQVUsTUFBTSxXQUFXLFVBQVUsVUFBVSxNQUN2RCxJQUFJLENBQUMsTUFBTTt3QkFDSyxVQUFVLE9BQU8sU0FBUztnQkFDbEMsVUFBVSxPQUFPLFNBQVMsZUFBZSxVQUFVLE1BQzNELElBQUksQ0FBQyxNQUFNOzs7O3lDQUlzQixjQUFjOzs7S0FHbEQsQ0FBQztJQUNKLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtnZXRDb29yZHNEYXRhVHlwZSwgZ2V0TWFpbkhlYWRlclN0cmluZyBhcyBtYWluLCBXZWJHUFVQcm9ncmFtfSBmcm9tICcuL3dlYmdwdV9wcm9ncmFtJztcbmltcG9ydCB7Y29tcHV0ZURpc3BhdGNoLCBmbGF0RGlzcGF0Y2hMYXlvdXR9IGZyb20gJy4vd2ViZ3B1X3V0aWwnO1xuXG5leHBvcnQgY2xhc3MgTWlycm9yUGFkUHJvZ3JhbSBpbXBsZW1lbnRzIFdlYkdQVVByb2dyYW0ge1xuICBvdXRwdXRTaGFwZTogbnVtYmVyW107XG4gIHNoYWRlcktleTogc3RyaW5nO1xuICB1bmlmb3JtcyA9ICcnO1xuICBkaXNwYXRjaExheW91dDoge3g6IG51bWJlcltdfTtcbiAgZGlzcGF0Y2g6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXTtcbiAgdmFyaWFibGVOYW1lcyA9IFsneCddO1xuICB3b3JrZ3JvdXBTaXplOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl0gPSBbNjQsIDEsIDFdO1xuICB4U2hhcGU6IG51bWJlcltdO1xuICBvZmZzZXQ6IG51bWJlcjtcbiAgc2l6ZSA9IHRydWU7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgICB4U2hhcGU6IG51bWJlcltdLCBwYWRkaW5nczogQXJyYXk8W251bWJlciwgbnVtYmVyXT4sXG4gICAgICBtb2RlOiAncmVmbGVjdCd8J3N5bW1ldHJpYycpIHtcbiAgICB0aGlzLm91dHB1dFNoYXBlID0gcGFkZGluZ3MubWFwKFxuICAgICAgICAocCwgaSkgPT4gcFswXSAvKiBiZWZvcmVQYWQgKi8gKyB4U2hhcGVbaV0gKyBwWzFdIC8qIGFmdGVyUGFkICovKTtcbiAgICB0aGlzLmRpc3BhdGNoTGF5b3V0ID0gZmxhdERpc3BhdGNoTGF5b3V0KHRoaXMub3V0cHV0U2hhcGUpO1xuICAgIHRoaXMuZGlzcGF0Y2ggPSBjb21wdXRlRGlzcGF0Y2goXG4gICAgICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQsIHRoaXMub3V0cHV0U2hhcGUsIHRoaXMud29ya2dyb3VwU2l6ZSk7XG5cbiAgICB0aGlzLnhTaGFwZSA9IHhTaGFwZTtcbiAgICBwYWRkaW5ncy5tYXAoKF8sIGkpID0+IHtcbiAgICAgIHRoaXMudW5pZm9ybXMgKz0gYCBwYWQke2l9IDogdmVjMjxpMzI+LGA7XG4gICAgfSk7XG4gICAgdGhpcy5vZmZzZXQgPSBtb2RlID09PSAncmVmbGVjdCcgPyAwIDogMTtcbiAgICB0aGlzLnNoYWRlcktleSA9IGBtaXJyb3JQYWRfJHttb2RlfWA7XG4gIH1cblxuICBnZXRVc2VyQ29kZSgpOiBzdHJpbmcge1xuICAgIGNvbnN0IHJhbmsgPSB0aGlzLnhTaGFwZS5sZW5ndGg7XG4gICAgLy8gVGhlIGxlbmd0aCBvZiBwYWRkaW5ncyBhcmUgc2FtZSB3aXRoIHRoZSByYW5rIG9mIHRoZSBpbnB1dCB0ZW5zb3IuXG4gICAgY29uc3Qgc3RhcnQgPSB0aGlzLnhTaGFwZS5tYXAoKF8sIGkpID0+IGB1bmlmb3Jtcy5wYWQke2l9WzBdYCkuam9pbignLCcpO1xuICAgIGNvbnN0IGVuZCA9IHRoaXMueFNoYXBlXG4gICAgICAgICAgICAgICAgICAgIC5tYXAoXG4gICAgICAgICAgICAgICAgICAgICAgICAoXywgaSkgPT4gYHVuaWZvcm1zLnBhZCR7aX1bMF0gKyB1bmlmb3Jtcy54U2hhcGUke1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmsgPiAxID8gYFske2l9XWAgOiAnJ31gKVxuICAgICAgICAgICAgICAgICAgICAuam9pbignLCcpO1xuXG4gICAgY29uc3Qgc2hhZGVyU3RhcnQgPSByYW5rID09PSAxID8gJ3N0YXJ0JyA6ICdzdGFydFtpXSc7XG4gICAgY29uc3Qgc2hhZGVyRW5kID0gcmFuayA9PT0gMSA/ICdlbmQnIDogJ2VuZFtpXSc7XG4gICAgY29uc3Qgc2hhZGVyT3V0QyA9IHJhbmsgPT09IDEgPyAnb3V0QycgOiAnb3V0Q1tpXSc7XG4gICAgY29uc3QgZHR5cGUgPSBnZXRDb29yZHNEYXRhVHlwZShyYW5rKTtcbiAgICBjb25zdCB1bnBhY2tlZENvb3JkcyA9IHJhbmsgPiAxID9cbiAgICAgICAgWydjb29yZHNbMF0nLCAnY29vcmRzWzFdJywgJ2Nvb3Jkc1syXScsICdjb29yZHNbM10nXS5zbGljZSgwLCByYW5rKSA6XG4gICAgICAgICdjb29yZHMnO1xuXG4gICAgcmV0dXJuIGBcbiAgICAgICR7bWFpbignaW5kZXgnKX0ge1xuICAgICAgICBpZiAoaW5kZXggPCB1bmlmb3Jtcy5zaXplKSB7XG4gICAgICAgICAgbGV0IHN0YXJ0ID0gJHtkdHlwZX0oJHtzdGFydH0pO1xuICAgICAgICAgIGxldCBlbmQgPSAke2R0eXBlfSgke2VuZH0pO1xuICAgICAgICAgIHZhciBvdXRDID0gZ2V0Q29vcmRzRnJvbUluZGV4KGluZGV4KTtcbiAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8ICR7cmFua307IGkgPSBpICsgMSkge1xuICAgICAgICAgICAgaWYgKCR7c2hhZGVyT3V0Q30gPCAke3NoYWRlclN0YXJ0fSkge1xuICAgICAgICAgICAgICAke3NoYWRlck91dEN9ID0gJHtzaGFkZXJTdGFydH0gKiAyIC0gJHtzaGFkZXJPdXRDfSAtICR7XG4gICAgICAgIHRoaXMub2Zmc2V0fTtcbiAgICAgICAgICAgIH0gZWxzZSBpZigke3NoYWRlck91dEN9ID49ICR7c2hhZGVyRW5kfSkge1xuICAgICAgICAgICAgICAke3NoYWRlck91dEN9ID0gKCR7c2hhZGVyRW5kfSAtIDEpICogMiAtICR7c2hhZGVyT3V0Q30gKyAke1xuICAgICAgICB0aGlzLm9mZnNldH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGxldCBjb29yZHMgPSBvdXRDIC0gc3RhcnQ7XG4gICAgICAgICAgc2V0T3V0cHV0QXRJbmRleChpbmRleCwgZ2V0WCgke3VucGFja2VkQ29vcmRzfSkpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgYDtcbiAgfVxufVxuIl19","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { MirrorPad } from '@tensorflow/tfjs-core';\nimport { MirrorPadProgram } from '../mirror_pad_webgpu';\nexport const mirrorPadConfig = {\n    kernelName: MirrorPad,\n    backendName: 'webgpu',\n    kernelFunc: ({ inputs, attrs, backend }) => {\n        const { x } = inputs;\n        const { paddings, mode } = attrs;\n        const webGPUBackend = backend;\n        const uniformData = paddings.map(p => {\n            return { type: 'int32', data: [p[0], p[1]] };\n        });\n        const program = new MirrorPadProgram(x.shape, paddings, mode);\n        const output = webGPUBackend.runWebGPUProgram(program, [x], x.dtype, uniformData);\n        return output;\n    }\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWlycm9yUGFkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9NaXJyb3JQYWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFlLFNBQVMsRUFBa0MsTUFBTSx1QkFBdUIsQ0FBQztBQUkvRixPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUV0RCxNQUFNLENBQUMsTUFBTSxlQUFlLEdBQWlCO0lBQzNDLFVBQVUsRUFBRSxTQUFTO0lBQ3JCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxDQUFDLEVBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUMsRUFBRSxFQUFFO1FBQ3ZDLE1BQU0sRUFBQyxDQUFDLEVBQUMsR0FBRyxNQUF5QixDQUFDO1FBQ3RDLE1BQU0sRUFBQyxRQUFRLEVBQUUsSUFBSSxFQUFDLEdBQUcsS0FBa0MsQ0FBQztRQUM1RCxNQUFNLGFBQWEsR0FBRyxPQUF3QixDQUFDO1FBRS9DLE1BQU0sV0FBVyxHQUFHLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUU7WUFDbkMsT0FBTyxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUM7UUFDN0MsQ0FBQyxDQUFDLENBQUM7UUFDSCxNQUFNLE9BQU8sR0FBRyxJQUFJLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQzlELE1BQU0sTUFBTSxHQUNSLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxFQUFFLFdBQVcsQ0FBQyxDQUFDO1FBRXZFLE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7Q0FDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0tlcm5lbENvbmZpZywgTWlycm9yUGFkLCBNaXJyb3JQYWRBdHRycywgTWlycm9yUGFkSW5wdXRzfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcblxuaW1wb3J0IHtNaXJyb3JQYWRQcm9ncmFtfSBmcm9tICcuLi9taXJyb3JfcGFkX3dlYmdwdSc7XG5cbmV4cG9ydCBjb25zdCBtaXJyb3JQYWRDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogTWlycm9yUGFkLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6ICh7aW5wdXRzLCBhdHRycywgYmFja2VuZH0pID0+IHtcbiAgICBjb25zdCB7eH0gPSBpbnB1dHMgYXMgTWlycm9yUGFkSW5wdXRzO1xuICAgIGNvbnN0IHtwYWRkaW5ncywgbW9kZX0gPSBhdHRycyBhcyB1bmtub3duIGFzIE1pcnJvclBhZEF0dHJzO1xuICAgIGNvbnN0IHdlYkdQVUJhY2tlbmQgPSBiYWNrZW5kIGFzIFdlYkdQVUJhY2tlbmQ7XG5cbiAgICBjb25zdCB1bmlmb3JtRGF0YSA9IHBhZGRpbmdzLm1hcChwID0+IHtcbiAgICAgIHJldHVybiB7dHlwZTogJ2ludDMyJywgZGF0YTogW3BbMF0sIHBbMV1dfTtcbiAgICB9KTtcbiAgICBjb25zdCBwcm9ncmFtID0gbmV3IE1pcnJvclBhZFByb2dyYW0oeC5zaGFwZSwgcGFkZGluZ3MsIG1vZGUpO1xuICAgIGNvbnN0IG91dHB1dCA9XG4gICAgICAgIHdlYkdQVUJhY2tlbmQucnVuV2ViR1BVUHJvZ3JhbShwcm9ncmFtLCBbeF0sIHguZHR5cGUsIHVuaWZvcm1EYXRhKTtcblxuICAgIHJldHVybiBvdXRwdXQ7XG4gIH1cbn07XG4iXX0=","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Mod } from '@tensorflow/tfjs-core';\nimport { BinaryOpType } from '../binary_op_util';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nexport const mod = binaryKernelFunc({ opType: BinaryOpType.MOD });\nexport const modConfig = {\n    kernelName: Mod,\n    backendName: 'webgpu',\n    kernelFunc: mod\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTW9kLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9Nb2QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFlLEdBQUcsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRXhELE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUMvQyxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUVwRSxNQUFNLENBQUMsTUFBTSxHQUFHLEdBQUcsZ0JBQWdCLENBQUMsRUFBQyxNQUFNLEVBQUUsWUFBWSxDQUFDLEdBQUcsRUFBQyxDQUFDLENBQUM7QUFFaEUsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFpQjtJQUNyQyxVQUFVLEVBQUUsR0FBRztJQUNmLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxHQUFHO0NBQ2hCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7S2VybmVsQ29uZmlnLCBNb2R9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7QmluYXJ5T3BUeXBlfSBmcm9tICcuLi9iaW5hcnlfb3BfdXRpbCc7XG5pbXBvcnQge2JpbmFyeUtlcm5lbEZ1bmN9IGZyb20gJy4uL2tlcm5lbF91dGlscy9rZXJuZWxfZnVuY3NfdXRpbHMnO1xuXG5leHBvcnQgY29uc3QgbW9kID0gYmluYXJ5S2VybmVsRnVuYyh7b3BUeXBlOiBCaW5hcnlPcFR5cGUuTU9EfSk7XG5cbmV4cG9ydCBjb25zdCBtb2RDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogTW9kLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IG1vZFxufTtcbiJdfQ==","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class MultinomialProgram {\n    constructor(batchSize, numSamples) {\n        this.variableNames = ['probs'];\n        this.outputShape = [];\n        this.uniforms = 'seed : f32, numOutcomes: i32,';\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = [batchSize, numSamples];\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.shaderKey = 'multinomial';\n    }\n    getUserCode() {\n        const userCode = `\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {\n      let HASHSCALE1 = 443.8975;\n      let p = resultUV * seed;\n      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);\n      p3 = p3 + dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${main('index')} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let batch = coords[0];\n\n        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),\n            f32(coords[0]) / f32(uniforms.outShape[0]));\n        let r = random(uniforms.seed, resUV);\n        var cdf = 0.0;\n        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {\n          cdf = cdf + getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutputAtIndexI32(index, i);\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);\n      }\n    }\n  `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGlub21pYWxfd2ViZ3B1LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMvbXVsdGlub21pYWxfd2ViZ3B1LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxtQkFBbUIsSUFBSSxJQUFJLEVBQWdCLE1BQU0sa0JBQWtCLENBQUM7QUFDNUUsT0FBTyxFQUFDLGVBQWUsRUFBRSxrQkFBa0IsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUVsRSxNQUFNLE9BQU8sa0JBQWtCO0lBVTdCLFlBQVksU0FBaUIsRUFBRSxVQUFrQjtRQVRqRCxrQkFBYSxHQUFhLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDcEMsZ0JBQVcsR0FBYSxFQUFFLENBQUM7UUFJM0IsYUFBUSxHQUFHLCtCQUErQixDQUFDO1FBQzNDLGtCQUFhLEdBQTZCLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNyRCxTQUFJLEdBQUcsSUFBSSxDQUFDO1FBR1YsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLFNBQVMsRUFBRSxVQUFVLENBQUMsQ0FBQztRQUMzQyxJQUFJLENBQUMsY0FBYyxHQUFHLGtCQUFrQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUMzRCxJQUFJLENBQUMsUUFBUSxHQUFHLGVBQWUsQ0FDM0IsSUFBSSxDQUFDLGNBQWMsRUFBRSxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUUvRCxJQUFJLENBQUMsU0FBUyxHQUFHLGFBQWEsQ0FBQztJQUNqQyxDQUFDO0lBRUQsV0FBVztRQUNULE1BQU0sUUFBUSxHQUFHOzs7Ozs7Ozs7OztNQVdmLElBQUksQ0FBQyxPQUFPLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FzQmhCLENBQUM7UUFDQSxPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMyBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7Z2V0TWFpbkhlYWRlclN0cmluZyBhcyBtYWluLCBXZWJHUFVQcm9ncmFtfSBmcm9tICcuL3dlYmdwdV9wcm9ncmFtJztcbmltcG9ydCB7Y29tcHV0ZURpc3BhdGNoLCBmbGF0RGlzcGF0Y2hMYXlvdXR9IGZyb20gJy4vd2ViZ3B1X3V0aWwnO1xuXG5leHBvcnQgY2xhc3MgTXVsdGlub21pYWxQcm9ncmFtIGltcGxlbWVudHMgV2ViR1BVUHJvZ3JhbSB7XG4gIHZhcmlhYmxlTmFtZXM6IHN0cmluZ1tdID0gWydwcm9icyddO1xuICBvdXRwdXRTaGFwZTogbnVtYmVyW10gPSBbXTtcbiAgc2hhZGVyS2V5OiBzdHJpbmc7XG4gIGRpc3BhdGNoTGF5b3V0OiB7eDogbnVtYmVyW119O1xuICBkaXNwYXRjaDogW251bWJlciwgbnVtYmVyLCBudW1iZXJdO1xuICB1bmlmb3JtcyA9ICdzZWVkIDogZjMyLCBudW1PdXRjb21lczogaTMyLCc7XG4gIHdvcmtncm91cFNpemU6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXSA9IFs2NCwgMSwgMV07XG4gIHNpemUgPSB0cnVlO1xuXG4gIGNvbnN0cnVjdG9yKGJhdGNoU2l6ZTogbnVtYmVyLCBudW1TYW1wbGVzOiBudW1iZXIpIHtcbiAgICB0aGlzLm91dHB1dFNoYXBlID0gW2JhdGNoU2l6ZSwgbnVtU2FtcGxlc107XG4gICAgdGhpcy5kaXNwYXRjaExheW91dCA9IGZsYXREaXNwYXRjaExheW91dCh0aGlzLm91dHB1dFNoYXBlKTtcbiAgICB0aGlzLmRpc3BhdGNoID0gY29tcHV0ZURpc3BhdGNoKFxuICAgICAgICB0aGlzLmRpc3BhdGNoTGF5b3V0LCB0aGlzLm91dHB1dFNoYXBlLCB0aGlzLndvcmtncm91cFNpemUpO1xuXG4gICAgdGhpcy5zaGFkZXJLZXkgPSAnbXVsdGlub21pYWwnO1xuICB9XG5cbiAgZ2V0VXNlckNvZGUoKTogc3RyaW5nIHtcbiAgICBjb25zdCB1c2VyQ29kZSA9IGBcbiAgICAvL0Jhc2VkIG9uIHRoZSB3b3JrIG9mIERhdmUgSG9za2luc1xuICAgIC8vaHR0cHM6Ly93d3cuc2hhZGVydG95LmNvbS92aWV3LzRkalNSV1xuICAgIGZuIHJhbmRvbSAoc2VlZCA6IGYzMiwgcmVzdWx0VVYgOiB2ZWMyPGYzMj4pIC0+IGYzMiB7XG4gICAgICBsZXQgSEFTSFNDQUxFMSA9IDQ0My44OTc1O1xuICAgICAgbGV0IHAgPSByZXN1bHRVViAqIHNlZWQ7XG4gICAgICB2YXIgcDMgID0gZnJhY3QodmVjMzxmMzI+KHAueHl4KSAqIEhBU0hTQ0FMRTEpO1xuICAgICAgcDMgPSBwMyArIGRvdChwMywgcDMueXp4ICsgMTkuMTkpO1xuICAgICAgcmV0dXJuIGZyYWN0KChwMy54ICsgcDMueSkgKiBwMy56KTtcbiAgICB9XG5cbiAgICAke21haW4oJ2luZGV4Jyl9IHtcbiAgICAgIGlmIChpbmRleCA8IHVuaWZvcm1zLnNpemUpIHtcbiAgICAgICAgbGV0IGNvb3JkcyA9IGdldE91dHB1dENvb3JkcygpO1xuICAgICAgICBsZXQgYmF0Y2ggPSBjb29yZHNbMF07XG5cbiAgICAgICAgbGV0IHJlc1VWID0gdmVjMjxmMzI+KGYzMihjb29yZHNbMV0pIC8gZjMyKHVuaWZvcm1zLm91dFNoYXBlWzFdKSxcbiAgICAgICAgICAgIGYzMihjb29yZHNbMF0pIC8gZjMyKHVuaWZvcm1zLm91dFNoYXBlWzBdKSk7XG4gICAgICAgIGxldCByID0gcmFuZG9tKHVuaWZvcm1zLnNlZWQsIHJlc1VWKTtcbiAgICAgICAgdmFyIGNkZiA9IDAuMDtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB1bmlmb3Jtcy5udW1PdXRjb21lcyAtIDE7IGkgPSBpICsgMSkge1xuICAgICAgICAgIGNkZiA9IGNkZiArIGdldFByb2JzKGJhdGNoLCBpKTtcblxuICAgICAgICAgIGlmIChyIDwgY2RmKSB7XG4gICAgICAgICAgICBzZXRPdXRwdXRBdEluZGV4STMyKGluZGV4LCBpKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBJZiBubyBvdGhlciBldmVudCBoYXBwZW5lZCwgbGFzdCBldmVudCBoYXBwZW5lZC5cbiAgICAgICAgc2V0T3V0cHV0QXRJbmRleEkzMihpbmRleCwgdW5pZm9ybXMubnVtT3V0Y29tZXMgLSAxKTtcbiAgICAgIH1cbiAgICB9XG4gIGA7XG4gICAgcmV0dXJuIHVzZXJDb2RlO1xuICB9XG59XG4iXX0=","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { flatDispatchLayout } from './webgpu_util';\nexport class SoftmaxProgram {\n    constructor(outputShape) {\n        this.variableNames = ['logits'];\n        this.outputShape = outputShape; // [rows, cols]\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = [this.outputShape[0], 1, 1];\n        if (this.outputShape[1] >= 4096) {\n            this.workgroupSize = [256, 1, 1];\n        }\n        else {\n            this.workgroupSize = [64, 1, 1];\n        }\n        this.shaderKey = 'softmax';\n    }\n    getUserCode() {\n        const userCode = `\n    var<workgroup> buf : array<f32, ${this.workgroupSize[0]}>;\n    var<workgroup> rowMaxShared : f32;\n    var<workgroup> rowSumShared : f32;\n    const blockSize = ${this.workgroupSize[0]};\n    ${main('index')} {\n      let row = index / blockSize;\n      let tid = i32(localId.x);\n      let cols = uniforms.outShape[1];\n\n      var threadMax = -3.402823e+38f;\n      for (var col = tid; col < cols; col += blockSize) {\n        let value = getLogits(row, col);\n        threadMax = max(threadMax, value);\n      }\n      if (tid < cols) {\n        buf[tid] = threadMax;\n      }\n      workgroupBarrier();\n\n      var reduceSize = min(cols, blockSize);\n      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n        reduceSize = currSize + (reduceSize & 1);\n        if (tid < currSize) {\n          buf[tid] = max(buf[tid], buf[tid + reduceSize]);\n        }\n        workgroupBarrier();\n      }\n\n      if (tid == 0) {\n        rowMaxShared = buf[0];\n      }\n      workgroupBarrier();\n\n      var threadSum = 0.0;\n      for (var col = tid; col < cols; col += blockSize) {\n        let subExp = exp(getLogits(row, col) - rowMaxShared);\n        threadSum += subExp;\n      }\n      buf[tid] = threadSum;\n      workgroupBarrier();\n\n      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n        if (tid < currSize) {\n          buf[tid] = buf[tid] + buf[tid + currSize];\n        }\n        workgroupBarrier();\n      }\n\n      if (tid == 0) {\n        rowSumShared = buf[0];\n      }\n      workgroupBarrier();\n\n      for (var col = tid; col < cols; col += blockSize) {\n        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;\n        setOutputAtCoords(row, col, value);\n      }\n  }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29mdG1heF93ZWJncHUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9zb2Z0bWF4X3dlYmdwdS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsbUJBQW1CLElBQUksSUFBSSxFQUFnQixNQUFNLGtCQUFrQixDQUFDO0FBQzVFLE9BQU8sRUFBQyxrQkFBa0IsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUVqRCxNQUFNLE9BQU8sY0FBYztJQVF6QixZQUFZLFdBQXFCO1FBUGpDLGtCQUFhLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQVF6QixJQUFJLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQyxDQUFFLGVBQWU7UUFDaEQsSUFBSSxDQUFDLGNBQWMsR0FBRyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzVDLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLEVBQUU7WUFDL0IsSUFBSSxDQUFDLGFBQWEsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7U0FDbEM7YUFBTTtZQUNMLElBQUksQ0FBQyxhQUFhLEdBQUcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1NBQ2pDO1FBQ0QsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7SUFDN0IsQ0FBQztJQUVELFdBQVc7UUFDVCxNQUFNLFFBQVEsR0FBRztzQ0FDaUIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7Ozt3QkFHbkMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7TUFDdkMsSUFBSSxDQUFDLE9BQU8sQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBc0RkLENBQUM7UUFDRixPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMyBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7Z2V0TWFpbkhlYWRlclN0cmluZyBhcyBtYWluLCBXZWJHUFVQcm9ncmFtfSBmcm9tICcuL3dlYmdwdV9wcm9ncmFtJztcbmltcG9ydCB7ZmxhdERpc3BhdGNoTGF5b3V0fSBmcm9tICcuL3dlYmdwdV91dGlsJztcblxuZXhwb3J0IGNsYXNzIFNvZnRtYXhQcm9ncmFtIGltcGxlbWVudHMgV2ViR1BVUHJvZ3JhbSB7XG4gIHZhcmlhYmxlTmFtZXMgPSBbJ2xvZ2l0cyddO1xuICBvdXRwdXRTaGFwZTogbnVtYmVyW107XG4gIHNoYWRlcktleTogc3RyaW5nO1xuICBkaXNwYXRjaExheW91dDoge3g6IG51bWJlcltdfTtcbiAgZGlzcGF0Y2g6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXTtcbiAgd29ya2dyb3VwU2l6ZTogW251bWJlciwgbnVtYmVyLCBudW1iZXJdO1xuXG4gIGNvbnN0cnVjdG9yKG91dHB1dFNoYXBlOiBudW1iZXJbXSkge1xuICAgIHRoaXMub3V0cHV0U2hhcGUgPSBvdXRwdXRTaGFwZTsgIC8vIFtyb3dzLCBjb2xzXVxuICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQgPSBmbGF0RGlzcGF0Y2hMYXlvdXQodGhpcy5vdXRwdXRTaGFwZSk7XG4gICAgdGhpcy5kaXNwYXRjaCA9IFt0aGlzLm91dHB1dFNoYXBlWzBdLCAxLCAxXTtcbiAgICBpZiAodGhpcy5vdXRwdXRTaGFwZVsxXSA+PSA0MDk2KSB7XG4gICAgICB0aGlzLndvcmtncm91cFNpemUgPSBbMjU2LCAxLCAxXTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy53b3JrZ3JvdXBTaXplID0gWzY0LCAxLCAxXTtcbiAgICB9XG4gICAgdGhpcy5zaGFkZXJLZXkgPSAnc29mdG1heCc7XG4gIH1cblxuICBnZXRVc2VyQ29kZSgpOiBzdHJpbmcge1xuICAgIGNvbnN0IHVzZXJDb2RlID0gYFxuICAgIHZhcjx3b3JrZ3JvdXA+IGJ1ZiA6IGFycmF5PGYzMiwgJHt0aGlzLndvcmtncm91cFNpemVbMF19PjtcbiAgICB2YXI8d29ya2dyb3VwPiByb3dNYXhTaGFyZWQgOiBmMzI7XG4gICAgdmFyPHdvcmtncm91cD4gcm93U3VtU2hhcmVkIDogZjMyO1xuICAgIGNvbnN0IGJsb2NrU2l6ZSA9ICR7dGhpcy53b3JrZ3JvdXBTaXplWzBdfTtcbiAgICAke21haW4oJ2luZGV4Jyl9IHtcbiAgICAgIGxldCByb3cgPSBpbmRleCAvIGJsb2NrU2l6ZTtcbiAgICAgIGxldCB0aWQgPSBpMzIobG9jYWxJZC54KTtcbiAgICAgIGxldCBjb2xzID0gdW5pZm9ybXMub3V0U2hhcGVbMV07XG5cbiAgICAgIHZhciB0aHJlYWRNYXggPSAtMy40MDI4MjNlKzM4ZjtcbiAgICAgIGZvciAodmFyIGNvbCA9IHRpZDsgY29sIDwgY29sczsgY29sICs9IGJsb2NrU2l6ZSkge1xuICAgICAgICBsZXQgdmFsdWUgPSBnZXRMb2dpdHMocm93LCBjb2wpO1xuICAgICAgICB0aHJlYWRNYXggPSBtYXgodGhyZWFkTWF4LCB2YWx1ZSk7XG4gICAgICB9XG4gICAgICBpZiAodGlkIDwgY29scykge1xuICAgICAgICBidWZbdGlkXSA9IHRocmVhZE1heDtcbiAgICAgIH1cbiAgICAgIHdvcmtncm91cEJhcnJpZXIoKTtcblxuICAgICAgdmFyIHJlZHVjZVNpemUgPSBtaW4oY29scywgYmxvY2tTaXplKTtcbiAgICAgIGZvciAodmFyIGN1cnJTaXplID0gcmVkdWNlU2l6ZSA+PiAxOyAgY3VyclNpemUgPiAwOyBjdXJyU2l6ZSA9IHJlZHVjZVNpemUgPj4gMSkge1xuICAgICAgICByZWR1Y2VTaXplID0gY3VyclNpemUgKyAocmVkdWNlU2l6ZSAmIDEpO1xuICAgICAgICBpZiAodGlkIDwgY3VyclNpemUpIHtcbiAgICAgICAgICBidWZbdGlkXSA9IG1heChidWZbdGlkXSwgYnVmW3RpZCArIHJlZHVjZVNpemVdKTtcbiAgICAgICAgfVxuICAgICAgICB3b3JrZ3JvdXBCYXJyaWVyKCk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aWQgPT0gMCkge1xuICAgICAgICByb3dNYXhTaGFyZWQgPSBidWZbMF07XG4gICAgICB9XG4gICAgICB3b3JrZ3JvdXBCYXJyaWVyKCk7XG5cbiAgICAgIHZhciB0aHJlYWRTdW0gPSAwLjA7XG4gICAgICBmb3IgKHZhciBjb2wgPSB0aWQ7IGNvbCA8IGNvbHM7IGNvbCArPSBibG9ja1NpemUpIHtcbiAgICAgICAgbGV0IHN1YkV4cCA9IGV4cChnZXRMb2dpdHMocm93LCBjb2wpIC0gcm93TWF4U2hhcmVkKTtcbiAgICAgICAgdGhyZWFkU3VtICs9IHN1YkV4cDtcbiAgICAgIH1cbiAgICAgIGJ1Zlt0aWRdID0gdGhyZWFkU3VtO1xuICAgICAgd29ya2dyb3VwQmFycmllcigpO1xuXG4gICAgICBmb3IgKHZhciBjdXJyU2l6ZSA9IGJsb2NrU2l6ZSA+PiAxOyAgY3VyclNpemUgPiAwOyBjdXJyU2l6ZSA9IGN1cnJTaXplID4+IDEpIHtcbiAgICAgICAgaWYgKHRpZCA8IGN1cnJTaXplKSB7XG4gICAgICAgICAgYnVmW3RpZF0gPSBidWZbdGlkXSArIGJ1Zlt0aWQgKyBjdXJyU2l6ZV07XG4gICAgICAgIH1cbiAgICAgICAgd29ya2dyb3VwQmFycmllcigpO1xuICAgICAgfVxuXG4gICAgICBpZiAodGlkID09IDApIHtcbiAgICAgICAgcm93U3VtU2hhcmVkID0gYnVmWzBdO1xuICAgICAgfVxuICAgICAgd29ya2dyb3VwQmFycmllcigpO1xuXG4gICAgICBmb3IgKHZhciBjb2wgPSB0aWQ7IGNvbCA8IGNvbHM7IGNvbCArPSBibG9ja1NpemUpIHtcbiAgICAgICAgbGV0IHZhbHVlID0gZXhwKGdldExvZ2l0cyhyb3csIGNvbCkgLSByb3dNYXhTaGFyZWQpIC8gcm93U3VtU2hhcmVkO1xuICAgICAgICBzZXRPdXRwdXRBdENvb3Jkcyhyb3csIGNvbCwgdmFsdWUpO1xuICAgICAgfVxuICB9XG4gICAgYDtcbiAgICByZXR1cm4gdXNlckNvZGU7XG4gIH1cbn1cbiJdfQ==","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Softmax, util } from '@tensorflow/tfjs-core';\nimport { SoftmaxProgram } from '../softmax_webgpu';\nimport { reshape } from './Reshape';\nexport function softmax(args) {\n    const { inputs, backend, attrs } = args;\n    const { logits } = inputs;\n    const { dim } = attrs;\n    const logitsReshaped = reshape({\n        inputs: { x: logits },\n        backend,\n        attrs: {\n            shape: [\n                util.sizeFromShape(logits.shape) / logits.shape[dim], logits.shape[dim]\n            ]\n        }\n    });\n    const program = new SoftmaxProgram(logitsReshaped.shape);\n    const res = backend.runWebGPUProgram(program, [logitsReshaped], logits.dtype);\n    const resReshaped = reshape({ inputs: { x: res }, backend, attrs: { shape: logits.shape } });\n    backend.disposeData(logitsReshaped.dataId);\n    backend.disposeData(res.dataId);\n    return resReshaped;\n}\nexport const softmaxConfig = {\n    kernelName: Softmax,\n    backendName: 'webgpu',\n    kernelFunc: softmax\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU29mdG1heC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvU29mdG1heC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQTJCLE9BQU8sRUFBMkMsSUFBSSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFHdkgsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLG1CQUFtQixDQUFDO0FBRWpELE9BQU8sRUFBQyxPQUFPLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFFbEMsTUFBTSxVQUFVLE9BQU8sQ0FDbkIsSUFBMEU7SUFFNUUsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ3RDLE1BQU0sRUFBQyxNQUFNLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFDeEIsTUFBTSxFQUFDLEdBQUcsRUFBQyxHQUFHLEtBQUssQ0FBQztJQUVwQixNQUFNLGNBQWMsR0FBRyxPQUFPLENBQUM7UUFDN0IsTUFBTSxFQUFFLEVBQUMsQ0FBQyxFQUFFLE1BQU0sRUFBQztRQUNuQixPQUFPO1FBQ1AsS0FBSyxFQUFFO1lBQ0wsS0FBSyxFQUFFO2dCQUNMLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUM7YUFDeEU7U0FDRjtLQUNGLENBQUMsQ0FBQztJQUNILE1BQU0sT0FBTyxHQUFHLElBQUksY0FBYyxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN6RCxNQUFNLEdBQUcsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLENBQUMsY0FBYyxDQUFDLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzlFLE1BQU0sV0FBVyxHQUNiLE9BQU8sQ0FBQyxFQUFDLE1BQU0sRUFBRSxFQUFDLENBQUMsRUFBRSxHQUFHLEVBQUMsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLEVBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxLQUFLLEVBQUMsRUFBQyxDQUFDLENBQUM7SUFDdkUsT0FBTyxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDM0MsT0FBTyxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDaEMsT0FBTyxXQUFXLENBQUM7QUFDckIsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBaUI7SUFDekMsVUFBVSxFQUFFLE9BQU87SUFDbkIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLE9BQWdDO0NBQzdDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7S2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBTb2Z0bWF4LCBTb2Z0bWF4QXR0cnMsIFNvZnRtYXhJbnB1dHMsIFRlbnNvckluZm8sIHV0aWx9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuaW1wb3J0IHtTb2Z0bWF4UHJvZ3JhbX0gZnJvbSAnLi4vc29mdG1heF93ZWJncHUnO1xuXG5pbXBvcnQge3Jlc2hhcGV9IGZyb20gJy4vUmVzaGFwZSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBzb2Z0bWF4KFxuICAgIGFyZ3M6IHtpbnB1dHM6IFNvZnRtYXhJbnB1dHMsIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmQsIGF0dHJzOiBTb2Z0bWF4QXR0cnN9KTpcbiAgICBUZW5zb3JJbmZvIHtcbiAgY29uc3Qge2lucHV0cywgYmFja2VuZCwgYXR0cnN9ID0gYXJncztcbiAgY29uc3Qge2xvZ2l0c30gPSBpbnB1dHM7XG4gIGNvbnN0IHtkaW19ID0gYXR0cnM7XG5cbiAgY29uc3QgbG9naXRzUmVzaGFwZWQgPSByZXNoYXBlKHtcbiAgICBpbnB1dHM6IHt4OiBsb2dpdHN9LFxuICAgIGJhY2tlbmQsXG4gICAgYXR0cnM6IHtcbiAgICAgIHNoYXBlOiBbXG4gICAgICAgIHV0aWwuc2l6ZUZyb21TaGFwZShsb2dpdHMuc2hhcGUpIC8gbG9naXRzLnNoYXBlW2RpbV0sIGxvZ2l0cy5zaGFwZVtkaW1dXG4gICAgICBdXG4gICAgfVxuICB9KTtcbiAgY29uc3QgcHJvZ3JhbSA9IG5ldyBTb2Z0bWF4UHJvZ3JhbShsb2dpdHNSZXNoYXBlZC5zaGFwZSk7XG4gIGNvbnN0IHJlcyA9IGJhY2tlbmQucnVuV2ViR1BVUHJvZ3JhbShwcm9ncmFtLCBbbG9naXRzUmVzaGFwZWRdLCBsb2dpdHMuZHR5cGUpO1xuICBjb25zdCByZXNSZXNoYXBlZCA9XG4gICAgICByZXNoYXBlKHtpbnB1dHM6IHt4OiByZXN9LCBiYWNrZW5kLCBhdHRyczoge3NoYXBlOiBsb2dpdHMuc2hhcGV9fSk7XG4gIGJhY2tlbmQuZGlzcG9zZURhdGEobG9naXRzUmVzaGFwZWQuZGF0YUlkKTtcbiAgYmFja2VuZC5kaXNwb3NlRGF0YShyZXMuZGF0YUlkKTtcbiAgcmV0dXJuIHJlc1Jlc2hhcGVkO1xufVxuXG5leHBvcnQgY29uc3Qgc29mdG1heENvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBTb2Z0bWF4LFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IHNvZnRtYXggYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Multinomial } from '@tensorflow/tfjs-core';\nimport { MultinomialProgram } from '../multinomial_webgpu';\nimport { softmax } from './Softmax';\nexport function multinomial(args) {\n    const { inputs, backend, attrs } = args;\n    const { logits } = inputs;\n    const { numSamples, seed, normalized } = attrs;\n    const probs = normalized ?\n        logits :\n        softmax({ inputs: { logits }, backend, attrs: { dim: logits.shape.length - 1 } });\n    const batchSize = probs.shape[0];\n    const numOutcomes = probs.shape[1];\n    const program = new MultinomialProgram(batchSize, numSamples);\n    const uniformData = [{ type: 'float32', data: [seed] }, { type: 'int32', data: [numOutcomes] }];\n    const res = backend.runWebGPUProgram(program, [probs], 'int32', uniformData);\n    if (!normalized) {\n        backend.disposeData(probs.dataId);\n    }\n    return res;\n}\nexport const multinomialConfig = {\n    kernelName: Multinomial,\n    backendName: 'webgpu',\n    kernelFunc: multinomial\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTXVsdGlub21pYWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL011bHRpbm9taWFsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBMkIsV0FBVyxFQUFrRCxNQUFNLHVCQUF1QixDQUFDO0FBRzdILE9BQU8sRUFBQyxrQkFBa0IsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRXpELE9BQU8sRUFBQyxPQUFPLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFFbEMsTUFBTSxVQUFVLFdBQVcsQ0FBQyxJQUkzQjtJQUNDLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QyxNQUFNLEVBQUMsTUFBTSxFQUFDLEdBQUcsTUFBTSxDQUFDO0lBQ3hCLE1BQU0sRUFBQyxVQUFVLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBQyxHQUFHLEtBQUssQ0FBQztJQUU3QyxNQUFNLEtBQUssR0FBRyxVQUFVLENBQUMsQ0FBQztRQUN0QixNQUFNLENBQUMsQ0FBQztRQUNSLE9BQU8sQ0FDSCxFQUFDLE1BQU0sRUFBRSxFQUFDLE1BQU0sRUFBQyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsRUFBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFDLEVBQUMsQ0FBQyxDQUFDO0lBQzVFLE1BQU0sU0FBUyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDakMsTUFBTSxXQUFXLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNuQyxNQUFNLE9BQU8sR0FBRyxJQUFJLGtCQUFrQixDQUFDLFNBQVMsRUFBRSxVQUFVLENBQUMsQ0FBQztJQUM5RCxNQUFNLFdBQVcsR0FDYixDQUFDLEVBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxJQUFJLENBQUMsRUFBQyxFQUFFLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxXQUFXLENBQUMsRUFBQyxDQUFDLENBQUM7SUFDNUUsTUFBTSxHQUFHLEdBQUcsT0FBTyxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxDQUFDLEtBQUssQ0FBQyxFQUFFLE9BQU8sRUFBRSxXQUFXLENBQUMsQ0FBQztJQUM3RSxJQUFJLENBQUMsVUFBVSxFQUFFO1FBQ2YsT0FBTyxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDbkM7SUFDRCxPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBaUI7SUFDN0MsVUFBVSxFQUFFLFdBQVc7SUFDdkIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLFdBQW9DO0NBQ2pELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMyBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7S2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBNdWx0aW5vbWlhbCwgTXVsdGlub21pYWxBdHRycywgTXVsdGlub21pYWxJbnB1dHMsIFRlbnNvckluZm99IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuaW1wb3J0IHtNdWx0aW5vbWlhbFByb2dyYW19IGZyb20gJy4uL211bHRpbm9taWFsX3dlYmdwdSc7XG5cbmltcG9ydCB7c29mdG1heH0gZnJvbSAnLi9Tb2Z0bWF4JztcblxuZXhwb3J0IGZ1bmN0aW9uIG11bHRpbm9taWFsKGFyZ3M6IHtcbiAgaW5wdXRzOiBNdWx0aW5vbWlhbElucHV0cyxcbiAgYmFja2VuZDogV2ViR1BVQmFja2VuZCxcbiAgYXR0cnM6IE11bHRpbm9taWFsQXR0cnNcbn0pOiBUZW5zb3JJbmZvIHtcbiAgY29uc3Qge2lucHV0cywgYmFja2VuZCwgYXR0cnN9ID0gYXJncztcbiAgY29uc3Qge2xvZ2l0c30gPSBpbnB1dHM7XG4gIGNvbnN0IHtudW1TYW1wbGVzLCBzZWVkLCBub3JtYWxpemVkfSA9IGF0dHJzO1xuXG4gIGNvbnN0IHByb2JzID0gbm9ybWFsaXplZCA/XG4gICAgICBsb2dpdHMgOlxuICAgICAgc29mdG1heChcbiAgICAgICAgICB7aW5wdXRzOiB7bG9naXRzfSwgYmFja2VuZCwgYXR0cnM6IHtkaW06IGxvZ2l0cy5zaGFwZS5sZW5ndGggLSAxfX0pO1xuICBjb25zdCBiYXRjaFNpemUgPSBwcm9icy5zaGFwZVswXTtcbiAgY29uc3QgbnVtT3V0Y29tZXMgPSBwcm9icy5zaGFwZVsxXTtcbiAgY29uc3QgcHJvZ3JhbSA9IG5ldyBNdWx0aW5vbWlhbFByb2dyYW0oYmF0Y2hTaXplLCBudW1TYW1wbGVzKTtcbiAgY29uc3QgdW5pZm9ybURhdGEgPVxuICAgICAgW3t0eXBlOiAnZmxvYXQzMicsIGRhdGE6IFtzZWVkXX0sIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbbnVtT3V0Y29tZXNdfV07XG4gIGNvbnN0IHJlcyA9IGJhY2tlbmQucnVuV2ViR1BVUHJvZ3JhbShwcm9ncmFtLCBbcHJvYnNdLCAnaW50MzInLCB1bmlmb3JtRGF0YSk7XG4gIGlmICghbm9ybWFsaXplZCkge1xuICAgIGJhY2tlbmQuZGlzcG9zZURhdGEocHJvYnMuZGF0YUlkKTtcbiAgfVxuICByZXR1cm4gcmVzO1xufVxuXG5leHBvcnQgY29uc3QgbXVsdGlub21pYWxDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogTXVsdGlub21pYWwsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogbXVsdGlub21pYWwgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Neg } from '@tensorflow/tfjs-core';\nimport { negImplCPU } from '../kernel_utils/shared';\nimport { UnaryOpType } from '../unary_op_util';\nimport { UnaryOpProgram } from '../unary_op_webgpu';\n// This doesn't use unaryKernelFunc because negImplCPU is not of type\n// SimpleUnaryKernelImplCPU.\nexport function neg(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    if (backend.shouldExecuteOnCPU([x])) {\n        const xData = backend.tensorMap.get(x.dataId);\n        const [outValues, newShape] = negImplCPU(xData.values, x.shape, x.dtype);\n        return backend.makeTensorInfo(newShape, x.dtype, outValues);\n    }\n    const program = new UnaryOpProgram(x.shape, UnaryOpType.NEG);\n    return backend.runWebGPUProgram(program, [x], x.dtype);\n}\nexport const negConfig = {\n    kernelName: Neg,\n    backendName: 'webgpu',\n    kernelFunc: neg\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTmVnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9OZWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUEyQixHQUFHLEVBQW9DLE1BQU0sdUJBQXVCLENBQUM7QUFHdkcsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBRWxELE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUM3QyxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFFbEQscUVBQXFFO0FBQ3JFLDRCQUE0QjtBQUM1QixNQUFNLFVBQVUsR0FBRyxDQUFDLElBQWlEO0lBRW5FLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFDLEdBQUcsSUFBSSxDQUFDO0lBQy9CLE1BQU0sRUFBQyxDQUFDLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFFbkIsSUFBSSxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO1FBQ25DLE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM5QyxNQUFNLENBQUMsU0FBUyxFQUFFLFFBQVEsQ0FBQyxHQUN2QixVQUFVLENBQUMsS0FBSyxDQUFDLE1BQW9CLEVBQUUsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDN0QsT0FBTyxPQUFPLENBQUMsY0FBYyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0tBQzdEO0lBRUQsTUFBTSxPQUFPLEdBQUcsSUFBSSxjQUFjLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUM7SUFFN0QsT0FBTyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3pELENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQWlCO0lBQ3JDLFVBQVUsRUFBRSxHQUFHO0lBQ2YsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLEdBQTRCO0NBQ3pDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7S2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBOZWcsIE5lZ0lucHV0cywgVGVuc29ySW5mbywgVHlwZWRBcnJheX0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge25lZ0ltcGxDUFV9IGZyb20gJy4uL2tlcm5lbF91dGlscy9zaGFyZWQnO1xuXG5pbXBvcnQge1VuYXJ5T3BUeXBlfSBmcm9tICcuLi91bmFyeV9vcF91dGlsJztcbmltcG9ydCB7VW5hcnlPcFByb2dyYW19IGZyb20gJy4uL3VuYXJ5X29wX3dlYmdwdSc7XG5cbi8vIFRoaXMgZG9lc24ndCB1c2UgdW5hcnlLZXJuZWxGdW5jIGJlY2F1c2UgbmVnSW1wbENQVSBpcyBub3Qgb2YgdHlwZVxuLy8gU2ltcGxlVW5hcnlLZXJuZWxJbXBsQ1BVLlxuZXhwb3J0IGZ1bmN0aW9uIG5lZyhhcmdzOiB7aW5wdXRzOiBOZWdJbnB1dHMsIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmR9KTpcbiAgICBUZW5zb3JJbmZvIHtcbiAgY29uc3Qge2lucHV0cywgYmFja2VuZH0gPSBhcmdzO1xuICBjb25zdCB7eH0gPSBpbnB1dHM7XG5cbiAgaWYgKGJhY2tlbmQuc2hvdWxkRXhlY3V0ZU9uQ1BVKFt4XSkpIHtcbiAgICBjb25zdCB4RGF0YSA9IGJhY2tlbmQudGVuc29yTWFwLmdldCh4LmRhdGFJZCk7XG4gICAgY29uc3QgW291dFZhbHVlcywgbmV3U2hhcGVdID1cbiAgICAgICAgbmVnSW1wbENQVSh4RGF0YS52YWx1ZXMgYXMgVHlwZWRBcnJheSwgeC5zaGFwZSwgeC5kdHlwZSk7XG4gICAgcmV0dXJuIGJhY2tlbmQubWFrZVRlbnNvckluZm8obmV3U2hhcGUsIHguZHR5cGUsIG91dFZhbHVlcyk7XG4gIH1cblxuICBjb25zdCBwcm9ncmFtID0gbmV3IFVuYXJ5T3BQcm9ncmFtKHguc2hhcGUsIFVuYXJ5T3BUeXBlLk5FRyk7XG5cbiAgcmV0dXJuIGJhY2tlbmQucnVuV2ViR1BVUHJvZ3JhbShwcm9ncmFtLCBbeF0sIHguZHR5cGUpO1xufVxuXG5leHBvcnQgY29uc3QgbmVnQ29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IE5lZyxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBuZWcgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { kernel_impls, NonMaxSuppressionV3 } from '@tensorflow/tfjs-core';\nexport function nonMaxSuppressionV3(args) {\n    console.warn('tf.nonMaxSuppression() in webgpu locks the UI thread. ' +\n        'Call tf.nonMaxSuppressionAsync() instead');\n    const { inputs, backend, attrs } = args;\n    const { boxes, scores } = inputs;\n    const { maxOutputSize, iouThreshold, scoreThreshold } = attrs;\n    const boxesVals = backend.readSync(boxes.dataId);\n    const scoresVals = backend.readSync(scores.dataId);\n    const { selectedIndices } = kernel_impls.nonMaxSuppressionV3Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold);\n    return backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices));\n}\nexport const nonMaxSuppressionV3Config = {\n    kernelName: NonMaxSuppressionV3,\n    backendName: 'webgpu',\n    kernelFunc: nonMaxSuppressionV3\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTm9uTWF4U3VwcHJlc3Npb25WMy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvTm9uTWF4U3VwcHJlc3Npb25WMy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsWUFBWSxFQUE0QixtQkFBbUIsRUFBa0UsTUFBTSx1QkFBdUIsQ0FBQztBQUduSyxNQUFNLFVBQVUsbUJBQW1CLENBQUMsSUFJbkM7SUFDQyxPQUFPLENBQUMsSUFBSSxDQUNSLHdEQUF3RDtRQUN4RCwwQ0FBMEMsQ0FBQyxDQUFDO0lBRWhELE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QyxNQUFNLEVBQUMsS0FBSyxFQUFFLE1BQU0sRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUMvQixNQUFNLEVBQUMsYUFBYSxFQUFFLFlBQVksRUFBRSxjQUFjLEVBQUMsR0FBRyxLQUFLLENBQUM7SUFFNUQsTUFBTSxTQUFTLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFlLENBQUM7SUFDL0QsTUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFlLENBQUM7SUFFakUsTUFBTSxFQUFDLGVBQWUsRUFBQyxHQUFHLFlBQVksQ0FBQyx1QkFBdUIsQ0FDMUQsU0FBUyxFQUFFLFVBQVUsRUFBRSxhQUFhLEVBQUUsWUFBWSxFQUFFLGNBQWMsQ0FBQyxDQUFDO0lBRXhFLE9BQU8sT0FBTyxDQUFDLGNBQWMsQ0FDekIsQ0FBQyxlQUFlLENBQUMsTUFBTSxDQUFDLEVBQUUsT0FBTyxFQUFFLElBQUksVUFBVSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUM7QUFDMUUsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLHlCQUF5QixHQUFpQjtJQUNyRCxVQUFVLEVBQUUsbUJBQW1CO0lBQy9CLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxtQkFBNEM7Q0FDekQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtrZXJuZWxfaW1wbHMsIEtlcm5lbENvbmZpZywgS2VybmVsRnVuYywgTm9uTWF4U3VwcHJlc3Npb25WMywgTm9uTWF4U3VwcHJlc3Npb25WM0F0dHJzLCBOb25NYXhTdXBwcmVzc2lvblYzSW5wdXRzLCBUeXBlZEFycmF5fSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBub25NYXhTdXBwcmVzc2lvblYzKGFyZ3M6IHtcbiAgaW5wdXRzOiBOb25NYXhTdXBwcmVzc2lvblYzSW5wdXRzLFxuICBiYWNrZW5kOiBXZWJHUFVCYWNrZW5kLFxuICBhdHRyczogTm9uTWF4U3VwcHJlc3Npb25WM0F0dHJzXG59KSB7XG4gIGNvbnNvbGUud2FybihcbiAgICAgICd0Zi5ub25NYXhTdXBwcmVzc2lvbigpIGluIHdlYmdwdSBsb2NrcyB0aGUgVUkgdGhyZWFkLiAnICtcbiAgICAgICdDYWxsIHRmLm5vbk1heFN1cHByZXNzaW9uQXN5bmMoKSBpbnN0ZWFkJyk7XG5cbiAgY29uc3Qge2lucHV0cywgYmFja2VuZCwgYXR0cnN9ID0gYXJncztcbiAgY29uc3Qge2JveGVzLCBzY29yZXN9ID0gaW5wdXRzO1xuICBjb25zdCB7bWF4T3V0cHV0U2l6ZSwgaW91VGhyZXNob2xkLCBzY29yZVRocmVzaG9sZH0gPSBhdHRycztcblxuICBjb25zdCBib3hlc1ZhbHMgPSBiYWNrZW5kLnJlYWRTeW5jKGJveGVzLmRhdGFJZCkgYXMgVHlwZWRBcnJheTtcbiAgY29uc3Qgc2NvcmVzVmFscyA9IGJhY2tlbmQucmVhZFN5bmMoc2NvcmVzLmRhdGFJZCkgYXMgVHlwZWRBcnJheTtcblxuICBjb25zdCB7c2VsZWN0ZWRJbmRpY2VzfSA9IGtlcm5lbF9pbXBscy5ub25NYXhTdXBwcmVzc2lvblYzSW1wbChcbiAgICAgIGJveGVzVmFscywgc2NvcmVzVmFscywgbWF4T3V0cHV0U2l6ZSwgaW91VGhyZXNob2xkLCBzY29yZVRocmVzaG9sZCk7XG5cbiAgcmV0dXJuIGJhY2tlbmQubWFrZVRlbnNvckluZm8oXG4gICAgICBbc2VsZWN0ZWRJbmRpY2VzLmxlbmd0aF0sICdpbnQzMicsIG5ldyBJbnQzMkFycmF5KHNlbGVjdGVkSW5kaWNlcykpO1xufVxuXG5leHBvcnQgY29uc3Qgbm9uTWF4U3VwcHJlc3Npb25WM0NvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBOb25NYXhTdXBwcmVzc2lvblYzLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IG5vbk1heFN1cHByZXNzaW9uVjMgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { kernel_impls, NonMaxSuppressionV5 } from '@tensorflow/tfjs-core';\nexport function nonMaxSuppressionV5(args) {\n    console.warn('tf.nonMaxSuppression() in webgpu locks the UI thread. ' +\n        'Call tf.nonMaxSuppressionAsync() instead');\n    const { inputs, backend, attrs } = args;\n    const { boxes, scores } = inputs;\n    const { maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma } = attrs;\n    const boxesVals = backend.readSync(boxes.dataId);\n    const scoresVals = backend.readSync(scores.dataId);\n    const maxOutputSizeVal = maxOutputSize;\n    const iouThresholdVal = iouThreshold;\n    const scoreThresholdVal = scoreThreshold;\n    const softNmsSigmaVal = softNmsSigma;\n    const { selectedIndices, selectedScores } = kernel_impls.nonMaxSuppressionV5Impl(boxesVals, scoresVals, maxOutputSizeVal, iouThresholdVal, scoreThresholdVal, softNmsSigmaVal);\n    return [\n        backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices)),\n        backend.makeTensorInfo([selectedScores.length], 'float32', new Float32Array(selectedScores))\n    ];\n}\nexport const nonMaxSuppressionV5Config = {\n    kernelName: NonMaxSuppressionV5,\n    backendName: 'webgpu',\n    kernelFunc: nonMaxSuppressionV5\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTm9uTWF4U3VwcHJlc3Npb25WNS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvTm9uTWF4U3VwcHJlc3Npb25WNS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFDSCxPQUFPLEVBQUMsWUFBWSxFQUE0QixtQkFBbUIsRUFBa0UsTUFBTSx1QkFBdUIsQ0FBQztBQUtuSyxNQUFNLFVBQVUsbUJBQW1CLENBQUMsSUFJbkM7SUFDQyxPQUFPLENBQUMsSUFBSSxDQUNSLHdEQUF3RDtRQUN4RCwwQ0FBMEMsQ0FBQyxDQUFDO0lBRWhELE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QyxNQUFNLEVBQUMsS0FBSyxFQUFFLE1BQU0sRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUMvQixNQUFNLEVBQUMsYUFBYSxFQUFFLFlBQVksRUFBRSxjQUFjLEVBQUUsWUFBWSxFQUFDLEdBQUcsS0FBSyxDQUFDO0lBRTFFLE1BQU0sU0FBUyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBZSxDQUFDO0lBQy9ELE1BQU0sVUFBVSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBZSxDQUFDO0lBRWpFLE1BQU0sZ0JBQWdCLEdBQUcsYUFBYSxDQUFDO0lBQ3ZDLE1BQU0sZUFBZSxHQUFHLFlBQVksQ0FBQztJQUNyQyxNQUFNLGlCQUFpQixHQUFHLGNBQWMsQ0FBQztJQUN6QyxNQUFNLGVBQWUsR0FBRyxZQUFZLENBQUM7SUFFckMsTUFBTSxFQUFDLGVBQWUsRUFBRSxjQUFjLEVBQUMsR0FDbkMsWUFBWSxDQUFDLHVCQUF1QixDQUNoQyxTQUFTLEVBQUUsVUFBVSxFQUFFLGdCQUFnQixFQUFFLGVBQWUsRUFDeEQsaUJBQWlCLEVBQUUsZUFBZSxDQUFDLENBQUM7SUFFNUMsT0FBTztRQUNMLE9BQU8sQ0FBQyxjQUFjLENBQ2xCLENBQUMsZUFBZSxDQUFDLE1BQU0sQ0FBQyxFQUFFLE9BQU8sRUFBRSxJQUFJLFVBQVUsQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUN2RSxPQUFPLENBQUMsY0FBYyxDQUNsQixDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsRUFBRSxTQUFTLEVBQUUsSUFBSSxZQUFZLENBQUMsY0FBYyxDQUFDLENBQUM7S0FDMUUsQ0FBQztBQUNKLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSx5QkFBeUIsR0FBaUI7SUFDckQsVUFBVSxFQUFFLG1CQUFtQjtJQUMvQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsbUJBQTRDO0NBQ3pELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5pbXBvcnQge2tlcm5lbF9pbXBscywgS2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBOb25NYXhTdXBwcmVzc2lvblY1LCBOb25NYXhTdXBwcmVzc2lvblY1QXR0cnMsIE5vbk1heFN1cHByZXNzaW9uVjVJbnB1dHMsIFRlbnNvckluZm99IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuZXhwb3J0IHR5cGUgVHlwZWRBcnJheSA9IEZsb2F0MzJBcnJheXxJbnQzMkFycmF5fFVpbnQ4QXJyYXk7XG5cbmV4cG9ydCBmdW5jdGlvbiBub25NYXhTdXBwcmVzc2lvblY1KGFyZ3M6IHtcbiAgaW5wdXRzOiBOb25NYXhTdXBwcmVzc2lvblY1SW5wdXRzLFxuICBiYWNrZW5kOiBXZWJHUFVCYWNrZW5kLFxuICBhdHRyczogTm9uTWF4U3VwcHJlc3Npb25WNUF0dHJzXG59KTogW1RlbnNvckluZm8sIFRlbnNvckluZm9dIHtcbiAgY29uc29sZS53YXJuKFxuICAgICAgJ3RmLm5vbk1heFN1cHByZXNzaW9uKCkgaW4gd2ViZ3B1IGxvY2tzIHRoZSBVSSB0aHJlYWQuICcgK1xuICAgICAgJ0NhbGwgdGYubm9uTWF4U3VwcHJlc3Npb25Bc3luYygpIGluc3RlYWQnKTtcblxuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7Ym94ZXMsIHNjb3Jlc30gPSBpbnB1dHM7XG4gIGNvbnN0IHttYXhPdXRwdXRTaXplLCBpb3VUaHJlc2hvbGQsIHNjb3JlVGhyZXNob2xkLCBzb2Z0Tm1zU2lnbWF9ID0gYXR0cnM7XG5cbiAgY29uc3QgYm94ZXNWYWxzID0gYmFja2VuZC5yZWFkU3luYyhib3hlcy5kYXRhSWQpIGFzIFR5cGVkQXJyYXk7XG4gIGNvbnN0IHNjb3Jlc1ZhbHMgPSBiYWNrZW5kLnJlYWRTeW5jKHNjb3Jlcy5kYXRhSWQpIGFzIFR5cGVkQXJyYXk7XG5cbiAgY29uc3QgbWF4T3V0cHV0U2l6ZVZhbCA9IG1heE91dHB1dFNpemU7XG4gIGNvbnN0IGlvdVRocmVzaG9sZFZhbCA9IGlvdVRocmVzaG9sZDtcbiAgY29uc3Qgc2NvcmVUaHJlc2hvbGRWYWwgPSBzY29yZVRocmVzaG9sZDtcbiAgY29uc3Qgc29mdE5tc1NpZ21hVmFsID0gc29mdE5tc1NpZ21hO1xuXG4gIGNvbnN0IHtzZWxlY3RlZEluZGljZXMsIHNlbGVjdGVkU2NvcmVzfSA9XG4gICAgICBrZXJuZWxfaW1wbHMubm9uTWF4U3VwcHJlc3Npb25WNUltcGwoXG4gICAgICAgICAgYm94ZXNWYWxzLCBzY29yZXNWYWxzLCBtYXhPdXRwdXRTaXplVmFsLCBpb3VUaHJlc2hvbGRWYWwsXG4gICAgICAgICAgc2NvcmVUaHJlc2hvbGRWYWwsIHNvZnRObXNTaWdtYVZhbCk7XG5cbiAgcmV0dXJuIFtcbiAgICBiYWNrZW5kLm1ha2VUZW5zb3JJbmZvKFxuICAgICAgICBbc2VsZWN0ZWRJbmRpY2VzLmxlbmd0aF0sICdpbnQzMicsIG5ldyBJbnQzMkFycmF5KHNlbGVjdGVkSW5kaWNlcykpLFxuICAgIGJhY2tlbmQubWFrZVRlbnNvckluZm8oXG4gICAgICAgIFtzZWxlY3RlZFNjb3Jlcy5sZW5ndGhdLCAnZmxvYXQzMicsIG5ldyBGbG9hdDMyQXJyYXkoc2VsZWN0ZWRTY29yZXMpKVxuICBdO1xufVxuXG5leHBvcnQgY29uc3Qgbm9uTWF4U3VwcHJlc3Npb25WNUNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBOb25NYXhTdXBwcmVzc2lvblY1LFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IG5vbk1heFN1cHByZXNzaW9uVjUgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class OneHotProgram {\n    constructor(numIndices, depth) {\n        this.variableNames = ['x'];\n        this.uniforms = 'onValue : f32, offValue : f32,';\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = [numIndices, depth];\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.shaderKey = 'onehot';\n    }\n    getUserCode() {\n        const userCode = `\n      ${main('index')} {\n        if(index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,\n                                      f32(i32(round(getX(coords.x))) == coords.y)));\n        }\n      }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib25laG90X3dlYmdwdS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL29uZWhvdF93ZWJncHUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLG1CQUFtQixJQUFJLElBQUksRUFBZ0IsTUFBTSxrQkFBa0IsQ0FBQztBQUM1RSxPQUFPLEVBQUMsZUFBZSxFQUFFLGtCQUFrQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRWxFLE1BQU0sT0FBTyxhQUFhO0lBVXhCLFlBQVksVUFBa0IsRUFBRSxLQUFhO1FBTDdDLGtCQUFhLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN0QixhQUFRLEdBQUcsZ0NBQWdDLENBQUM7UUFDNUMsa0JBQWEsR0FBNkIsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3JELFNBQUksR0FBRyxJQUFJLENBQUM7UUFHVixJQUFJLENBQUMsV0FBVyxHQUFHLENBQUMsVUFBVSxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxjQUFjLEdBQUcsa0JBQWtCLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQzNELElBQUksQ0FBQyxRQUFRLEdBQUcsZUFBZSxDQUMzQixJQUFJLENBQUMsY0FBYyxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQy9ELElBQUksQ0FBQyxTQUFTLEdBQUcsUUFBUSxDQUFDO0lBQzVCLENBQUM7SUFFRCxXQUFXO1FBQ1QsTUFBTSxRQUFRLEdBQUc7UUFDYixJQUFJLENBQUMsT0FBTyxDQUFDOzs7Ozs7O0tBT2hCLENBQUM7UUFFRixPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7Z2V0TWFpbkhlYWRlclN0cmluZyBhcyBtYWluLCBXZWJHUFVQcm9ncmFtfSBmcm9tICcuL3dlYmdwdV9wcm9ncmFtJztcbmltcG9ydCB7Y29tcHV0ZURpc3BhdGNoLCBmbGF0RGlzcGF0Y2hMYXlvdXR9IGZyb20gJy4vd2ViZ3B1X3V0aWwnO1xuXG5leHBvcnQgY2xhc3MgT25lSG90UHJvZ3JhbSBpbXBsZW1lbnRzIFdlYkdQVVByb2dyYW0ge1xuICBvdXRwdXRTaGFwZTogbnVtYmVyW107XG4gIHNoYWRlcktleTogc3RyaW5nO1xuICBkaXNwYXRjaExheW91dDoge3g6IG51bWJlcltdfTtcbiAgZGlzcGF0Y2g6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXTtcbiAgdmFyaWFibGVOYW1lcyA9IFsneCddO1xuICB1bmlmb3JtcyA9ICdvblZhbHVlIDogZjMyLCBvZmZWYWx1ZSA6IGYzMiwnO1xuICB3b3JrZ3JvdXBTaXplOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl0gPSBbNjQsIDEsIDFdO1xuICBzaXplID0gdHJ1ZTtcblxuICBjb25zdHJ1Y3RvcihudW1JbmRpY2VzOiBudW1iZXIsIGRlcHRoOiBudW1iZXIpIHtcbiAgICB0aGlzLm91dHB1dFNoYXBlID0gW251bUluZGljZXMsIGRlcHRoXTtcbiAgICB0aGlzLmRpc3BhdGNoTGF5b3V0ID0gZmxhdERpc3BhdGNoTGF5b3V0KHRoaXMub3V0cHV0U2hhcGUpO1xuICAgIHRoaXMuZGlzcGF0Y2ggPSBjb21wdXRlRGlzcGF0Y2goXG4gICAgICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQsIHRoaXMub3V0cHV0U2hhcGUsIHRoaXMud29ya2dyb3VwU2l6ZSk7XG4gICAgdGhpcy5zaGFkZXJLZXkgPSAnb25laG90JztcbiAgfVxuXG4gIGdldFVzZXJDb2RlKCk6IHN0cmluZyB7XG4gICAgY29uc3QgdXNlckNvZGUgPSBgXG4gICAgICAke21haW4oJ2luZGV4Jyl9IHtcbiAgICAgICAgaWYoaW5kZXggPCB1bmlmb3Jtcy5zaXplKSB7XG4gICAgICAgICAgbGV0IGNvb3JkcyA9IGdldENvb3Jkc0Zyb21JbmRleChpbmRleCk7XG4gICAgICAgICAgc2V0T3V0cHV0QXRJbmRleChpbmRleCwgbWl4KHVuaWZvcm1zLm9mZlZhbHVlLCB1bmlmb3Jtcy5vblZhbHVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmMzIoaTMyKHJvdW5kKGdldFgoY29vcmRzLngpKSkgPT0gY29vcmRzLnkpKSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICBgO1xuXG4gICAgcmV0dXJuIHVzZXJDb2RlO1xuICB9XG59XG4iXX0=","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { OneHot, util } from '@tensorflow/tfjs-core';\nimport { OneHotProgram } from '../onehot_webgpu';\nimport { reshape } from './Reshape';\nexport function oneHot(args) {\n    const { inputs, backend, attrs } = args;\n    const { indices } = inputs;\n    const { dtype, depth, onValue, offValue } = attrs;\n    const indicesSize = util.sizeFromShape(indices.shape);\n    const program = new OneHotProgram(indicesSize, depth);\n    const reshaped = reshape({ inputs: { x: indices }, backend, attrs: { shape: [indicesSize] } });\n    const uniformData = [{ type: 'float32', data: [onValue] }, { type: 'float32', data: [offValue] }];\n    const result = backend.runWebGPUProgram(program, [reshaped], dtype, uniformData);\n    backend.disposeData(reshaped.dataId);\n    const outShape = [...indices.shape, depth];\n    const out = reshape({ inputs: { x: result }, backend, attrs: { shape: outShape } });\n    backend.disposeData(result.dataId);\n    return out;\n}\nexport const oneHotConfig = {\n    kernelName: OneHot,\n    backendName: 'webgpu',\n    kernelFunc: oneHot\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT25lSG90LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9PbmVIb3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUEyQixNQUFNLEVBQXlDLElBQUksRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBR3BILE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUMvQyxPQUFPLEVBQUMsT0FBTyxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBRWxDLE1BQU0sVUFBVSxNQUFNLENBQ2xCLElBQXdFO0lBRTFFLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QyxNQUFNLEVBQUMsT0FBTyxFQUFDLEdBQUcsTUFBTSxDQUFDO0lBQ3pCLE1BQU0sRUFBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUMsR0FBRyxLQUFLLENBQUM7SUFFaEQsTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdEQsTUFBTSxPQUFPLEdBQUcsSUFBSSxhQUFhLENBQUMsV0FBVyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3RELE1BQU0sUUFBUSxHQUNWLE9BQU8sQ0FBQyxFQUFDLE1BQU0sRUFBRSxFQUFDLENBQUMsRUFBRSxPQUFPLEVBQUMsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLEVBQUMsS0FBSyxFQUFFLENBQUMsV0FBVyxDQUFDLEVBQUMsRUFBQyxDQUFDLENBQUM7SUFFNUUsTUFBTSxXQUFXLEdBQ2IsQ0FBQyxFQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLENBQUMsT0FBTyxDQUFDLEVBQUMsRUFBRSxFQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUMsQ0FBQyxDQUFDO0lBQzlFLE1BQU0sTUFBTSxHQUNSLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxLQUFLLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDdEUsT0FBTyxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFckMsTUFBTSxRQUFRLEdBQUcsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDM0MsTUFBTSxHQUFHLEdBQUcsT0FBTyxDQUFDLEVBQUMsTUFBTSxFQUFFLEVBQUMsQ0FBQyxFQUFFLE1BQU0sRUFBQyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsRUFBQyxLQUFLLEVBQUUsUUFBUSxFQUFDLEVBQUMsQ0FBQyxDQUFDO0lBQzlFLE9BQU8sQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRW5DLE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBaUI7SUFDeEMsVUFBVSxFQUFFLE1BQU07SUFDbEIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLE1BQStCO0NBQzVDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7S2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBPbmVIb3QsIE9uZUhvdEF0dHJzLCBPbmVIb3RJbnB1dHMsIFRlbnNvckluZm8sIHV0aWx9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuaW1wb3J0IHtPbmVIb3RQcm9ncmFtfSBmcm9tICcuLi9vbmVob3Rfd2ViZ3B1JztcbmltcG9ydCB7cmVzaGFwZX0gZnJvbSAnLi9SZXNoYXBlJztcblxuZXhwb3J0IGZ1bmN0aW9uIG9uZUhvdChcbiAgICBhcmdzOiB7aW5wdXRzOiBPbmVIb3RJbnB1dHMsIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmQsIGF0dHJzOiBPbmVIb3RBdHRyc30pOlxuICAgIFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7aW5kaWNlc30gPSBpbnB1dHM7XG4gIGNvbnN0IHtkdHlwZSwgZGVwdGgsIG9uVmFsdWUsIG9mZlZhbHVlfSA9IGF0dHJzO1xuXG4gIGNvbnN0IGluZGljZXNTaXplID0gdXRpbC5zaXplRnJvbVNoYXBlKGluZGljZXMuc2hhcGUpO1xuICBjb25zdCBwcm9ncmFtID0gbmV3IE9uZUhvdFByb2dyYW0oaW5kaWNlc1NpemUsIGRlcHRoKTtcbiAgY29uc3QgcmVzaGFwZWQgPVxuICAgICAgcmVzaGFwZSh7aW5wdXRzOiB7eDogaW5kaWNlc30sIGJhY2tlbmQsIGF0dHJzOiB7c2hhcGU6IFtpbmRpY2VzU2l6ZV19fSk7XG5cbiAgY29uc3QgdW5pZm9ybURhdGEgPVxuICAgICAgW3t0eXBlOiAnZmxvYXQzMicsIGRhdGE6IFtvblZhbHVlXX0sIHt0eXBlOiAnZmxvYXQzMicsIGRhdGE6IFtvZmZWYWx1ZV19XTtcbiAgY29uc3QgcmVzdWx0ID1cbiAgICAgIGJhY2tlbmQucnVuV2ViR1BVUHJvZ3JhbShwcm9ncmFtLCBbcmVzaGFwZWRdLCBkdHlwZSwgdW5pZm9ybURhdGEpO1xuICBiYWNrZW5kLmRpc3Bvc2VEYXRhKHJlc2hhcGVkLmRhdGFJZCk7XG5cbiAgY29uc3Qgb3V0U2hhcGUgPSBbLi4uaW5kaWNlcy5zaGFwZSwgZGVwdGhdO1xuICBjb25zdCBvdXQgPSByZXNoYXBlKHtpbnB1dHM6IHt4OiByZXN1bHR9LCBiYWNrZW5kLCBhdHRyczoge3NoYXBlOiBvdXRTaGFwZX19KTtcbiAgYmFja2VuZC5kaXNwb3NlRGF0YShyZXN1bHQuZGF0YUlkKTtcblxuICByZXR1cm4gb3V0O1xufVxuXG5leHBvcnQgY29uc3Qgb25lSG90Q29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IE9uZUhvdCxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBvbmVIb3QgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ZerosLike } from '@tensorflow/tfjs-core';\nimport { complex } from './Complex';\nimport { fill } from './Fill';\nimport { imag } from './Imag';\nimport { real } from './Real';\nexport function zerosLike(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    if (x.dtype === 'complex64') {\n        const realPart = real({ inputs: { input: x }, backend });\n        const r = zerosLike({ inputs: { x: realPart }, backend });\n        const imagPart = imag({ inputs: { input: x }, backend });\n        const i = zerosLike({ inputs: { x: imagPart }, backend });\n        const result = complex({ inputs: { real: r, imag: i }, backend });\n        backend.disposeData(realPart.dataId);\n        backend.disposeData(r.dataId);\n        backend.disposeData(imagPart.dataId);\n        backend.disposeData(i.dataId);\n        return result;\n    }\n    else {\n        return fill({\n            attrs: {\n                shape: x.shape,\n                dtype: x.dtype,\n                value: x.dtype === 'string' ? '' : 0\n            },\n            backend\n        });\n    }\n}\nexport const zerosLikeConfig = {\n    kernelName: ZerosLike,\n    backendName: 'webgpu',\n    kernelFunc: zerosLike\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiWmVyb3NMaWtlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9aZXJvc0xpa2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUF1QyxTQUFTLEVBQWtCLE1BQU0sdUJBQXVCLENBQUM7QUFJdkcsT0FBTyxFQUFDLE9BQU8sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUNsQyxPQUFPLEVBQUMsSUFBSSxFQUFDLE1BQU0sUUFBUSxDQUFDO0FBQzVCLE9BQU8sRUFBQyxJQUFJLEVBQUMsTUFBTSxRQUFRLENBQUM7QUFDNUIsT0FBTyxFQUFDLElBQUksRUFBQyxNQUFNLFFBQVEsQ0FBQztBQUU1QixNQUFNLFVBQVUsU0FBUyxDQUNyQixJQUF1RDtJQUN6RCxNQUFNLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBQyxHQUFHLElBQUksQ0FBQztJQUMvQixNQUFNLEVBQUMsQ0FBQyxFQUFDLEdBQUcsTUFBTSxDQUFDO0lBQ25CLElBQUksQ0FBQyxDQUFDLEtBQUssS0FBSyxXQUFXLEVBQUU7UUFDM0IsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLEVBQUMsTUFBTSxFQUFFLEVBQUMsS0FBSyxFQUFFLENBQUMsRUFBQyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7UUFDckQsTUFBTSxDQUFDLEdBQUcsU0FBUyxDQUFDLEVBQUMsTUFBTSxFQUFFLEVBQUMsQ0FBQyxFQUFFLFFBQVEsRUFBQyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7UUFDdEQsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLEVBQUMsTUFBTSxFQUFFLEVBQUMsS0FBSyxFQUFFLENBQUMsRUFBQyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7UUFDckQsTUFBTSxDQUFDLEdBQUcsU0FBUyxDQUFDLEVBQUMsTUFBTSxFQUFFLEVBQUMsQ0FBQyxFQUFFLFFBQVEsRUFBQyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7UUFFdEQsTUFBTSxNQUFNLEdBQUcsT0FBTyxDQUFDLEVBQUMsTUFBTSxFQUFFLEVBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFDLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztRQUU5RCxPQUFPLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNyQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM5QixPQUFPLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNyQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUU5QixPQUFPLE1BQU0sQ0FBQztLQUNmO1NBQU07UUFDTCxPQUFPLElBQUksQ0FBQztZQUNWLEtBQUssRUFBRTtnQkFDTCxLQUFLLEVBQUUsQ0FBQyxDQUFDLEtBQUs7Z0JBQ2QsS0FBSyxFQUFFLENBQUMsQ0FBQyxLQUFLO2dCQUNkLEtBQUssRUFBRSxDQUFDLENBQUMsS0FBSyxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ3JDO1lBQ0QsT0FBTztTQUNSLENBQUMsQ0FBQztLQUNKO0FBQ0gsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBaUI7SUFDM0MsVUFBVSxFQUFFLFNBQVM7SUFDckIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLFNBQWtDO0NBQy9DLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7S2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBUZW5zb3JJbmZvLCBaZXJvc0xpa2UsIFplcm9zTGlrZUlucHV0c30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5cbmltcG9ydCB7Y29tcGxleH0gZnJvbSAnLi9Db21wbGV4JztcbmltcG9ydCB7ZmlsbH0gZnJvbSAnLi9GaWxsJztcbmltcG9ydCB7aW1hZ30gZnJvbSAnLi9JbWFnJztcbmltcG9ydCB7cmVhbH0gZnJvbSAnLi9SZWFsJztcblxuZXhwb3J0IGZ1bmN0aW9uIHplcm9zTGlrZShcbiAgICBhcmdzOiB7aW5wdXRzOiBaZXJvc0xpa2VJbnB1dHMsIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmR9KTogVGVuc29ySW5mbyB7XG4gIGNvbnN0IHtpbnB1dHMsIGJhY2tlbmR9ID0gYXJncztcbiAgY29uc3Qge3h9ID0gaW5wdXRzO1xuICBpZiAoeC5kdHlwZSA9PT0gJ2NvbXBsZXg2NCcpIHtcbiAgICBjb25zdCByZWFsUGFydCA9IHJlYWwoe2lucHV0czoge2lucHV0OiB4fSwgYmFja2VuZH0pO1xuICAgIGNvbnN0IHIgPSB6ZXJvc0xpa2Uoe2lucHV0czoge3g6IHJlYWxQYXJ0fSwgYmFja2VuZH0pO1xuICAgIGNvbnN0IGltYWdQYXJ0ID0gaW1hZyh7aW5wdXRzOiB7aW5wdXQ6IHh9LCBiYWNrZW5kfSk7XG4gICAgY29uc3QgaSA9IHplcm9zTGlrZSh7aW5wdXRzOiB7eDogaW1hZ1BhcnR9LCBiYWNrZW5kfSk7XG5cbiAgICBjb25zdCByZXN1bHQgPSBjb21wbGV4KHtpbnB1dHM6IHtyZWFsOiByLCBpbWFnOiBpfSwgYmFja2VuZH0pO1xuXG4gICAgYmFja2VuZC5kaXNwb3NlRGF0YShyZWFsUGFydC5kYXRhSWQpO1xuICAgIGJhY2tlbmQuZGlzcG9zZURhdGEoci5kYXRhSWQpO1xuICAgIGJhY2tlbmQuZGlzcG9zZURhdGEoaW1hZ1BhcnQuZGF0YUlkKTtcbiAgICBiYWNrZW5kLmRpc3Bvc2VEYXRhKGkuZGF0YUlkKTtcblxuICAgIHJldHVybiByZXN1bHQ7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGZpbGwoe1xuICAgICAgYXR0cnM6IHtcbiAgICAgICAgc2hhcGU6IHguc2hhcGUsXG4gICAgICAgIGR0eXBlOiB4LmR0eXBlLFxuICAgICAgICB2YWx1ZTogeC5kdHlwZSA9PT0gJ3N0cmluZycgPyAnJyA6IDBcbiAgICAgIH0sXG4gICAgICBiYWNrZW5kXG4gICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IHplcm9zTGlrZUNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBaZXJvc0xpa2UsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogemVyb3NMaWtlIGFzIHVua25vd24gYXMgS2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { OnesLike } from '@tensorflow/tfjs-core';\nimport { complex } from './Complex';\nimport { fill } from './Fill';\nimport { imag } from './Imag';\nimport { real } from './Real';\nimport { zerosLike } from './ZerosLike';\nexport function onesLike(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    if (x.dtype === 'string') {\n        throw new Error('onesLike is not supported under string dtype');\n    }\n    else if (x.dtype === 'complex64') {\n        const realPart = real({ inputs: { input: x }, backend });\n        const r = onesLike({ inputs: { x: realPart }, backend });\n        const imagPart = imag({ inputs: { input: x }, backend });\n        const i = zerosLike({ inputs: { x: imagPart }, backend });\n        const result = complex({ inputs: { real: r, imag: i }, backend });\n        backend.disposeData(realPart.dataId);\n        backend.disposeData(r.dataId);\n        backend.disposeData(imagPart.dataId);\n        backend.disposeData(i.dataId);\n        return result;\n    }\n    else {\n        return fill({ attrs: { shape: x.shape, dtype: x.dtype, value: 1 }, backend });\n    }\n}\nexport const onesLikeConfig = {\n    kernelName: OnesLike,\n    backendName: 'webgpu',\n    kernelFunc: onesLike\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT25lc0xpa2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL09uZXNMaWtlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBMkIsUUFBUSxFQUE2QixNQUFNLHVCQUF1QixDQUFDO0FBSXJHLE9BQU8sRUFBQyxPQUFPLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFDbEMsT0FBTyxFQUFDLElBQUksRUFBQyxNQUFNLFFBQVEsQ0FBQztBQUM1QixPQUFPLEVBQUMsSUFBSSxFQUFDLE1BQU0sUUFBUSxDQUFDO0FBQzVCLE9BQU8sRUFBQyxJQUFJLEVBQUMsTUFBTSxRQUFRLENBQUM7QUFDNUIsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGFBQWEsQ0FBQztBQUV0QyxNQUFNLFVBQVUsUUFBUSxDQUNwQixJQUFzRDtJQUN4RCxNQUFNLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBQyxHQUFHLElBQUksQ0FBQztJQUMvQixNQUFNLEVBQUMsQ0FBQyxFQUFDLEdBQUcsTUFBTSxDQUFDO0lBRW5CLElBQUksQ0FBQyxDQUFDLEtBQUssS0FBSyxRQUFRLEVBQUU7UUFDeEIsTUFBTSxJQUFJLEtBQUssQ0FBQyw4Q0FBOEMsQ0FBQyxDQUFDO0tBQ2pFO1NBQU0sSUFBSSxDQUFDLENBQUMsS0FBSyxLQUFLLFdBQVcsRUFBRTtRQUNsQyxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsRUFBQyxNQUFNLEVBQUUsRUFBQyxLQUFLLEVBQUUsQ0FBQyxFQUFDLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztRQUNyRCxNQUFNLENBQUMsR0FBRyxRQUFRLENBQUMsRUFBQyxNQUFNLEVBQUUsRUFBQyxDQUFDLEVBQUUsUUFBUSxFQUFDLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztRQUNyRCxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsRUFBQyxNQUFNLEVBQUUsRUFBQyxLQUFLLEVBQUUsQ0FBQyxFQUFDLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztRQUNyRCxNQUFNLENBQUMsR0FBRyxTQUFTLENBQUMsRUFBQyxNQUFNLEVBQUUsRUFBQyxDQUFDLEVBQUUsUUFBUSxFQUFDLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztRQUV0RCxNQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsRUFBQyxNQUFNLEVBQUUsRUFBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUMsRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFDO1FBRTlELE9BQU8sQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3JDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzlCLE9BQU8sQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3JDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRTlCLE9BQU8sTUFBTSxDQUFDO0tBQ2Y7U0FBTTtRQUNMLE9BQU8sSUFBSSxDQUFDLEVBQUMsS0FBSyxFQUFFLEVBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBQyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7S0FDM0U7QUFDSCxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFpQjtJQUMxQyxVQUFVLEVBQUUsUUFBUTtJQUNwQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsUUFBaUM7Q0FDOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtLZXJuZWxDb25maWcsIEtlcm5lbEZ1bmMsIE9uZXNMaWtlLCBPbmVzTGlrZUlucHV0cywgVGVuc29ySW5mb30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5cbmltcG9ydCB7Y29tcGxleH0gZnJvbSAnLi9Db21wbGV4JztcbmltcG9ydCB7ZmlsbH0gZnJvbSAnLi9GaWxsJztcbmltcG9ydCB7aW1hZ30gZnJvbSAnLi9JbWFnJztcbmltcG9ydCB7cmVhbH0gZnJvbSAnLi9SZWFsJztcbmltcG9ydCB7emVyb3NMaWtlfSBmcm9tICcuL1plcm9zTGlrZSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBvbmVzTGlrZShcbiAgICBhcmdzOiB7aW5wdXRzOiBPbmVzTGlrZUlucHV0cywgYmFja2VuZDogV2ViR1BVQmFja2VuZH0pOiBUZW5zb3JJbmZvIHtcbiAgY29uc3Qge2lucHV0cywgYmFja2VuZH0gPSBhcmdzO1xuICBjb25zdCB7eH0gPSBpbnB1dHM7XG5cbiAgaWYgKHguZHR5cGUgPT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdvbmVzTGlrZSBpcyBub3Qgc3VwcG9ydGVkIHVuZGVyIHN0cmluZyBkdHlwZScpO1xuICB9IGVsc2UgaWYgKHguZHR5cGUgPT09ICdjb21wbGV4NjQnKSB7XG4gICAgY29uc3QgcmVhbFBhcnQgPSByZWFsKHtpbnB1dHM6IHtpbnB1dDogeH0sIGJhY2tlbmR9KTtcbiAgICBjb25zdCByID0gb25lc0xpa2Uoe2lucHV0czoge3g6IHJlYWxQYXJ0fSwgYmFja2VuZH0pO1xuICAgIGNvbnN0IGltYWdQYXJ0ID0gaW1hZyh7aW5wdXRzOiB7aW5wdXQ6IHh9LCBiYWNrZW5kfSk7XG4gICAgY29uc3QgaSA9IHplcm9zTGlrZSh7aW5wdXRzOiB7eDogaW1hZ1BhcnR9LCBiYWNrZW5kfSk7XG5cbiAgICBjb25zdCByZXN1bHQgPSBjb21wbGV4KHtpbnB1dHM6IHtyZWFsOiByLCBpbWFnOiBpfSwgYmFja2VuZH0pO1xuXG4gICAgYmFja2VuZC5kaXNwb3NlRGF0YShyZWFsUGFydC5kYXRhSWQpO1xuICAgIGJhY2tlbmQuZGlzcG9zZURhdGEoci5kYXRhSWQpO1xuICAgIGJhY2tlbmQuZGlzcG9zZURhdGEoaW1hZ1BhcnQuZGF0YUlkKTtcbiAgICBiYWNrZW5kLmRpc3Bvc2VEYXRhKGkuZGF0YUlkKTtcblxuICAgIHJldHVybiByZXN1bHQ7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGZpbGwoe2F0dHJzOiB7c2hhcGU6IHguc2hhcGUsIGR0eXBlOiB4LmR0eXBlLCB2YWx1ZTogMX0sIGJhY2tlbmR9KTtcbiAgfVxufVxuXG5leHBvcnQgY29uc3Qgb25lc0xpa2VDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogT25lc0xpa2UsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogb25lc0xpa2UgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Pack, util } from '@tensorflow/tfjs-core';\nimport { concat } from './Concat';\nimport { expandDims } from './ExpandDims';\nexport function pack(args) {\n    const { inputs, backend, attrs } = args;\n    const { axis } = attrs;\n    if (inputs.length === 1) {\n        return expandDims({ inputs: { input: inputs[0] }, backend, attrs: { dim: axis } });\n    }\n    const shape = inputs[0].shape;\n    const dtype = inputs[0].dtype;\n    inputs.forEach(t => {\n        util.assertShapesMatch(shape, t.shape, 'All tensors passed to stack must have matching shapes');\n        util.assert(dtype === t.dtype, () => 'All tensors passed to stack must have matching dtypes');\n    });\n    const intermediateTensorInfos = [];\n    const expandedTensors = inputs.map(t => {\n        const expandedT = expandDims({ inputs: { input: t }, backend, attrs: { dim: axis } });\n        intermediateTensorInfos.push(expandedT);\n        return expandedT;\n    });\n    const result = concat({ inputs: expandedTensors, backend, attrs: { axis } });\n    intermediateTensorInfos.forEach(t => backend.disposeData(t.dataId));\n    return result;\n}\nexport const packConfig = {\n    kernelName: Pack,\n    backendName: 'webgpu',\n    kernelFunc: pack\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvUGFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQTJCLElBQUksRUFBcUMsSUFBSSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFHOUcsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLFVBQVUsQ0FBQztBQUNoQyxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBRXhDLE1BQU0sVUFBVSxJQUFJLENBQ2hCLElBQW9FO0lBRXRFLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QyxNQUFNLEVBQUMsSUFBSSxFQUFDLEdBQUcsS0FBSyxDQUFDO0lBRXJCLElBQUksTUFBTSxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7UUFDdkIsT0FBTyxVQUFVLENBQ2IsRUFBQyxNQUFNLEVBQUUsRUFBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFDLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxFQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUMsRUFBQyxDQUFDLENBQUM7S0FDaEU7SUFFRCxNQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0lBQzlCLE1BQU0sS0FBSyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7SUFFOUIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUNqQixJQUFJLENBQUMsaUJBQWlCLENBQ2xCLEtBQUssRUFBRSxDQUFDLENBQUMsS0FBSyxFQUNkLHVEQUF1RCxDQUFDLENBQUM7UUFDN0QsSUFBSSxDQUFDLE1BQU0sQ0FDUCxLQUFLLEtBQUssQ0FBQyxDQUFDLEtBQUssRUFDakIsR0FBRyxFQUFFLENBQUMsdURBQXVELENBQUMsQ0FBQztJQUNyRSxDQUFDLENBQUMsQ0FBQztJQUVILE1BQU0sdUJBQXVCLEdBQWlCLEVBQUUsQ0FBQztJQUNqRCxNQUFNLGVBQWUsR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFO1FBQ3JDLE1BQU0sU0FBUyxHQUNYLFVBQVUsQ0FBQyxFQUFDLE1BQU0sRUFBRSxFQUFDLEtBQUssRUFBRSxDQUFDLEVBQUMsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLEVBQUMsR0FBRyxFQUFFLElBQUksRUFBQyxFQUFDLENBQUMsQ0FBQztRQUNsRSx1QkFBdUIsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDeEMsT0FBTyxTQUFTLENBQUM7SUFDbkIsQ0FBQyxDQUFDLENBQUM7SUFFSCxNQUFNLE1BQU0sR0FBRyxNQUFNLENBQUMsRUFBQyxNQUFNLEVBQUUsZUFBZSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUMsRUFBQyxDQUFDLENBQUM7SUFFekUsdUJBQXVCLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUVwRSxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFpQjtJQUN0QyxVQUFVLEVBQUUsSUFBSTtJQUNoQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsSUFBNkI7Q0FDMUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtLZXJuZWxDb25maWcsIEtlcm5lbEZ1bmMsIFBhY2ssIFBhY2tBdHRycywgUGFja0lucHV0cywgVGVuc29ySW5mbywgdXRpbH0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge2NvbmNhdH0gZnJvbSAnLi9Db25jYXQnO1xuaW1wb3J0IHtleHBhbmREaW1zfSBmcm9tICcuL0V4cGFuZERpbXMnO1xuXG5leHBvcnQgZnVuY3Rpb24gcGFjayhcbiAgICBhcmdzOiB7aW5wdXRzOiBQYWNrSW5wdXRzLCBiYWNrZW5kOiBXZWJHUFVCYWNrZW5kLCBhdHRyczogUGFja0F0dHJzfSk6XG4gICAgVGVuc29ySW5mbyB7XG4gIGNvbnN0IHtpbnB1dHMsIGJhY2tlbmQsIGF0dHJzfSA9IGFyZ3M7XG4gIGNvbnN0IHtheGlzfSA9IGF0dHJzO1xuXG4gIGlmIChpbnB1dHMubGVuZ3RoID09PSAxKSB7XG4gICAgcmV0dXJuIGV4cGFuZERpbXMoXG4gICAgICAgIHtpbnB1dHM6IHtpbnB1dDogaW5wdXRzWzBdfSwgYmFja2VuZCwgYXR0cnM6IHtkaW06IGF4aXN9fSk7XG4gIH1cblxuICBjb25zdCBzaGFwZSA9IGlucHV0c1swXS5zaGFwZTtcbiAgY29uc3QgZHR5cGUgPSBpbnB1dHNbMF0uZHR5cGU7XG5cbiAgaW5wdXRzLmZvckVhY2godCA9PiB7XG4gICAgdXRpbC5hc3NlcnRTaGFwZXNNYXRjaChcbiAgICAgICAgc2hhcGUsIHQuc2hhcGUsXG4gICAgICAgICdBbGwgdGVuc29ycyBwYXNzZWQgdG8gc3RhY2sgbXVzdCBoYXZlIG1hdGNoaW5nIHNoYXBlcycpO1xuICAgIHV0aWwuYXNzZXJ0KFxuICAgICAgICBkdHlwZSA9PT0gdC5kdHlwZSxcbiAgICAgICAgKCkgPT4gJ0FsbCB0ZW5zb3JzIHBhc3NlZCB0byBzdGFjayBtdXN0IGhhdmUgbWF0Y2hpbmcgZHR5cGVzJyk7XG4gIH0pO1xuXG4gIGNvbnN0IGludGVybWVkaWF0ZVRlbnNvckluZm9zOiBUZW5zb3JJbmZvW10gPSBbXTtcbiAgY29uc3QgZXhwYW5kZWRUZW5zb3JzID0gaW5wdXRzLm1hcCh0ID0+IHtcbiAgICBjb25zdCBleHBhbmRlZFQgPVxuICAgICAgICBleHBhbmREaW1zKHtpbnB1dHM6IHtpbnB1dDogdH0sIGJhY2tlbmQsIGF0dHJzOiB7ZGltOiBheGlzfX0pO1xuICAgIGludGVybWVkaWF0ZVRlbnNvckluZm9zLnB1c2goZXhwYW5kZWRUKTtcbiAgICByZXR1cm4gZXhwYW5kZWRUO1xuICB9KTtcblxuICBjb25zdCByZXN1bHQgPSBjb25jYXQoe2lucHV0czogZXhwYW5kZWRUZW5zb3JzLCBiYWNrZW5kLCBhdHRyczoge2F4aXN9fSk7XG5cbiAgaW50ZXJtZWRpYXRlVGVuc29ySW5mb3MuZm9yRWFjaCh0ID0+IGJhY2tlbmQuZGlzcG9zZURhdGEodC5kYXRhSWQpKTtcblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgY29uc3QgcGFja0NvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBQYWNrLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IHBhY2sgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType, getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport function padCommon(shape, fillZero = false) {\n    const rank = shape.length;\n    const type = getCoordsDataType(rank);\n    const start = shape.map((_, i) => `uniforms.pad${i}[0]`).join(',');\n    const end = shape\n        .map((_, i) => `uniforms.pad${i}[0] + uniforms.xShape${rank > 1 ? `[${i}]` : ''}`)\n        .join(',');\n    const startValue = rank > 1 ? `${type}(${start})` : `${start}`;\n    const endValue = rank > 1 ? `${type}(${end})` : `${end}`;\n    const leftPadCondition = rank > 1 ? `any(paddedCoords < start)` : `paddedCoords < start`;\n    const rightPadCondition = rank > 1 ? `any(paddedCoords >= end)` : `paddedCoords >= end`;\n    const unpackedCoords = rank > 1 ?\n        ['coords[0]', 'coords[1]', 'coords[2]', 'coords[3]'].slice(0, rank) :\n        'coords';\n    return `\n        let start = ${startValue};\n        let end = ${endValue};\n        if (${leftPadCondition} || ${rightPadCondition}) {\n          setOutputAtIndex(index, ${fillZero ? 0.0 : 'uniforms.constantValue'});\n        } else {\n          let coords = paddedCoords - start;\n          setOutputAtIndex(index, getX(${unpackedCoords}));\n        }\n  `;\n}\nexport class PadProgram {\n    constructor(xShape, paddings) {\n        this.variableNames = ['x'];\n        this.uniforms = 'constantValue : f32,';\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = paddings.map((p, i) => p[0] /* beforePad */ + xShape[i] + p[1] /* afterPad */);\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        paddings.map((_, i) => {\n            this.uniforms += ` pad${i} : vec2<i32>,`;\n        });\n        this.xShape = xShape;\n        this.shaderKey = 'pad';\n    }\n    getUserCode() {\n        const userCode = `\n      ${main('index')} {\n        if (index < uniforms.size) {\n          let paddedCoords = getCoordsFromIndex(index);\n          ${padCommon(this.xShape)}\n        }\n      }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFkX3dlYmdwdS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL3BhZF93ZWJncHUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLGlCQUFpQixFQUFFLG1CQUFtQixJQUFJLElBQUksRUFBZ0IsTUFBTSxrQkFBa0IsQ0FBQztBQUMvRixPQUFPLEVBQUMsZUFBZSxFQUFFLGtCQUFrQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRWxFLE1BQU0sVUFBVSxTQUFTLENBQUMsS0FBZSxFQUFFLFFBQVEsR0FBRyxLQUFLO0lBQ3pELE1BQU0sSUFBSSxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUM7SUFDMUIsTUFBTSxJQUFJLEdBQUcsaUJBQWlCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDckMsTUFBTSxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLGVBQWUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDbkUsTUFBTSxHQUFHLEdBQUcsS0FBSztTQUNBLEdBQUcsQ0FDQSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLGVBQWUsQ0FBQyx3QkFDdEIsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUM7U0FDbEMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzNCLE1BQU0sVUFBVSxHQUFHLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxJQUFJLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssRUFBRSxDQUFDO0lBQy9ELE1BQU0sUUFBUSxHQUFHLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDO0lBRXpELE1BQU0sZ0JBQWdCLEdBQ2xCLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLDJCQUEyQixDQUFDLENBQUMsQ0FBQyxzQkFBc0IsQ0FBQztJQUNwRSxNQUFNLGlCQUFpQixHQUNuQixJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDLENBQUMscUJBQXFCLENBQUM7SUFFbEUsTUFBTSxjQUFjLEdBQUcsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQzdCLENBQUMsV0FBVyxFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQUUsV0FBVyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ3JFLFFBQVEsQ0FBQztJQUNiLE9BQU87c0JBQ2EsVUFBVTtvQkFDWixRQUFRO2NBQ2QsZ0JBQWdCLE9BQU8saUJBQWlCO29DQUNsQixRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsd0JBQXdCOzs7eUNBR3BDLGNBQWM7O0dBRXBELENBQUM7QUFDSixDQUFDO0FBRUQsTUFBTSxPQUFPLFVBQVU7SUFXckIsWUFBWSxNQUFnQixFQUFFLFFBQWlDO1FBTi9ELGtCQUFhLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN0QixhQUFRLEdBQUcsc0JBQXNCLENBQUM7UUFDbEMsa0JBQWEsR0FBNkIsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBRXJELFNBQUksR0FBRyxJQUFJLENBQUM7UUFHVixJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQyxHQUFHLENBQzNCLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLGVBQWUsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ3RFLElBQUksQ0FBQyxjQUFjLEdBQUcsa0JBQWtCLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQzNELElBQUksQ0FBQyxRQUFRLEdBQUcsZUFBZSxDQUMzQixJQUFJLENBQUMsY0FBYyxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQy9ELFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDcEIsSUFBSSxDQUFDLFFBQVEsSUFBSSxPQUFPLENBQUMsZUFBZSxDQUFDO1FBQzNDLENBQUMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDckIsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7SUFDekIsQ0FBQztJQUVELFdBQVc7UUFDVCxNQUFNLFFBQVEsR0FBRztRQUNiLElBQUksQ0FBQyxPQUFPLENBQUM7OztZQUdULFNBQVMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDOzs7S0FHN0IsQ0FBQztRQUNGLE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtnZXRDb29yZHNEYXRhVHlwZSwgZ2V0TWFpbkhlYWRlclN0cmluZyBhcyBtYWluLCBXZWJHUFVQcm9ncmFtfSBmcm9tICcuL3dlYmdwdV9wcm9ncmFtJztcbmltcG9ydCB7Y29tcHV0ZURpc3BhdGNoLCBmbGF0RGlzcGF0Y2hMYXlvdXR9IGZyb20gJy4vd2ViZ3B1X3V0aWwnO1xuXG5leHBvcnQgZnVuY3Rpb24gcGFkQ29tbW9uKHNoYXBlOiBudW1iZXJbXSwgZmlsbFplcm8gPSBmYWxzZSk6IHN0cmluZyB7XG4gIGNvbnN0IHJhbmsgPSBzaGFwZS5sZW5ndGg7XG4gIGNvbnN0IHR5cGUgPSBnZXRDb29yZHNEYXRhVHlwZShyYW5rKTtcbiAgY29uc3Qgc3RhcnQgPSBzaGFwZS5tYXAoKF8sIGkpID0+IGB1bmlmb3Jtcy5wYWQke2l9WzBdYCkuam9pbignLCcpO1xuICBjb25zdCBlbmQgPSBzaGFwZVxuICAgICAgICAgICAgICAgICAgLm1hcChcbiAgICAgICAgICAgICAgICAgICAgICAoXywgaSkgPT4gYHVuaWZvcm1zLnBhZCR7aX1bMF0gKyB1bmlmb3Jtcy54U2hhcGUke1xuICAgICAgICAgICAgICAgICAgICAgICAgICByYW5rID4gMSA/IGBbJHtpfV1gIDogJyd9YClcbiAgICAgICAgICAgICAgICAgIC5qb2luKCcsJyk7XG4gIGNvbnN0IHN0YXJ0VmFsdWUgPSByYW5rID4gMSA/IGAke3R5cGV9KCR7c3RhcnR9KWAgOiBgJHtzdGFydH1gO1xuICBjb25zdCBlbmRWYWx1ZSA9IHJhbmsgPiAxID8gYCR7dHlwZX0oJHtlbmR9KWAgOiBgJHtlbmR9YDtcblxuICBjb25zdCBsZWZ0UGFkQ29uZGl0aW9uID1cbiAgICAgIHJhbmsgPiAxID8gYGFueShwYWRkZWRDb29yZHMgPCBzdGFydClgIDogYHBhZGRlZENvb3JkcyA8IHN0YXJ0YDtcbiAgY29uc3QgcmlnaHRQYWRDb25kaXRpb24gPVxuICAgICAgcmFuayA+IDEgPyBgYW55KHBhZGRlZENvb3JkcyA+PSBlbmQpYCA6IGBwYWRkZWRDb29yZHMgPj0gZW5kYDtcblxuICBjb25zdCB1bnBhY2tlZENvb3JkcyA9IHJhbmsgPiAxID9cbiAgICAgIFsnY29vcmRzWzBdJywgJ2Nvb3Jkc1sxXScsICdjb29yZHNbMl0nLCAnY29vcmRzWzNdJ10uc2xpY2UoMCwgcmFuaykgOlxuICAgICAgJ2Nvb3Jkcyc7XG4gIHJldHVybiBgXG4gICAgICAgIGxldCBzdGFydCA9ICR7c3RhcnRWYWx1ZX07XG4gICAgICAgIGxldCBlbmQgPSAke2VuZFZhbHVlfTtcbiAgICAgICAgaWYgKCR7bGVmdFBhZENvbmRpdGlvbn0gfHwgJHtyaWdodFBhZENvbmRpdGlvbn0pIHtcbiAgICAgICAgICBzZXRPdXRwdXRBdEluZGV4KGluZGV4LCAke2ZpbGxaZXJvID8gMC4wIDogJ3VuaWZvcm1zLmNvbnN0YW50VmFsdWUnfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbGV0IGNvb3JkcyA9IHBhZGRlZENvb3JkcyAtIHN0YXJ0O1xuICAgICAgICAgIHNldE91dHB1dEF0SW5kZXgoaW5kZXgsIGdldFgoJHt1bnBhY2tlZENvb3Jkc30pKTtcbiAgICAgICAgfVxuICBgO1xufVxuXG5leHBvcnQgY2xhc3MgUGFkUHJvZ3JhbSBpbXBsZW1lbnRzIFdlYkdQVVByb2dyYW0ge1xuICBvdXRwdXRTaGFwZTogbnVtYmVyW107XG4gIHNoYWRlcktleTogc3RyaW5nO1xuICBkaXNwYXRjaExheW91dDoge3g6IG51bWJlcltdfTtcbiAgZGlzcGF0Y2g6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXTtcbiAgdmFyaWFibGVOYW1lcyA9IFsneCddO1xuICB1bmlmb3JtcyA9ICdjb25zdGFudFZhbHVlIDogZjMyLCc7XG4gIHdvcmtncm91cFNpemU6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXSA9IFs2NCwgMSwgMV07XG4gIHhTaGFwZTogbnVtYmVyW107XG4gIHNpemUgPSB0cnVlO1xuXG4gIGNvbnN0cnVjdG9yKHhTaGFwZTogbnVtYmVyW10sIHBhZGRpbmdzOiBBcnJheTxbbnVtYmVyLCBudW1iZXJdPikge1xuICAgIHRoaXMub3V0cHV0U2hhcGUgPSBwYWRkaW5ncy5tYXAoXG4gICAgICAgIChwLCBpKSA9PiBwWzBdIC8qIGJlZm9yZVBhZCAqLyArIHhTaGFwZVtpXSArIHBbMV0gLyogYWZ0ZXJQYWQgKi8pO1xuICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQgPSBmbGF0RGlzcGF0Y2hMYXlvdXQodGhpcy5vdXRwdXRTaGFwZSk7XG4gICAgdGhpcy5kaXNwYXRjaCA9IGNvbXB1dGVEaXNwYXRjaChcbiAgICAgICAgdGhpcy5kaXNwYXRjaExheW91dCwgdGhpcy5vdXRwdXRTaGFwZSwgdGhpcy53b3JrZ3JvdXBTaXplKTtcbiAgICBwYWRkaW5ncy5tYXAoKF8sIGkpID0+IHtcbiAgICAgIHRoaXMudW5pZm9ybXMgKz0gYCBwYWQke2l9IDogdmVjMjxpMzI+LGA7XG4gICAgfSk7XG4gICAgdGhpcy54U2hhcGUgPSB4U2hhcGU7XG4gICAgdGhpcy5zaGFkZXJLZXkgPSAncGFkJztcbiAgfVxuXG4gIGdldFVzZXJDb2RlKCk6IHN0cmluZyB7XG4gICAgY29uc3QgdXNlckNvZGUgPSBgXG4gICAgICAke21haW4oJ2luZGV4Jyl9IHtcbiAgICAgICAgaWYgKGluZGV4IDwgdW5pZm9ybXMuc2l6ZSkge1xuICAgICAgICAgIGxldCBwYWRkZWRDb29yZHMgPSBnZXRDb29yZHNGcm9tSW5kZXgoaW5kZXgpO1xuICAgICAgICAgICR7cGFkQ29tbW9uKHRoaXMueFNoYXBlKX1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIGA7XG4gICAgcmV0dXJuIHVzZXJDb2RlO1xuICB9XG59XG4iXX0=","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { PadV2, util } from '@tensorflow/tfjs-core';\nimport { identity } from './Identity';\nimport { PadProgram } from '../pad_webgpu';\nimport { fill } from './Fill';\nexport const padV2 = (args) => {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { paddings, constantValue } = attrs;\n    if (paddings.every(p => util.arraysEqual(p, [0, 0]))) {\n        return identity({ inputs: { x }, backend });\n    }\n    if (util.sizeFromShape(x.shape) === 0) {\n        // Short-circuit the computation, since x doesn't have value, only\n        // the shape is used to compute output shape to pad.\n        const outputShape = paddings.map((p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n        return fill({\n            backend,\n            attrs: { shape: outputShape, value: constantValue, dtype: x.dtype }\n        });\n    }\n    const uniformData = [{ type: 'float32', data: [constantValue] }];\n    paddings.map(p => uniformData.push({ type: 'int32', data: [p[0], p[1]] }));\n    const program = new PadProgram(x.shape, paddings);\n    return backend.runWebGPUProgram(program, [x], x.dtype, uniformData);\n};\nexport const padV2Config = {\n    kernelName: PadV2,\n    backendName: 'webgpu',\n    kernelFunc: padV2\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGFkVjIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL1BhZFYyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBMkIsS0FBSyxFQUF1QyxJQUFJLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUdqSCxPQUFPLEVBQUMsUUFBUSxFQUFDLE1BQU0sWUFBWSxDQUFDO0FBQ3BDLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFDLElBQUksRUFBQyxNQUFNLFFBQVEsQ0FBQztBQUU1QixNQUFNLENBQUMsTUFBTSxLQUFLLEdBQ2QsQ0FBQyxJQUV5QixFQUFjLEVBQUU7SUFDeEMsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ3RDLE1BQU0sRUFBQyxDQUFDLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFDbkIsTUFBTSxFQUFDLFFBQVEsRUFBRSxhQUFhLEVBQUMsR0FBRyxLQUFLLENBQUM7SUFDeEMsSUFBSSxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO1FBQ3BELE9BQU8sUUFBUSxDQUFDLEVBQUMsTUFBTSxFQUFFLEVBQUMsQ0FBQyxFQUFDLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztLQUN6QztJQUNELElBQUksSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxFQUFFO1FBQ3JDLGtFQUFrRTtRQUNsRSxvREFBb0Q7UUFDcEQsTUFBTSxXQUFXLEdBQUcsUUFBUSxDQUFDLEdBQUcsQ0FDNUIsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FDTCxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsZUFBZSxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ2pFLE9BQU8sSUFBSSxDQUFDO1lBQ1YsT0FBTztZQUNQLEtBQUssRUFBRSxFQUFDLEtBQUssRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFFLGFBQWEsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDLEtBQUssRUFBQztTQUNsRSxDQUFDLENBQUM7S0FDSjtJQUNELE1BQU0sV0FBVyxHQUFHLENBQUMsRUFBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDLGFBQWEsQ0FBQyxFQUFDLENBQUMsQ0FBQztJQUMvRCxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3pFLE1BQU0sT0FBTyxHQUFHLElBQUksVUFBVSxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDbEQsT0FBTyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEtBQUssRUFBRSxXQUFXLENBQUMsQ0FBQztBQUN0RSxDQUFDLENBQUM7QUFFTixNQUFNLENBQUMsTUFBTSxXQUFXLEdBQWlCO0lBQ3ZDLFVBQVUsRUFBRSxLQUFLO0lBQ2pCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxLQUE4QjtDQUMzQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0tlcm5lbENvbmZpZywgS2VybmVsRnVuYywgUGFkVjIsIFBhZFYyQXR0cnMsIFBhZFYySW5wdXRzLCBUZW5zb3JJbmZvLCB1dGlsfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcbmltcG9ydCB7aWRlbnRpdHl9IGZyb20gJy4vSWRlbnRpdHknO1xuaW1wb3J0IHtQYWRQcm9ncmFtfSBmcm9tICcuLi9wYWRfd2ViZ3B1JztcbmltcG9ydCB7ZmlsbH0gZnJvbSAnLi9GaWxsJztcblxuZXhwb3J0IGNvbnN0IHBhZFYyID1cbiAgICAoYXJnczoge2lucHV0czogUGFkVjJJbnB1dHMsXG4gICAgICAgICAgICBiYWNrZW5kOiBXZWJHUFVCYWNrZW5kLFxuICAgICAgICAgICAgYXR0cnM6IFBhZFYyQXR0cnN9KTogVGVuc29ySW5mbyA9PiB7XG4gICAgICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICAgICAgY29uc3Qge3h9ID0gaW5wdXRzO1xuICAgICAgY29uc3Qge3BhZGRpbmdzLCBjb25zdGFudFZhbHVlfSA9IGF0dHJzO1xuICAgICAgaWYgKHBhZGRpbmdzLmV2ZXJ5KHAgPT4gdXRpbC5hcnJheXNFcXVhbChwLCBbMCwgMF0pKSkge1xuICAgICAgICByZXR1cm4gaWRlbnRpdHkoe2lucHV0czoge3h9LCBiYWNrZW5kfSk7XG4gICAgICB9XG4gICAgICBpZiAodXRpbC5zaXplRnJvbVNoYXBlKHguc2hhcGUpID09PSAwKSB7XG4gICAgICAgIC8vIFNob3J0LWNpcmN1aXQgdGhlIGNvbXB1dGF0aW9uLCBzaW5jZSB4IGRvZXNuJ3QgaGF2ZSB2YWx1ZSwgb25seVxuICAgICAgICAvLyB0aGUgc2hhcGUgaXMgdXNlZCB0byBjb21wdXRlIG91dHB1dCBzaGFwZSB0byBwYWQuXG4gICAgICAgIGNvbnN0IG91dHB1dFNoYXBlID0gcGFkZGluZ3MubWFwKFxuICAgICAgICAgICAgKHAsIGkpID0+XG4gICAgICAgICAgICAgICAgcFswXSAvKiBiZWZvcmVQYWQgKi8gKyB4LnNoYXBlW2ldICsgcFsxXSAvKiBhZnRlclBhZCAqLyk7XG4gICAgICAgIHJldHVybiBmaWxsKHtcbiAgICAgICAgICBiYWNrZW5kLFxuICAgICAgICAgIGF0dHJzOiB7c2hhcGU6IG91dHB1dFNoYXBlLCB2YWx1ZTogY29uc3RhbnRWYWx1ZSwgZHR5cGU6IHguZHR5cGV9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgY29uc3QgdW5pZm9ybURhdGEgPSBbe3R5cGU6ICdmbG9hdDMyJywgZGF0YTogW2NvbnN0YW50VmFsdWVdfV07XG4gICAgICBwYWRkaW5ncy5tYXAocCA9PiB1bmlmb3JtRGF0YS5wdXNoKHt0eXBlOiAnaW50MzInLCBkYXRhOiBbcFswXSwgcFsxXV19KSk7XG4gICAgICBjb25zdCBwcm9ncmFtID0gbmV3IFBhZFByb2dyYW0oeC5zaGFwZSwgcGFkZGluZ3MpO1xuICAgICAgcmV0dXJuIGJhY2tlbmQucnVuV2ViR1BVUHJvZ3JhbShwcm9ncmFtLCBbeF0sIHguZHR5cGUsIHVuaWZvcm1EYXRhKTtcbiAgICB9O1xuXG5leHBvcnQgY29uc3QgcGFkVjJDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogUGFkVjIsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogcGFkVjIgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Pow } from '@tensorflow/tfjs-core';\nimport { BinaryOpType } from '../binary_op_util';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nexport const pow = binaryKernelFunc({\n    opType: BinaryOpType.POW,\n});\nexport const powConfig = {\n    kernelName: Pow,\n    backendName: 'webgpu',\n    kernelFunc: pow\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUG93LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9Qb3cudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFlLEdBQUcsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRXhELE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUMvQyxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUVwRSxNQUFNLENBQUMsTUFBTSxHQUFHLEdBQUcsZ0JBQWdCLENBQUM7SUFDbEMsTUFBTSxFQUFFLFlBQVksQ0FBQyxHQUFHO0NBQ3pCLENBQUMsQ0FBQztBQUVILE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBaUI7SUFDckMsVUFBVSxFQUFFLEdBQUc7SUFDZixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsR0FBRztDQUNoQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0tlcm5lbENvbmZpZywgUG93fSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge0JpbmFyeU9wVHlwZX0gZnJvbSAnLi4vYmluYXJ5X29wX3V0aWwnO1xuaW1wb3J0IHtiaW5hcnlLZXJuZWxGdW5jfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMva2VybmVsX2Z1bmNzX3V0aWxzJztcblxuZXhwb3J0IGNvbnN0IHBvdyA9IGJpbmFyeUtlcm5lbEZ1bmMoe1xuICBvcFR5cGU6IEJpbmFyeU9wVHlwZS5QT1csXG59KTtcblxuZXhwb3J0IGNvbnN0IHBvd0NvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBQb3csXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogcG93XG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Prelu } from '@tensorflow/tfjs-core';\nimport { BinaryOpType } from '../binary_op_util';\nimport { BinaryOpProgram } from '../binary_op_webgpu';\nexport function prelu(args) {\n    const { inputs, backend } = args;\n    const { x, alpha } = inputs;\n    const program = new BinaryOpProgram(BinaryOpType.PRELU, x.shape, alpha.shape);\n    return backend.runWebGPUProgram(program, [x, alpha], 'float32');\n}\nexport const preluConfig = {\n    kernelName: Prelu,\n    backendName: 'webgpu',\n    kernelFunc: prelu\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHJlbHUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL1ByZWx1LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBMkIsS0FBSyxFQUEwQixNQUFNLHVCQUF1QixDQUFDO0FBSS9GLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUMvQyxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFFcEQsTUFBTSxVQUFVLEtBQUssQ0FBQyxJQUFtRDtJQUV2RSxNQUFNLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBQyxHQUFHLElBQUksQ0FBQztJQUMvQixNQUFNLEVBQUMsQ0FBQyxFQUFFLEtBQUssRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUUxQixNQUFNLE9BQU8sR0FBRyxJQUFJLGVBQWUsQ0FBQyxZQUFZLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzlFLE9BQU8sT0FBTyxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQztBQUNsRSxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFpQjtJQUN2QyxVQUFVLEVBQUUsS0FBSztJQUNqQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsS0FBOEI7Q0FDM0MsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtLZXJuZWxDb25maWcsIEtlcm5lbEZ1bmMsIFByZWx1LCBQcmVsdUlucHV0cywgVGVuc29ySW5mb30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5cbmltcG9ydCB7QmluYXJ5T3BUeXBlfSBmcm9tICcuLi9iaW5hcnlfb3BfdXRpbCc7XG5pbXBvcnQge0JpbmFyeU9wUHJvZ3JhbX0gZnJvbSAnLi4vYmluYXJ5X29wX3dlYmdwdSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBwcmVsdShhcmdzOiB7aW5wdXRzOiBQcmVsdUlucHV0cywgYmFja2VuZDogV2ViR1BVQmFja2VuZH0pOlxuICAgIFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kfSA9IGFyZ3M7XG4gIGNvbnN0IHt4LCBhbHBoYX0gPSBpbnB1dHM7XG5cbiAgY29uc3QgcHJvZ3JhbSA9IG5ldyBCaW5hcnlPcFByb2dyYW0oQmluYXJ5T3BUeXBlLlBSRUxVLCB4LnNoYXBlLCBhbHBoYS5zaGFwZSk7XG4gIHJldHVybiBiYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0ocHJvZ3JhbSwgW3gsIGFscGhhXSwgJ2Zsb2F0MzInKTtcbn1cblxuZXhwb3J0IGNvbnN0IHByZWx1Q29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IFByZWx1LFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IHByZWx1IGFzIHVua25vd24gYXMgS2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Prod } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nexport function prod(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, keepDims } = attrs;\n    return reduce(x, axis, keepDims, 'prod', backend);\n}\nexport const prodConfig = {\n    kernelName: Prod,\n    backendName: 'webgpu',\n    kernelFunc: prod\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHJvZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvUHJvZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQTJCLElBQUksRUFBb0MsTUFBTSx1QkFBdUIsQ0FBQztBQUd4RyxPQUFPLEVBQUMsTUFBTSxFQUFDLE1BQU0sd0JBQXdCLENBQUM7QUFFOUMsTUFBTSxVQUFVLElBQUksQ0FDaEIsSUFBb0U7SUFFdEUsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ3RDLE1BQU0sRUFBQyxDQUFDLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFDbkIsTUFBTSxFQUFDLElBQUksRUFBRSxRQUFRLEVBQUMsR0FBRyxLQUFLLENBQUM7SUFFL0IsT0FBTyxNQUFNLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ3BELENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQWlCO0lBQ3RDLFVBQVUsRUFBRSxJQUFJO0lBQ2hCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxJQUE2QjtDQUMxQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0tlcm5lbENvbmZpZywgS2VybmVsRnVuYywgUHJvZCwgUHJvZEF0dHJzLCBQcm9kSW5wdXRzLCBUZW5zb3JJbmZvfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcbmltcG9ydCB7cmVkdWNlfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMvcmVkdWNlJztcblxuZXhwb3J0IGZ1bmN0aW9uIHByb2QoXG4gICAgYXJnczoge2lucHV0czogUHJvZElucHV0cywgYmFja2VuZDogV2ViR1BVQmFja2VuZCwgYXR0cnM6IFByb2RBdHRyc30pOlxuICAgIFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7eH0gPSBpbnB1dHM7XG4gIGNvbnN0IHtheGlzLCBrZWVwRGltc30gPSBhdHRycztcblxuICByZXR1cm4gcmVkdWNlKHgsIGF4aXMsIGtlZXBEaW1zLCAncHJvZCcsIGJhY2tlbmQpO1xufVxuXG5leHBvcnQgY29uc3QgcHJvZENvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBQcm9kLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IHByb2QgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Range } from '@tensorflow/tfjs-core';\nimport { rangeImplCPU } from '../kernel_utils/shared';\nexport const range = (args) => {\n    const { backend, attrs } = args;\n    const { start, stop, step, dtype } = attrs;\n    const values = rangeImplCPU(start, stop, step, dtype);\n    return backend.makeTensorInfo([values.length], dtype, values);\n};\nexport const rangeConfig = {\n    kernelName: Range,\n    backendName: 'webgpu',\n    kernelFunc: range\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmFuZ2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL1JhbmdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBMkIsS0FBSyxFQUF5QixNQUFNLHVCQUF1QixDQUFDO0FBRzlGLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUVwRCxNQUFNLENBQUMsTUFBTSxLQUFLLEdBQ2QsQ0FBQyxJQUFpRCxFQUFjLEVBQUU7SUFDaEUsTUFBTSxFQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFDOUIsTUFBTSxFQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBQyxHQUFHLEtBQUssQ0FBQztJQUN6QyxNQUFNLE1BQU0sR0FBRyxZQUFZLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDdEQsT0FBTyxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQztBQUNoRSxDQUFDLENBQUM7QUFFTixNQUFNLENBQUMsTUFBTSxXQUFXLEdBQWlCO0lBQ3ZDLFVBQVUsRUFBRSxLQUFLO0lBQ2pCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxLQUE4QjtDQUMzQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0tlcm5lbENvbmZpZywgS2VybmVsRnVuYywgUmFuZ2UsIFJhbmdlQXR0cnMsIFRlbnNvckluZm99IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuaW1wb3J0IHtyYW5nZUltcGxDUFV9IGZyb20gJy4uL2tlcm5lbF91dGlscy9zaGFyZWQnO1xuXG5leHBvcnQgY29uc3QgcmFuZ2UgPVxuICAgIChhcmdzOiB7YmFja2VuZDogV2ViR1BVQmFja2VuZCwgYXR0cnM6IFJhbmdlQXR0cnN9KTogVGVuc29ySW5mbyA9PiB7XG4gICAgICBjb25zdCB7YmFja2VuZCwgYXR0cnN9ID0gYXJncztcbiAgICAgIGNvbnN0IHtzdGFydCwgc3RvcCwgc3RlcCwgZHR5cGV9ID0gYXR0cnM7XG4gICAgICBjb25zdCB2YWx1ZXMgPSByYW5nZUltcGxDUFUoc3RhcnQsIHN0b3AsIHN0ZXAsIGR0eXBlKTtcbiAgICAgIHJldHVybiBiYWNrZW5kLm1ha2VUZW5zb3JJbmZvKFt2YWx1ZXMubGVuZ3RoXSwgZHR5cGUsIHZhbHVlcyk7XG4gICAgfTtcblxuZXhwb3J0IGNvbnN0IHJhbmdlQ29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IFJhbmdlLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IHJhbmdlIGFzIHVua25vd24gYXMgS2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { RealDiv } from '@tensorflow/tfjs-core';\nimport { BinaryOpType } from '../binary_op_util';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nexport const realDiv = binaryKernelFunc({ opType: BinaryOpType.DIV });\nexport const realDivConfig = {\n    kernelName: RealDiv,\n    backendName: 'webgpu',\n    kernelFunc: realDiv\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVhbERpdi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvUmVhbERpdi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQTJCLE9BQU8sRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRXhFLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUMvQyxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUVwRSxNQUFNLENBQUMsTUFBTSxPQUFPLEdBQUcsZ0JBQWdCLENBQUMsRUFBQyxNQUFNLEVBQUUsWUFBWSxDQUFDLEdBQUcsRUFBQyxDQUFDLENBQUM7QUFFcEUsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFpQjtJQUN6QyxVQUFVLEVBQUUsT0FBTztJQUNuQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsT0FBZ0M7Q0FDN0MsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtLZXJuZWxDb25maWcsIEtlcm5lbEZ1bmMsIFJlYWxEaXZ9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7QmluYXJ5T3BUeXBlfSBmcm9tICcuLi9iaW5hcnlfb3BfdXRpbCc7XG5pbXBvcnQge2JpbmFyeUtlcm5lbEZ1bmN9IGZyb20gJy4uL2tlcm5lbF91dGlscy9rZXJuZWxfZnVuY3NfdXRpbHMnO1xuXG5leHBvcnQgY29uc3QgcmVhbERpdiA9IGJpbmFyeUtlcm5lbEZ1bmMoe29wVHlwZTogQmluYXJ5T3BUeXBlLkRJVn0pO1xuXG5leHBvcnQgY29uc3QgcmVhbERpdkNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBSZWFsRGl2LFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IHJlYWxEaXYgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Reciprocal } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { UnaryOpType } from '../unary_op_util';\nexport const reciprocal = unaryKernelFunc({ opType: UnaryOpType.RECIPROCAL });\nexport const reciprocalConfig = {\n    kernelName: Reciprocal,\n    backendName: 'webgpu',\n    kernelFunc: reciprocal\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVjaXByb2NhbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvUmVjaXByb2NhbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQWUsVUFBVSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDL0QsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9DQUFvQyxDQUFDO0FBQ25FLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUU3QyxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsZUFBZSxDQUFDLEVBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxVQUFVLEVBQUMsQ0FBQyxDQUFDO0FBRTVFLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFpQjtJQUM1QyxVQUFVLEVBQUUsVUFBVTtJQUN0QixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsVUFBVTtDQUN2QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjIgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0tlcm5lbENvbmZpZywgUmVjaXByb2NhbH0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcbmltcG9ydCB7dW5hcnlLZXJuZWxGdW5jfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMva2VybmVsX2Z1bmNzX3V0aWxzJztcbmltcG9ydCB7VW5hcnlPcFR5cGV9IGZyb20gJy4uL3VuYXJ5X29wX3V0aWwnO1xuXG5leHBvcnQgY29uc3QgcmVjaXByb2NhbCA9IHVuYXJ5S2VybmVsRnVuYyh7b3BUeXBlOiBVbmFyeU9wVHlwZS5SRUNJUFJPQ0FMfSk7XG5cbmV4cG9ydCBjb25zdCByZWNpcHJvY2FsQ29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IFJlY2lwcm9jYWwsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogcmVjaXByb2NhbFxufTtcbiJdfQ==","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Relu } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { UnaryOpType } from '../unary_op_util';\nexport const relu = unaryKernelFunc({ opType: UnaryOpType.RELU });\nexport const reluConfig = {\n    kernelName: Relu,\n    backendName: 'webgpu',\n    kernelFunc: relu\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVsdS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvUmVsdS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQWUsSUFBSSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDekQsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9DQUFvQyxDQUFDO0FBQ25FLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUU3QyxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQUcsZUFBZSxDQUFDLEVBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxJQUFJLEVBQUMsQ0FBQyxDQUFDO0FBRWhFLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBaUI7SUFDdEMsVUFBVSxFQUFFLElBQUk7SUFDaEIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLElBQUk7Q0FDakIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtLZXJuZWxDb25maWcsIFJlbHV9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5pbXBvcnQge3VuYXJ5S2VybmVsRnVuY30gZnJvbSAnLi4va2VybmVsX3V0aWxzL2tlcm5lbF9mdW5jc191dGlscyc7XG5pbXBvcnQge1VuYXJ5T3BUeXBlfSBmcm9tICcuLi91bmFyeV9vcF91dGlsJztcblxuZXhwb3J0IGNvbnN0IHJlbHUgPSB1bmFyeUtlcm5lbEZ1bmMoe29wVHlwZTogVW5hcnlPcFR5cGUuUkVMVX0pO1xuXG5leHBvcnQgY29uc3QgcmVsdUNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBSZWx1LFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IHJlbHVcbn07XG4iXX0=","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Relu6 } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { UnaryOpType } from '../unary_op_util';\nexport const relu6 = unaryKernelFunc({ opType: UnaryOpType.RELU6 });\nexport const relu6Config = {\n    kernelName: Relu6,\n    backendName: 'webgpu',\n    kernelFunc: relu6\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVsdTYuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL1JlbHU2LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBZSxLQUFLLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUMxRCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sb0NBQW9DLENBQUM7QUFDbkUsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBRTdDLE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBRyxlQUFlLENBQUMsRUFBQyxNQUFNLEVBQUUsV0FBVyxDQUFDLEtBQUssRUFBQyxDQUFDLENBQUM7QUFFbEUsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFpQjtJQUN2QyxVQUFVLEVBQUUsS0FBSztJQUNqQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsS0FBSztDQUNsQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0tlcm5lbENvbmZpZywgUmVsdTZ9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5pbXBvcnQge3VuYXJ5S2VybmVsRnVuY30gZnJvbSAnLi4va2VybmVsX3V0aWxzL2tlcm5lbF9mdW5jc191dGlscyc7XG5pbXBvcnQge1VuYXJ5T3BUeXBlfSBmcm9tICcuLi91bmFyeV9vcF91dGlsJztcblxuZXhwb3J0IGNvbnN0IHJlbHU2ID0gdW5hcnlLZXJuZWxGdW5jKHtvcFR5cGU6IFVuYXJ5T3BUeXBlLlJFTFU2fSk7XG5cbmV4cG9ydCBjb25zdCByZWx1NkNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBSZWx1NixcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiByZWx1NlxufTtcbiJdfQ==","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class ResizeBilinearProgram {\n    constructor(inputShape, newHeight, newWidth) {\n        this.variableNames = ['x'];\n        this.uniforms = 'adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,';\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = [inputShape[0], newHeight, newWidth, inputShape[3]];\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.shaderKey = `resizeBilinear`;\n    }\n    getUserCode() {\n        const userCode = `\n      ${main('index')} {\n        if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC =\n            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *\n            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);\n\n          // Compute the four integer indices.\n          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);\n          let sourceCeilRC = vec2<i32>(\n            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));\n\n          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);\n          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);\n          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);\n          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);\n\n          let top = topLeft + (topRight - topLeft) * fracRC.y;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n          let newValue = top + (bottom - top) * fracRC.x;\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzaXplX2JpbGluZWFyX3dlYmdwdS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL3Jlc2l6ZV9iaWxpbmVhcl93ZWJncHUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLG1CQUFtQixJQUFJLElBQUksRUFBZ0IsTUFBTSxrQkFBa0IsQ0FBQztBQUM1RSxPQUFPLEVBQUMsZUFBZSxFQUFFLGtCQUFrQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRWxFLE1BQU0sT0FBTyxxQkFBcUI7SUFVaEMsWUFDSSxVQUE0QyxFQUFFLFNBQWlCLEVBQy9ELFFBQWdCO1FBUHBCLGtCQUFhLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN0QixhQUFRLEdBQUcsd0RBQXdELENBQUM7UUFDcEUsa0JBQWEsR0FBNkIsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3JELFNBQUksR0FBRyxJQUFJLENBQUM7UUFLVixJQUFJLENBQUMsV0FBVyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFdkUsSUFBSSxDQUFDLGNBQWMsR0FBRyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFFM0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxlQUFlLENBQzNCLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFFL0QsSUFBSSxDQUFDLFNBQVMsR0FBRyxnQkFBZ0IsQ0FBQztJQUNwQyxDQUFDO0lBRUQsV0FBVztRQUNULE1BQU0sUUFBUSxHQUFHO1FBQ2IsSUFBSSxDQUFDLE9BQU8sQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBMENoQixDQUFDO1FBQ0YsT0FBTyxRQUFRLENBQUM7SUFDbEIsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge2dldE1haW5IZWFkZXJTdHJpbmcgYXMgbWFpbiwgV2ViR1BVUHJvZ3JhbX0gZnJvbSAnLi93ZWJncHVfcHJvZ3JhbSc7XG5pbXBvcnQge2NvbXB1dGVEaXNwYXRjaCwgZmxhdERpc3BhdGNoTGF5b3V0fSBmcm9tICcuL3dlYmdwdV91dGlsJztcblxuZXhwb3J0IGNsYXNzIFJlc2l6ZUJpbGluZWFyUHJvZ3JhbSBpbXBsZW1lbnRzIFdlYkdQVVByb2dyYW0ge1xuICBvdXRwdXRTaGFwZTogbnVtYmVyW107XG4gIHNoYWRlcktleTogc3RyaW5nO1xuICBkaXNwYXRjaExheW91dDoge3g6IG51bWJlcltdfTtcbiAgZGlzcGF0Y2g6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXTtcbiAgdmFyaWFibGVOYW1lcyA9IFsneCddO1xuICB1bmlmb3JtcyA9ICdhZGp1c3RIZWlnaHRXaWR0aCA6IHZlYzI8ZjMyPiwgaGFsZlBpeGVsQ2VudGVycyA6IGYzMiwnO1xuICB3b3JrZ3JvdXBTaXplOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl0gPSBbNjQsIDEsIDFdO1xuICBzaXplID0gdHJ1ZTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICAgIGlucHV0U2hhcGU6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdLCBuZXdIZWlnaHQ6IG51bWJlcixcbiAgICAgIG5ld1dpZHRoOiBudW1iZXIpIHtcbiAgICB0aGlzLm91dHB1dFNoYXBlID0gW2lucHV0U2hhcGVbMF0sIG5ld0hlaWdodCwgbmV3V2lkdGgsIGlucHV0U2hhcGVbM11dO1xuXG4gICAgdGhpcy5kaXNwYXRjaExheW91dCA9IGZsYXREaXNwYXRjaExheW91dCh0aGlzLm91dHB1dFNoYXBlKTtcblxuICAgIHRoaXMuZGlzcGF0Y2ggPSBjb21wdXRlRGlzcGF0Y2goXG4gICAgICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQsIHRoaXMub3V0cHV0U2hhcGUsIHRoaXMud29ya2dyb3VwU2l6ZSk7XG5cbiAgICB0aGlzLnNoYWRlcktleSA9IGByZXNpemVCaWxpbmVhcmA7XG4gIH1cblxuICBnZXRVc2VyQ29kZSgpOiBzdHJpbmcge1xuICAgIGNvbnN0IHVzZXJDb2RlID0gYFxuICAgICAgJHttYWluKCdpbmRleCcpfSB7XG4gICAgICAgIGlmIChpbmRleCA8IHVuaWZvcm1zLnNpemUpIHtcbiAgICAgICAgbGV0IGNvb3JkcyA9IGdldENvb3Jkc0Zyb21JbmRleChpbmRleCk7XG4gICAgICAgICAgbGV0IGIgPSBjb29yZHNbMF07XG4gICAgICAgICAgbGV0IGQgPSBjb29yZHNbM107XG4gICAgICAgICAgbGV0IHJjID0gY29vcmRzLnl6O1xuXG4gICAgICAgICAgbGV0IGVmZmVjdGl2ZUluU2l6ZSA9IHZlYzI8ZjMyPihcbiAgICAgICAgICAgIGYzMih1bmlmb3Jtcy54U2hhcGUueSkgLSB1bmlmb3Jtcy5hZGp1c3RIZWlnaHRXaWR0aFswXSxcbiAgICAgICAgICAgIGYzMih1bmlmb3Jtcy54U2hhcGUueikgLSB1bmlmb3Jtcy5hZGp1c3RIZWlnaHRXaWR0aFsxXSk7XG5cbiAgICAgICAgICBsZXQgZWZmZWN0aXZlT3V0U2l6ZSA9IHZlYzI8ZjMyPihcbiAgICAgICAgICAgIGYzMih1bmlmb3Jtcy5vdXRTaGFwZS55KSAtIHVuaWZvcm1zLmFkanVzdEhlaWdodFdpZHRoWzBdLFxuICAgICAgICAgICAgZjMyKHVuaWZvcm1zLm91dFNoYXBlLnopIC0gdW5pZm9ybXMuYWRqdXN0SGVpZ2h0V2lkdGhbMV0pO1xuXG4gICAgICAgICAgbGV0IGVmZmVjdGl2ZUlucHV0T3Zlck91dHB1dFJhdGlvUkMgPVxuICAgICAgICAgICAgICBlZmZlY3RpdmVJblNpemUgLyBlZmZlY3RpdmVPdXRTaXplO1xuXG4gICAgICAgICAgLy8gRnJhY3Rpb25hbCBzb3VyY2UgaW5kZXhcbiAgICAgICAgICBsZXQgc291cmNlRnJhY0luZGV4UkMgPVxuICAgICAgICAgICAgKHZlYzI8ZjMyPihyYykgKyB2ZWMyPGYzMj4odW5pZm9ybXMuaGFsZlBpeGVsQ2VudGVycykpICpcbiAgICAgICAgICAgIGVmZmVjdGl2ZUlucHV0T3Zlck91dHB1dFJhdGlvUkMgLSB2ZWMyPGYzMj4odW5pZm9ybXMuaGFsZlBpeGVsQ2VudGVycyk7XG5cbiAgICAgICAgICAvLyBDb21wdXRlIHRoZSBmb3VyIGludGVnZXIgaW5kaWNlcy5cbiAgICAgICAgICBsZXQgc291cmNlRmxvb3JSQyA9IHZlYzI8aTMyPihzb3VyY2VGcmFjSW5kZXhSQyk7XG4gICAgICAgICAgbGV0IHNvdXJjZUNlaWxSQyA9IHZlYzI8aTMyPihcbiAgICAgICAgICAgIG1pbih2ZWMyPGYzMj4odW5pZm9ybXMueFNoYXBlLnl6KSAtIHZlYzI8ZjMyPigxLjApLCBjZWlsKHNvdXJjZUZyYWNJbmRleFJDKSkpO1xuXG4gICAgICAgICAgbGV0IHRvcExlZnQgPSBnZXRYKGIsIHNvdXJjZUZsb29yUkMueCwgc291cmNlRmxvb3JSQy55LCBkKTtcbiAgICAgICAgICBsZXQgYm90dG9tTGVmdCA9IGdldFgoYiwgc291cmNlQ2VpbFJDLngsIHNvdXJjZUZsb29yUkMueSwgZCk7XG4gICAgICAgICAgbGV0IHRvcFJpZ2h0ID0gZ2V0WChiLCBzb3VyY2VGbG9vclJDLngsIHNvdXJjZUNlaWxSQy55LCBkKTtcbiAgICAgICAgICBsZXQgYm90dG9tUmlnaHQgPSBnZXRYKGIsIHNvdXJjZUNlaWxSQy54LCBzb3VyY2VDZWlsUkMueSwgZCk7XG5cbiAgICAgICAgICBsZXQgZnJhY1JDID0gc291cmNlRnJhY0luZGV4UkMgLSB2ZWMyPGYzMj4oc291cmNlRmxvb3JSQyk7XG5cbiAgICAgICAgICBsZXQgdG9wID0gdG9wTGVmdCArICh0b3BSaWdodCAtIHRvcExlZnQpICogZnJhY1JDLnk7XG4gICAgICAgICAgbGV0IGJvdHRvbSA9IGJvdHRvbUxlZnQgKyAoYm90dG9tUmlnaHQgLSBib3R0b21MZWZ0KSAqIGZyYWNSQy55O1xuICAgICAgICAgIGxldCBuZXdWYWx1ZSA9IHRvcCArIChib3R0b20gLSB0b3ApICogZnJhY1JDLng7XG5cbiAgICAgICAgICBzZXRPdXRwdXRBdEluZGV4KGluZGV4LCBuZXdWYWx1ZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICBgO1xuICAgIHJldHVybiB1c2VyQ29kZTtcbiAgfVxufVxuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ResizeBilinear } from '@tensorflow/tfjs-core';\nimport { ResizeBilinearProgram } from '../resize_bilinear_webgpu';\nexport function resizeBilinear(args) {\n    const { inputs, backend, attrs } = args;\n    const { images } = inputs;\n    const { alignCorners, size, halfPixelCenters } = attrs;\n    const [newHeight, newWidth] = size;\n    const adjustHeight = alignCorners && newHeight > 1 ? 1.0 : 0.0;\n    const adjustWidth = alignCorners && newWidth > 1 ? 1.0 : 0.0;\n    const halfPixelCentersValue = halfPixelCenters ? 0.5 : 0.0;\n    const uniformData = [\n        { type: 'float32', data: [adjustHeight, adjustWidth] },\n        { type: 'float32', data: [halfPixelCentersValue] }\n    ];\n    const program = new ResizeBilinearProgram(images.shape, newHeight, newWidth);\n    return backend.runWebGPUProgram(program, [images], 'float32', uniformData);\n}\nexport const resizeBilinearConfig = {\n    kernelName: ResizeBilinear,\n    backendName: 'webgpu',\n    kernelFunc: resizeBilinear\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVzaXplQmlsaW5lYXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL1Jlc2l6ZUJpbGluZWFyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBMkIsY0FBYyxFQUF3RCxNQUFNLHVCQUF1QixDQUFDO0FBR3RJLE9BQU8sRUFBQyxxQkFBcUIsRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBRWhFLE1BQU0sVUFBVSxjQUFjLENBQUMsSUFJOUI7SUFDQyxNQUFNLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFDdEMsTUFBTSxFQUFDLE1BQU0sRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUN4QixNQUFNLEVBQUMsWUFBWSxFQUFFLElBQUksRUFBRSxnQkFBZ0IsRUFBQyxHQUFHLEtBQUssQ0FBQztJQUVyRCxNQUFNLENBQUMsU0FBUyxFQUFFLFFBQVEsQ0FBQyxHQUFHLElBQUksQ0FBQztJQUNuQyxNQUFNLFlBQVksR0FBRyxZQUFZLElBQUksU0FBUyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUM7SUFDL0QsTUFBTSxXQUFXLEdBQUcsWUFBWSxJQUFJLFFBQVEsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDO0lBQzdELE1BQU0scUJBQXFCLEdBQUcsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDO0lBQzNELE1BQU0sV0FBVyxHQUFHO1FBQ2xCLEVBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxZQUFZLEVBQUUsV0FBVyxDQUFDLEVBQUM7UUFDcEQsRUFBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDLHFCQUFxQixDQUFDLEVBQUM7S0FDakQsQ0FBQztJQUVGLE1BQU0sT0FBTyxHQUFHLElBQUkscUJBQXFCLENBQ3JDLE1BQU0sQ0FBQyxLQUF5QyxFQUFFLFNBQVMsRUFBRSxRQUFRLENBQUMsQ0FBQztJQUUzRSxPQUFPLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxNQUFNLENBQUMsRUFBRSxTQUFTLEVBQUUsV0FBVyxDQUFDLENBQUM7QUFDN0UsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFpQjtJQUNoRCxVQUFVLEVBQUUsY0FBYztJQUMxQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsY0FBdUM7Q0FDcEQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtLZXJuZWxDb25maWcsIEtlcm5lbEZ1bmMsIFJlc2l6ZUJpbGluZWFyLCBSZXNpemVCaWxpbmVhckF0dHJzLCBSZXNpemVCaWxpbmVhcklucHV0cywgVGVuc29ySW5mb30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge1Jlc2l6ZUJpbGluZWFyUHJvZ3JhbX0gZnJvbSAnLi4vcmVzaXplX2JpbGluZWFyX3dlYmdwdSc7XG5cbmV4cG9ydCBmdW5jdGlvbiByZXNpemVCaWxpbmVhcihhcmdzOiB7XG4gIGlucHV0czogUmVzaXplQmlsaW5lYXJJbnB1dHMsXG4gIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmQsXG4gIGF0dHJzOiBSZXNpemVCaWxpbmVhckF0dHJzXG59KTogVGVuc29ySW5mbyB7XG4gIGNvbnN0IHtpbnB1dHMsIGJhY2tlbmQsIGF0dHJzfSA9IGFyZ3M7XG4gIGNvbnN0IHtpbWFnZXN9ID0gaW5wdXRzO1xuICBjb25zdCB7YWxpZ25Db3JuZXJzLCBzaXplLCBoYWxmUGl4ZWxDZW50ZXJzfSA9IGF0dHJzO1xuXG4gIGNvbnN0IFtuZXdIZWlnaHQsIG5ld1dpZHRoXSA9IHNpemU7XG4gIGNvbnN0IGFkanVzdEhlaWdodCA9IGFsaWduQ29ybmVycyAmJiBuZXdIZWlnaHQgPiAxID8gMS4wIDogMC4wO1xuICBjb25zdCBhZGp1c3RXaWR0aCA9IGFsaWduQ29ybmVycyAmJiBuZXdXaWR0aCA+IDEgPyAxLjAgOiAwLjA7XG4gIGNvbnN0IGhhbGZQaXhlbENlbnRlcnNWYWx1ZSA9IGhhbGZQaXhlbENlbnRlcnMgPyAwLjUgOiAwLjA7XG4gIGNvbnN0IHVuaWZvcm1EYXRhID0gW1xuICAgIHt0eXBlOiAnZmxvYXQzMicsIGRhdGE6IFthZGp1c3RIZWlnaHQsIGFkanVzdFdpZHRoXX0sXG4gICAge3R5cGU6ICdmbG9hdDMyJywgZGF0YTogW2hhbGZQaXhlbENlbnRlcnNWYWx1ZV19XG4gIF07XG5cbiAgY29uc3QgcHJvZ3JhbSA9IG5ldyBSZXNpemVCaWxpbmVhclByb2dyYW0oXG4gICAgICBpbWFnZXMuc2hhcGUgYXMgW251bWJlciwgbnVtYmVyLCBudW1iZXIsIG51bWJlcl0sIG5ld0hlaWdodCwgbmV3V2lkdGgpO1xuXG4gIHJldHVybiBiYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0ocHJvZ3JhbSwgW2ltYWdlc10sICdmbG9hdDMyJywgdW5pZm9ybURhdGEpO1xufVxuXG5leHBvcnQgY29uc3QgcmVzaXplQmlsaW5lYXJDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogUmVzaXplQmlsaW5lYXIsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogcmVzaXplQmlsaW5lYXIgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class ResizeBilinearBackpropProgram {\n    constructor(inputShape, alignCorners) {\n        this.variableNames = ['dy'];\n        this.uniforms = `effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,\n       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,`;\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = inputShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.alignCorners = alignCorners;\n        this.shaderKey = `resizeBilinearBackprop_${alignCorners}`;\n    }\n    getUserCode() {\n        const userCode = `\n      ${main('index')} {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let b = coords[0];\n          let d = coords[3];\n          let r = coords[1];\n          let c = coords[2];\n\n          var accumulator = 0.0;\n\n          // Compute bounds for where in dy we will look\n          let startRLerp = floor(f32(r) * uniforms.invHeightScale);\n          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));\n\n          let startCLerp = floor(f32(c) * uniforms.invWidthScale);\n          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));\n\n          // Loop over dy\n          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {\n            let dyR = startDyR + dyROffset;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {\n              continue;\n            }\n\n            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {\n              let dyC = startDyC + dyCOffset;\n\n              // Guard against the window exceeding the bounds of dy\n              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {\n                continue;\n              }\n\n              let dxR = f32(dyR) * uniforms.heightScale;\n              let topDxRIndex = i32(floor(dxR));\n              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));\n              let dxRLerp = dxR - f32(topDxRIndex);\n              let inverseDxRLerp = 1.0 - dxRLerp;\n\n              let dxC = f32(dyC) * uniforms.widthScale;\n              let leftDxCIndex = i32(floor(dxC));\n              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));\n              let dxCLerp = dxC - f32(leftDxCIndex);\n              let inverseDxCLerp = 1.0 - dxCLerp;\n\n              if (r == topDxRIndex && c == leftDxCIndex) {\n                // topLeft\n                accumulator +=\n                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n              }\n\n              if (r == topDxRIndex && c == rightDxCIndex) {\n                // topRight\n                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n              }\n\n              if (r == bottomDxRIndex && c == leftDxCIndex) {\n                // bottomLeft\n                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n              }\n\n              if (r == bottomDxRIndex && c == rightDxCIndex) {\n                // bottomRight\n                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n              }\n            }\n          }\n          // End loop over dy\n\n          setOutputAtIndex(index, accumulator);\n        }\n      }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzaXplX2JpbGluZWFyX2JhY2twcm9wX3dlYmdwdS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL3Jlc2l6ZV9iaWxpbmVhcl9iYWNrcHJvcF93ZWJncHUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLG1CQUFtQixJQUFJLElBQUksRUFBZ0IsTUFBTSxrQkFBa0IsQ0FBQztBQUM1RSxPQUFPLEVBQUMsZUFBZSxFQUFFLGtCQUFrQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRWxFLE1BQU0sT0FBTyw2QkFBNkI7SUFheEMsWUFDSSxVQUE0QyxFQUFFLFlBQXFCO1FBVHZFLGtCQUFhLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN2QixhQUFRLEdBQ0o7bUZBQzZFLENBQUM7UUFDbEYsa0JBQWEsR0FBNkIsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBRXJELFNBQUksR0FBRyxJQUFJLENBQUM7UUFJVixJQUFJLENBQUMsV0FBVyxHQUFHLFVBQVUsQ0FBQztRQUU5QixJQUFJLENBQUMsY0FBYyxHQUFHLGtCQUFrQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUMzRCxJQUFJLENBQUMsUUFBUSxHQUFHLGVBQWUsQ0FDM0IsSUFBSSxDQUFDLGNBQWMsRUFBRSxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUUvRCxJQUFJLENBQUMsWUFBWSxHQUFHLFlBQVksQ0FBQztRQUNqQyxJQUFJLENBQUMsU0FBUyxHQUFHLDBCQUEwQixZQUFZLEVBQUUsQ0FBQztJQUM1RCxDQUFDO0lBRUQsV0FBVztRQUNULE1BQU0sUUFBUSxHQUFHO1FBQ2IsSUFBSSxDQUFDLE9BQU8sQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQXlFaEIsQ0FBQztRQUNGLE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIzIEdvb2dsZSBMTEMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtnZXRNYWluSGVhZGVyU3RyaW5nIGFzIG1haW4sIFdlYkdQVVByb2dyYW19IGZyb20gJy4vd2ViZ3B1X3Byb2dyYW0nO1xuaW1wb3J0IHtjb21wdXRlRGlzcGF0Y2gsIGZsYXREaXNwYXRjaExheW91dH0gZnJvbSAnLi93ZWJncHVfdXRpbCc7XG5cbmV4cG9ydCBjbGFzcyBSZXNpemVCaWxpbmVhckJhY2twcm9wUHJvZ3JhbSBpbXBsZW1lbnRzIFdlYkdQVVByb2dyYW0ge1xuICBvdXRwdXRTaGFwZTogbnVtYmVyW107XG4gIHNoYWRlcktleTogc3RyaW5nO1xuICBkaXNwYXRjaExheW91dDoge3g6IG51bWJlcltdfTtcbiAgZGlzcGF0Y2g6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXTtcbiAgdmFyaWFibGVOYW1lcyA9IFsnZHknXTtcbiAgdW5pZm9ybXMgPVxuICAgICAgYGVmZmVjdGl2ZVhTaXplIDogdmVjMjxpMzI+LCBlZmZlY3RpdmVZU2l6ZSA6IHZlYzI8aTMyPiwgaGVpZ2h0U2NhbGUgOiBmMzIsIHdpZHRoU2NhbGUgOiBmMzIsXG4gICAgICAgaW52SGVpZ2h0U2NhbGUgOiBmMzIsIGludldpZHRoU2NhbGUgOiBmMzIsIHdpbkhlaWdodCA6IGkzMiwgd2luV2lkdGggOiBpMzIsYDtcbiAgd29ya2dyb3VwU2l6ZTogW251bWJlciwgbnVtYmVyLCBudW1iZXJdID0gWzY0LCAxLCAxXTtcbiAgYWxpZ25Db3JuZXJzOiBib29sZWFuO1xuICBzaXplID0gdHJ1ZTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICAgIGlucHV0U2hhcGU6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdLCBhbGlnbkNvcm5lcnM6IGJvb2xlYW4pIHtcbiAgICB0aGlzLm91dHB1dFNoYXBlID0gaW5wdXRTaGFwZTtcblxuICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQgPSBmbGF0RGlzcGF0Y2hMYXlvdXQodGhpcy5vdXRwdXRTaGFwZSk7XG4gICAgdGhpcy5kaXNwYXRjaCA9IGNvbXB1dGVEaXNwYXRjaChcbiAgICAgICAgdGhpcy5kaXNwYXRjaExheW91dCwgdGhpcy5vdXRwdXRTaGFwZSwgdGhpcy53b3JrZ3JvdXBTaXplKTtcblxuICAgIHRoaXMuYWxpZ25Db3JuZXJzID0gYWxpZ25Db3JuZXJzO1xuICAgIHRoaXMuc2hhZGVyS2V5ID0gYHJlc2l6ZUJpbGluZWFyQmFja3Byb3BfJHthbGlnbkNvcm5lcnN9YDtcbiAgfVxuXG4gIGdldFVzZXJDb2RlKCk6IHN0cmluZyB7XG4gICAgY29uc3QgdXNlckNvZGUgPSBgXG4gICAgICAke21haW4oJ2luZGV4Jyl9IHtcbiAgICAgICAgaWYgKGluZGV4IDwgdW5pZm9ybXMuc2l6ZSkge1xuICAgICAgICAgIGxldCBjb29yZHMgPSBnZXRPdXRwdXRDb29yZHMoKTtcbiAgICAgICAgICBsZXQgYiA9IGNvb3Jkc1swXTtcbiAgICAgICAgICBsZXQgZCA9IGNvb3Jkc1szXTtcbiAgICAgICAgICBsZXQgciA9IGNvb3Jkc1sxXTtcbiAgICAgICAgICBsZXQgYyA9IGNvb3Jkc1syXTtcblxuICAgICAgICAgIHZhciBhY2N1bXVsYXRvciA9IDAuMDtcblxuICAgICAgICAgIC8vIENvbXB1dGUgYm91bmRzIGZvciB3aGVyZSBpbiBkeSB3ZSB3aWxsIGxvb2tcbiAgICAgICAgICBsZXQgc3RhcnRSTGVycCA9IGZsb29yKGYzMihyKSAqIHVuaWZvcm1zLmludkhlaWdodFNjYWxlKTtcbiAgICAgICAgICBsZXQgc3RhcnREeVIgPSBpMzIoc3RhcnRSTGVycCAtIGYzMih1bmlmb3Jtcy53aW5IZWlnaHQgLyAyKSk7XG5cbiAgICAgICAgICBsZXQgc3RhcnRDTGVycCA9IGZsb29yKGYzMihjKSAqIHVuaWZvcm1zLmludldpZHRoU2NhbGUpO1xuICAgICAgICAgIGxldCBzdGFydER5QyA9IGkzMihzdGFydENMZXJwIC0gZjMyKHVuaWZvcm1zLndpbldpZHRoIC8gMikpO1xuXG4gICAgICAgICAgLy8gTG9vcCBvdmVyIGR5XG4gICAgICAgICAgZm9yICh2YXIgZHlST2Zmc2V0ID0gMDsgZHlST2Zmc2V0IDwgdW5pZm9ybXMud2luSGVpZ2h0OyBkeVJPZmZzZXQrKykge1xuICAgICAgICAgICAgbGV0IGR5UiA9IHN0YXJ0RHlSICsgZHlST2Zmc2V0O1xuXG4gICAgICAgICAgICAvLyBHdWFyZCBhZ2FpbnN0IHRoZSB3aW5kb3cgZXhjZWVkaW5nIHRoZSBib3VuZHMgb2YgZHlcbiAgICAgICAgICAgIGlmIChkeVIgPCAwIHx8IGR5UiA+PSB1bmlmb3Jtcy5keVNoYXBlWzFdKSB7XG4gICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBmb3IgKHZhciBkeUNPZmZzZXQgPSAwOyBkeUNPZmZzZXQgPCB1bmlmb3Jtcy53aW5XaWR0aDsgZHlDT2Zmc2V0KyspIHtcbiAgICAgICAgICAgICAgbGV0IGR5QyA9IHN0YXJ0RHlDICsgZHlDT2Zmc2V0O1xuXG4gICAgICAgICAgICAgIC8vIEd1YXJkIGFnYWluc3QgdGhlIHdpbmRvdyBleGNlZWRpbmcgdGhlIGJvdW5kcyBvZiBkeVxuICAgICAgICAgICAgICBpZiAoZHlDIDwgMCB8fCBkeUMgPj0gdW5pZm9ybXMuZHlTaGFwZVsyXSkge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgbGV0IGR4UiA9IGYzMihkeVIpICogdW5pZm9ybXMuaGVpZ2h0U2NhbGU7XG4gICAgICAgICAgICAgIGxldCB0b3BEeFJJbmRleCA9IGkzMihmbG9vcihkeFIpKTtcbiAgICAgICAgICAgICAgbGV0IGJvdHRvbUR4UkluZGV4ID0gaTMyKG1pbihjZWlsKGR4UiksIGYzMih1bmlmb3Jtcy5vdXRTaGFwZVsxXSAtIDEpKSk7XG4gICAgICAgICAgICAgIGxldCBkeFJMZXJwID0gZHhSIC0gZjMyKHRvcER4UkluZGV4KTtcbiAgICAgICAgICAgICAgbGV0IGludmVyc2VEeFJMZXJwID0gMS4wIC0gZHhSTGVycDtcblxuICAgICAgICAgICAgICBsZXQgZHhDID0gZjMyKGR5QykgKiB1bmlmb3Jtcy53aWR0aFNjYWxlO1xuICAgICAgICAgICAgICBsZXQgbGVmdER4Q0luZGV4ID0gaTMyKGZsb29yKGR4QykpO1xuICAgICAgICAgICAgICBsZXQgcmlnaHREeENJbmRleCA9IGkzMihtaW4oY2VpbChkeEMpLCBmMzIodW5pZm9ybXMub3V0U2hhcGVbMl0gLSAxKSkpO1xuICAgICAgICAgICAgICBsZXQgZHhDTGVycCA9IGR4QyAtIGYzMihsZWZ0RHhDSW5kZXgpO1xuICAgICAgICAgICAgICBsZXQgaW52ZXJzZUR4Q0xlcnAgPSAxLjAgLSBkeENMZXJwO1xuXG4gICAgICAgICAgICAgIGlmIChyID09IHRvcER4UkluZGV4ICYmIGMgPT0gbGVmdER4Q0luZGV4KSB7XG4gICAgICAgICAgICAgICAgLy8gdG9wTGVmdFxuICAgICAgICAgICAgICAgIGFjY3VtdWxhdG9yICs9XG4gICAgICAgICAgICAgICAgICBnZXREeShiLCBkeVIsIGR5QywgZCkgKiBpbnZlcnNlRHhSTGVycCAqIGludmVyc2VEeENMZXJwO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKHIgPT0gdG9wRHhSSW5kZXggJiYgYyA9PSByaWdodER4Q0luZGV4KSB7XG4gICAgICAgICAgICAgICAgLy8gdG9wUmlnaHRcbiAgICAgICAgICAgICAgICBhY2N1bXVsYXRvciArPSBnZXREeShiLCBkeVIsIGR5QywgZCkgKiBpbnZlcnNlRHhSTGVycCAqIGR4Q0xlcnA7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAociA9PSBib3R0b21EeFJJbmRleCAmJiBjID09IGxlZnREeENJbmRleCkge1xuICAgICAgICAgICAgICAgIC8vIGJvdHRvbUxlZnRcbiAgICAgICAgICAgICAgICBhY2N1bXVsYXRvciArPSBnZXREeShiLCBkeVIsIGR5QywgZCkgKiBkeFJMZXJwICogaW52ZXJzZUR4Q0xlcnA7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAociA9PSBib3R0b21EeFJJbmRleCAmJiBjID09IHJpZ2h0RHhDSW5kZXgpIHtcbiAgICAgICAgICAgICAgICAvLyBib3R0b21SaWdodFxuICAgICAgICAgICAgICAgIGFjY3VtdWxhdG9yICs9IGdldER5KGIsIGR5UiwgZHlDLCBkKSAqIGR4UkxlcnAgKiBkeENMZXJwO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIC8vIEVuZCBsb29wIG92ZXIgZHlcblxuICAgICAgICAgIHNldE91dHB1dEF0SW5kZXgoaW5kZXgsIGFjY3VtdWxhdG9yKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIGA7XG4gICAgcmV0dXJuIHVzZXJDb2RlO1xuICB9XG59XG4iXX0=","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ResizeBilinearGrad } from '@tensorflow/tfjs-core';\nimport { ResizeBilinearBackpropProgram } from '../resize_bilinear_backprop_webgpu';\nexport function resizeBilinearGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { images, dy } = inputs;\n    const { alignCorners } = attrs;\n    const [, xHeight, xWidth,] = images.shape;\n    const [, yHeight, yWidth] = dy.shape;\n    const effectiveXSize = [\n        (alignCorners && yHeight > 1) ? xHeight - 1 : xHeight,\n        (alignCorners && yWidth > 1) ? xWidth - 1 : xWidth\n    ];\n    const effectiveYSize = [\n        (alignCorners && yHeight > 1) ? yHeight - 1 : yHeight,\n        (alignCorners && yWidth > 1) ? yWidth - 1 : yWidth\n    ];\n    const heightScale = effectiveXSize[0] / effectiveYSize[0];\n    const widthScale = effectiveXSize[1] / effectiveYSize[1];\n    const invHeightScale = 1 / heightScale;\n    const invWidthScale = 1 / widthScale;\n    // This defines the size of the window of values around a particular\n    // index in dy that we want to search for contributions to dx.\n    const winHeight = (Math.ceil(invHeightScale) * 2) + 2;\n    const winWidth = (Math.ceil(invWidthScale) * 2) + 2;\n    const program = new ResizeBilinearBackpropProgram(images.shape, alignCorners);\n    const uniformData = [\n        { type: 'int32', data: effectiveXSize },\n        { type: 'int32', data: effectiveYSize },\n        { type: 'float32', data: [heightScale] },\n        { type: 'float32', data: [widthScale] },\n        { type: 'float32', data: [invHeightScale] },\n        { type: 'float32', data: [invWidthScale] },\n        { type: 'int32', data: [winHeight] }, { type: 'int32', data: [winWidth] }\n    ];\n    return backend.runWebGPUProgram(program, [dy], dy.dtype, uniformData);\n}\nexport const resizeBilinearGradConfig = {\n    kernelName: ResizeBilinearGrad,\n    backendName: 'webgpu',\n    kernelFunc: resizeBilinearGrad\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVzaXplQmlsaW5lYXJHcmFkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9SZXNpemVCaWxpbmVhckdyYWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUEyQixrQkFBa0IsRUFBZ0UsTUFBTSx1QkFBdUIsQ0FBQztBQUdsSixPQUFPLEVBQUMsNkJBQTZCLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUVqRixNQUFNLFVBQVUsa0JBQWtCLENBQUMsSUFJbEM7SUFDQyxNQUFNLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFDdEMsTUFBTSxFQUFDLE1BQU0sRUFBRSxFQUFFLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFDNUIsTUFBTSxFQUFDLFlBQVksRUFBQyxHQUFHLEtBQUssQ0FBQztJQUU3QixNQUFNLENBQUMsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFHLEdBQ3ZCLE1BQU0sQ0FBQyxLQUF5QyxDQUFDO0lBQ3JELE1BQU0sQ0FBQyxFQUFFLE9BQU8sRUFBRSxNQUFNLENBQUMsR0FBRyxFQUFFLENBQUMsS0FBeUMsQ0FBQztJQUV6RSxNQUFNLGNBQWMsR0FBcUI7UUFDdkMsQ0FBQyxZQUFZLElBQUksT0FBTyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPO1FBQ3JELENBQUMsWUFBWSxJQUFJLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTTtLQUNuRCxDQUFDO0lBRUYsTUFBTSxjQUFjLEdBQXFCO1FBQ3ZDLENBQUMsWUFBWSxJQUFJLE9BQU8sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTztRQUNyRCxDQUFDLFlBQVksSUFBSSxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU07S0FDbkQsQ0FBQztJQUVGLE1BQU0sV0FBVyxHQUFHLGNBQWMsQ0FBQyxDQUFDLENBQUMsR0FBRyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUQsTUFBTSxVQUFVLEdBQUcsY0FBYyxDQUFDLENBQUMsQ0FBQyxHQUFHLGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUV6RCxNQUFNLGNBQWMsR0FBRyxDQUFDLEdBQUcsV0FBVyxDQUFDO0lBQ3ZDLE1BQU0sYUFBYSxHQUFHLENBQUMsR0FBRyxVQUFVLENBQUM7SUFFckMsb0VBQW9FO0lBQ3BFLDhEQUE4RDtJQUM5RCxNQUFNLFNBQVMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3RELE1BQU0sUUFBUSxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7SUFFcEQsTUFBTSxPQUFPLEdBQUcsSUFBSSw2QkFBNkIsQ0FDN0MsTUFBTSxDQUFDLEtBQXlDLEVBQUUsWUFBWSxDQUFDLENBQUM7SUFDcEUsTUFBTSxXQUFXLEdBQUc7UUFDbEIsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUM7UUFDckMsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUM7UUFDckMsRUFBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDLFdBQVcsQ0FBQyxFQUFDO1FBQ3RDLEVBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxVQUFVLENBQUMsRUFBQztRQUNyQyxFQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLENBQUMsY0FBYyxDQUFDLEVBQUM7UUFDekMsRUFBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDLGFBQWEsQ0FBQyxFQUFDO1FBQ3hDLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxTQUFTLENBQUMsRUFBQyxFQUFFLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBQztLQUN0RSxDQUFDO0lBQ0YsT0FBTyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLEtBQUssRUFBRSxXQUFXLENBQUMsQ0FBQztBQUN4RSxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sd0JBQXdCLEdBQWlCO0lBQ3BELFVBQVUsRUFBRSxrQkFBa0I7SUFDOUIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLGtCQUEyQztDQUN4RCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjMgR29vZ2xlIExMQy5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0tlcm5lbENvbmZpZywgS2VybmVsRnVuYywgUmVzaXplQmlsaW5lYXJHcmFkLCBSZXNpemVCaWxpbmVhckdyYWRBdHRycywgUmVzaXplQmlsaW5lYXJHcmFkSW5wdXRzLCBUZW5zb3JJbmZvfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcbmltcG9ydCB7UmVzaXplQmlsaW5lYXJCYWNrcHJvcFByb2dyYW19IGZyb20gJy4uL3Jlc2l6ZV9iaWxpbmVhcl9iYWNrcHJvcF93ZWJncHUnO1xuXG5leHBvcnQgZnVuY3Rpb24gcmVzaXplQmlsaW5lYXJHcmFkKGFyZ3M6IHtcbiAgaW5wdXRzOiBSZXNpemVCaWxpbmVhckdyYWRJbnB1dHMsXG4gIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmQsXG4gIGF0dHJzOiBSZXNpemVCaWxpbmVhckdyYWRBdHRyc1xufSk6IFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7aW1hZ2VzLCBkeX0gPSBpbnB1dHM7XG4gIGNvbnN0IHthbGlnbkNvcm5lcnN9ID0gYXR0cnM7XG5cbiAgY29uc3QgWywgeEhlaWdodCwgeFdpZHRoLCBdID1cbiAgICAgIGltYWdlcy5zaGFwZSBhcyBbbnVtYmVyLCBudW1iZXIsIG51bWJlciwgbnVtYmVyXTtcbiAgY29uc3QgWywgeUhlaWdodCwgeVdpZHRoXSA9IGR5LnNoYXBlIGFzIFtudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdO1xuXG4gIGNvbnN0IGVmZmVjdGl2ZVhTaXplOiBbbnVtYmVyLCBudW1iZXJdID0gW1xuICAgIChhbGlnbkNvcm5lcnMgJiYgeUhlaWdodCA+IDEpID8geEhlaWdodCAtIDEgOiB4SGVpZ2h0LFxuICAgIChhbGlnbkNvcm5lcnMgJiYgeVdpZHRoID4gMSkgPyB4V2lkdGggLSAxIDogeFdpZHRoXG4gIF07XG5cbiAgY29uc3QgZWZmZWN0aXZlWVNpemU6IFtudW1iZXIsIG51bWJlcl0gPSBbXG4gICAgKGFsaWduQ29ybmVycyAmJiB5SGVpZ2h0ID4gMSkgPyB5SGVpZ2h0IC0gMSA6IHlIZWlnaHQsXG4gICAgKGFsaWduQ29ybmVycyAmJiB5V2lkdGggPiAxKSA/IHlXaWR0aCAtIDEgOiB5V2lkdGhcbiAgXTtcblxuICBjb25zdCBoZWlnaHRTY2FsZSA9IGVmZmVjdGl2ZVhTaXplWzBdIC8gZWZmZWN0aXZlWVNpemVbMF07XG4gIGNvbnN0IHdpZHRoU2NhbGUgPSBlZmZlY3RpdmVYU2l6ZVsxXSAvIGVmZmVjdGl2ZVlTaXplWzFdO1xuXG4gIGNvbnN0IGludkhlaWdodFNjYWxlID0gMSAvIGhlaWdodFNjYWxlO1xuICBjb25zdCBpbnZXaWR0aFNjYWxlID0gMSAvIHdpZHRoU2NhbGU7XG5cbiAgLy8gVGhpcyBkZWZpbmVzIHRoZSBzaXplIG9mIHRoZSB3aW5kb3cgb2YgdmFsdWVzIGFyb3VuZCBhIHBhcnRpY3VsYXJcbiAgLy8gaW5kZXggaW4gZHkgdGhhdCB3ZSB3YW50IHRvIHNlYXJjaCBmb3IgY29udHJpYnV0aW9ucyB0byBkeC5cbiAgY29uc3Qgd2luSGVpZ2h0ID0gKE1hdGguY2VpbChpbnZIZWlnaHRTY2FsZSkgKiAyKSArIDI7XG4gIGNvbnN0IHdpbldpZHRoID0gKE1hdGguY2VpbChpbnZXaWR0aFNjYWxlKSAqIDIpICsgMjtcblxuICBjb25zdCBwcm9ncmFtID0gbmV3IFJlc2l6ZUJpbGluZWFyQmFja3Byb3BQcm9ncmFtKFxuICAgICAgaW1hZ2VzLnNoYXBlIGFzIFtudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdLCBhbGlnbkNvcm5lcnMpO1xuICBjb25zdCB1bmlmb3JtRGF0YSA9IFtcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogZWZmZWN0aXZlWFNpemV9LFxuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBlZmZlY3RpdmVZU2l6ZX0sXG4gICAge3R5cGU6ICdmbG9hdDMyJywgZGF0YTogW2hlaWdodFNjYWxlXX0sXG4gICAge3R5cGU6ICdmbG9hdDMyJywgZGF0YTogW3dpZHRoU2NhbGVdfSxcbiAgICB7dHlwZTogJ2Zsb2F0MzInLCBkYXRhOiBbaW52SGVpZ2h0U2NhbGVdfSxcbiAgICB7dHlwZTogJ2Zsb2F0MzInLCBkYXRhOiBbaW52V2lkdGhTY2FsZV19LFxuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbd2luSGVpZ2h0XX0sIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbd2luV2lkdGhdfVxuICBdO1xuICByZXR1cm4gYmFja2VuZC5ydW5XZWJHUFVQcm9ncmFtKHByb2dyYW0sIFtkeV0sIGR5LmR0eXBlLCB1bmlmb3JtRGF0YSk7XG59XG5cbmV4cG9ydCBjb25zdCByZXNpemVCaWxpbmVhckdyYWRDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogUmVzaXplQmlsaW5lYXJHcmFkLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IHJlc2l6ZUJpbGluZWFyR3JhZCBhcyB1bmtub3duIGFzIEtlcm5lbEZ1bmNcbn07XG4iXX0=","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class ResizeNearestNeighborProgram {\n    constructor(inputShape, newHeight, newWidth, halfPixelCenters) {\n        this.variableNames = ['x'];\n        this.uniforms = 'adjustHeightWidth : vec2<f32>, roundBase : f32,';\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = [inputShape[0], newHeight, newWidth, inputShape[3]];\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.halfPixelCenters = halfPixelCenters;\n        this.shaderKey = `resizeNearest_${halfPixelCenters}`;\n    }\n    getUserCode() {\n        let sourceFracIndexRC;\n        if (this.halfPixelCenters) {\n            sourceFracIndexRC =\n                `max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC` +\n                    `, vec2<f32>(0.0))`;\n        }\n        else {\n            sourceFracIndexRC = `vec2<f32>(rc) * effectiveInputOverOutputRatioRC`;\n        }\n        const userCode = `\n      ${main('index')} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC = ${sourceFracIndexRC};\n\n          // Compute the coordinators of nearest neighbor point.\n          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));\n          let sourceNearestRC = vec2<i32>(\n            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));\n          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzaXplX25lYXJlc3RfbmVpZ2hib3Jfd2ViZ3B1LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMvcmVzaXplX25lYXJlc3RfbmVpZ2hib3Jfd2ViZ3B1LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxtQkFBbUIsSUFBSSxJQUFJLEVBQWdCLE1BQU0sa0JBQWtCLENBQUM7QUFDNUUsT0FBTyxFQUFDLGVBQWUsRUFBRSxrQkFBa0IsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUVsRSxNQUFNLE9BQU8sNEJBQTRCO0lBV3ZDLFlBQ0ksVUFBNEMsRUFBRSxTQUFpQixFQUMvRCxRQUFnQixFQUFFLGdCQUF5QjtRQVIvQyxrQkFBYSxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdEIsYUFBUSxHQUFHLGlEQUFpRCxDQUFDO1FBQzdELGtCQUFhLEdBQTZCLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUVyRCxTQUFJLEdBQUcsSUFBSSxDQUFDO1FBS1YsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRXZFLElBQUksQ0FBQyxjQUFjLEdBQUcsa0JBQWtCLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBRTNELElBQUksQ0FBQyxRQUFRLEdBQUcsZUFBZSxDQUMzQixJQUFJLENBQUMsY0FBYyxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBRS9ELElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxnQkFBZ0IsQ0FBQztRQUN6QyxJQUFJLENBQUMsU0FBUyxHQUFHLGlCQUFpQixnQkFBZ0IsRUFBRSxDQUFDO0lBQ3ZELENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxpQkFBeUIsQ0FBQztRQUM5QixJQUFJLElBQUksQ0FBQyxnQkFBZ0IsRUFBRTtZQUN6QixpQkFBaUI7Z0JBQ2Isd0VBQXdFO29CQUN4RSxtQkFBbUIsQ0FBQztTQUN6QjthQUFNO1lBQ0wsaUJBQWlCLEdBQUcsaURBQWlELENBQUM7U0FDdkU7UUFFRCxNQUFNLFFBQVEsR0FBRztRQUNiLElBQUksQ0FBQyxPQUFPLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0NBbUJlLGlCQUFpQjs7Ozs7Ozs7Ozs7S0FXaEQsQ0FBQztRQUNGLE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtnZXRNYWluSGVhZGVyU3RyaW5nIGFzIG1haW4sIFdlYkdQVVByb2dyYW19IGZyb20gJy4vd2ViZ3B1X3Byb2dyYW0nO1xuaW1wb3J0IHtjb21wdXRlRGlzcGF0Y2gsIGZsYXREaXNwYXRjaExheW91dH0gZnJvbSAnLi93ZWJncHVfdXRpbCc7XG5cbmV4cG9ydCBjbGFzcyBSZXNpemVOZWFyZXN0TmVpZ2hib3JQcm9ncmFtIGltcGxlbWVudHMgV2ViR1BVUHJvZ3JhbSB7XG4gIG91dHB1dFNoYXBlOiBudW1iZXJbXTtcbiAgc2hhZGVyS2V5OiBzdHJpbmc7XG4gIGRpc3BhdGNoTGF5b3V0OiB7eDogbnVtYmVyW119O1xuICBkaXNwYXRjaDogW251bWJlciwgbnVtYmVyLCBudW1iZXJdO1xuICB2YXJpYWJsZU5hbWVzID0gWyd4J107XG4gIHVuaWZvcm1zID0gJ2FkanVzdEhlaWdodFdpZHRoIDogdmVjMjxmMzI+LCByb3VuZEJhc2UgOiBmMzIsJztcbiAgd29ya2dyb3VwU2l6ZTogW251bWJlciwgbnVtYmVyLCBudW1iZXJdID0gWzY0LCAxLCAxXTtcbiAgaGFsZlBpeGVsQ2VudGVyczogYm9vbGVhbjtcbiAgc2l6ZSA9IHRydWU7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgICBpbnB1dFNoYXBlOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlciwgbnVtYmVyXSwgbmV3SGVpZ2h0OiBudW1iZXIsXG4gICAgICBuZXdXaWR0aDogbnVtYmVyLCBoYWxmUGl4ZWxDZW50ZXJzOiBib29sZWFuKSB7XG4gICAgdGhpcy5vdXRwdXRTaGFwZSA9IFtpbnB1dFNoYXBlWzBdLCBuZXdIZWlnaHQsIG5ld1dpZHRoLCBpbnB1dFNoYXBlWzNdXTtcblxuICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQgPSBmbGF0RGlzcGF0Y2hMYXlvdXQodGhpcy5vdXRwdXRTaGFwZSk7XG5cbiAgICB0aGlzLmRpc3BhdGNoID0gY29tcHV0ZURpc3BhdGNoKFxuICAgICAgICB0aGlzLmRpc3BhdGNoTGF5b3V0LCB0aGlzLm91dHB1dFNoYXBlLCB0aGlzLndvcmtncm91cFNpemUpO1xuXG4gICAgdGhpcy5oYWxmUGl4ZWxDZW50ZXJzID0gaGFsZlBpeGVsQ2VudGVycztcbiAgICB0aGlzLnNoYWRlcktleSA9IGByZXNpemVOZWFyZXN0XyR7aGFsZlBpeGVsQ2VudGVyc31gO1xuICB9XG5cbiAgZ2V0VXNlckNvZGUoKTogc3RyaW5nIHtcbiAgICBsZXQgc291cmNlRnJhY0luZGV4UkM6IHN0cmluZztcbiAgICBpZiAodGhpcy5oYWxmUGl4ZWxDZW50ZXJzKSB7XG4gICAgICBzb3VyY2VGcmFjSW5kZXhSQyA9XG4gICAgICAgICAgYG1heCgodmVjMjxmMzI+KHJjKSArIHZlYzI8ZjMyPigwLjUpKSAqIGVmZmVjdGl2ZUlucHV0T3Zlck91dHB1dFJhdGlvUkNgICtcbiAgICAgICAgICBgLCB2ZWMyPGYzMj4oMC4wKSlgO1xuICAgIH0gZWxzZSB7XG4gICAgICBzb3VyY2VGcmFjSW5kZXhSQyA9IGB2ZWMyPGYzMj4ocmMpICogZWZmZWN0aXZlSW5wdXRPdmVyT3V0cHV0UmF0aW9SQ2A7XG4gICAgfVxuXG4gICAgY29uc3QgdXNlckNvZGUgPSBgXG4gICAgICAke21haW4oJ2luZGV4Jyl9IHtcbiAgICAgICAgaWYgKGluZGV4IDwgdW5pZm9ybXMuc2l6ZSkge1xuICAgICAgICAgIGxldCBjb29yZHMgPSBnZXRDb29yZHNGcm9tSW5kZXgoaW5kZXgpO1xuICAgICAgICAgIGxldCBiID0gY29vcmRzWzBdO1xuICAgICAgICAgIGxldCBkID0gY29vcmRzWzNdO1xuICAgICAgICAgIGxldCByYyA9IGNvb3Jkcy55ejtcblxuICAgICAgICAgIGxldCBlZmZlY3RpdmVJblNpemUgPSB2ZWMyPGYzMj4oXG4gICAgICAgICAgICBmMzIodW5pZm9ybXMueFNoYXBlLnkpIC0gdW5pZm9ybXMuYWRqdXN0SGVpZ2h0V2lkdGhbMF0sXG4gICAgICAgICAgICBmMzIodW5pZm9ybXMueFNoYXBlLnopIC0gdW5pZm9ybXMuYWRqdXN0SGVpZ2h0V2lkdGhbMV0pO1xuXG4gICAgICAgICAgbGV0IGVmZmVjdGl2ZU91dFNpemUgPSB2ZWMyPGYzMj4oXG4gICAgICAgICAgICBmMzIodW5pZm9ybXMub3V0U2hhcGUueSkgLSB1bmlmb3Jtcy5hZGp1c3RIZWlnaHRXaWR0aFswXSxcbiAgICAgICAgICAgIGYzMih1bmlmb3Jtcy5vdXRTaGFwZS56KSAtIHVuaWZvcm1zLmFkanVzdEhlaWdodFdpZHRoWzFdKTtcblxuICAgICAgICAgIGxldCBlZmZlY3RpdmVJbnB1dE92ZXJPdXRwdXRSYXRpb1JDID1cbiAgICAgICAgICAgICAgZWZmZWN0aXZlSW5TaXplIC8gZWZmZWN0aXZlT3V0U2l6ZTtcblxuICAgICAgICAgIC8vIEZyYWN0aW9uYWwgc291cmNlIGluZGV4XG4gICAgICAgICAgbGV0IHNvdXJjZUZyYWNJbmRleFJDID0gJHtzb3VyY2VGcmFjSW5kZXhSQ307XG5cbiAgICAgICAgICAvLyBDb21wdXRlIHRoZSBjb29yZGluYXRvcnMgb2YgbmVhcmVzdCBuZWlnaGJvciBwb2ludC5cbiAgICAgICAgICBsZXQgaW5wdXRTaGFwZVJDID0gdmVjMjxmMzI+KGYzMih1bmlmb3Jtcy54U2hhcGUueSksIGYzMih1bmlmb3Jtcy54U2hhcGUueikpO1xuICAgICAgICAgIGxldCBzb3VyY2VOZWFyZXN0UkMgPSB2ZWMyPGkzMj4oXG4gICAgICAgICAgICBtaW4oaW5wdXRTaGFwZVJDIC0gMS4wLCBmbG9vcihzb3VyY2VGcmFjSW5kZXhSQyArIHVuaWZvcm1zLnJvdW5kQmFzZSkpKTtcbiAgICAgICAgICBsZXQgbmV3VmFsdWUgPSBnZXRYKGIsIHNvdXJjZU5lYXJlc3RSQy54LCBzb3VyY2VOZWFyZXN0UkMueSwgZCk7XG5cbiAgICAgICAgICBzZXRPdXRwdXRBdEluZGV4KGluZGV4LCBuZXdWYWx1ZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICBgO1xuICAgIHJldHVybiB1c2VyQ29kZTtcbiAgfVxufVxuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ResizeNearestNeighbor } from '@tensorflow/tfjs-core';\nimport { ResizeNearestNeighborProgram } from '../resize_nearest_neighbor_webgpu';\nexport function resizeNearestNeighbor(args) {\n    const { inputs, backend, attrs } = args;\n    const { images } = inputs;\n    const { alignCorners, halfPixelCenters, size } = attrs;\n    const [newHeight, newWidth] = size;\n    const adjustHeight = alignCorners && newHeight > 1 ? 1.0 : 0.0;\n    const adjustWidth = alignCorners && newWidth > 1 ? 1.0 : 0.0;\n    // When align corners is false, we rounds the value with floor.\n    const roundBase = alignCorners ? 0.5 : 0.0;\n    const uniformData = [\n        { type: 'float32', data: [adjustHeight, adjustWidth] },\n        { type: 'float32', data: [roundBase] }\n    ];\n    const program = new ResizeNearestNeighborProgram(images.shape, newHeight, newWidth, halfPixelCenters);\n    return backend.runWebGPUProgram(program, [images], images.dtype, uniformData);\n}\nexport const resizeNearestNeighborConfig = {\n    kernelName: ResizeNearestNeighbor,\n    backendName: 'webgpu',\n    kernelFunc: resizeNearestNeighbor\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVzaXplTmVhcmVzdE5laWdoYm9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9SZXNpemVOZWFyZXN0TmVpZ2hib3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUEyQixxQkFBcUIsRUFBc0UsTUFBTSx1QkFBdUIsQ0FBQztBQUczSixPQUFPLEVBQUMsNEJBQTRCLEVBQUMsTUFBTSxtQ0FBbUMsQ0FBQztBQUUvRSxNQUFNLFVBQVUscUJBQXFCLENBQUMsSUFJckM7SUFDQyxNQUFNLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFDdEMsTUFBTSxFQUFDLE1BQU0sRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUN4QixNQUFNLEVBQUMsWUFBWSxFQUFFLGdCQUFnQixFQUFFLElBQUksRUFBQyxHQUFHLEtBQUssQ0FBQztJQUVyRCxNQUFNLENBQUMsU0FBUyxFQUFFLFFBQVEsQ0FBQyxHQUFHLElBQUksQ0FBQztJQUNuQyxNQUFNLFlBQVksR0FBRyxZQUFZLElBQUksU0FBUyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUM7SUFDL0QsTUFBTSxXQUFXLEdBQUcsWUFBWSxJQUFJLFFBQVEsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDO0lBQzdELCtEQUErRDtJQUMvRCxNQUFNLFNBQVMsR0FBRyxZQUFZLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDO0lBQzNDLE1BQU0sV0FBVyxHQUFHO1FBQ2xCLEVBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxZQUFZLEVBQUUsV0FBVyxDQUFDLEVBQUM7UUFDcEQsRUFBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDLFNBQVMsQ0FBQyxFQUFDO0tBQ3JDLENBQUM7SUFFRixNQUFNLE9BQU8sR0FBRyxJQUFJLDRCQUE0QixDQUM1QyxNQUFNLENBQUMsS0FBeUMsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUNyRSxnQkFBZ0IsQ0FBQyxDQUFDO0lBQ3RCLE9BQU8sT0FBTyxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxDQUFDLE1BQU0sQ0FBQyxFQUFFLE1BQU0sQ0FBQyxLQUFLLEVBQUUsV0FBVyxDQUFDLENBQUM7QUFDaEYsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLDJCQUEyQixHQUFpQjtJQUN2RCxVQUFVLEVBQUUscUJBQXFCO0lBQ2pDLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxxQkFBOEM7Q0FDM0QsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtLZXJuZWxDb25maWcsIEtlcm5lbEZ1bmMsIFJlc2l6ZU5lYXJlc3ROZWlnaGJvciwgUmVzaXplTmVhcmVzdE5laWdoYm9yQXR0cnMsIFJlc2l6ZU5lYXJlc3ROZWlnaGJvcklucHV0cywgVGVuc29ySW5mb30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge1Jlc2l6ZU5lYXJlc3ROZWlnaGJvclByb2dyYW19IGZyb20gJy4uL3Jlc2l6ZV9uZWFyZXN0X25laWdoYm9yX3dlYmdwdSc7XG5cbmV4cG9ydCBmdW5jdGlvbiByZXNpemVOZWFyZXN0TmVpZ2hib3IoYXJnczoge1xuICBpbnB1dHM6IFJlc2l6ZU5lYXJlc3ROZWlnaGJvcklucHV0cyxcbiAgYmFja2VuZDogV2ViR1BVQmFja2VuZCxcbiAgYXR0cnM6IFJlc2l6ZU5lYXJlc3ROZWlnaGJvckF0dHJzXG59KTogVGVuc29ySW5mbyB7XG4gIGNvbnN0IHtpbnB1dHMsIGJhY2tlbmQsIGF0dHJzfSA9IGFyZ3M7XG4gIGNvbnN0IHtpbWFnZXN9ID0gaW5wdXRzO1xuICBjb25zdCB7YWxpZ25Db3JuZXJzLCBoYWxmUGl4ZWxDZW50ZXJzLCBzaXplfSA9IGF0dHJzO1xuXG4gIGNvbnN0IFtuZXdIZWlnaHQsIG5ld1dpZHRoXSA9IHNpemU7XG4gIGNvbnN0IGFkanVzdEhlaWdodCA9IGFsaWduQ29ybmVycyAmJiBuZXdIZWlnaHQgPiAxID8gMS4wIDogMC4wO1xuICBjb25zdCBhZGp1c3RXaWR0aCA9IGFsaWduQ29ybmVycyAmJiBuZXdXaWR0aCA+IDEgPyAxLjAgOiAwLjA7XG4gIC8vIFdoZW4gYWxpZ24gY29ybmVycyBpcyBmYWxzZSwgd2Ugcm91bmRzIHRoZSB2YWx1ZSB3aXRoIGZsb29yLlxuICBjb25zdCByb3VuZEJhc2UgPSBhbGlnbkNvcm5lcnMgPyAwLjUgOiAwLjA7XG4gIGNvbnN0IHVuaWZvcm1EYXRhID0gW1xuICAgIHt0eXBlOiAnZmxvYXQzMicsIGRhdGE6IFthZGp1c3RIZWlnaHQsIGFkanVzdFdpZHRoXX0sXG4gICAge3R5cGU6ICdmbG9hdDMyJywgZGF0YTogW3JvdW5kQmFzZV19XG4gIF07XG5cbiAgY29uc3QgcHJvZ3JhbSA9IG5ldyBSZXNpemVOZWFyZXN0TmVpZ2hib3JQcm9ncmFtKFxuICAgICAgaW1hZ2VzLnNoYXBlIGFzIFtudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdLCBuZXdIZWlnaHQsIG5ld1dpZHRoLFxuICAgICAgaGFsZlBpeGVsQ2VudGVycyk7XG4gIHJldHVybiBiYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0ocHJvZ3JhbSwgW2ltYWdlc10sIGltYWdlcy5kdHlwZSwgdW5pZm9ybURhdGEpO1xufVxuXG5leHBvcnQgY29uc3QgcmVzaXplTmVhcmVzdE5laWdoYm9yQ29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IFJlc2l6ZU5lYXJlc3ROZWlnaGJvcixcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiByZXNpemVOZWFyZXN0TmVpZ2hib3IgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class ResizeNearestNeigborBackpropProgram {\n    constructor(inputShape, alignCorners) {\n        this.variableNames = ['dy'];\n        this.uniforms = `effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,\n       winHeight : i32, winWidth : i32,`;\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = inputShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.alignCorners = alignCorners;\n        this.shaderKey = `resizeNearestNeigborBackprop_${alignCorners}`;\n    }\n    getUserCode() {\n        const userCode = `\n      ${main('index')} {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let b = coords[0];\n          let d = coords[3];\n          let r = coords[1];\n          let c = coords[2];\n\n          var accumulator = 0.0;\n\n          // Compute bounds for where in dy we will look\n          let startRLerp = floor(f32(r) * uniforms.invHeightScale);\n          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));\n\n          let startCLerp = floor(f32(c) * uniforms.invWidthScale);\n          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));\n\n          // Loop over dy\n          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {\n            let dyR = startDyR + dyROffset;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {\n              continue;\n            }\n\n            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {\n              let dyC = startDyC + dyCOffset;\n\n              // Guard against the window exceeding the bounds of dy\n              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {\n                continue;\n              }\n\n              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *\n                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));\n\n              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *\n                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));\n\n              let sourceNearestRow =\n                  i32(min(f32(uniforms.outShape[1] - 1),\n                  ${this.alignCorners ? 'floor(sourceFracRow + 0.5)' :\n            'floor(sourceFracRow)'}));\n\n              let sourceNearestCol =\n                  i32(min(f32(uniforms.outShape[2] - 1),\n                  ${this.alignCorners ? 'floor(sourceFracCol + 0.5)' :\n            'floor(sourceFracCol)'}));\n\n              if (r == sourceNearestRow && c == sourceNearestCol) {\n                accumulator += getDy(b, dyR, dyC, d);\n              }\n            }\n          }\n          // End loop over dy\n\n          setOutputAtIndex(index, accumulator);\n        }\n      }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzaXplX25lYXJlc3RfbmVpZ2hib3JfYmFja3Byb3Bfd2ViZ3B1LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMvcmVzaXplX25lYXJlc3RfbmVpZ2hib3JfYmFja3Byb3Bfd2ViZ3B1LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxtQkFBbUIsSUFBSSxJQUFJLEVBQWdCLE1BQU0sa0JBQWtCLENBQUM7QUFDNUUsT0FBTyxFQUFDLGVBQWUsRUFBRSxrQkFBa0IsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUVsRSxNQUFNLE9BQU8sbUNBQW1DO0lBYTlDLFlBQ0ksVUFBNEMsRUFBRSxZQUFxQjtRQVR2RSxrQkFBYSxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdkIsYUFBUSxHQUNKO3dDQUNrQyxDQUFDO1FBQ3ZDLGtCQUFhLEdBQTZCLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUVyRCxTQUFJLEdBQUcsSUFBSSxDQUFDO1FBSVYsSUFBSSxDQUFDLFdBQVcsR0FBRyxVQUFVLENBQUM7UUFFOUIsSUFBSSxDQUFDLGNBQWMsR0FBRyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxlQUFlLENBQzNCLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFFL0QsSUFBSSxDQUFDLFlBQVksR0FBRyxZQUFZLENBQUM7UUFDakMsSUFBSSxDQUFDLFNBQVMsR0FBRyxnQ0FBZ0MsWUFBWSxFQUFFLENBQUM7SUFDbEUsQ0FBQztJQUVELFdBQVc7UUFDVCxNQUFNLFFBQVEsR0FBRztRQUNiLElBQUksQ0FBQyxPQUFPLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkEyQ2IsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsNEJBQTRCLENBQUMsQ0FBQztZQUM5QixzQkFBc0I7Ozs7b0JBSzFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLDRCQUE0QixDQUFDLENBQUM7WUFDOUIsc0JBQXNCOzs7Ozs7Ozs7Ozs7S0FZN0MsQ0FBQztRQUNGLE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIzIEdvb2dsZSBMTEMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtnZXRNYWluSGVhZGVyU3RyaW5nIGFzIG1haW4sIFdlYkdQVVByb2dyYW19IGZyb20gJy4vd2ViZ3B1X3Byb2dyYW0nO1xuaW1wb3J0IHtjb21wdXRlRGlzcGF0Y2gsIGZsYXREaXNwYXRjaExheW91dH0gZnJvbSAnLi93ZWJncHVfdXRpbCc7XG5cbmV4cG9ydCBjbGFzcyBSZXNpemVOZWFyZXN0TmVpZ2JvckJhY2twcm9wUHJvZ3JhbSBpbXBsZW1lbnRzIFdlYkdQVVByb2dyYW0ge1xuICBvdXRwdXRTaGFwZTogbnVtYmVyW107XG4gIHNoYWRlcktleTogc3RyaW5nO1xuICBkaXNwYXRjaExheW91dDoge3g6IG51bWJlcltdfTtcbiAgZGlzcGF0Y2g6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXTtcbiAgdmFyaWFibGVOYW1lcyA9IFsnZHknXTtcbiAgdW5pZm9ybXMgPVxuICAgICAgYGVmZmVjdGl2ZVhTaXplIDogdmVjMjxpMzI+LCBlZmZlY3RpdmVZU2l6ZSA6IHZlYzI8aTMyPiwgaW52SGVpZ2h0U2NhbGUgOiBmMzIsIGludldpZHRoU2NhbGUgOiBmMzIsXG4gICAgICAgd2luSGVpZ2h0IDogaTMyLCB3aW5XaWR0aCA6IGkzMixgO1xuICB3b3JrZ3JvdXBTaXplOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl0gPSBbNjQsIDEsIDFdO1xuICBhbGlnbkNvcm5lcnM6IGJvb2xlYW47XG4gIHNpemUgPSB0cnVlO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgICAgaW5wdXRTaGFwZTogW251bWJlciwgbnVtYmVyLCBudW1iZXIsIG51bWJlcl0sIGFsaWduQ29ybmVyczogYm9vbGVhbikge1xuICAgIHRoaXMub3V0cHV0U2hhcGUgPSBpbnB1dFNoYXBlO1xuXG4gICAgdGhpcy5kaXNwYXRjaExheW91dCA9IGZsYXREaXNwYXRjaExheW91dCh0aGlzLm91dHB1dFNoYXBlKTtcbiAgICB0aGlzLmRpc3BhdGNoID0gY29tcHV0ZURpc3BhdGNoKFxuICAgICAgICB0aGlzLmRpc3BhdGNoTGF5b3V0LCB0aGlzLm91dHB1dFNoYXBlLCB0aGlzLndvcmtncm91cFNpemUpO1xuXG4gICAgdGhpcy5hbGlnbkNvcm5lcnMgPSBhbGlnbkNvcm5lcnM7XG4gICAgdGhpcy5zaGFkZXJLZXkgPSBgcmVzaXplTmVhcmVzdE5laWdib3JCYWNrcHJvcF8ke2FsaWduQ29ybmVyc31gO1xuICB9XG5cbiAgZ2V0VXNlckNvZGUoKTogc3RyaW5nIHtcbiAgICBjb25zdCB1c2VyQ29kZSA9IGBcbiAgICAgICR7bWFpbignaW5kZXgnKX0ge1xuICAgICAgICBpZiAoaW5kZXggPCB1bmlmb3Jtcy5zaXplKSB7XG4gICAgICAgICAgbGV0IGNvb3JkcyA9IGdldE91dHB1dENvb3JkcygpO1xuICAgICAgICAgIGxldCBiID0gY29vcmRzWzBdO1xuICAgICAgICAgIGxldCBkID0gY29vcmRzWzNdO1xuICAgICAgICAgIGxldCByID0gY29vcmRzWzFdO1xuICAgICAgICAgIGxldCBjID0gY29vcmRzWzJdO1xuXG4gICAgICAgICAgdmFyIGFjY3VtdWxhdG9yID0gMC4wO1xuXG4gICAgICAgICAgLy8gQ29tcHV0ZSBib3VuZHMgZm9yIHdoZXJlIGluIGR5IHdlIHdpbGwgbG9va1xuICAgICAgICAgIGxldCBzdGFydFJMZXJwID0gZmxvb3IoZjMyKHIpICogdW5pZm9ybXMuaW52SGVpZ2h0U2NhbGUpO1xuICAgICAgICAgIGxldCBzdGFydER5UiA9IGkzMihmbG9vcihzdGFydFJMZXJwIC0gZjMyKHVuaWZvcm1zLndpbkhlaWdodCAvIDIpKSk7XG5cbiAgICAgICAgICBsZXQgc3RhcnRDTGVycCA9IGZsb29yKGYzMihjKSAqIHVuaWZvcm1zLmludldpZHRoU2NhbGUpO1xuICAgICAgICAgIGxldCBzdGFydER5QyA9IGkzMihmbG9vcihzdGFydENMZXJwIC0gZjMyKHVuaWZvcm1zLndpbldpZHRoIC8gMikpKTtcblxuICAgICAgICAgIC8vIExvb3Agb3ZlciBkeVxuICAgICAgICAgIGZvciAodmFyIGR5Uk9mZnNldCA9IDA7IGR5Uk9mZnNldCA8IHVuaWZvcm1zLndpbkhlaWdodDsgZHlST2Zmc2V0KyspIHtcbiAgICAgICAgICAgIGxldCBkeVIgPSBzdGFydER5UiArIGR5Uk9mZnNldDtcblxuICAgICAgICAgICAgLy8gR3VhcmQgYWdhaW5zdCB0aGUgd2luZG93IGV4Y2VlZGluZyB0aGUgYm91bmRzIG9mIGR5XG4gICAgICAgICAgICBpZiAoZHlSIDwgMCB8fCBkeVIgPj0gdW5pZm9ybXMuZHlTaGFwZVsxXSkge1xuICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZm9yICh2YXIgZHlDT2Zmc2V0ID0gMDsgZHlDT2Zmc2V0IDwgdW5pZm9ybXMud2luV2lkdGg7IGR5Q09mZnNldCsrKSB7XG4gICAgICAgICAgICAgIGxldCBkeUMgPSBzdGFydER5QyArIGR5Q09mZnNldDtcblxuICAgICAgICAgICAgICAvLyBHdWFyZCBhZ2FpbnN0IHRoZSB3aW5kb3cgZXhjZWVkaW5nIHRoZSBib3VuZHMgb2YgZHlcbiAgICAgICAgICAgICAgaWYgKGR5QyA8IDAgfHwgZHlDID49IHVuaWZvcm1zLmR5U2hhcGVbMl0pIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGxldCBzb3VyY2VGcmFjUm93ID0gZjMyKHVuaWZvcm1zLmVmZmVjdGl2ZVhTaXplWzBdKSAqXG4gICAgICAgICAgICAgICAgICAoZjMyKGR5UikgLyBmMzIodW5pZm9ybXMuZWZmZWN0aXZlWVNpemVbMF0pKTtcblxuICAgICAgICAgICAgICBsZXQgc291cmNlRnJhY0NvbCA9IGYzMih1bmlmb3Jtcy5lZmZlY3RpdmVYU2l6ZVsxXSkgKlxuICAgICAgICAgICAgICAgICAgKGYzMihkeUMpIC8gZjMyKHVuaWZvcm1zLmVmZmVjdGl2ZVlTaXplWzFdKSk7XG5cbiAgICAgICAgICAgICAgbGV0IHNvdXJjZU5lYXJlc3RSb3cgPVxuICAgICAgICAgICAgICAgICAgaTMyKG1pbihmMzIodW5pZm9ybXMub3V0U2hhcGVbMV0gLSAxKSxcbiAgICAgICAgICAgICAgICAgICR7XG4gICAgICAgIHRoaXMuYWxpZ25Db3JuZXJzID8gJ2Zsb29yKHNvdXJjZUZyYWNSb3cgKyAwLjUpJyA6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2Zsb29yKHNvdXJjZUZyYWNSb3cpJ30pKTtcblxuICAgICAgICAgICAgICBsZXQgc291cmNlTmVhcmVzdENvbCA9XG4gICAgICAgICAgICAgICAgICBpMzIobWluKGYzMih1bmlmb3Jtcy5vdXRTaGFwZVsyXSAtIDEpLFxuICAgICAgICAgICAgICAgICAgJHtcbiAgICAgICAgdGhpcy5hbGlnbkNvcm5lcnMgPyAnZmxvb3Ioc291cmNlRnJhY0NvbCArIDAuNSknIDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZmxvb3Ioc291cmNlRnJhY0NvbCknfSkpO1xuXG4gICAgICAgICAgICAgIGlmIChyID09IHNvdXJjZU5lYXJlc3RSb3cgJiYgYyA9PSBzb3VyY2VOZWFyZXN0Q29sKSB7XG4gICAgICAgICAgICAgICAgYWNjdW11bGF0b3IgKz0gZ2V0RHkoYiwgZHlSLCBkeUMsIGQpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIC8vIEVuZCBsb29wIG92ZXIgZHlcblxuICAgICAgICAgIHNldE91dHB1dEF0SW5kZXgoaW5kZXgsIGFjY3VtdWxhdG9yKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIGA7XG4gICAgcmV0dXJuIHVzZXJDb2RlO1xuICB9XG59XG4iXX0=","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ResizeNearestNeighborGrad } from '@tensorflow/tfjs-core';\nimport { ResizeNearestNeigborBackpropProgram } from '../resize_nearest_neighbor_backprop_webgpu';\nexport function resizeNearestNeighborGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { images, dy } = inputs;\n    const { alignCorners } = attrs;\n    const [, xHeight, xWidth] = images.shape;\n    const [, yHeight, yWidth] = dy.shape;\n    const effectiveXSize = [\n        (alignCorners && yHeight > 1) ? xHeight - 1 : xHeight,\n        (alignCorners && yWidth > 1) ? xWidth - 1 : xWidth\n    ];\n    const effectiveYSize = [\n        (alignCorners && yHeight > 1) ? yHeight - 1 : yHeight,\n        (alignCorners && yWidth > 1) ? yWidth - 1 : yWidth\n    ];\n    const heightScale = effectiveXSize[0] / effectiveYSize[0];\n    const widthScale = effectiveXSize[1] / effectiveYSize[1];\n    const invHeightScale = 1 / heightScale;\n    const invWidthScale = 1 / widthScale;\n    // This defines the size of the window of values around a particular\n    // index in dy that we want to search for contributions to dx.\n    const winHeight = (Math.ceil(invHeightScale) * 2) + 2;\n    const winWidth = (Math.ceil(invWidthScale) * 2) + 2;\n    const program = new ResizeNearestNeigborBackpropProgram(images.shape, alignCorners);\n    const uniformData = [\n        { type: 'int32', data: effectiveXSize },\n        { type: 'int32', data: effectiveYSize },\n        { type: 'float32', data: [invHeightScale] },\n        { type: 'float32', data: [invWidthScale] },\n        { type: 'int32', data: [winHeight] }, { type: 'int32', data: [winWidth] }\n    ];\n    return backend.runWebGPUProgram(program, [dy], dy.dtype, uniformData);\n}\nexport const resizeNearestNeighborGradConfig = {\n    kernelName: ResizeNearestNeighborGrad,\n    backendName: 'webgpu',\n    kernelFunc: resizeNearestNeighborGrad\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVzaXplTmVhcmVzdE5laWdoYm9yR3JhZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvUmVzaXplTmVhcmVzdE5laWdoYm9yR3JhZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQTJCLHlCQUF5QixFQUE4RSxNQUFNLHVCQUF1QixDQUFDO0FBR3ZLLE9BQU8sRUFBQyxtQ0FBbUMsRUFBQyxNQUFNLDRDQUE0QyxDQUFDO0FBRS9GLE1BQU0sVUFBVSx5QkFBeUIsQ0FBQyxJQUl6QztJQUNDLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QyxNQUFNLEVBQUMsTUFBTSxFQUFFLEVBQUUsRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUM1QixNQUFNLEVBQUMsWUFBWSxFQUFDLEdBQUcsS0FBSyxDQUFDO0lBRTdCLE1BQU0sQ0FBQyxFQUFFLE9BQU8sRUFBRSxNQUFNLENBQUMsR0FBRyxNQUFNLENBQUMsS0FBeUMsQ0FBQztJQUM3RSxNQUFNLENBQUMsRUFBRSxPQUFPLEVBQUUsTUFBTSxDQUFDLEdBQUcsRUFBRSxDQUFDLEtBQXlDLENBQUM7SUFFekUsTUFBTSxjQUFjLEdBQXFCO1FBQ3ZDLENBQUMsWUFBWSxJQUFJLE9BQU8sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTztRQUNyRCxDQUFDLFlBQVksSUFBSSxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU07S0FDbkQsQ0FBQztJQUVGLE1BQU0sY0FBYyxHQUFxQjtRQUN2QyxDQUFDLFlBQVksSUFBSSxPQUFPLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU87UUFDckQsQ0FBQyxZQUFZLElBQUksTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNO0tBQ25ELENBQUM7SUFFRixNQUFNLFdBQVcsR0FBRyxjQUFjLENBQUMsQ0FBQyxDQUFDLEdBQUcsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFELE1BQU0sVUFBVSxHQUFHLGNBQWMsQ0FBQyxDQUFDLENBQUMsR0FBRyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFekQsTUFBTSxjQUFjLEdBQUcsQ0FBQyxHQUFHLFdBQVcsQ0FBQztJQUN2QyxNQUFNLGFBQWEsR0FBRyxDQUFDLEdBQUcsVUFBVSxDQUFDO0lBRXJDLG9FQUFvRTtJQUNwRSw4REFBOEQ7SUFDOUQsTUFBTSxTQUFTLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN0RCxNQUFNLFFBQVEsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXBELE1BQU0sT0FBTyxHQUFHLElBQUksbUNBQW1DLENBQ25ELE1BQU0sQ0FBQyxLQUF5QyxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ3BFLE1BQU0sV0FBVyxHQUFHO1FBQ2xCLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsY0FBYyxFQUFDO1FBQ3JDLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsY0FBYyxFQUFDO1FBQ3JDLEVBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxjQUFjLENBQUMsRUFBQztRQUN6QyxFQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLENBQUMsYUFBYSxDQUFDLEVBQUM7UUFDeEMsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLFNBQVMsQ0FBQyxFQUFDLEVBQUUsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFDO0tBQ3RFLENBQUM7SUFDRixPQUFPLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsS0FBSyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0FBQ3hFLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSwrQkFBK0IsR0FBaUI7SUFDM0QsVUFBVSxFQUFFLHlCQUF5QjtJQUNyQyxXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUseUJBQWtEO0NBQy9ELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMyBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7S2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBSZXNpemVOZWFyZXN0TmVpZ2hib3JHcmFkLCBSZXNpemVOZWFyZXN0TmVpZ2hib3JHcmFkQXR0cnMsIFJlc2l6ZU5lYXJlc3ROZWlnaGJvckdyYWRJbnB1dHMsIFRlbnNvckluZm99IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuaW1wb3J0IHtSZXNpemVOZWFyZXN0TmVpZ2JvckJhY2twcm9wUHJvZ3JhbX0gZnJvbSAnLi4vcmVzaXplX25lYXJlc3RfbmVpZ2hib3JfYmFja3Byb3Bfd2ViZ3B1JztcblxuZXhwb3J0IGZ1bmN0aW9uIHJlc2l6ZU5lYXJlc3ROZWlnaGJvckdyYWQoYXJnczoge1xuICBpbnB1dHM6IFJlc2l6ZU5lYXJlc3ROZWlnaGJvckdyYWRJbnB1dHMsXG4gIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmQsXG4gIGF0dHJzOiBSZXNpemVOZWFyZXN0TmVpZ2hib3JHcmFkQXR0cnNcbn0pOiBUZW5zb3JJbmZvIHtcbiAgY29uc3Qge2lucHV0cywgYmFja2VuZCwgYXR0cnN9ID0gYXJncztcbiAgY29uc3Qge2ltYWdlcywgZHl9ID0gaW5wdXRzO1xuICBjb25zdCB7YWxpZ25Db3JuZXJzfSA9IGF0dHJzO1xuXG4gIGNvbnN0IFssIHhIZWlnaHQsIHhXaWR0aF0gPSBpbWFnZXMuc2hhcGUgYXMgW251bWJlciwgbnVtYmVyLCBudW1iZXIsIG51bWJlcl07XG4gIGNvbnN0IFssIHlIZWlnaHQsIHlXaWR0aF0gPSBkeS5zaGFwZSBhcyBbbnVtYmVyLCBudW1iZXIsIG51bWJlciwgbnVtYmVyXTtcblxuICBjb25zdCBlZmZlY3RpdmVYU2l6ZTogW251bWJlciwgbnVtYmVyXSA9IFtcbiAgICAoYWxpZ25Db3JuZXJzICYmIHlIZWlnaHQgPiAxKSA/IHhIZWlnaHQgLSAxIDogeEhlaWdodCxcbiAgICAoYWxpZ25Db3JuZXJzICYmIHlXaWR0aCA+IDEpID8geFdpZHRoIC0gMSA6IHhXaWR0aFxuICBdO1xuXG4gIGNvbnN0IGVmZmVjdGl2ZVlTaXplOiBbbnVtYmVyLCBudW1iZXJdID0gW1xuICAgIChhbGlnbkNvcm5lcnMgJiYgeUhlaWdodCA+IDEpID8geUhlaWdodCAtIDEgOiB5SGVpZ2h0LFxuICAgIChhbGlnbkNvcm5lcnMgJiYgeVdpZHRoID4gMSkgPyB5V2lkdGggLSAxIDogeVdpZHRoXG4gIF07XG5cbiAgY29uc3QgaGVpZ2h0U2NhbGUgPSBlZmZlY3RpdmVYU2l6ZVswXSAvIGVmZmVjdGl2ZVlTaXplWzBdO1xuICBjb25zdCB3aWR0aFNjYWxlID0gZWZmZWN0aXZlWFNpemVbMV0gLyBlZmZlY3RpdmVZU2l6ZVsxXTtcblxuICBjb25zdCBpbnZIZWlnaHRTY2FsZSA9IDEgLyBoZWlnaHRTY2FsZTtcbiAgY29uc3QgaW52V2lkdGhTY2FsZSA9IDEgLyB3aWR0aFNjYWxlO1xuXG4gIC8vIFRoaXMgZGVmaW5lcyB0aGUgc2l6ZSBvZiB0aGUgd2luZG93IG9mIHZhbHVlcyBhcm91bmQgYSBwYXJ0aWN1bGFyXG4gIC8vIGluZGV4IGluIGR5IHRoYXQgd2Ugd2FudCB0byBzZWFyY2ggZm9yIGNvbnRyaWJ1dGlvbnMgdG8gZHguXG4gIGNvbnN0IHdpbkhlaWdodCA9IChNYXRoLmNlaWwoaW52SGVpZ2h0U2NhbGUpICogMikgKyAyO1xuICBjb25zdCB3aW5XaWR0aCA9IChNYXRoLmNlaWwoaW52V2lkdGhTY2FsZSkgKiAyKSArIDI7XG5cbiAgY29uc3QgcHJvZ3JhbSA9IG5ldyBSZXNpemVOZWFyZXN0TmVpZ2JvckJhY2twcm9wUHJvZ3JhbShcbiAgICAgIGltYWdlcy5zaGFwZSBhcyBbbnVtYmVyLCBudW1iZXIsIG51bWJlciwgbnVtYmVyXSwgYWxpZ25Db3JuZXJzKTtcbiAgY29uc3QgdW5pZm9ybURhdGEgPSBbXG4gICAge3R5cGU6ICdpbnQzMicsIGRhdGE6IGVmZmVjdGl2ZVhTaXplfSxcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogZWZmZWN0aXZlWVNpemV9LFxuICAgIHt0eXBlOiAnZmxvYXQzMicsIGRhdGE6IFtpbnZIZWlnaHRTY2FsZV19LFxuICAgIHt0eXBlOiAnZmxvYXQzMicsIGRhdGE6IFtpbnZXaWR0aFNjYWxlXX0sXG4gICAge3R5cGU6ICdpbnQzMicsIGRhdGE6IFt3aW5IZWlnaHRdfSwge3R5cGU6ICdpbnQzMicsIGRhdGE6IFt3aW5XaWR0aF19XG4gIF07XG4gIHJldHVybiBiYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0ocHJvZ3JhbSwgW2R5XSwgZHkuZHR5cGUsIHVuaWZvcm1EYXRhKTtcbn1cblxuZXhwb3J0IGNvbnN0IHJlc2l6ZU5lYXJlc3ROZWlnaGJvckdyYWRDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogUmVzaXplTmVhcmVzdE5laWdoYm9yR3JhZCxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiByZXNpemVOZWFyZXN0TmVpZ2hib3JHcmFkIGFzIHVua25vd24gYXMgS2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class ReverseProgram {\n    constructor(xShape) {\n        this.variableNames = ['x'];\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = xShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.uniforms = ` axis : vec4<i32>,`;\n        this.shaderKey = 'reverse';\n    }\n    getUserCode() {\n        const reverseCoordsSnippet = `\n      // Using uniform variables as judging conditions, so the function has\n      // coherent execution within all threads.\n      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {\n        var reverseCoords = coords;\n        if (uniforms.axis[0] == 1) {\n          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;\n        }\n        if (uniforms.axis[1] == 1) {\n          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;\n        }\n        if (uniforms.axis[2] == 1) {\n          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;\n        }\n        if (uniforms.axis[3] == 1) {\n          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;\n        }\n\n        return reverseCoords;\n      }\n    `;\n        const userCode = `\n      ${reverseCoordsSnippet}\n      ${main('index')} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let reverseCoords = getReverseCoords(coords);\n          setOutputAtIndex(index, getX(reverseCoords[0],\n              reverseCoords[1], reverseCoords[2], reverseCoords[3]));\n        }\n      }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmV2ZXJzZV93ZWJncHUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9yZXZlcnNlX3dlYmdwdS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsbUJBQW1CLElBQUksSUFBSSxFQUFnQixNQUFNLGtCQUFrQixDQUFDO0FBQzVFLE9BQU8sRUFBQyxlQUFlLEVBQUUsa0JBQWtCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFbEUsTUFBTSxPQUFPLGNBQWM7SUFVekIsWUFBWSxNQUF3QztRQUxwRCxrQkFBYSxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFdEIsa0JBQWEsR0FBNkIsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3JELFNBQUksR0FBRyxJQUFJLENBQUM7UUFHVixJQUFJLENBQUMsV0FBVyxHQUFHLE1BQU0sQ0FBQztRQUMxQixJQUFJLENBQUMsY0FBYyxHQUFHLGtCQUFrQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUMzRCxJQUFJLENBQUMsUUFBUSxHQUFHLGVBQWUsQ0FDM0IsSUFBSSxDQUFDLGNBQWMsRUFBRSxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUMvRCxJQUFJLENBQUMsUUFBUSxHQUFHLG9CQUFvQixDQUFDO1FBQ3JDLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO0lBQzdCLENBQUM7SUFFRCxXQUFXO1FBQ1QsTUFBTSxvQkFBb0IsR0FBRzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7S0FvQjVCLENBQUM7UUFDRixNQUFNLFFBQVEsR0FBRztRQUNiLG9CQUFvQjtRQUNwQixJQUFJLENBQUMsT0FBTyxDQUFDOzs7Ozs7OztLQVFoQixDQUFDO1FBQ0YsT0FBTyxRQUFRLENBQUM7SUFDbEIsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjIgR29vZ2xlIExMQy5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge2dldE1haW5IZWFkZXJTdHJpbmcgYXMgbWFpbiwgV2ViR1BVUHJvZ3JhbX0gZnJvbSAnLi93ZWJncHVfcHJvZ3JhbSc7XG5pbXBvcnQge2NvbXB1dGVEaXNwYXRjaCwgZmxhdERpc3BhdGNoTGF5b3V0fSBmcm9tICcuL3dlYmdwdV91dGlsJztcblxuZXhwb3J0IGNsYXNzIFJldmVyc2VQcm9ncmFtIGltcGxlbWVudHMgV2ViR1BVUHJvZ3JhbSB7XG4gIG91dHB1dFNoYXBlOiBudW1iZXJbXTtcbiAgc2hhZGVyS2V5OiBzdHJpbmc7XG4gIGRpc3BhdGNoTGF5b3V0OiB7eDogbnVtYmVyW119O1xuICBkaXNwYXRjaDogW251bWJlciwgbnVtYmVyLCBudW1iZXJdO1xuICB2YXJpYWJsZU5hbWVzID0gWyd4J107XG4gIHVuaWZvcm1zOiBzdHJpbmc7XG4gIHdvcmtncm91cFNpemU6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXSA9IFs2NCwgMSwgMV07XG4gIHNpemUgPSB0cnVlO1xuXG4gIGNvbnN0cnVjdG9yKHhTaGFwZTogW251bWJlciwgbnVtYmVyLCBudW1iZXIsIG51bWJlcl0pIHtcbiAgICB0aGlzLm91dHB1dFNoYXBlID0geFNoYXBlO1xuICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQgPSBmbGF0RGlzcGF0Y2hMYXlvdXQodGhpcy5vdXRwdXRTaGFwZSk7XG4gICAgdGhpcy5kaXNwYXRjaCA9IGNvbXB1dGVEaXNwYXRjaChcbiAgICAgICAgdGhpcy5kaXNwYXRjaExheW91dCwgdGhpcy5vdXRwdXRTaGFwZSwgdGhpcy53b3JrZ3JvdXBTaXplKTtcbiAgICB0aGlzLnVuaWZvcm1zID0gYCBheGlzIDogdmVjNDxpMzI+LGA7XG4gICAgdGhpcy5zaGFkZXJLZXkgPSAncmV2ZXJzZSc7XG4gIH1cblxuICBnZXRVc2VyQ29kZSgpOiBzdHJpbmcge1xuICAgIGNvbnN0IHJldmVyc2VDb29yZHNTbmlwcGV0ID0gYFxuICAgICAgLy8gVXNpbmcgdW5pZm9ybSB2YXJpYWJsZXMgYXMganVkZ2luZyBjb25kaXRpb25zLCBzbyB0aGUgZnVuY3Rpb24gaGFzXG4gICAgICAvLyBjb2hlcmVudCBleGVjdXRpb24gd2l0aGluIGFsbCB0aHJlYWRzLlxuICAgICAgZm4gZ2V0UmV2ZXJzZUNvb3Jkcyhjb29yZHMgOiB2ZWM0PGkzMj4pIC0+IHZlYzQ8aTMyPiB7XG4gICAgICAgIHZhciByZXZlcnNlQ29vcmRzID0gY29vcmRzO1xuICAgICAgICBpZiAodW5pZm9ybXMuYXhpc1swXSA9PSAxKSB7XG4gICAgICAgICAgcmV2ZXJzZUNvb3Jkc1swXSA9IHVuaWZvcm1zLnhTaGFwZVswXSAtIGNvb3Jkc1swXSAtIDE7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHVuaWZvcm1zLmF4aXNbMV0gPT0gMSkge1xuICAgICAgICAgIHJldmVyc2VDb29yZHNbMV0gPSB1bmlmb3Jtcy54U2hhcGVbMV0gLSBjb29yZHNbMV0gLSAxO1xuICAgICAgICB9XG4gICAgICAgIGlmICh1bmlmb3Jtcy5heGlzWzJdID09IDEpIHtcbiAgICAgICAgICByZXZlcnNlQ29vcmRzWzJdID0gdW5pZm9ybXMueFNoYXBlWzJdIC0gY29vcmRzWzJdIC0gMTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodW5pZm9ybXMuYXhpc1szXSA9PSAxKSB7XG4gICAgICAgICAgcmV2ZXJzZUNvb3Jkc1szXSA9IHVuaWZvcm1zLnhTaGFwZVszXSAtIGNvb3Jkc1szXSAtIDE7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcmV2ZXJzZUNvb3JkcztcbiAgICAgIH1cbiAgICBgO1xuICAgIGNvbnN0IHVzZXJDb2RlID0gYFxuICAgICAgJHtyZXZlcnNlQ29vcmRzU25pcHBldH1cbiAgICAgICR7bWFpbignaW5kZXgnKX0ge1xuICAgICAgICBpZiAoaW5kZXggPCB1bmlmb3Jtcy5zaXplKSB7XG4gICAgICAgICAgbGV0IGNvb3JkcyA9IGdldENvb3Jkc0Zyb21JbmRleChpbmRleCk7XG4gICAgICAgICAgbGV0IHJldmVyc2VDb29yZHMgPSBnZXRSZXZlcnNlQ29vcmRzKGNvb3Jkcyk7XG4gICAgICAgICAgc2V0T3V0cHV0QXRJbmRleChpbmRleCwgZ2V0WChyZXZlcnNlQ29vcmRzWzBdLFxuICAgICAgICAgICAgICByZXZlcnNlQ29vcmRzWzFdLCByZXZlcnNlQ29vcmRzWzJdLCByZXZlcnNlQ29vcmRzWzNdKSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICBgO1xuICAgIHJldHVybiB1c2VyQ29kZTtcbiAgfVxufVxuIl19","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Reverse, util } from '@tensorflow/tfjs-core';\nimport { ReverseProgram } from '../reverse_webgpu';\nimport { identity } from './Identity';\nimport { reshape } from './Reshape';\nexport function reverse(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { dims } = attrs;\n    const xRank = x.shape.length;\n    if (xRank === 0) {\n        return identity({ inputs: { x }, backend });\n    }\n    const xShape = x.shape;\n    const xShape4D = [1, 1, 1, 1];\n    xShape.forEach((d, i) => {\n        const index = i + 4 - xRank;\n        xShape4D[index] = d;\n    });\n    const axes = util.parseAxisParam(dims, x.shape);\n    const dims4D = [0, 0, 0, 0];\n    axes.forEach(ax => {\n        const index = ax + 4 - xRank;\n        dims4D[index] = 1;\n    });\n    const uniformData = [{ type: 'int32', data: dims4D }];\n    const xReshaped = reshape({ inputs: { x }, backend, attrs: { shape: xShape4D } });\n    const program = new ReverseProgram(xShape4D);\n    const values = backend.runWebGPUProgram(program, [xReshaped], xReshaped.dtype, uniformData);\n    backend.disposeData(xReshaped.dataId);\n    const result = reshape({ inputs: { x: values }, backend, attrs: { shape: xShape } });\n    backend.disposeData(values.dataId);\n    return result;\n}\nexport const reverseConfig = {\n    kernelName: Reverse,\n    backendName: 'webgpu',\n    kernelFunc: reverse\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmV2ZXJzZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvUmV2ZXJzZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQTJCLE9BQU8sRUFBMkMsSUFBSSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFHdkgsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLG1CQUFtQixDQUFDO0FBRWpELE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxZQUFZLENBQUM7QUFDcEMsT0FBTyxFQUFDLE9BQU8sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUVsQyxNQUFNLFVBQVUsT0FBTyxDQUNuQixJQUEwRTtJQUU1RSxNQUFNLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFDdEMsTUFBTSxFQUFDLENBQUMsRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUNuQixNQUFNLEVBQUMsSUFBSSxFQUFDLEdBQUcsS0FBSyxDQUFDO0lBRXJCLE1BQU0sS0FBSyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDO0lBQzdCLElBQUksS0FBSyxLQUFLLENBQUMsRUFBRTtRQUNmLE9BQU8sUUFBUSxDQUFDLEVBQUMsTUFBTSxFQUFFLEVBQUMsQ0FBQyxFQUFDLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztLQUN6QztJQUVELE1BQU0sTUFBTSxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUM7SUFDdkIsTUFBTSxRQUFRLEdBQXFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDaEUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUN0QixNQUFNLEtBQUssR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQztRQUM1QixRQUFRLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3RCLENBQUMsQ0FBQyxDQUFDO0lBRUgsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2hELE1BQU0sTUFBTSxHQUFxQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQzlELElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLEVBQUU7UUFDaEIsTUFBTSxLQUFLLEdBQUcsRUFBRSxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUM7UUFDN0IsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNwQixDQUFDLENBQUMsQ0FBQztJQUNILE1BQU0sV0FBVyxHQUFHLENBQUMsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUMsQ0FBQyxDQUFDO0lBRXBELE1BQU0sU0FBUyxHQUFHLE9BQU8sQ0FBQyxFQUFDLE1BQU0sRUFBRSxFQUFDLENBQUMsRUFBQyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsRUFBQyxLQUFLLEVBQUUsUUFBUSxFQUFDLEVBQUMsQ0FBQyxDQUFDO0lBRTVFLE1BQU0sT0FBTyxHQUFHLElBQUksY0FBYyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzdDLE1BQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FDbkMsT0FBTyxFQUFFLENBQUMsU0FBUyxDQUFDLEVBQUUsU0FBUyxDQUFDLEtBQUssRUFBRSxXQUFXLENBQUMsQ0FBQztJQUN4RCxPQUFPLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUV0QyxNQUFNLE1BQU0sR0FDUixPQUFPLENBQUMsRUFBQyxNQUFNLEVBQUUsRUFBQyxDQUFDLEVBQUUsTUFBTSxFQUFDLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxFQUFDLEtBQUssRUFBRSxNQUFNLEVBQUMsRUFBQyxDQUFDLENBQUM7SUFDcEUsT0FBTyxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFbkMsT0FBTyxNQUFNLENBQUM7QUFDaEIsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBaUI7SUFDekMsVUFBVSxFQUFFLE9BQU87SUFDbkIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLE9BQWdDO0NBQzdDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7S2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBSZXZlcnNlLCBSZXZlcnNlQXR0cnMsIFJldmVyc2VJbnB1dHMsIFRlbnNvckluZm8sIHV0aWx9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuaW1wb3J0IHtSZXZlcnNlUHJvZ3JhbX0gZnJvbSAnLi4vcmV2ZXJzZV93ZWJncHUnO1xuXG5pbXBvcnQge2lkZW50aXR5fSBmcm9tICcuL0lkZW50aXR5JztcbmltcG9ydCB7cmVzaGFwZX0gZnJvbSAnLi9SZXNoYXBlJztcblxuZXhwb3J0IGZ1bmN0aW9uIHJldmVyc2UoXG4gICAgYXJnczoge2lucHV0czogUmV2ZXJzZUlucHV0cywgYmFja2VuZDogV2ViR1BVQmFja2VuZCwgYXR0cnM6IFJldmVyc2VBdHRyc30pOlxuICAgIFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7eH0gPSBpbnB1dHM7XG4gIGNvbnN0IHtkaW1zfSA9IGF0dHJzO1xuXG4gIGNvbnN0IHhSYW5rID0geC5zaGFwZS5sZW5ndGg7XG4gIGlmICh4UmFuayA9PT0gMCkge1xuICAgIHJldHVybiBpZGVudGl0eSh7aW5wdXRzOiB7eH0sIGJhY2tlbmR9KTtcbiAgfVxuXG4gIGNvbnN0IHhTaGFwZSA9IHguc2hhcGU7XG4gIGNvbnN0IHhTaGFwZTREOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlciwgbnVtYmVyXSA9IFsxLCAxLCAxLCAxXTtcbiAgeFNoYXBlLmZvckVhY2goKGQsIGkpID0+IHtcbiAgICBjb25zdCBpbmRleCA9IGkgKyA0IC0geFJhbms7XG4gICAgeFNoYXBlNERbaW5kZXhdID0gZDtcbiAgfSk7XG5cbiAgY29uc3QgYXhlcyA9IHV0aWwucGFyc2VBeGlzUGFyYW0oZGltcywgeC5zaGFwZSk7XG4gIGNvbnN0IGRpbXM0RDogW251bWJlciwgbnVtYmVyLCBudW1iZXIsIG51bWJlcl0gPSBbMCwgMCwgMCwgMF07XG4gIGF4ZXMuZm9yRWFjaChheCA9PiB7XG4gICAgY29uc3QgaW5kZXggPSBheCArIDQgLSB4UmFuaztcbiAgICBkaW1zNERbaW5kZXhdID0gMTtcbiAgfSk7XG4gIGNvbnN0IHVuaWZvcm1EYXRhID0gW3t0eXBlOiAnaW50MzInLCBkYXRhOiBkaW1zNER9XTtcblxuICBjb25zdCB4UmVzaGFwZWQgPSByZXNoYXBlKHtpbnB1dHM6IHt4fSwgYmFja2VuZCwgYXR0cnM6IHtzaGFwZTogeFNoYXBlNER9fSk7XG5cbiAgY29uc3QgcHJvZ3JhbSA9IG5ldyBSZXZlcnNlUHJvZ3JhbSh4U2hhcGU0RCk7XG4gIGNvbnN0IHZhbHVlcyA9IGJhY2tlbmQucnVuV2ViR1BVUHJvZ3JhbShcbiAgICAgIHByb2dyYW0sIFt4UmVzaGFwZWRdLCB4UmVzaGFwZWQuZHR5cGUsIHVuaWZvcm1EYXRhKTtcbiAgYmFja2VuZC5kaXNwb3NlRGF0YSh4UmVzaGFwZWQuZGF0YUlkKTtcblxuICBjb25zdCByZXN1bHQgPVxuICAgICAgcmVzaGFwZSh7aW5wdXRzOiB7eDogdmFsdWVzfSwgYmFja2VuZCwgYXR0cnM6IHtzaGFwZTogeFNoYXBlfX0pO1xuICBiYWNrZW5kLmRpc3Bvc2VEYXRhKHZhbHVlcy5kYXRhSWQpO1xuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBjb25zdCByZXZlcnNlQ29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IFJldmVyc2UsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogcmV2ZXJzZSBhcyB1bmtub3duIGFzIEtlcm5lbEZ1bmNcbn07XG4iXX0=","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class RotateProgram {\n    constructor(imageShape, fillValue) {\n        this.outputShape = [];\n        this.variableNames = ['x'];\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = imageShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.uniforms = `centerX : f32, centerY : f32, sinRadians : f32,\n          cosRadians : f32,`;\n        this.shaderKey = 'rotate';\n        this.outputShape = imageShape;\n        if (typeof fillValue === 'number') {\n            this.uniforms += ` fillValue : f32,`;\n            this.fillSnippet = `var outputValue = uniforms.fillValue;`;\n            this.shaderKey += '_float';\n        }\n        else {\n            this.uniforms += ` fillValue : vec3<f32>,`;\n            this.fillSnippet = `var outputValue = uniforms.fillValue[coords[3]];`;\n            this.shaderKey += '_vec3';\n        }\n    }\n    getUserCode() {\n        const userCode = `\n        ${main('index')} {\n          if (index < uniforms.size) {\n            let coords = getCoordsFromIndex(index);\n            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *\n                uniforms.sinRadians;\n            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *\n                uniforms.cosRadians;\n            let coordX = i32(round(coordXFloat + uniforms.centerX));\n            let coordY = i32(round(coordYFloat + uniforms.centerY));\n            ${this.fillSnippet}\n            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&\n                coordY < uniforms.xShape[1]) {\n              outputValue = getX(coords[0], coordY, coordX, coords[3]);\n            }\n            setOutputAtIndex(index, outputValue);\n          }\n        }\n      `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm90YXRlX3dlYmdwdS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL3JvdGF0ZV93ZWJncHUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLG1CQUFtQixJQUFJLElBQUksRUFBZ0IsTUFBTSxrQkFBa0IsQ0FBQztBQUM1RSxPQUFPLEVBQUMsZUFBZSxFQUFFLGtCQUFrQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRWxFLE1BQU0sT0FBTyxhQUFhO0lBV3hCLFlBQ0ksVUFBNEMsRUFDNUMsU0FBMEM7UUFaOUMsZ0JBQVcsR0FBYSxFQUFFLENBQUM7UUFJM0Isa0JBQWEsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRXRCLGtCQUFhLEdBQTZCLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUVyRCxTQUFJLEdBQUcsSUFBSSxDQUFDO1FBS1YsSUFBSSxDQUFDLFdBQVcsR0FBRyxVQUFVLENBQUM7UUFDOUIsSUFBSSxDQUFDLGNBQWMsR0FBRyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxlQUFlLENBQzNCLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDL0QsSUFBSSxDQUFDLFFBQVEsR0FBRzs0QkFDUSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxTQUFTLEdBQUcsUUFBUSxDQUFDO1FBQzFCLElBQUksQ0FBQyxXQUFXLEdBQUcsVUFBVSxDQUFDO1FBRTlCLElBQUksT0FBTyxTQUFTLEtBQUssUUFBUSxFQUFFO1lBQ2pDLElBQUksQ0FBQyxRQUFRLElBQUksbUJBQW1CLENBQUM7WUFDckMsSUFBSSxDQUFDLFdBQVcsR0FBRyx1Q0FBdUMsQ0FBQztZQUMzRCxJQUFJLENBQUMsU0FBUyxJQUFJLFFBQVEsQ0FBQztTQUM1QjthQUFNO1lBQ0wsSUFBSSxDQUFDLFFBQVEsSUFBSSx5QkFBeUIsQ0FBQztZQUMzQyxJQUFJLENBQUMsV0FBVyxHQUFHLGtEQUFrRCxDQUFDO1lBQ3RFLElBQUksQ0FBQyxTQUFTLElBQUksT0FBTyxDQUFDO1NBQzNCO0lBQ0gsQ0FBQztJQUVELFdBQVc7UUFDVCxNQUFNLFFBQVEsR0FBRztVQUNYLElBQUksQ0FBQyxPQUFPLENBQUM7Ozs7Ozs7Ozs7O2NBV1QsSUFBSSxDQUFDLFdBQVc7Ozs7Ozs7O09BUXZCLENBQUM7UUFDSixPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7Z2V0TWFpbkhlYWRlclN0cmluZyBhcyBtYWluLCBXZWJHUFVQcm9ncmFtfSBmcm9tICcuL3dlYmdwdV9wcm9ncmFtJztcbmltcG9ydCB7Y29tcHV0ZURpc3BhdGNoLCBmbGF0RGlzcGF0Y2hMYXlvdXR9IGZyb20gJy4vd2ViZ3B1X3V0aWwnO1xuXG5leHBvcnQgY2xhc3MgUm90YXRlUHJvZ3JhbSBpbXBsZW1lbnRzIFdlYkdQVVByb2dyYW0ge1xuICBvdXRwdXRTaGFwZTogbnVtYmVyW10gPSBbXTtcbiAgc2hhZGVyS2V5OiBzdHJpbmc7XG4gIGRpc3BhdGNoTGF5b3V0OiB7eDogbnVtYmVyW119O1xuICBkaXNwYXRjaDogW251bWJlciwgbnVtYmVyLCBudW1iZXJdO1xuICB2YXJpYWJsZU5hbWVzID0gWyd4J107XG4gIHVuaWZvcm1zOiBzdHJpbmc7XG4gIHdvcmtncm91cFNpemU6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXSA9IFs2NCwgMSwgMV07XG4gIGZpbGxTbmlwcGV0OiBzdHJpbmc7XG4gIHNpemUgPSB0cnVlO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgICAgaW1hZ2VTaGFwZTogW251bWJlciwgbnVtYmVyLCBudW1iZXIsIG51bWJlcl0sXG4gICAgICBmaWxsVmFsdWU6IG51bWJlcnxbbnVtYmVyLCBudW1iZXIsIG51bWJlcl0pIHtcbiAgICB0aGlzLm91dHB1dFNoYXBlID0gaW1hZ2VTaGFwZTtcbiAgICB0aGlzLmRpc3BhdGNoTGF5b3V0ID0gZmxhdERpc3BhdGNoTGF5b3V0KHRoaXMub3V0cHV0U2hhcGUpO1xuICAgIHRoaXMuZGlzcGF0Y2ggPSBjb21wdXRlRGlzcGF0Y2goXG4gICAgICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQsIHRoaXMub3V0cHV0U2hhcGUsIHRoaXMud29ya2dyb3VwU2l6ZSk7XG4gICAgdGhpcy51bmlmb3JtcyA9IGBjZW50ZXJYIDogZjMyLCBjZW50ZXJZIDogZjMyLCBzaW5SYWRpYW5zIDogZjMyLFxuICAgICAgICAgIGNvc1JhZGlhbnMgOiBmMzIsYDtcbiAgICB0aGlzLnNoYWRlcktleSA9ICdyb3RhdGUnO1xuICAgIHRoaXMub3V0cHV0U2hhcGUgPSBpbWFnZVNoYXBlO1xuXG4gICAgaWYgKHR5cGVvZiBmaWxsVmFsdWUgPT09ICdudW1iZXInKSB7XG4gICAgICB0aGlzLnVuaWZvcm1zICs9IGAgZmlsbFZhbHVlIDogZjMyLGA7XG4gICAgICB0aGlzLmZpbGxTbmlwcGV0ID0gYHZhciBvdXRwdXRWYWx1ZSA9IHVuaWZvcm1zLmZpbGxWYWx1ZTtgO1xuICAgICAgdGhpcy5zaGFkZXJLZXkgKz0gJ19mbG9hdCc7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMudW5pZm9ybXMgKz0gYCBmaWxsVmFsdWUgOiB2ZWMzPGYzMj4sYDtcbiAgICAgIHRoaXMuZmlsbFNuaXBwZXQgPSBgdmFyIG91dHB1dFZhbHVlID0gdW5pZm9ybXMuZmlsbFZhbHVlW2Nvb3Jkc1szXV07YDtcbiAgICAgIHRoaXMuc2hhZGVyS2V5ICs9ICdfdmVjMyc7XG4gICAgfVxuICB9XG5cbiAgZ2V0VXNlckNvZGUoKTogc3RyaW5nIHtcbiAgICBjb25zdCB1c2VyQ29kZSA9IGBcbiAgICAgICAgJHttYWluKCdpbmRleCcpfSB7XG4gICAgICAgICAgaWYgKGluZGV4IDwgdW5pZm9ybXMuc2l6ZSkge1xuICAgICAgICAgICAgbGV0IGNvb3JkcyA9IGdldENvb3Jkc0Zyb21JbmRleChpbmRleCk7XG4gICAgICAgICAgICBsZXQgY29vcmRYRmxvYXQgPSAoZjMyKGNvb3Jkc1syXSkgLSB1bmlmb3Jtcy5jZW50ZXJYKSAqXG4gICAgICAgICAgICAgICAgdW5pZm9ybXMuY29zUmFkaWFucyAtIChmMzIoY29vcmRzWzFdKSAtIHVuaWZvcm1zLmNlbnRlclkpICpcbiAgICAgICAgICAgICAgICB1bmlmb3Jtcy5zaW5SYWRpYW5zO1xuICAgICAgICAgICAgbGV0IGNvb3JkWUZsb2F0ID0gKGYzMihjb29yZHNbMl0pIC0gdW5pZm9ybXMuY2VudGVyWCkgKlxuICAgICAgICAgICAgICAgIHVuaWZvcm1zLnNpblJhZGlhbnMgKyAoZjMyKGNvb3Jkc1sxXSkgLSB1bmlmb3Jtcy5jZW50ZXJZKSAqXG4gICAgICAgICAgICAgICAgdW5pZm9ybXMuY29zUmFkaWFucztcbiAgICAgICAgICAgIGxldCBjb29yZFggPSBpMzIocm91bmQoY29vcmRYRmxvYXQgKyB1bmlmb3Jtcy5jZW50ZXJYKSk7XG4gICAgICAgICAgICBsZXQgY29vcmRZID0gaTMyKHJvdW5kKGNvb3JkWUZsb2F0ICsgdW5pZm9ybXMuY2VudGVyWSkpO1xuICAgICAgICAgICAgJHt0aGlzLmZpbGxTbmlwcGV0fVxuICAgICAgICAgICAgaWYoY29vcmRYID49IDAgJiYgY29vcmRYIDwgdW5pZm9ybXMueFNoYXBlWzJdICYmIGNvb3JkWSA+PSAwICYmXG4gICAgICAgICAgICAgICAgY29vcmRZIDwgdW5pZm9ybXMueFNoYXBlWzFdKSB7XG4gICAgICAgICAgICAgIG91dHB1dFZhbHVlID0gZ2V0WChjb29yZHNbMF0sIGNvb3JkWSwgY29vcmRYLCBjb29yZHNbM10pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2V0T3V0cHV0QXRJbmRleChpbmRleCwgb3V0cHV0VmFsdWUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgYDtcbiAgICByZXR1cm4gdXNlckNvZGU7XG4gIH1cbn1cbiJdfQ==","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nimport { RotateWithOffset } from '@tensorflow/tfjs-core';\nimport { RotateProgram } from '../rotate_webgpu';\nexport const rotateWithOffsetConfig = {\n    kernelName: RotateWithOffset,\n    backendName: 'webgpu',\n    kernelFunc: ({ inputs, attrs, backend }) => {\n        const { image } = inputs;\n        const { radians, fillValue, center } = attrs;\n        const webgpuBackend = backend;\n        const program = new RotateProgram(image.shape, fillValue);\n        const [centerX, centerY] = backend_util.getImageCenter(center, image.shape[1], image.shape[2]);\n        const uniformData = [\n            { type: 'float32', data: [centerX] },\n            { type: 'float32', data: [centerY] },\n            { type: 'float32', data: [Math.sin(radians)] },\n            { type: 'float32', data: [Math.cos(radians)] }\n        ];\n        if (typeof fillValue === 'number') {\n            uniformData.push({ type: 'float32', data: [Number.parseFloat(fillValue.toFixed(2))] });\n        }\n        else {\n            uniformData.push({ type: 'float32', data: fillValue });\n        }\n        const output = webgpuBackend.runWebGPUProgram(program, [image], image.dtype, uniformData);\n        return output;\n    }\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUm90YXRlV2l0aE9mZnNldC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvUm90YXRlV2l0aE9mZnNldC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsWUFBWSxFQUF5QixNQUFNLHVCQUF1QixDQUFDO0FBQzNFLE9BQU8sRUFBQyxnQkFBZ0IsRUFBZ0QsTUFBTSx1QkFBdUIsQ0FBQztBQUd0RyxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sa0JBQWtCLENBQUM7QUFFL0MsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQWlCO0lBQ2hELFVBQVUsRUFBRSxnQkFBZ0I7SUFDNUIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLENBQUMsRUFBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBQyxFQUFFLEVBQUU7UUFDdkMsTUFBTSxFQUFDLEtBQUssRUFBQyxHQUFHLE1BQWdDLENBQUM7UUFDakQsTUFBTSxFQUFDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFDLEdBQzlCLEtBQXlDLENBQUM7UUFDOUMsTUFBTSxhQUFhLEdBQUcsT0FBd0IsQ0FBQztRQUUvQyxNQUFNLE9BQU8sR0FBRyxJQUFJLGFBQWEsQ0FBRSxLQUFrQixDQUFDLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQztRQUN4RSxNQUFNLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxHQUNwQixZQUFZLENBQUMsY0FBYyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN4RSxNQUFNLFdBQVcsR0FBRztZQUNkLEVBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxPQUFPLENBQUMsRUFBQztZQUNsQyxFQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLENBQUMsT0FBTyxDQUFDLEVBQUM7WUFDbEMsRUFBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBQztZQUM1QyxFQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxFQUFDO1NBQzdDLENBQUM7UUFFTixJQUFJLE9BQU8sU0FBUyxLQUFLLFFBQVEsRUFBRTtZQUNqQyxXQUFXLENBQUMsSUFBSSxDQUNaLEVBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQztTQUN6RTthQUFNO1lBQ0wsV0FBVyxDQUFDLElBQUksQ0FBQyxFQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBQyxDQUFDLENBQUM7U0FDdEQ7UUFFRCxNQUFNLE1BQU0sR0FBRyxhQUFhLENBQUMsZ0JBQWdCLENBQ3pDLE9BQU8sRUFBRSxDQUFDLEtBQUssQ0FBQyxFQUFFLEtBQUssQ0FBQyxLQUFLLEVBQUUsV0FBVyxDQUFDLENBQUM7UUFDaEQsT0FBTyxNQUFNLENBQUM7SUFDakIsQ0FBQztDQUNGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7YmFja2VuZF91dGlsLCBLZXJuZWxDb25maWcsIFRlbnNvcjREfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuaW1wb3J0IHtSb3RhdGVXaXRoT2Zmc2V0LCBSb3RhdGVXaXRoT2Zmc2V0QXR0cnMsIFJvdGF0ZVdpdGhPZmZzZXRJbnB1dHN9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuaW1wb3J0IHtSb3RhdGVQcm9ncmFtfSBmcm9tICcuLi9yb3RhdGVfd2ViZ3B1JztcblxuZXhwb3J0IGNvbnN0IHJvdGF0ZVdpdGhPZmZzZXRDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAgICBrZXJuZWxOYW1lOiBSb3RhdGVXaXRoT2Zmc2V0LFxuICAgIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAgICBrZXJuZWxGdW5jOiAoe2lucHV0cywgYXR0cnMsIGJhY2tlbmR9KSA9PiB7XG4gICAgICBjb25zdCB7aW1hZ2V9ID0gaW5wdXRzIGFzIFJvdGF0ZVdpdGhPZmZzZXRJbnB1dHM7XG4gICAgICBjb25zdCB7cmFkaWFucywgZmlsbFZhbHVlLCBjZW50ZXJ9ID1cbiAgICAgICAgICBhdHRycyBhcyB1bmtub3duIGFzIFJvdGF0ZVdpdGhPZmZzZXRBdHRycztcbiAgICAgIGNvbnN0IHdlYmdwdUJhY2tlbmQgPSBiYWNrZW5kIGFzIFdlYkdQVUJhY2tlbmQ7XG5cbiAgICAgIGNvbnN0IHByb2dyYW0gPSBuZXcgUm90YXRlUHJvZ3JhbSgoaW1hZ2UgYXMgVGVuc29yNEQpLnNoYXBlLCBmaWxsVmFsdWUpO1xuICAgICAgY29uc3QgW2NlbnRlclgsIGNlbnRlclldID1cbiAgICAgICAgICBiYWNrZW5kX3V0aWwuZ2V0SW1hZ2VDZW50ZXIoY2VudGVyLCBpbWFnZS5zaGFwZVsxXSwgaW1hZ2Uuc2hhcGVbMl0pO1xuICAgICAgY29uc3QgdW5pZm9ybURhdGEgPSBbXG4gICAgICAgICAgICB7dHlwZTogJ2Zsb2F0MzInLCBkYXRhOiBbY2VudGVyWF19LFxuICAgICAgICAgICAge3R5cGU6ICdmbG9hdDMyJywgZGF0YTogW2NlbnRlclldfSxcbiAgICAgICAgICAgIHt0eXBlOiAnZmxvYXQzMicsIGRhdGE6IFtNYXRoLnNpbihyYWRpYW5zKV19LFxuICAgICAgICAgICAge3R5cGU6ICdmbG9hdDMyJywgZGF0YTogW01hdGguY29zKHJhZGlhbnMpXX1cbiAgICAgICAgICBdO1xuXG4gICAgICBpZiAodHlwZW9mIGZpbGxWYWx1ZSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgdW5pZm9ybURhdGEucHVzaChcbiAgICAgICAgICAgIHt0eXBlOiAnZmxvYXQzMicsIGRhdGE6IFtOdW1iZXIucGFyc2VGbG9hdChmaWxsVmFsdWUudG9GaXhlZCgyKSldfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB1bmlmb3JtRGF0YS5wdXNoKHt0eXBlOiAnZmxvYXQzMicsIGRhdGE6IGZpbGxWYWx1ZX0pO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBvdXRwdXQgPSB3ZWJncHVCYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0oXG4gICAgICAgICAgcHJvZ3JhbSwgW2ltYWdlXSwgaW1hZ2UuZHR5cGUsIHVuaWZvcm1EYXRhKTtcbiAgICAgIHJldHVybiBvdXRwdXQ7XG4gICB9XG4gfTtcbiJdfQ==","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Round } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { UnaryOpType } from '../unary_op_util';\nexport const round = unaryKernelFunc({ opType: UnaryOpType.ROUND });\nexport const roundConfig = {\n    kernelName: Round,\n    backendName: 'webgpu',\n    kernelFunc: round\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUm91bmQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL1JvdW5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBZSxLQUFLLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUUxRCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sb0NBQW9DLENBQUM7QUFFbkUsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBRTdDLE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBRyxlQUFlLENBQUMsRUFBQyxNQUFNLEVBQUUsV0FBVyxDQUFDLEtBQUssRUFBQyxDQUFDLENBQUM7QUFFbEUsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFpQjtJQUN2QyxVQUFVLEVBQUUsS0FBSztJQUNqQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsS0FBSztDQUNsQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjIgR29vZ2xlIExMQy5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0tlcm5lbENvbmZpZywgUm91bmR9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7dW5hcnlLZXJuZWxGdW5jfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMva2VybmVsX2Z1bmNzX3V0aWxzJztcblxuaW1wb3J0IHtVbmFyeU9wVHlwZX0gZnJvbSAnLi4vdW5hcnlfb3BfdXRpbCc7XG5cbmV4cG9ydCBjb25zdCByb3VuZCA9IHVuYXJ5S2VybmVsRnVuYyh7b3BUeXBlOiBVbmFyeU9wVHlwZS5ST1VORH0pO1xuXG5leHBvcnQgY29uc3Qgcm91bmRDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogUm91bmQsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogcm91bmRcbn07XG4iXX0=","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Rsqrt } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { rsqrtImplCPU } from '../kernel_utils/shared';\nimport { UnaryOpType } from '../unary_op_util';\nexport const rsqrt = unaryKernelFunc({ opType: UnaryOpType.RSQRT, cpuKernelImpl: rsqrtImplCPU });\nexport const rsqrtConfig = {\n    kernelName: Rsqrt,\n    backendName: 'webgpu',\n    kernelFunc: rsqrt\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUnNxcnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL1JzcXJ0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBZSxLQUFLLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUMxRCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sb0NBQW9DLENBQUM7QUFDbkUsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBQ3BELE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUU3QyxNQUFNLENBQUMsTUFBTSxLQUFLLEdBQ2QsZUFBZSxDQUFDLEVBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxLQUFLLEVBQUUsYUFBYSxFQUFFLFlBQVksRUFBQyxDQUFDLENBQUM7QUFFOUUsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFpQjtJQUN2QyxVQUFVLEVBQUUsS0FBSztJQUNqQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsS0FBSztDQUNsQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0tlcm5lbENvbmZpZywgUnNxcnR9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5pbXBvcnQge3VuYXJ5S2VybmVsRnVuY30gZnJvbSAnLi4va2VybmVsX3V0aWxzL2tlcm5lbF9mdW5jc191dGlscyc7XG5pbXBvcnQge3JzcXJ0SW1wbENQVX0gZnJvbSAnLi4va2VybmVsX3V0aWxzL3NoYXJlZCc7XG5pbXBvcnQge1VuYXJ5T3BUeXBlfSBmcm9tICcuLi91bmFyeV9vcF91dGlsJztcblxuZXhwb3J0IGNvbnN0IHJzcXJ0ID1cbiAgICB1bmFyeUtlcm5lbEZ1bmMoe29wVHlwZTogVW5hcnlPcFR5cGUuUlNRUlQsIGNwdUtlcm5lbEltcGw6IHJzcXJ0SW1wbENQVX0pO1xuXG5leHBvcnQgY29uc3QgcnNxcnRDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogUnNxcnQsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogcnNxcnRcbn07XG4iXX0=","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { atomicAddSnippet } from './shader_util';\nimport { dataTypeToGPUType, getCoordsDataType, getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class ScatterProgram {\n    constructor(flattenXShape, sliceDim, indicesRank, updatesRank, strides, shape, outputDtype, sumDupeIndices = true) {\n        this.variableNames = ['updates', 'indices'];\n        this.workgroupSize = [64, 1, 1];\n        this.atomic = true;\n        this.outputShape = shape;\n        this.type = outputDtype;\n        this.sumDupeIndices = sumDupeIndices;\n        this.dispatchLayout = flatDispatchLayout(flattenXShape);\n        // Dispatching based on |updates| shape instead of output shape.\n        this.dispatch =\n            computeDispatch(this.dispatchLayout, flattenXShape, this.workgroupSize);\n        this.sliceDimGreaterThanOne = sliceDim > 1;\n        this.shaderKey =\n            `scatter_${indicesRank}_${updatesRank}_${this.sliceDimGreaterThanOne}_${outputDtype}_${sumDupeIndices}_${strides.length}`;\n        const stridesType = getCoordsDataType(strides.length);\n        this.uniforms =\n            `sliceDim : i32, strides: ${stridesType}, updatesSize: i32,`;\n        this.updatesRank = updatesRank;\n        this.indicesRank = indicesRank;\n    }\n    getUserCode() {\n        let indicesString = '';\n        if (this.indicesRank === 1) {\n            indicesString = 'coords[0]';\n        }\n        else if (this.indicesRank === 2) {\n            indicesString = 'coords[0], j';\n        }\n        const indicesSnippet = `getIndices(${indicesString})`;\n        const strideString = this.sliceDimGreaterThanOne ? 'uniforms.strides[j]' :\n            'uniforms.strides';\n        let outCoordsString = '';\n        let getUpdatesCoordsFromFlatIndex = '';\n        if (this.dispatchLayout.x.length === 1) {\n            outCoordsString = 'flattenedIndex';\n            getUpdatesCoordsFromFlatIndex = `\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {\n        return index;\n      }\n      `;\n        }\n        else if (this.dispatchLayout.x.length === 2) {\n            outCoordsString = 'vec2<i32>(flattenedIndex, coords[1])';\n            getUpdatesCoordsFromFlatIndex = `\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {\n        // N.B. |updates| could be a scalar tensor, conceptually representing a\n        // 2D tensor with all values equal to that. By design, its size must be\n        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|\n        // gives the other.\n        let sliceSize = uniforms.outShape[1];\n        let d0 = index / sliceSize;\n        let d1 = index - d0 * sliceSize;\n        return vec2<i32>(d0, d1);\n      }\n      `;\n        }\n        const updatesString = Array.from({ length: this.updatesRank }, (_, idx) => `coords[${idx}]`);\n        const updatesSnippet = `getUpdates(${updatesString.join(', ')})`;\n        const userCode = `\n    ${getUpdatesCoordsFromFlatIndex}\n      ${main('index')} {\n        if (index < uniforms.updatesSize) {\n          let coords = getUpdatesCoordsFromFlatIndex(index);\n          var flattenedIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexInside = i32(round(${indicesSnippet}));\n            flattenedIndex = flattenedIndex + indexInside * ${strideString};\n          }\n          let updateValue =\n              ${dataTypeToGPUType(this.type)}(${updatesSnippet});\n          let flatIndex = getOutputIndexFromCoords(${outCoordsString});\n\n          ${this.sumDupeIndices ?\n            atomicAddSnippet('&result[flatIndex]', 'updateValue', this.type) :\n            `atomicStore(&result[flatIndex], bitcast<i32>(updateValue));`}\n        }\n      }`;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, ScatterNd, util } from '@tensorflow/tfjs-core';\nimport { ScatterProgram } from '../scatter_webgpu';\nimport { fill } from './Fill';\nimport { reshape } from './Reshape';\nexport function scatterNd(args) {\n    const { inputs, backend, attrs } = args;\n    const { indices, updates } = inputs;\n    const { shape } = attrs;\n    const { sliceRank, numUpdates, sliceSize, strides, outputSize } = backend_util.calculateShapes(updates, indices, shape);\n    const flattenShape = [outputSize / sliceSize, sliceSize];\n    if (outputSize === 0) {\n        return backend.makeTensorInfo(shape, indices.dtype);\n    }\n    const flattenIndices = reshape({ inputs: { x: indices }, backend, attrs: { shape: [numUpdates, sliceRank] } });\n    const flattenX = reshape({ inputs: { x: updates }, backend, attrs: { shape: [numUpdates, sliceSize] } });\n    const type = flattenX.dtype;\n    const output = fill({ backend, attrs: { shape: flattenShape, value: 0, dtype: type } });\n    const size = util.sizeFromShape(flattenX.shape);\n    const uniformData = [\n        { type: 'int32', data: [sliceRank] }, { type: 'int32', data: strides },\n        { type: 'int32', data: [size] }\n    ];\n    const program = new ScatterProgram(flattenX.shape, sliceRank, flattenIndices.shape.length, flattenX.shape.length, strides, flattenShape, type);\n    const res = backend.runWebGPUProgram(program, [flattenX, flattenIndices], type, uniformData, output);\n    const reshaped = reshape({ inputs: { x: res }, backend, attrs: { shape } });\n    backend.disposeData(flattenIndices.dataId);\n    backend.disposeData(flattenX.dataId);\n    backend.disposeData(res.dataId);\n    return reshaped;\n}\nexport const scatterNdConfig = {\n    kernelName: ScatterNd,\n    backendName: 'webgpu',\n    kernelFunc: scatterNd\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2NhdHRlck5kLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9TY2F0dGVyTmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLFlBQVksRUFBNEIsU0FBUyxFQUErQyxJQUFJLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUczSSxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFFakQsT0FBTyxFQUFDLElBQUksRUFBQyxNQUFNLFFBQVEsQ0FBQztBQUM1QixPQUFPLEVBQUMsT0FBTyxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBRWxDLE1BQU0sVUFBVSxTQUFTLENBQUMsSUFJekI7SUFDQyxNQUFNLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFDdEMsTUFBTSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFDbEMsTUFBTSxFQUFDLEtBQUssRUFBQyxHQUFHLEtBQUssQ0FBQztJQUV0QixNQUFNLEVBQUMsU0FBUyxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFLFVBQVUsRUFBQyxHQUN6RCxZQUFZLENBQUMsZUFBZSxDQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFFMUQsTUFBTSxZQUFZLEdBQUcsQ0FBQyxVQUFVLEdBQUcsU0FBUyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBRXpELElBQUksVUFBVSxLQUFLLENBQUMsRUFBRTtRQUNwQixPQUFPLE9BQU8sQ0FBQyxjQUFjLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUNyRDtJQUVELE1BQU0sY0FBYyxHQUFHLE9BQU8sQ0FDMUIsRUFBQyxNQUFNLEVBQUUsRUFBQyxDQUFDLEVBQUUsT0FBTyxFQUFDLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxFQUFDLEtBQUssRUFBRSxDQUFDLFVBQVUsRUFBRSxTQUFTLENBQUMsRUFBQyxFQUFDLENBQUMsQ0FBQztJQUM5RSxNQUFNLFFBQVEsR0FBRyxPQUFPLENBQ3BCLEVBQUMsTUFBTSxFQUFFLEVBQUMsQ0FBQyxFQUFFLE9BQU8sRUFBQyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsRUFBQyxLQUFLLEVBQUUsQ0FBQyxVQUFVLEVBQUUsU0FBUyxDQUFDLEVBQUMsRUFBQyxDQUFDLENBQUM7SUFFOUUsTUFBTSxJQUFJLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQztJQUM1QixNQUFNLE1BQU0sR0FDUixJQUFJLENBQUMsRUFBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLEVBQUMsS0FBSyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUMsRUFBQyxDQUFDLENBQUM7SUFDekUsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDaEQsTUFBTSxXQUFXLEdBQUc7UUFDbEIsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLFNBQVMsQ0FBQyxFQUFDLEVBQUUsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUM7UUFDbEUsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFDO0tBQzlCLENBQUM7SUFDRixNQUFNLE9BQU8sR0FBRyxJQUFJLGNBQWMsQ0FDOUIsUUFBUSxDQUFDLEtBQUssRUFBRSxTQUFTLEVBQUUsY0FBYyxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQ3RELFFBQVEsQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxZQUFZLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDeEQsTUFBTSxHQUFHLEdBQUcsT0FBTyxDQUFDLGdCQUFnQixDQUNoQyxPQUFPLEVBQUUsQ0FBQyxRQUFRLEVBQUUsY0FBYyxDQUFDLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUVwRSxNQUFNLFFBQVEsR0FBRyxPQUFPLENBQUMsRUFBQyxNQUFNLEVBQUUsRUFBQyxDQUFDLEVBQUUsR0FBRyxFQUFDLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxFQUFDLEtBQUssRUFBQyxFQUFDLENBQUMsQ0FBQztJQUV0RSxPQUFPLENBQUMsV0FBVyxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUMzQyxPQUFPLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNyQyxPQUFPLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUVoQyxPQUFPLFFBQVEsQ0FBQztBQUNsQixDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFpQjtJQUMzQyxVQUFVLEVBQUUsU0FBUztJQUNyQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsU0FBa0M7Q0FDL0MsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtiYWNrZW5kX3V0aWwsIEtlcm5lbENvbmZpZywgS2VybmVsRnVuYywgU2NhdHRlck5kLCBTY2F0dGVyTmRBdHRycywgU2NhdHRlck5kSW5wdXRzLCBUZW5zb3JJbmZvLCB1dGlsfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcbmltcG9ydCB7U2NhdHRlclByb2dyYW19IGZyb20gJy4uL3NjYXR0ZXJfd2ViZ3B1JztcblxuaW1wb3J0IHtmaWxsfSBmcm9tICcuL0ZpbGwnO1xuaW1wb3J0IHtyZXNoYXBlfSBmcm9tICcuL1Jlc2hhcGUnO1xuXG5leHBvcnQgZnVuY3Rpb24gc2NhdHRlck5kKGFyZ3M6IHtcbiAgaW5wdXRzOiBTY2F0dGVyTmRJbnB1dHMsXG4gIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmQsXG4gIGF0dHJzOiBTY2F0dGVyTmRBdHRyc1xufSk6IFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7aW5kaWNlcywgdXBkYXRlc30gPSBpbnB1dHM7XG4gIGNvbnN0IHtzaGFwZX0gPSBhdHRycztcblxuICBjb25zdCB7c2xpY2VSYW5rLCBudW1VcGRhdGVzLCBzbGljZVNpemUsIHN0cmlkZXMsIG91dHB1dFNpemV9ID1cbiAgICAgIGJhY2tlbmRfdXRpbC5jYWxjdWxhdGVTaGFwZXModXBkYXRlcywgaW5kaWNlcywgc2hhcGUpO1xuXG4gIGNvbnN0IGZsYXR0ZW5TaGFwZSA9IFtvdXRwdXRTaXplIC8gc2xpY2VTaXplLCBzbGljZVNpemVdO1xuXG4gIGlmIChvdXRwdXRTaXplID09PSAwKSB7XG4gICAgcmV0dXJuIGJhY2tlbmQubWFrZVRlbnNvckluZm8oc2hhcGUsIGluZGljZXMuZHR5cGUpO1xuICB9XG5cbiAgY29uc3QgZmxhdHRlbkluZGljZXMgPSByZXNoYXBlKFxuICAgICAge2lucHV0czoge3g6IGluZGljZXN9LCBiYWNrZW5kLCBhdHRyczoge3NoYXBlOiBbbnVtVXBkYXRlcywgc2xpY2VSYW5rXX19KTtcbiAgY29uc3QgZmxhdHRlblggPSByZXNoYXBlKFxuICAgICAge2lucHV0czoge3g6IHVwZGF0ZXN9LCBiYWNrZW5kLCBhdHRyczoge3NoYXBlOiBbbnVtVXBkYXRlcywgc2xpY2VTaXplXX19KTtcblxuICBjb25zdCB0eXBlID0gZmxhdHRlblguZHR5cGU7XG4gIGNvbnN0IG91dHB1dCA9XG4gICAgICBmaWxsKHtiYWNrZW5kLCBhdHRyczoge3NoYXBlOiBmbGF0dGVuU2hhcGUsIHZhbHVlOiAwLCBkdHlwZTogdHlwZX19KTtcbiAgY29uc3Qgc2l6ZSA9IHV0aWwuc2l6ZUZyb21TaGFwZShmbGF0dGVuWC5zaGFwZSk7XG4gIGNvbnN0IHVuaWZvcm1EYXRhID0gW1xuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbc2xpY2VSYW5rXX0sIHt0eXBlOiAnaW50MzInLCBkYXRhOiBzdHJpZGVzfSxcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogW3NpemVdfVxuICBdO1xuICBjb25zdCBwcm9ncmFtID0gbmV3IFNjYXR0ZXJQcm9ncmFtKFxuICAgICAgZmxhdHRlblguc2hhcGUsIHNsaWNlUmFuaywgZmxhdHRlbkluZGljZXMuc2hhcGUubGVuZ3RoLFxuICAgICAgZmxhdHRlblguc2hhcGUubGVuZ3RoLCBzdHJpZGVzLCBmbGF0dGVuU2hhcGUsIHR5cGUpO1xuICBjb25zdCByZXMgPSBiYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0oXG4gICAgICBwcm9ncmFtLCBbZmxhdHRlblgsIGZsYXR0ZW5JbmRpY2VzXSwgdHlwZSwgdW5pZm9ybURhdGEsIG91dHB1dCk7XG5cbiAgY29uc3QgcmVzaGFwZWQgPSByZXNoYXBlKHtpbnB1dHM6IHt4OiByZXN9LCBiYWNrZW5kLCBhdHRyczoge3NoYXBlfX0pO1xuXG4gIGJhY2tlbmQuZGlzcG9zZURhdGEoZmxhdHRlbkluZGljZXMuZGF0YUlkKTtcbiAgYmFja2VuZC5kaXNwb3NlRGF0YShmbGF0dGVuWC5kYXRhSWQpO1xuICBiYWNrZW5kLmRpc3Bvc2VEYXRhKHJlcy5kYXRhSWQpO1xuXG4gIHJldHVybiByZXNoYXBlZDtcbn1cblxuZXhwb3J0IGNvbnN0IHNjYXR0ZXJOZENvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBTY2F0dGVyTmQsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogc2NhdHRlck5kIGFzIHVua25vd24gYXMgS2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class SearchSortedProgram {\n    constructor(outputShape, side) {\n        this.outputShape = [];\n        this.variableNames = ['sortedSequence', 'values'];\n        this.uniforms = 'numInputs : i32,';\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = outputShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.side = side;\n        this.shaderKey = `search_sorted_${side}`;\n    }\n    getUserCode() {\n        const boundComparator = this.side === 'left' ? '<' : '<=';\n        const userCode = `\n      fn findBound(batch: i32, value: f32) -> i32 {\n        var left = i32(0);\n        var right = uniforms.numInputs;\n        while (left < right) {\n          var mid = (left + right) / 2;\n          if (getSortedSequence(batch, mid) ${boundComparator} value) {\n            left = mid + 1;\n          } else {\n            right = mid;\n          }\n        }\n        return right;\n      }\n\n      ${main('index')} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let value = getValuesByOutputIndex(index);\n          setOutputAtIndexI32(index, findBound(coords[0], value));\n        }\n      }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoX3NvcnRlZF93ZWJncHUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9zZWFyY2hfc29ydGVkX3dlYmdwdS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsbUJBQW1CLElBQUksSUFBSSxFQUFnQixNQUFNLGtCQUFrQixDQUFDO0FBQzVFLE9BQU8sRUFBQyxlQUFlLEVBQUUsa0JBQWtCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFbEUsTUFBTSxPQUFPLG1CQUFtQjtJQVc5QixZQUFZLFdBQTZCLEVBQUUsSUFBb0I7UUFWL0QsZ0JBQVcsR0FBYSxFQUFFLENBQUM7UUFJM0Isa0JBQWEsR0FBRyxDQUFDLGdCQUFnQixFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBQzdDLGFBQVEsR0FBRyxrQkFBa0IsQ0FBQztRQUM5QixrQkFBYSxHQUE2QixDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDckQsU0FBSSxHQUFHLElBQUksQ0FBQztRQUlWLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO1FBQy9CLElBQUksQ0FBQyxjQUFjLEdBQUcsa0JBQWtCLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQzNELElBQUksQ0FBQyxRQUFRLEdBQUcsZUFBZSxDQUMzQixJQUFJLENBQUMsY0FBYyxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBRS9ELElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxTQUFTLEdBQUcsaUJBQWlCLElBQUksRUFBRSxDQUFDO0lBQzNDLENBQUM7SUFFRCxXQUFXO1FBQ1QsTUFBTSxlQUFlLEdBQUcsSUFBSSxDQUFDLElBQUksS0FBSyxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQzFELE1BQU0sUUFBUSxHQUFHOzs7Ozs7OENBTXlCLGVBQWU7Ozs7Ozs7OztRQVNyRCxJQUFJLENBQUMsT0FBTyxDQUFDOzs7Ozs7O0tBT2hCLENBQUM7UUFFRixPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7Z2V0TWFpbkhlYWRlclN0cmluZyBhcyBtYWluLCBXZWJHUFVQcm9ncmFtfSBmcm9tICcuL3dlYmdwdV9wcm9ncmFtJztcbmltcG9ydCB7Y29tcHV0ZURpc3BhdGNoLCBmbGF0RGlzcGF0Y2hMYXlvdXR9IGZyb20gJy4vd2ViZ3B1X3V0aWwnO1xuXG5leHBvcnQgY2xhc3MgU2VhcmNoU29ydGVkUHJvZ3JhbSBpbXBsZW1lbnRzIFdlYkdQVVByb2dyYW0ge1xuICBvdXRwdXRTaGFwZTogbnVtYmVyW10gPSBbXTtcbiAgc2hhZGVyS2V5OiBzdHJpbmc7XG4gIGRpc3BhdGNoTGF5b3V0OiB7eDogbnVtYmVyW119O1xuICBkaXNwYXRjaDogW251bWJlciwgbnVtYmVyLCBudW1iZXJdO1xuICB2YXJpYWJsZU5hbWVzID0gWydzb3J0ZWRTZXF1ZW5jZScsICd2YWx1ZXMnXTtcbiAgdW5pZm9ybXMgPSAnbnVtSW5wdXRzIDogaTMyLCc7XG4gIHdvcmtncm91cFNpemU6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXSA9IFs2NCwgMSwgMV07XG4gIHNpemUgPSB0cnVlO1xuICBzaWRlOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3Iob3V0cHV0U2hhcGU6IFtudW1iZXIsIG51bWJlcl0sIHNpZGU6ICdsZWZ0J3wncmlnaHQnKSB7XG4gICAgdGhpcy5vdXRwdXRTaGFwZSA9IG91dHB1dFNoYXBlO1xuICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQgPSBmbGF0RGlzcGF0Y2hMYXlvdXQodGhpcy5vdXRwdXRTaGFwZSk7XG4gICAgdGhpcy5kaXNwYXRjaCA9IGNvbXB1dGVEaXNwYXRjaChcbiAgICAgICAgdGhpcy5kaXNwYXRjaExheW91dCwgdGhpcy5vdXRwdXRTaGFwZSwgdGhpcy53b3JrZ3JvdXBTaXplKTtcblxuICAgIHRoaXMuc2lkZSA9IHNpZGU7XG4gICAgdGhpcy5zaGFkZXJLZXkgPSBgc2VhcmNoX3NvcnRlZF8ke3NpZGV9YDtcbiAgfVxuXG4gIGdldFVzZXJDb2RlKCk6IHN0cmluZyB7XG4gICAgY29uc3QgYm91bmRDb21wYXJhdG9yID0gdGhpcy5zaWRlID09PSAnbGVmdCcgPyAnPCcgOiAnPD0nO1xuICAgIGNvbnN0IHVzZXJDb2RlID0gYFxuICAgICAgZm4gZmluZEJvdW5kKGJhdGNoOiBpMzIsIHZhbHVlOiBmMzIpIC0+IGkzMiB7XG4gICAgICAgIHZhciBsZWZ0ID0gaTMyKDApO1xuICAgICAgICB2YXIgcmlnaHQgPSB1bmlmb3Jtcy5udW1JbnB1dHM7XG4gICAgICAgIHdoaWxlIChsZWZ0IDwgcmlnaHQpIHtcbiAgICAgICAgICB2YXIgbWlkID0gKGxlZnQgKyByaWdodCkgLyAyO1xuICAgICAgICAgIGlmIChnZXRTb3J0ZWRTZXF1ZW5jZShiYXRjaCwgbWlkKSAke2JvdW5kQ29tcGFyYXRvcn0gdmFsdWUpIHtcbiAgICAgICAgICAgIGxlZnQgPSBtaWQgKyAxO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByaWdodCA9IG1pZDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJpZ2h0O1xuICAgICAgfVxuXG4gICAgICAke21haW4oJ2luZGV4Jyl9IHtcbiAgICAgICAgaWYgKGluZGV4IDwgdW5pZm9ybXMuc2l6ZSkge1xuICAgICAgICAgIGxldCBjb29yZHMgPSBnZXRDb29yZHNGcm9tSW5kZXgoaW5kZXgpO1xuICAgICAgICAgIGxldCB2YWx1ZSA9IGdldFZhbHVlc0J5T3V0cHV0SW5kZXgoaW5kZXgpO1xuICAgICAgICAgIHNldE91dHB1dEF0SW5kZXhJMzIoaW5kZXgsIGZpbmRCb3VuZChjb29yZHNbMF0sIHZhbHVlKSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICBgO1xuXG4gICAgcmV0dXJuIHVzZXJDb2RlO1xuICB9XG59XG4iXX0=","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { SearchSorted } from '@tensorflow/tfjs-core';\nimport { SearchSortedProgram } from '../search_sorted_webgpu';\nexport function searchSorted(args) {\n    const { inputs, backend, attrs } = args;\n    const { sortedSequence, values } = inputs;\n    const { side } = attrs;\n    const program = new SearchSortedProgram([values.shape[0], values.shape[1]], side);\n    const uniformData = [{ type: 'int32', data: [sortedSequence.shape[1]] }];\n    return backend.runWebGPUProgram(program, [sortedSequence, values], 'int32', uniformData);\n}\nexport const searchSortedConfig = {\n    kernelName: SearchSorted,\n    backendName: 'webgpu',\n    kernelFunc: searchSorted,\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VhcmNoU29ydGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9TZWFyY2hTb3J0ZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUEyQixZQUFZLEVBQW9ELE1BQU0sdUJBQXVCLENBQUM7QUFHaEksT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0seUJBQXlCLENBQUM7QUFFNUQsTUFBTSxVQUFVLFlBQVksQ0FBQyxJQUk1QjtJQUNDLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QyxNQUFNLEVBQUMsY0FBYyxFQUFFLE1BQU0sRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUN4QyxNQUFNLEVBQUMsSUFBSSxFQUFDLEdBQUcsS0FBSyxDQUFDO0lBRXJCLE1BQU0sT0FBTyxHQUNULElBQUksbUJBQW1CLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUN0RSxNQUFNLFdBQVcsR0FBRyxDQUFDLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDO0lBQ3ZFLE9BQU8sT0FBTyxDQUFDLGdCQUFnQixDQUMzQixPQUFPLEVBQUUsQ0FBQyxjQUFjLEVBQUUsTUFBTSxDQUFDLEVBQUUsT0FBTyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0FBQy9ELENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBaUI7SUFDOUMsVUFBVSxFQUFFLFlBQVk7SUFDeEIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLFlBQXFDO0NBQ2xELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7S2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBTZWFyY2hTb3J0ZWQsIFNlYXJjaFNvcnRlZEF0dHJzLCBTZWFyY2hTb3J0ZWRJbnB1dHMsIFRlbnNvckluZm99IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuaW1wb3J0IHtTZWFyY2hTb3J0ZWRQcm9ncmFtfSBmcm9tICcuLi9zZWFyY2hfc29ydGVkX3dlYmdwdSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBzZWFyY2hTb3J0ZWQoYXJnczoge1xuICBpbnB1dHM6IFNlYXJjaFNvcnRlZElucHV0cyxcbiAgYmFja2VuZDogV2ViR1BVQmFja2VuZCxcbiAgYXR0cnM6IFNlYXJjaFNvcnRlZEF0dHJzXG59KTogVGVuc29ySW5mbyB7XG4gIGNvbnN0IHtpbnB1dHMsIGJhY2tlbmQsIGF0dHJzfSA9IGFyZ3M7XG4gIGNvbnN0IHtzb3J0ZWRTZXF1ZW5jZSwgdmFsdWVzfSA9IGlucHV0cztcbiAgY29uc3Qge3NpZGV9ID0gYXR0cnM7XG5cbiAgY29uc3QgcHJvZ3JhbSA9XG4gICAgICBuZXcgU2VhcmNoU29ydGVkUHJvZ3JhbShbdmFsdWVzLnNoYXBlWzBdLCB2YWx1ZXMuc2hhcGVbMV1dLCBzaWRlKTtcbiAgY29uc3QgdW5pZm9ybURhdGEgPSBbe3R5cGU6ICdpbnQzMicsIGRhdGE6IFtzb3J0ZWRTZXF1ZW5jZS5zaGFwZVsxXV19XTtcbiAgcmV0dXJuIGJhY2tlbmQucnVuV2ViR1BVUHJvZ3JhbShcbiAgICAgIHByb2dyYW0sIFtzb3J0ZWRTZXF1ZW5jZSwgdmFsdWVzXSwgJ2ludDMyJywgdW5pZm9ybURhdGEpO1xufVxuXG5leHBvcnQgY29uc3Qgc2VhcmNoU29ydGVkQ29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IFNlYXJjaFNvcnRlZCxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBzZWFyY2hTb3J0ZWQgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jLFxufTtcbiJdfQ==","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class SelectProgram {\n    constructor(cRank, shape, rank) {\n        this.variableNames = ['c', 'a', 'b'];\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = shape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.cRank = cRank;\n        this.rank = rank;\n        this.shaderKey = 'select';\n    }\n    getUserCode() {\n        // TODO(WGSL): below code can be merged with getUserCode.\n        let cCoords;\n        let abCoords;\n        if (this.rank > 4) {\n            throw Error(`Where for rank ${this.rank} is not yet supported`);\n        }\n        if (this.rank === 1) {\n            abCoords = `resRC`;\n            cCoords = `resRC`;\n        }\n        else {\n            const currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n            const cCoordVars = [];\n            const abCoordVars = [];\n            for (let i = 0; i < this.outputShape.length; i++) {\n                abCoordVars.push(`${currentCoords[i]}`);\n                if (i < this.cRank) {\n                    cCoordVars.push(`${currentCoords[i]}`);\n                }\n            }\n            cCoords = cCoordVars.join();\n            abCoords = abCoordVars.join();\n        }\n        const userCode = `\n      ${main('index')} {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let cVal = getC(${cCoords});\n          if (cVal >= 1.0) {\n            setOutputAtIndex(index, getA(${abCoords}));\n          } else {\n            setOutputAtIndex(index, getB(${abCoords}));\n          }\n        }\n      }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0X3dlYmdwdS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL3NlbGVjdF93ZWJncHUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLG1CQUFtQixJQUFJLElBQUksRUFBZ0IsTUFBTSxrQkFBa0IsQ0FBQztBQUM1RSxPQUFPLEVBQUMsZUFBZSxFQUFFLGtCQUFrQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRWxFLE1BQU0sT0FBTyxhQUFhO0lBV3hCLFlBQVksS0FBYSxFQUFFLEtBQWUsRUFBRSxJQUFZO1FBVnhELGtCQUFhLEdBQUcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBS2hDLGtCQUFhLEdBQTZCLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUdyRCxTQUFJLEdBQUcsSUFBSSxDQUFDO1FBR1YsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7UUFDekIsSUFBSSxDQUFDLGNBQWMsR0FBRyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxlQUFlLENBQzNCLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFFL0QsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLFNBQVMsR0FBRyxRQUFRLENBQUM7SUFDNUIsQ0FBQztJQUVELFdBQVc7UUFDVCx5REFBeUQ7UUFDekQsSUFBSSxPQUFPLENBQUM7UUFDWixJQUFJLFFBQVEsQ0FBQztRQUNiLElBQUksSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLEVBQUU7WUFDakIsTUFBTSxLQUFLLENBQUMsa0JBQWtCLElBQUksQ0FBQyxJQUFJLHVCQUF1QixDQUFDLENBQUM7U0FDakU7UUFFRCxJQUFJLElBQUksQ0FBQyxJQUFJLEtBQUssQ0FBQyxFQUFFO1lBQ25CLFFBQVEsR0FBRyxPQUFPLENBQUM7WUFDbkIsT0FBTyxHQUFHLE9BQU8sQ0FBQztTQUNuQjthQUFNO1lBQ0wsTUFBTSxhQUFhLEdBQUcsQ0FBQyxTQUFTLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxTQUFTLENBQUMsQ0FBQztZQUNuRSxNQUFNLFVBQVUsR0FBRyxFQUFFLENBQUM7WUFDdEIsTUFBTSxXQUFXLEdBQUcsRUFBRSxDQUFDO1lBQ3ZCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtnQkFDaEQsV0FBVyxDQUFDLElBQUksQ0FBQyxHQUFHLGFBQWEsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7Z0JBQ3hDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLEVBQUU7b0JBQ2xCLFVBQVUsQ0FBQyxJQUFJLENBQUMsR0FBRyxhQUFhLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO2lCQUN4QzthQUNGO1lBQ0QsT0FBTyxHQUFHLFVBQVUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUM1QixRQUFRLEdBQUcsV0FBVyxDQUFDLElBQUksRUFBRSxDQUFDO1NBQy9CO1FBRUQsTUFBTSxRQUFRLEdBQUc7UUFDYixJQUFJLENBQUMsT0FBTyxDQUFDOzs7NEJBR08sT0FBTzs7MkNBRVEsUUFBUTs7MkNBRVIsUUFBUTs7OztLQUk5QyxDQUFDO1FBQ0YsT0FBTyxRQUFRLENBQUM7SUFDbEIsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge2dldE1haW5IZWFkZXJTdHJpbmcgYXMgbWFpbiwgV2ViR1BVUHJvZ3JhbX0gZnJvbSAnLi93ZWJncHVfcHJvZ3JhbSc7XG5pbXBvcnQge2NvbXB1dGVEaXNwYXRjaCwgZmxhdERpc3BhdGNoTGF5b3V0fSBmcm9tICcuL3dlYmdwdV91dGlsJztcblxuZXhwb3J0IGNsYXNzIFNlbGVjdFByb2dyYW0gaW1wbGVtZW50cyBXZWJHUFVQcm9ncmFtIHtcbiAgdmFyaWFibGVOYW1lcyA9IFsnYycsICdhJywgJ2InXTtcbiAgb3V0cHV0U2hhcGU6IG51bWJlcltdO1xuICBzaGFkZXJLZXk6IHN0cmluZztcbiAgZGlzcGF0Y2hMYXlvdXQ6IHt4OiBudW1iZXJbXX07XG4gIGRpc3BhdGNoOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl07XG4gIHdvcmtncm91cFNpemU6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXSA9IFs2NCwgMSwgMV07XG4gIGNSYW5rOiBudW1iZXI7XG4gIHJhbms6IG51bWJlcjtcbiAgc2l6ZSA9IHRydWU7XG5cbiAgY29uc3RydWN0b3IoY1Jhbms6IG51bWJlciwgc2hhcGU6IG51bWJlcltdLCByYW5rOiBudW1iZXIpIHtcbiAgICB0aGlzLm91dHB1dFNoYXBlID0gc2hhcGU7XG4gICAgdGhpcy5kaXNwYXRjaExheW91dCA9IGZsYXREaXNwYXRjaExheW91dCh0aGlzLm91dHB1dFNoYXBlKTtcbiAgICB0aGlzLmRpc3BhdGNoID0gY29tcHV0ZURpc3BhdGNoKFxuICAgICAgICB0aGlzLmRpc3BhdGNoTGF5b3V0LCB0aGlzLm91dHB1dFNoYXBlLCB0aGlzLndvcmtncm91cFNpemUpO1xuXG4gICAgdGhpcy5jUmFuayA9IGNSYW5rO1xuICAgIHRoaXMucmFuayA9IHJhbms7XG4gICAgdGhpcy5zaGFkZXJLZXkgPSAnc2VsZWN0JztcbiAgfVxuXG4gIGdldFVzZXJDb2RlKCk6IHN0cmluZyB7XG4gICAgLy8gVE9ETyhXR1NMKTogYmVsb3cgY29kZSBjYW4gYmUgbWVyZ2VkIHdpdGggZ2V0VXNlckNvZGUuXG4gICAgbGV0IGNDb29yZHM7XG4gICAgbGV0IGFiQ29vcmRzO1xuICAgIGlmICh0aGlzLnJhbmsgPiA0KSB7XG4gICAgICB0aHJvdyBFcnJvcihgV2hlcmUgZm9yIHJhbmsgJHt0aGlzLnJhbmt9IGlzIG5vdCB5ZXQgc3VwcG9ydGVkYCk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMucmFuayA9PT0gMSkge1xuICAgICAgYWJDb29yZHMgPSBgcmVzUkNgO1xuICAgICAgY0Nvb3JkcyA9IGByZXNSQ2A7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGN1cnJlbnRDb29yZHMgPSBbJ3Jlc1JDLngnLCAncmVzUkMueScsICdyZXNSQy56JywgJ3Jlc1JDLncnXTtcbiAgICAgIGNvbnN0IGNDb29yZFZhcnMgPSBbXTtcbiAgICAgIGNvbnN0IGFiQ29vcmRWYXJzID0gW107XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMub3V0cHV0U2hhcGUubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgYWJDb29yZFZhcnMucHVzaChgJHtjdXJyZW50Q29vcmRzW2ldfWApO1xuICAgICAgICBpZiAoaSA8IHRoaXMuY1JhbmspIHtcbiAgICAgICAgICBjQ29vcmRWYXJzLnB1c2goYCR7Y3VycmVudENvb3Jkc1tpXX1gKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgY0Nvb3JkcyA9IGNDb29yZFZhcnMuam9pbigpO1xuICAgICAgYWJDb29yZHMgPSBhYkNvb3JkVmFycy5qb2luKCk7XG4gICAgfVxuXG4gICAgY29uc3QgdXNlckNvZGUgPSBgXG4gICAgICAke21haW4oJ2luZGV4Jyl9IHtcbiAgICAgICAgaWYgKGluZGV4IDwgdW5pZm9ybXMuc2l6ZSkge1xuICAgICAgICAgIGxldCByZXNSQyA9IGdldENvb3Jkc0Zyb21JbmRleChpbmRleCk7XG4gICAgICAgICAgbGV0IGNWYWwgPSBnZXRDKCR7Y0Nvb3Jkc30pO1xuICAgICAgICAgIGlmIChjVmFsID49IDEuMCkge1xuICAgICAgICAgICAgc2V0T3V0cHV0QXRJbmRleChpbmRleCwgZ2V0QSgke2FiQ29vcmRzfSkpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzZXRPdXRwdXRBdEluZGV4KGluZGV4LCBnZXRCKCR7YWJDb29yZHN9KSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgYDtcbiAgICByZXR1cm4gdXNlckNvZGU7XG4gIH1cbn1cbiJdfQ==","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Select, upcastType } from '@tensorflow/tfjs-core';\nimport { SelectProgram } from '../select_webgpu';\nexport function select(args) {\n    const { inputs, backend } = args;\n    const { condition, t, e } = inputs;\n    const program = new SelectProgram(condition.shape.length, t.shape, t.shape.length);\n    return backend.runWebGPUProgram(program, [condition, t, e], upcastType(t.dtype, e.dtype));\n}\nexport const selectConfig = {\n    kernelName: Select,\n    backendName: 'webgpu',\n    kernelFunc: select\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VsZWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9TZWxlY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUEyQixNQUFNLEVBQTRCLFVBQVUsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRzdHLE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUUvQyxNQUFNLFVBQVUsTUFBTSxDQUFDLElBQW9EO0lBRXpFLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFDLEdBQUcsSUFBSSxDQUFDO0lBQy9CLE1BQU0sRUFBQyxTQUFTLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUVqQyxNQUFNLE9BQU8sR0FDVCxJQUFJLGFBQWEsQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDdkUsT0FBTyxPQUFPLENBQUMsZ0JBQWdCLENBQzNCLE9BQU8sRUFBRSxDQUFDLFNBQVMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsVUFBVSxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7QUFDaEUsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBaUI7SUFDeEMsVUFBVSxFQUFFLE1BQU07SUFDbEIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLE1BQStCO0NBQzVDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7S2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBTZWxlY3QsIFNlbGVjdElucHV0cywgVGVuc29ySW5mbywgdXBjYXN0VHlwZX0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge1NlbGVjdFByb2dyYW19IGZyb20gJy4uL3NlbGVjdF93ZWJncHUnO1xuXG5leHBvcnQgZnVuY3Rpb24gc2VsZWN0KGFyZ3M6IHtpbnB1dHM6IFNlbGVjdElucHV0cywgYmFja2VuZDogV2ViR1BVQmFja2VuZH0pOlxuICAgIFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kfSA9IGFyZ3M7XG4gIGNvbnN0IHtjb25kaXRpb24sIHQsIGV9ID0gaW5wdXRzO1xuXG4gIGNvbnN0IHByb2dyYW0gPVxuICAgICAgbmV3IFNlbGVjdFByb2dyYW0oY29uZGl0aW9uLnNoYXBlLmxlbmd0aCwgdC5zaGFwZSwgdC5zaGFwZS5sZW5ndGgpO1xuICByZXR1cm4gYmFja2VuZC5ydW5XZWJHUFVQcm9ncmFtKFxuICAgICAgcHJvZ3JhbSwgW2NvbmRpdGlvbiwgdCwgZV0sIHVwY2FzdFR5cGUodC5kdHlwZSwgZS5kdHlwZSkpO1xufVxuXG5leHBvcnQgY29uc3Qgc2VsZWN0Q29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IFNlbGVjdCxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBzZWxlY3QgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Selu } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { UnaryOpType } from '../unary_op_util';\nexport const selu = unaryKernelFunc({ opType: UnaryOpType.SELU });\nexport const seluConfig = {\n    kernelName: Selu,\n    backendName: 'webgpu',\n    kernelFunc: selu\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VsdS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvU2VsdS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQWUsSUFBSSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFFekQsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9DQUFvQyxDQUFDO0FBRW5FLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUU3QyxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQUcsZUFBZSxDQUFDLEVBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxJQUFJLEVBQUMsQ0FBQyxDQUFDO0FBRWhFLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBaUI7SUFDdEMsVUFBVSxFQUFFLElBQUk7SUFDaEIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLElBQUk7Q0FDakIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIyIEdvb2dsZSBMTEMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtLZXJuZWxDb25maWcsIFNlbHV9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7dW5hcnlLZXJuZWxGdW5jfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMva2VybmVsX2Z1bmNzX3V0aWxzJztcblxuaW1wb3J0IHtVbmFyeU9wVHlwZX0gZnJvbSAnLi4vdW5hcnlfb3BfdXRpbCc7XG5cbmV4cG9ydCBjb25zdCBzZWx1ID0gdW5hcnlLZXJuZWxGdW5jKHtvcFR5cGU6IFVuYXJ5T3BUeXBlLlNFTFV9KTtcblxuZXhwb3J0IGNvbnN0IHNlbHVDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogU2VsdSxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBzZWx1XG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sigmoid } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { UnaryOpType } from '../unary_op_util';\nexport const sigmoid = unaryKernelFunc({ opType: UnaryOpType.SIGMOID });\nexport const sigmoidConfig = {\n    kernelName: Sigmoid,\n    backendName: 'webgpu',\n    kernelFunc: sigmoid,\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2lnbW9pZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvU2lnbW9pZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQWUsT0FBTyxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDNUQsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9DQUFvQyxDQUFDO0FBQ25FLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUU3QyxNQUFNLENBQUMsTUFBTSxPQUFPLEdBQUcsZUFBZSxDQUFDLEVBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxPQUFPLEVBQUMsQ0FBQyxDQUFDO0FBRXRFLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBaUI7SUFDekMsVUFBVSxFQUFFLE9BQU87SUFDbkIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLE9BQU87Q0FDcEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtLZXJuZWxDb25maWcsIFNpZ21vaWR9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5pbXBvcnQge3VuYXJ5S2VybmVsRnVuY30gZnJvbSAnLi4va2VybmVsX3V0aWxzL2tlcm5lbF9mdW5jc191dGlscyc7XG5pbXBvcnQge1VuYXJ5T3BUeXBlfSBmcm9tICcuLi91bmFyeV9vcF91dGlsJztcblxuZXhwb3J0IGNvbnN0IHNpZ21vaWQgPSB1bmFyeUtlcm5lbEZ1bmMoe29wVHlwZTogVW5hcnlPcFR5cGUuU0lHTU9JRH0pO1xuXG5leHBvcnQgY29uc3Qgc2lnbW9pZENvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBTaWdtb2lkLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IHNpZ21vaWQsXG59O1xuIl19","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sign } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { UnaryOpType } from '../unary_op_util';\nexport const sign = unaryKernelFunc({ opType: UnaryOpType.SIGN });\nexport const signConfig = {\n    kernelName: Sign,\n    backendName: 'webgpu',\n    kernelFunc: sign\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2lnbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvU2lnbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQWUsSUFBSSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFFekQsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9DQUFvQyxDQUFDO0FBRW5FLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUU3QyxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQUcsZUFBZSxDQUFDLEVBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxJQUFJLEVBQUMsQ0FBQyxDQUFDO0FBRWhFLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBaUI7SUFDdEMsVUFBVSxFQUFFLElBQUk7SUFDaEIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLElBQUk7Q0FDakIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIyIEdvb2dsZSBMTEMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtLZXJuZWxDb25maWcsIFNpZ259IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7dW5hcnlLZXJuZWxGdW5jfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMva2VybmVsX2Z1bmNzX3V0aWxzJztcblxuaW1wb3J0IHtVbmFyeU9wVHlwZX0gZnJvbSAnLi4vdW5hcnlfb3BfdXRpbCc7XG5cbmV4cG9ydCBjb25zdCBzaWduID0gdW5hcnlLZXJuZWxGdW5jKHtvcFR5cGU6IFVuYXJ5T3BUeXBlLlNJR059KTtcblxuZXhwb3J0IGNvbnN0IHNpZ25Db25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogU2lnbixcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBzaWduXG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sin } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { UnaryOpType } from '../unary_op_util';\nexport const sin = unaryKernelFunc({ opType: UnaryOpType.SIN });\nexport const sinConfig = {\n    kernelName: Sin,\n    backendName: 'webgpu',\n    kernelFunc: sin\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2luLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9TaW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFlLEdBQUcsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRXhELE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUVuRSxPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sa0JBQWtCLENBQUM7QUFFN0MsTUFBTSxDQUFDLE1BQU0sR0FBRyxHQUFHLGVBQWUsQ0FBQyxFQUFDLE1BQU0sRUFBRSxXQUFXLENBQUMsR0FBRyxFQUFDLENBQUMsQ0FBQztBQUU5RCxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQWlCO0lBQ3JDLFVBQVUsRUFBRSxHQUFHO0lBQ2YsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLEdBQUc7Q0FDaEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtLZXJuZWxDb25maWcsIFNpbn0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHt1bmFyeUtlcm5lbEZ1bmN9IGZyb20gJy4uL2tlcm5lbF91dGlscy9rZXJuZWxfZnVuY3NfdXRpbHMnO1xuXG5pbXBvcnQge1VuYXJ5T3BUeXBlfSBmcm9tICcuLi91bmFyeV9vcF91dGlsJztcblxuZXhwb3J0IGNvbnN0IHNpbiA9IHVuYXJ5S2VybmVsRnVuYyh7b3BUeXBlOiBVbmFyeU9wVHlwZS5TSU59KTtcblxuZXhwb3J0IGNvbnN0IHNpbkNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBTaW4sXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogc2luXG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sinh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { UnaryOpType } from '../unary_op_util';\nexport const sinh = unaryKernelFunc({ opType: UnaryOpType.SINH });\nexport const sinhConfig = {\n    kernelName: Sinh,\n    backendName: 'webgpu',\n    kernelFunc: sinh\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2luaC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvU2luaC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQWUsSUFBSSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFFekQsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9DQUFvQyxDQUFDO0FBRW5FLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUU3QyxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQUcsZUFBZSxDQUFDLEVBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxJQUFJLEVBQUMsQ0FBQyxDQUFDO0FBRWhFLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBaUI7SUFDdEMsVUFBVSxFQUFFLElBQUk7SUFDaEIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLElBQUk7Q0FDakIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtLZXJuZWxDb25maWcsIFNpbmh9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7dW5hcnlLZXJuZWxGdW5jfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMva2VybmVsX2Z1bmNzX3V0aWxzJztcblxuaW1wb3J0IHtVbmFyeU9wVHlwZX0gZnJvbSAnLi4vdW5hcnlfb3BfdXRpbCc7XG5cbmV4cG9ydCBjb25zdCBzaW5oID0gdW5hcnlLZXJuZWxGdW5jKHtvcFR5cGU6IFVuYXJ5T3BUeXBlLlNJTkh9KTtcblxuZXhwb3J0IGNvbnN0IHNpbmhDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogU2luaCxcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBzaW5oXG59O1xuIl19","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Softplus } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { UnaryOpType } from '../unary_op_util';\nexport const softplus = unaryKernelFunc({ opType: UnaryOpType.SOFTPLUS });\nexport const softplusConfig = {\n    kernelName: Softplus,\n    backendName: 'webgpu',\n    kernelFunc: softplus\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU29mdHBsdXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL1NvZnRwbHVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBZSxRQUFRLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUU3RCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sb0NBQW9DLENBQUM7QUFFbkUsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBRTdDLE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBRyxlQUFlLENBQUMsRUFBQyxNQUFNLEVBQUUsV0FBVyxDQUFDLFFBQVEsRUFBQyxDQUFDLENBQUM7QUFFeEUsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFpQjtJQUMxQyxVQUFVLEVBQUUsUUFBUTtJQUNwQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsUUFBUTtDQUNyQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjIgR29vZ2xlIExMQy5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0tlcm5lbENvbmZpZywgU29mdHBsdXN9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7dW5hcnlLZXJuZWxGdW5jfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMva2VybmVsX2Z1bmNzX3V0aWxzJztcblxuaW1wb3J0IHtVbmFyeU9wVHlwZX0gZnJvbSAnLi4vdW5hcnlfb3BfdXRpbCc7XG5cbmV4cG9ydCBjb25zdCBzb2Z0cGx1cyA9IHVuYXJ5S2VybmVsRnVuYyh7b3BUeXBlOiBVbmFyeU9wVHlwZS5TT0ZUUExVU30pO1xuXG5leHBvcnQgY29uc3Qgc29mdHBsdXNDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogU29mdHBsdXMsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogc29mdHBsdXNcbn07XG4iXX0=","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { padCommon } from './pad_webgpu';\nimport { getSwitchedCoords } from './transpose_webgpu';\nimport { getCoordsDataType, getCoordsFromIndexSnippet, getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class SpaceToBatchNDProgram {\n    constructor(xShape, paddedXShape, paddings, reshapedPaddedXShape, newDim, paddedXShapeStridesShapeLength) {\n        this.variableNames = ['x'];\n        this.outputShape = [];\n        this.uniforms = '';\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        const outputShape = new Array(reshapedPaddedXShape.length);\n        for (let i = 0; i < outputShape.length; i++) {\n            outputShape[i] = reshapedPaddedXShape[newDim[i]];\n        }\n        this.outputShape = outputShape;\n        this.newDim = newDim;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.xShape = xShape;\n        this.paddedXShape = paddedXShape;\n        this.uniforms += `reshapedPaddedXShape : ${getCoordsDataType(reshapedPaddedXShape.length)}, paddedXShapeStrides : ${getCoordsDataType(paddedXShapeStridesShapeLength)}, `;\n        paddings.map((_, i) => {\n            this.uniforms += ` pad${i} : vec2<i32>,`;\n        });\n        this.shaderKey = `spaceToBatchND_${newDim}`;\n    }\n    getUserCode() {\n        const dtype = getCoordsDataType(this.outputShape.length);\n        const switched = getSwitchedCoords(this.newDim);\n        const userCode = `\n      ${getCoordsFromIndexSnippet(this.paddedXShape, 'PaddedX')}\n      ${main('index')} {\n        if(index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let switchedIndex = getIndexFromCoords${this.outputShape.length}D(${dtype}(${switched}), uniforms.reshapedPaddedXShape);\n          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);\n          ${padCommon(this.xShape, true)}\n        }\n      }\n    `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BhY2VfdG9fYmF0Y2hORF93ZWJncHUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9zcGFjZV90b19iYXRjaE5EX3dlYmdwdS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsU0FBUyxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBQ3ZDLE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBQyxpQkFBaUIsRUFBRSx5QkFBeUIsRUFBRSxtQkFBbUIsSUFBSSxJQUFJLEVBQWdCLE1BQU0sa0JBQWtCLENBQUM7QUFDMUgsT0FBTyxFQUFDLGVBQWUsRUFBRSxrQkFBa0IsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUVsRSxNQUFNLE9BQU8scUJBQXFCO0lBYWhDLFlBQ0ksTUFBZ0IsRUFBRSxZQUFzQixFQUN4QyxRQUFpQyxFQUFFLG9CQUE4QixFQUNqRSxNQUFnQixFQUFFLDhCQUFzQztRQWY1RCxrQkFBYSxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdEIsZ0JBQVcsR0FBYSxFQUFFLENBQUM7UUFJM0IsYUFBUSxHQUFHLEVBQUUsQ0FBQztRQUNkLGtCQUFhLEdBQTZCLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUlyRCxTQUFJLEdBQUcsSUFBSSxDQUFDO1FBTVYsTUFBTSxXQUFXLEdBQWEsSUFBSSxLQUFLLENBQUMsb0JBQW9CLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDckUsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFdBQVcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDM0MsV0FBVyxDQUFDLENBQUMsQ0FBQyxHQUFHLG9CQUFvQixDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ2xEO1FBQ0QsSUFBSSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUM7UUFDL0IsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDckIsSUFBSSxDQUFDLGNBQWMsR0FBRyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxlQUFlLENBQzNCLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDL0QsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDckIsSUFBSSxDQUFDLFlBQVksR0FBRyxZQUFZLENBQUM7UUFDakMsSUFBSSxDQUFDLFFBQVEsSUFBSSwwQkFDYixpQkFBaUIsQ0FDYixvQkFBb0IsQ0FBQyxNQUFNLENBQUMsMkJBQ2hDLGlCQUFpQixDQUFDLDhCQUE4QixDQUFDLElBQUksQ0FBQztRQUMxRCxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3BCLElBQUksQ0FBQyxRQUFRLElBQUksT0FBTyxDQUFDLGVBQWUsQ0FBQztRQUMzQyxDQUFDLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxTQUFTLEdBQUcsa0JBQWtCLE1BQU0sRUFBRSxDQUFDO0lBQzlDLENBQUM7SUFFRCxXQUFXO1FBQ1QsTUFBTSxLQUFLLEdBQUcsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN6RCxNQUFNLFFBQVEsR0FBRyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFFaEQsTUFBTSxRQUFRLEdBQUc7UUFDYix5QkFBeUIsQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLFNBQVMsQ0FBQztRQUN2RCxJQUFJLENBQUMsT0FBTyxDQUFDOzs7a0RBRzZCLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxLQUNqRSxLQUFLLElBQUksUUFBUTs7WUFFYixTQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUM7OztLQUduQyxDQUFDO1FBQ0YsT0FBTyxRQUFRLENBQUM7SUFDbEIsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjMgR29vZ2xlIExMQy5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge3BhZENvbW1vbn0gZnJvbSAnLi9wYWRfd2ViZ3B1JztcbmltcG9ydCB7Z2V0U3dpdGNoZWRDb29yZHN9IGZyb20gJy4vdHJhbnNwb3NlX3dlYmdwdSc7XG5pbXBvcnQge2dldENvb3Jkc0RhdGFUeXBlLCBnZXRDb29yZHNGcm9tSW5kZXhTbmlwcGV0LCBnZXRNYWluSGVhZGVyU3RyaW5nIGFzIG1haW4sIFdlYkdQVVByb2dyYW19IGZyb20gJy4vd2ViZ3B1X3Byb2dyYW0nO1xuaW1wb3J0IHtjb21wdXRlRGlzcGF0Y2gsIGZsYXREaXNwYXRjaExheW91dH0gZnJvbSAnLi93ZWJncHVfdXRpbCc7XG5cbmV4cG9ydCBjbGFzcyBTcGFjZVRvQmF0Y2hORFByb2dyYW0gaW1wbGVtZW50cyBXZWJHUFVQcm9ncmFtIHtcbiAgdmFyaWFibGVOYW1lcyA9IFsneCddO1xuICBvdXRwdXRTaGFwZTogbnVtYmVyW10gPSBbXTtcbiAgc2hhZGVyS2V5OiBzdHJpbmc7XG4gIGRpc3BhdGNoTGF5b3V0OiB7eDogbnVtYmVyW119O1xuICBkaXNwYXRjaDogW251bWJlciwgbnVtYmVyLCBudW1iZXJdO1xuICB1bmlmb3JtcyA9ICcnO1xuICB3b3JrZ3JvdXBTaXplOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl0gPSBbNjQsIDEsIDFdO1xuICBuZXdEaW06IG51bWJlcltdO1xuICB4U2hhcGU6IG51bWJlcltdO1xuICBwYWRkZWRYU2hhcGU6IG51bWJlcltdO1xuICBzaXplID0gdHJ1ZTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICAgIHhTaGFwZTogbnVtYmVyW10sIHBhZGRlZFhTaGFwZTogbnVtYmVyW10sXG4gICAgICBwYWRkaW5nczogQXJyYXk8W251bWJlciwgbnVtYmVyXT4sIHJlc2hhcGVkUGFkZGVkWFNoYXBlOiBudW1iZXJbXSxcbiAgICAgIG5ld0RpbTogbnVtYmVyW10sIHBhZGRlZFhTaGFwZVN0cmlkZXNTaGFwZUxlbmd0aDogbnVtYmVyKSB7XG4gICAgY29uc3Qgb3V0cHV0U2hhcGU6IG51bWJlcltdID0gbmV3IEFycmF5KHJlc2hhcGVkUGFkZGVkWFNoYXBlLmxlbmd0aCk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBvdXRwdXRTaGFwZS5sZW5ndGg7IGkrKykge1xuICAgICAgb3V0cHV0U2hhcGVbaV0gPSByZXNoYXBlZFBhZGRlZFhTaGFwZVtuZXdEaW1baV1dO1xuICAgIH1cbiAgICB0aGlzLm91dHB1dFNoYXBlID0gb3V0cHV0U2hhcGU7XG4gICAgdGhpcy5uZXdEaW0gPSBuZXdEaW07XG4gICAgdGhpcy5kaXNwYXRjaExheW91dCA9IGZsYXREaXNwYXRjaExheW91dCh0aGlzLm91dHB1dFNoYXBlKTtcbiAgICB0aGlzLmRpc3BhdGNoID0gY29tcHV0ZURpc3BhdGNoKFxuICAgICAgICB0aGlzLmRpc3BhdGNoTGF5b3V0LCB0aGlzLm91dHB1dFNoYXBlLCB0aGlzLndvcmtncm91cFNpemUpO1xuICAgIHRoaXMueFNoYXBlID0geFNoYXBlO1xuICAgIHRoaXMucGFkZGVkWFNoYXBlID0gcGFkZGVkWFNoYXBlO1xuICAgIHRoaXMudW5pZm9ybXMgKz0gYHJlc2hhcGVkUGFkZGVkWFNoYXBlIDogJHtcbiAgICAgICAgZ2V0Q29vcmRzRGF0YVR5cGUoXG4gICAgICAgICAgICByZXNoYXBlZFBhZGRlZFhTaGFwZS5sZW5ndGgpfSwgcGFkZGVkWFNoYXBlU3RyaWRlcyA6ICR7XG4gICAgICAgIGdldENvb3Jkc0RhdGFUeXBlKHBhZGRlZFhTaGFwZVN0cmlkZXNTaGFwZUxlbmd0aCl9LCBgO1xuICAgIHBhZGRpbmdzLm1hcCgoXywgaSkgPT4ge1xuICAgICAgdGhpcy51bmlmb3JtcyArPSBgIHBhZCR7aX0gOiB2ZWMyPGkzMj4sYDtcbiAgICB9KTtcbiAgICB0aGlzLnNoYWRlcktleSA9IGBzcGFjZVRvQmF0Y2hORF8ke25ld0RpbX1gO1xuICB9XG5cbiAgZ2V0VXNlckNvZGUoKTogc3RyaW5nIHtcbiAgICBjb25zdCBkdHlwZSA9IGdldENvb3Jkc0RhdGFUeXBlKHRoaXMub3V0cHV0U2hhcGUubGVuZ3RoKTtcbiAgICBjb25zdCBzd2l0Y2hlZCA9IGdldFN3aXRjaGVkQ29vcmRzKHRoaXMubmV3RGltKTtcblxuICAgIGNvbnN0IHVzZXJDb2RlID0gYFxuICAgICAgJHtnZXRDb29yZHNGcm9tSW5kZXhTbmlwcGV0KHRoaXMucGFkZGVkWFNoYXBlLCAnUGFkZGVkWCcpfVxuICAgICAgJHttYWluKCdpbmRleCcpfSB7XG4gICAgICAgIGlmKGluZGV4IDwgdW5pZm9ybXMuc2l6ZSkge1xuICAgICAgICAgIGxldCBjb29yZHMgPSBnZXRDb29yZHNGcm9tSW5kZXgoaW5kZXgpO1xuICAgICAgICAgIGxldCBzd2l0Y2hlZEluZGV4ID0gZ2V0SW5kZXhGcm9tQ29vcmRzJHt0aGlzLm91dHB1dFNoYXBlLmxlbmd0aH1EKCR7XG4gICAgICAgIGR0eXBlfSgke3N3aXRjaGVkfSksIHVuaWZvcm1zLnJlc2hhcGVkUGFkZGVkWFNoYXBlKTtcbiAgICAgICAgICBsZXQgcGFkZGVkQ29vcmRzID0gZ2V0UGFkZGVkWENvb3Jkc0Zyb21JbmRleChzd2l0Y2hlZEluZGV4KTtcbiAgICAgICAgICAke3BhZENvbW1vbih0aGlzLnhTaGFwZSwgdHJ1ZSl9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICBgO1xuICAgIHJldHVybiB1c2VyQ29kZTtcbiAgfVxufVxuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, SpaceToBatchND, util } from '@tensorflow/tfjs-core';\nimport { SpaceToBatchNDProgram } from '../space_to_batchND_webgpu';\nimport { reshape } from './Reshape';\nexport const spaceToBatchND = (args) => {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { blockShape, paddings } = attrs;\n    util.assert(x.shape.length <= 4, () => 'spaceToBatchND for rank > 4 with a WebGPU backend not ' +\n        'implemented yet');\n    const prod = blockShape.reduce((a, b) => a * b);\n    const completePaddings = [[0, 0]];\n    completePaddings.push(...paddings);\n    for (let i = 1 + blockShape.length; i < x.shape.length; ++i) {\n        completePaddings.push([0, 0]);\n    }\n    const paddedXShape = completePaddings.map((p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n    const reshapedPaddedShape = backend_util.getReshaped(paddedXShape, blockShape, prod, false);\n    const permutedReshapedPaddedPermutation = backend_util.getPermuted(reshapedPaddedShape.length, blockShape.length, false);\n    const flattenShape = backend_util.getReshapedPermuted(paddedXShape, blockShape, prod, false);\n    const paddedXShapeStrides = util.computeStrides(paddedXShape);\n    const program = new SpaceToBatchNDProgram(x.shape, paddedXShape, completePaddings, reshapedPaddedShape, permutedReshapedPaddedPermutation, paddedXShapeStrides.length);\n    const uniformData = [\n        { type: 'int32', data: reshapedPaddedShape },\n        { type: 'int32', data: paddedXShapeStrides }\n    ];\n    completePaddings.map(p => uniformData.push({ type: 'int32', data: [p[0], p[1]] }));\n    const paddedXT = backend.runWebGPUProgram(program, [x], x.dtype, uniformData);\n    const result = reshape({ inputs: { x: paddedXT }, backend, attrs: { shape: flattenShape } });\n    backend.disposeData(paddedXT.dataId);\n    return result;\n};\nexport const spaceToBatchNDConfig = {\n    kernelName: SpaceToBatchND,\n    backendName: 'webgpu',\n    kernelFunc: spaceToBatchND\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3BhY2VUb0JhdGNoTkQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL1NwYWNlVG9CYXRjaE5ELnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxZQUFZLEVBQTRCLGNBQWMsRUFBeUQsSUFBSSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFHMUosT0FBTyxFQUFDLHFCQUFxQixFQUFDLE1BQU0sNEJBQTRCLENBQUM7QUFFakUsT0FBTyxFQUFDLE9BQU8sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUVsQyxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsQ0FBQyxJQUk5QixFQUFjLEVBQUU7SUFDZixNQUFNLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFDdEMsTUFBTSxFQUFDLENBQUMsRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUNuQixNQUFNLEVBQUMsVUFBVSxFQUFFLFFBQVEsRUFBQyxHQUFHLEtBQUssQ0FBQztJQUVyQyxJQUFJLENBQUMsTUFBTSxDQUNQLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxJQUFJLENBQUMsRUFDbkIsR0FBRyxFQUFFLENBQUMsd0RBQXdEO1FBQzFELGlCQUFpQixDQUFDLENBQUM7SUFFM0IsTUFBTSxJQUFJLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUVoRCxNQUFNLGdCQUFnQixHQUE0QixDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDM0QsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEdBQUcsUUFBbUMsQ0FBQyxDQUFDO0lBQzlELEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLFVBQVUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxFQUFFO1FBQzNELGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQy9CO0lBRUQsTUFBTSxZQUFZLEdBQUcsZ0JBQWdCLENBQUMsR0FBRyxDQUNyQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxlQUFlLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDdkUsTUFBTSxtQkFBbUIsR0FDckIsWUFBWSxDQUFDLFdBQVcsQ0FBQyxZQUFZLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztJQUVwRSxNQUFNLGlDQUFpQyxHQUFHLFlBQVksQ0FBQyxXQUFXLENBQzlELG1CQUFtQixDQUFDLE1BQU0sRUFBRSxVQUFVLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBRTFELE1BQU0sWUFBWSxHQUNkLFlBQVksQ0FBQyxtQkFBbUIsQ0FBQyxZQUFZLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztJQUU1RSxNQUFNLG1CQUFtQixHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDOUQsTUFBTSxPQUFPLEdBQUcsSUFBSSxxQkFBcUIsQ0FDckMsQ0FBQyxDQUFDLEtBQUssRUFBRSxZQUFZLEVBQUUsZ0JBQWdCLEVBQUUsbUJBQW1CLEVBQzVELGlDQUFpQyxFQUFFLG1CQUFtQixDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ25FLE1BQU0sV0FBVyxHQUFHO1FBQ2xCLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsbUJBQW1CLEVBQUM7UUFDMUMsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxtQkFBbUIsRUFBQztLQUMzQyxDQUFDO0lBQ0YsZ0JBQWdCLENBQUMsR0FBRyxDQUNoQixDQUFDLENBQUMsRUFBRSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQztJQUNoRSxNQUFNLFFBQVEsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEtBQUssRUFBRSxXQUFXLENBQUMsQ0FBQztJQUM5RSxNQUFNLE1BQU0sR0FDUixPQUFPLENBQUMsRUFBQyxNQUFNLEVBQUUsRUFBQyxDQUFDLEVBQUUsUUFBUSxFQUFDLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxFQUFDLEtBQUssRUFBRSxZQUFZLEVBQUMsRUFBQyxDQUFDLENBQUM7SUFDNUUsT0FBTyxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDckMsT0FBTyxNQUFNLENBQUM7QUFDaEIsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQWlCO0lBQ2hELFVBQVUsRUFBRSxjQUFjO0lBQzFCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxjQUF1QztDQUNwRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge2JhY2tlbmRfdXRpbCwgS2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBTcGFjZVRvQmF0Y2hORCwgU3BhY2VUb0JhdGNoTkRBdHRycywgU3BhY2VUb0JhdGNoTkRJbnB1dHMsIFRlbnNvckluZm8sIHV0aWx9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuaW1wb3J0IHtTcGFjZVRvQmF0Y2hORFByb2dyYW19IGZyb20gJy4uL3NwYWNlX3RvX2JhdGNoTkRfd2ViZ3B1JztcblxuaW1wb3J0IHtyZXNoYXBlfSBmcm9tICcuL1Jlc2hhcGUnO1xuXG5leHBvcnQgY29uc3Qgc3BhY2VUb0JhdGNoTkQgPSAoYXJnczoge1xuICBpbnB1dHM6IFNwYWNlVG9CYXRjaE5ESW5wdXRzLFxuICBiYWNrZW5kOiBXZWJHUFVCYWNrZW5kLFxuICBhdHRyczogU3BhY2VUb0JhdGNoTkRBdHRyc1xufSk6IFRlbnNvckluZm8gPT4ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7eH0gPSBpbnB1dHM7XG4gIGNvbnN0IHtibG9ja1NoYXBlLCBwYWRkaW5nc30gPSBhdHRycztcblxuICB1dGlsLmFzc2VydChcbiAgICAgIHguc2hhcGUubGVuZ3RoIDw9IDQsXG4gICAgICAoKSA9PiAnc3BhY2VUb0JhdGNoTkQgZm9yIHJhbmsgPiA0IHdpdGggYSBXZWJHUFUgYmFja2VuZCBub3QgJyArXG4gICAgICAgICAgJ2ltcGxlbWVudGVkIHlldCcpO1xuXG4gIGNvbnN0IHByb2QgPSBibG9ja1NoYXBlLnJlZHVjZSgoYSwgYikgPT4gYSAqIGIpO1xuXG4gIGNvbnN0IGNvbXBsZXRlUGFkZGluZ3M6IEFycmF5PFtudW1iZXIsIG51bWJlcl0+ID0gW1swLCAwXV07XG4gIGNvbXBsZXRlUGFkZGluZ3MucHVzaCguLi5wYWRkaW5ncyBhcyBBcnJheTxbbnVtYmVyLCBudW1iZXJdPik7XG4gIGZvciAobGV0IGkgPSAxICsgYmxvY2tTaGFwZS5sZW5ndGg7IGkgPCB4LnNoYXBlLmxlbmd0aDsgKytpKSB7XG4gICAgY29tcGxldGVQYWRkaW5ncy5wdXNoKFswLCAwXSk7XG4gIH1cblxuICBjb25zdCBwYWRkZWRYU2hhcGUgPSBjb21wbGV0ZVBhZGRpbmdzLm1hcChcbiAgICAgIChwLCBpKSA9PiBwWzBdIC8qIGJlZm9yZVBhZCAqLyArIHguc2hhcGVbaV0gKyBwWzFdIC8qIGFmdGVyUGFkICovKTtcbiAgY29uc3QgcmVzaGFwZWRQYWRkZWRTaGFwZSA9XG4gICAgICBiYWNrZW5kX3V0aWwuZ2V0UmVzaGFwZWQocGFkZGVkWFNoYXBlLCBibG9ja1NoYXBlLCBwcm9kLCBmYWxzZSk7XG5cbiAgY29uc3QgcGVybXV0ZWRSZXNoYXBlZFBhZGRlZFBlcm11dGF0aW9uID0gYmFja2VuZF91dGlsLmdldFBlcm11dGVkKFxuICAgICAgcmVzaGFwZWRQYWRkZWRTaGFwZS5sZW5ndGgsIGJsb2NrU2hhcGUubGVuZ3RoLCBmYWxzZSk7XG5cbiAgY29uc3QgZmxhdHRlblNoYXBlID1cbiAgICAgIGJhY2tlbmRfdXRpbC5nZXRSZXNoYXBlZFBlcm11dGVkKHBhZGRlZFhTaGFwZSwgYmxvY2tTaGFwZSwgcHJvZCwgZmFsc2UpO1xuXG4gIGNvbnN0IHBhZGRlZFhTaGFwZVN0cmlkZXMgPSB1dGlsLmNvbXB1dGVTdHJpZGVzKHBhZGRlZFhTaGFwZSk7XG4gIGNvbnN0IHByb2dyYW0gPSBuZXcgU3BhY2VUb0JhdGNoTkRQcm9ncmFtKFxuICAgICAgeC5zaGFwZSwgcGFkZGVkWFNoYXBlLCBjb21wbGV0ZVBhZGRpbmdzLCByZXNoYXBlZFBhZGRlZFNoYXBlLFxuICAgICAgcGVybXV0ZWRSZXNoYXBlZFBhZGRlZFBlcm11dGF0aW9uLCBwYWRkZWRYU2hhcGVTdHJpZGVzLmxlbmd0aCk7XG4gIGNvbnN0IHVuaWZvcm1EYXRhID0gW1xuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiByZXNoYXBlZFBhZGRlZFNoYXBlfSxcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogcGFkZGVkWFNoYXBlU3RyaWRlc31cbiAgXTtcbiAgY29tcGxldGVQYWRkaW5ncy5tYXAoXG4gICAgICBwID0+IHVuaWZvcm1EYXRhLnB1c2goe3R5cGU6ICdpbnQzMicsIGRhdGE6IFtwWzBdLCBwWzFdXX0pKTtcbiAgY29uc3QgcGFkZGVkWFQgPSBiYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0ocHJvZ3JhbSwgW3hdLCB4LmR0eXBlLCB1bmlmb3JtRGF0YSk7XG4gIGNvbnN0IHJlc3VsdCA9XG4gICAgICByZXNoYXBlKHtpbnB1dHM6IHt4OiBwYWRkZWRYVH0sIGJhY2tlbmQsIGF0dHJzOiB7c2hhcGU6IGZsYXR0ZW5TaGFwZX19KTtcbiAgYmFja2VuZC5kaXNwb3NlRGF0YShwYWRkZWRYVC5kYXRhSWQpO1xuICByZXR1cm4gcmVzdWx0O1xufTtcblxuZXhwb3J0IGNvbnN0IHNwYWNlVG9CYXRjaE5EQ29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IFNwYWNlVG9CYXRjaE5ELFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IHNwYWNlVG9CYXRjaE5EIGFzIHVua25vd24gYXMgS2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { atomicAddSnippet } from './shader_util';\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class SparseSegmentSumProgram {\n    constructor(outShape, sparseSize, outputDtype) {\n        this.variableNames = ['input', 'indices', 'segmentIds'];\n        this.outputShape = [];\n        this.uniforms = 'segmentSize : i32, sparseSize : i32,';\n        this.workgroupSize = [64, 1, 1];\n        this.atomic = true;\n        this.outputShape = outShape;\n        this.type = outputDtype;\n        this.dispatchLayout = flatDispatchLayout([sparseSize]);\n        this.dispatch =\n            computeDispatch(this.dispatchLayout, [sparseSize], this.workgroupSize);\n        this.shaderKey = 'sparseSegmentSum';\n    }\n    getUserCode() {\n        const userCode = `\n    ${main('index')} {\n      if (index < uniforms.sparseSize) {\n        let indexInSegmentIds = index / uniforms.segmentSize;\n        let indexInSegment = index % uniforms.segmentSize;\n        let indexInInput = indices[indexInSegmentIds];\n        let segmentId = segmentIds[indexInSegmentIds];\n\n        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];\n        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;\n        ${atomicAddSnippet('&result[outIndex]', 'value', this.type)}\n      }\n    }\n  `;\n        return userCode;\n    }\n}\nexport class SparseSegmentIdCountProgram {\n    constructor(outShape, segmentIdsShape) {\n        this.variableNames = ['segmentIds'];\n        this.outputShape = [];\n        this.workgroupSize = [64, 1, 1];\n        this.atomic = true;\n        this.outputShape = [outShape];\n        this.dispatchLayout = flatDispatchLayout(segmentIdsShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, segmentIdsShape, this.workgroupSize);\n        this.shaderKey = 'sparseSegmentIdCountProgram';\n    }\n    getUserCode() {\n        const userCode = `\n    ${main('index')} {\n      if (index < uniforms.segmentIdsShape) {\n        let segmentId = segmentIds[index];\n        ${atomicAddSnippet('&result[segmentId]', '1', 'int32')}\n      }\n    }\n  `;\n        return userCode;\n    }\n}\nexport class SparseSegmentMeanProgram {\n    constructor(outShape, outputDtype) {\n        this.variableNames = ['segmentSum', 'sameSegmentIdCount'];\n        this.outputShape = [];\n        this.uniforms = 'segmentSize : i32';\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = outShape;\n        this.type = outputDtype;\n        this.dispatchLayout = flatDispatchLayout(outShape);\n        this.dispatch =\n            computeDispatch(this.dispatchLayout, outShape, this.workgroupSize);\n        this.shaderKey = 'sparseSegmentMean';\n    }\n    getUserCode() {\n        const userCode = `\n    ${main('index')} {\n      if (index < uniforms.size) {\n        let segmentId = index / uniforms.segmentSize;\n        let count = sameSegmentIdCount[segmentId];\n        if (count != 0) {\n          ${this.type === 'float32' ?\n            'setOutputAtIndex(index, segmentSum[index] / f32(count));' :\n            'setOutputAtIndexI32(index, segmentSum[index] / count);'}\n        }\n      }\n    }\n  `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { fill } from '../kernels/Fill';\nimport { SparseSegmentIdCountProgram, SparseSegmentMeanProgram, SparseSegmentSumProgram } from '../sparse_segment_reduce_webgpu';\nexport function sparseSegmentReduce(input, indices, segmentIds, isSum = false, backend) {\n    const inputSize = util.sizeFromShape(input.shape);\n    const segmentSize = inputSize / input.shape[0];\n    const dtype = input.dtype;\n    // Note that the current implementation assumes that segmentIds values are\n    // sorted.\n    const numIndices = util.sizeFromShape(indices.shape);\n    const $segmentIds = backend.readSync(segmentIds.dataId);\n    const lastSegmentIdPlusOne = numIndices > 0 ? $segmentIds[numIndices - 1] + 1 : 0;\n    const outputRows = lastSegmentIdPlusOne;\n    let program;\n    const outputShape = input.shape.slice();\n    outputShape[0] = outputRows;\n    const sparseSize = numIndices * segmentSize;\n    const sparseSegmentSum = fill({ backend, attrs: { shape: outputShape, value: 0, dtype } });\n    program = new SparseSegmentSumProgram(outputShape, sparseSize, dtype);\n    let uniformData = [\n        { type: 'int32', data: [segmentSize] }, { type: 'int32', data: [sparseSize] }\n    ];\n    const $sparseSegmentSum = backend.runWebGPUProgram(program, [input, indices, segmentIds], dtype, uniformData, sparseSegmentSum);\n    if (isSum) {\n        return $sparseSegmentSum;\n    }\n    const sparseSegmentIdCount = fill({ backend, attrs: { shape: [outputRows], value: 0, dtype: 'int32' } });\n    program = new SparseSegmentIdCountProgram(outputRows, segmentIds.shape);\n    const $sparseSegmentIdCount = backend.runWebGPUProgram(program, [segmentIds], 'int32', null, sparseSegmentIdCount);\n    const sparseSegmentMean = fill({ backend, attrs: { shape: outputShape, value: 0, dtype } });\n    program = new SparseSegmentMeanProgram(outputShape, dtype);\n    uniformData = [{ type: 'int32', data: [segmentSize] }];\n    const $sparseSegmentMean = backend.runWebGPUProgram(program, [$sparseSegmentSum, $sparseSegmentIdCount], dtype, uniformData, sparseSegmentMean);\n    backend.disposeData($sparseSegmentSum.dataId);\n    backend.disposeData($sparseSegmentIdCount.dataId);\n    return $sparseSegmentMean;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BhcnNlX3NlZ21lbnRfcmVkdWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVsX3V0aWxzL3NwYXJzZV9zZWdtZW50X3JlZHVjZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQXlCLElBQUksRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBR25FLE9BQU8sRUFBQyxJQUFJLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUNyQyxPQUFPLEVBQUMsMkJBQTJCLEVBQUUsd0JBQXdCLEVBQUUsdUJBQXVCLEVBQUMsTUFBTSxpQ0FBaUMsQ0FBQztBQUcvSCxNQUFNLFVBQVUsbUJBQW1CLENBQy9CLEtBQWlCLEVBQUUsT0FBbUIsRUFBRSxVQUFzQixFQUM5RCxLQUFLLEdBQUcsS0FBSyxFQUFFLE9BQXNCO0lBQ3ZDLE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2xELE1BQU0sV0FBVyxHQUFHLFNBQVMsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQy9DLE1BQU0sS0FBSyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUM7SUFFMUIsMEVBQTBFO0lBQzFFLFVBQVU7SUFDVixNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNyRCxNQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQWUsQ0FBQztJQUN0RSxNQUFNLG9CQUFvQixHQUN0QixVQUFVLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3pELE1BQU0sVUFBVSxHQUFHLG9CQUFvQixDQUFDO0lBRXhDLElBQUksT0FBc0IsQ0FBQztJQUMzQixNQUFNLFdBQVcsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3hDLFdBQVcsQ0FBQyxDQUFDLENBQUMsR0FBRyxVQUFVLENBQUM7SUFFNUIsTUFBTSxVQUFVLEdBQUcsVUFBVSxHQUFHLFdBQVcsQ0FBQztJQUM1QyxNQUFNLGdCQUFnQixHQUNsQixJQUFJLENBQUMsRUFBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLEVBQUMsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBQyxFQUFDLENBQUMsQ0FBQztJQUNsRSxPQUFPLEdBQUcsSUFBSSx1QkFBdUIsQ0FBQyxXQUFXLEVBQUUsVUFBVSxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3RFLElBQUksV0FBVyxHQUFHO1FBQ2hCLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxXQUFXLENBQUMsRUFBQyxFQUFFLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxVQUFVLENBQUMsRUFBQztLQUMxRSxDQUFDO0lBQ0YsTUFBTSxpQkFBaUIsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQzlDLE9BQU8sRUFBRSxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsVUFBVSxDQUFDLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFDekQsZ0JBQWdCLENBQUMsQ0FBQztJQUV0QixJQUFJLEtBQUssRUFBRTtRQUNULE9BQU8saUJBQWlCLENBQUM7S0FDMUI7SUFFRCxNQUFNLG9CQUFvQixHQUN0QixJQUFJLENBQUMsRUFBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLEVBQUMsS0FBSyxFQUFFLENBQUMsVUFBVSxDQUFDLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFDLEVBQUMsQ0FBQyxDQUFDO0lBQzVFLE9BQU8sR0FBRyxJQUFJLDJCQUEyQixDQUFDLFVBQVUsRUFBRSxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDeEUsTUFBTSxxQkFBcUIsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQ2xELE9BQU8sRUFBRSxDQUFDLFVBQVUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsb0JBQW9CLENBQUMsQ0FBQztJQUVoRSxNQUFNLGlCQUFpQixHQUNuQixJQUFJLENBQUMsRUFBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLEVBQUMsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBQyxFQUFDLENBQUMsQ0FBQztJQUNsRSxPQUFPLEdBQUcsSUFBSSx3QkFBd0IsQ0FBQyxXQUFXLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDM0QsV0FBVyxHQUFHLENBQUMsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLFdBQVcsQ0FBQyxFQUFDLENBQUMsQ0FBQztJQUNyRCxNQUFNLGtCQUFrQixHQUFHLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FDL0MsT0FBTyxFQUFFLENBQUMsaUJBQWlCLEVBQUUscUJBQXFCLENBQUMsRUFBRSxLQUFLLEVBQUUsV0FBVyxFQUN2RSxpQkFBaUIsQ0FBQyxDQUFDO0lBRXZCLE9BQU8sQ0FBQyxXQUFXLENBQUMsaUJBQWlCLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDOUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxxQkFBcUIsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNsRCxPQUFPLGtCQUFrQixDQUFDO0FBQzVCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMyBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7VGVuc29ySW5mbywgVHlwZWRBcnJheSwgdXRpbH0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge2ZpbGx9IGZyb20gJy4uL2tlcm5lbHMvRmlsbCc7XG5pbXBvcnQge1NwYXJzZVNlZ21lbnRJZENvdW50UHJvZ3JhbSwgU3BhcnNlU2VnbWVudE1lYW5Qcm9ncmFtLCBTcGFyc2VTZWdtZW50U3VtUHJvZ3JhbX0gZnJvbSAnLi4vc3BhcnNlX3NlZ21lbnRfcmVkdWNlX3dlYmdwdSc7XG5pbXBvcnQge1dlYkdQVVByb2dyYW19IGZyb20gJy4uL3dlYmdwdV9wcm9ncmFtJztcblxuZXhwb3J0IGZ1bmN0aW9uIHNwYXJzZVNlZ21lbnRSZWR1Y2UoXG4gICAgaW5wdXQ6IFRlbnNvckluZm8sIGluZGljZXM6IFRlbnNvckluZm8sIHNlZ21lbnRJZHM6IFRlbnNvckluZm8sXG4gICAgaXNTdW0gPSBmYWxzZSwgYmFja2VuZDogV2ViR1BVQmFja2VuZCk6IFRlbnNvckluZm8ge1xuICBjb25zdCBpbnB1dFNpemUgPSB1dGlsLnNpemVGcm9tU2hhcGUoaW5wdXQuc2hhcGUpO1xuICBjb25zdCBzZWdtZW50U2l6ZSA9IGlucHV0U2l6ZSAvIGlucHV0LnNoYXBlWzBdO1xuICBjb25zdCBkdHlwZSA9IGlucHV0LmR0eXBlO1xuXG4gIC8vIE5vdGUgdGhhdCB0aGUgY3VycmVudCBpbXBsZW1lbnRhdGlvbiBhc3N1bWVzIHRoYXQgc2VnbWVudElkcyB2YWx1ZXMgYXJlXG4gIC8vIHNvcnRlZC5cbiAgY29uc3QgbnVtSW5kaWNlcyA9IHV0aWwuc2l6ZUZyb21TaGFwZShpbmRpY2VzLnNoYXBlKTtcbiAgY29uc3QgJHNlZ21lbnRJZHMgPSBiYWNrZW5kLnJlYWRTeW5jKHNlZ21lbnRJZHMuZGF0YUlkKSBhcyBUeXBlZEFycmF5O1xuICBjb25zdCBsYXN0U2VnbWVudElkUGx1c09uZSA9XG4gICAgICBudW1JbmRpY2VzID4gMCA/ICRzZWdtZW50SWRzW251bUluZGljZXMgLSAxXSArIDEgOiAwO1xuICBjb25zdCBvdXRwdXRSb3dzID0gbGFzdFNlZ21lbnRJZFBsdXNPbmU7XG5cbiAgbGV0IHByb2dyYW06IFdlYkdQVVByb2dyYW07XG4gIGNvbnN0IG91dHB1dFNoYXBlID0gaW5wdXQuc2hhcGUuc2xpY2UoKTtcbiAgb3V0cHV0U2hhcGVbMF0gPSBvdXRwdXRSb3dzO1xuXG4gIGNvbnN0IHNwYXJzZVNpemUgPSBudW1JbmRpY2VzICogc2VnbWVudFNpemU7XG4gIGNvbnN0IHNwYXJzZVNlZ21lbnRTdW0gPVxuICAgICAgZmlsbCh7YmFja2VuZCwgYXR0cnM6IHtzaGFwZTogb3V0cHV0U2hhcGUsIHZhbHVlOiAwLCBkdHlwZX19KTtcbiAgcHJvZ3JhbSA9IG5ldyBTcGFyc2VTZWdtZW50U3VtUHJvZ3JhbShvdXRwdXRTaGFwZSwgc3BhcnNlU2l6ZSwgZHR5cGUpO1xuICBsZXQgdW5pZm9ybURhdGEgPSBbXG4gICAge3R5cGU6ICdpbnQzMicsIGRhdGE6IFtzZWdtZW50U2l6ZV19LCB7dHlwZTogJ2ludDMyJywgZGF0YTogW3NwYXJzZVNpemVdfVxuICBdO1xuICBjb25zdCAkc3BhcnNlU2VnbWVudFN1bSA9IGJhY2tlbmQucnVuV2ViR1BVUHJvZ3JhbShcbiAgICAgIHByb2dyYW0sIFtpbnB1dCwgaW5kaWNlcywgc2VnbWVudElkc10sIGR0eXBlLCB1bmlmb3JtRGF0YSxcbiAgICAgIHNwYXJzZVNlZ21lbnRTdW0pO1xuXG4gIGlmIChpc1N1bSkge1xuICAgIHJldHVybiAkc3BhcnNlU2VnbWVudFN1bTtcbiAgfVxuXG4gIGNvbnN0IHNwYXJzZVNlZ21lbnRJZENvdW50ID1cbiAgICAgIGZpbGwoe2JhY2tlbmQsIGF0dHJzOiB7c2hhcGU6IFtvdXRwdXRSb3dzXSwgdmFsdWU6IDAsIGR0eXBlOiAnaW50MzInfX0pO1xuICBwcm9ncmFtID0gbmV3IFNwYXJzZVNlZ21lbnRJZENvdW50UHJvZ3JhbShvdXRwdXRSb3dzLCBzZWdtZW50SWRzLnNoYXBlKTtcbiAgY29uc3QgJHNwYXJzZVNlZ21lbnRJZENvdW50ID0gYmFja2VuZC5ydW5XZWJHUFVQcm9ncmFtKFxuICAgICAgcHJvZ3JhbSwgW3NlZ21lbnRJZHNdLCAnaW50MzInLCBudWxsLCBzcGFyc2VTZWdtZW50SWRDb3VudCk7XG5cbiAgY29uc3Qgc3BhcnNlU2VnbWVudE1lYW4gPVxuICAgICAgZmlsbCh7YmFja2VuZCwgYXR0cnM6IHtzaGFwZTogb3V0cHV0U2hhcGUsIHZhbHVlOiAwLCBkdHlwZX19KTtcbiAgcHJvZ3JhbSA9IG5ldyBTcGFyc2VTZWdtZW50TWVhblByb2dyYW0ob3V0cHV0U2hhcGUsIGR0eXBlKTtcbiAgdW5pZm9ybURhdGEgPSBbe3R5cGU6ICdpbnQzMicsIGRhdGE6IFtzZWdtZW50U2l6ZV19XTtcbiAgY29uc3QgJHNwYXJzZVNlZ21lbnRNZWFuID0gYmFja2VuZC5ydW5XZWJHUFVQcm9ncmFtKFxuICAgICAgcHJvZ3JhbSwgWyRzcGFyc2VTZWdtZW50U3VtLCAkc3BhcnNlU2VnbWVudElkQ291bnRdLCBkdHlwZSwgdW5pZm9ybURhdGEsXG4gICAgICBzcGFyc2VTZWdtZW50TWVhbik7XG5cbiAgYmFja2VuZC5kaXNwb3NlRGF0YSgkc3BhcnNlU2VnbWVudFN1bS5kYXRhSWQpO1xuICBiYWNrZW5kLmRpc3Bvc2VEYXRhKCRzcGFyc2VTZWdtZW50SWRDb3VudC5kYXRhSWQpO1xuICByZXR1cm4gJHNwYXJzZVNlZ21lbnRNZWFuO1xufVxuIl19","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { SparseSegmentMean } from '@tensorflow/tfjs-core';\nimport { sparseSegmentReduce } from '../kernel_utils/sparse_segment_reduce';\nexport function sparseSegmentMean(args) {\n    const { inputs, backend } = args;\n    const { data, indices, segmentIds } = inputs;\n    return sparseSegmentReduce(data, indices, segmentIds, false, backend);\n}\nexport const sparseSegmentMeanConfig = {\n    kernelName: SparseSegmentMean,\n    backendName: 'webgpu',\n    kernelFunc: sparseSegmentMean,\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3BhcnNlU2VnbWVudE1lYW4uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL1NwYXJzZVNlZ21lbnRNZWFuLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBMkIsaUJBQWlCLEVBQXNDLE1BQU0sdUJBQXVCLENBQUM7QUFHdkgsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0sdUNBQXVDLENBQUM7QUFFMUUsTUFBTSxVQUFVLGlCQUFpQixDQUM3QixJQUErRDtJQUVqRSxNQUFNLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBQyxHQUFHLElBQUksQ0FBQztJQUMvQixNQUFNLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxVQUFVLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFFM0MsT0FBTyxtQkFBbUIsQ0FBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUM7QUFDeEUsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUFpQjtJQUNuRCxVQUFVLEVBQUUsaUJBQWlCO0lBQzdCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxpQkFBMEM7Q0FDdkQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIzIEdvb2dsZSBMTEMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtLZXJuZWxDb25maWcsIEtlcm5lbEZ1bmMsIFNwYXJzZVNlZ21lbnRNZWFuLCBTcGFyc2VTZWdtZW50TWVhbklucHV0cywgVGVuc29ySW5mb30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge3NwYXJzZVNlZ21lbnRSZWR1Y2V9IGZyb20gJy4uL2tlcm5lbF91dGlscy9zcGFyc2Vfc2VnbWVudF9yZWR1Y2UnO1xuXG5leHBvcnQgZnVuY3Rpb24gc3BhcnNlU2VnbWVudE1lYW4oXG4gICAgYXJnczoge2lucHV0czogU3BhcnNlU2VnbWVudE1lYW5JbnB1dHMsIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmR9KTpcbiAgICBUZW5zb3JJbmZvIHtcbiAgY29uc3Qge2lucHV0cywgYmFja2VuZH0gPSBhcmdzO1xuICBjb25zdCB7ZGF0YSwgaW5kaWNlcywgc2VnbWVudElkc30gPSBpbnB1dHM7XG5cbiAgcmV0dXJuIHNwYXJzZVNlZ21lbnRSZWR1Y2UoZGF0YSwgaW5kaWNlcywgc2VnbWVudElkcywgZmFsc2UsIGJhY2tlbmQpO1xufVxuXG5leHBvcnQgY29uc3Qgc3BhcnNlU2VnbWVudE1lYW5Db25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogU3BhcnNlU2VnbWVudE1lYW4sXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogc3BhcnNlU2VnbWVudE1lYW4gYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jLFxufTtcbiJdfQ==","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { SparseSegmentSum } from '@tensorflow/tfjs-core';\nimport { sparseSegmentReduce } from '../kernel_utils/sparse_segment_reduce';\nexport function sparseSegmentSum(args) {\n    const { inputs, backend } = args;\n    const { data, indices, segmentIds } = inputs;\n    return sparseSegmentReduce(data, indices, segmentIds, true, backend);\n}\nexport const sparseSegmentSumConfig = {\n    kernelName: SparseSegmentSum,\n    backendName: 'webgpu',\n    kernelFunc: sparseSegmentSum,\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3BhcnNlU2VnbWVudFN1bS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvU3BhcnNlU2VnbWVudFN1bS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQTJCLGdCQUFnQixFQUFxQyxNQUFNLHVCQUF1QixDQUFDO0FBR3JILE9BQU8sRUFBQyxtQkFBbUIsRUFBQyxNQUFNLHVDQUF1QyxDQUFDO0FBRTFFLE1BQU0sVUFBVSxnQkFBZ0IsQ0FDNUIsSUFBOEQ7SUFFaEUsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFDL0IsTUFBTSxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFDLEdBQUcsTUFBTSxDQUFDO0lBRTNDLE9BQU8sbUJBQW1CLENBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ3ZFLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxzQkFBc0IsR0FBaUI7SUFDbEQsVUFBVSxFQUFFLGdCQUFnQjtJQUM1QixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsZ0JBQXlDO0NBQ3RELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMyBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7S2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBTcGFyc2VTZWdtZW50U3VtLCBTcGFyc2VTZWdtZW50U3VtSW5wdXRzLCBUZW5zb3JJbmZvfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcbmltcG9ydCB7c3BhcnNlU2VnbWVudFJlZHVjZX0gZnJvbSAnLi4va2VybmVsX3V0aWxzL3NwYXJzZV9zZWdtZW50X3JlZHVjZSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBzcGFyc2VTZWdtZW50U3VtKFxuICAgIGFyZ3M6IHtpbnB1dHM6IFNwYXJzZVNlZ21lbnRTdW1JbnB1dHMsIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmR9KTpcbiAgICBUZW5zb3JJbmZvIHtcbiAgY29uc3Qge2lucHV0cywgYmFja2VuZH0gPSBhcmdzO1xuICBjb25zdCB7ZGF0YSwgaW5kaWNlcywgc2VnbWVudElkc30gPSBpbnB1dHM7XG5cbiAgcmV0dXJuIHNwYXJzZVNlZ21lbnRSZWR1Y2UoZGF0YSwgaW5kaWNlcywgc2VnbWVudElkcywgdHJ1ZSwgYmFja2VuZCk7XG59XG5cbmV4cG9ydCBjb25zdCBzcGFyc2VTZWdtZW50U3VtQ29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IFNwYXJzZVNlZ21lbnRTdW0sXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogc3BhcnNlU2VnbWVudFN1bSBhcyB1bmtub3duIGFzIEtlcm5lbEZ1bmMsXG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class TileProgram {\n    constructor(aShape, reps) {\n        this.variableNames = ['A'];\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        const outputShape = new Array(aShape.length);\n        for (let i = 0; i < outputShape.length; i++) {\n            outputShape[i] = aShape[i] * reps[i];\n        }\n        this.outputShape = outputShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.rank = this.outputShape.length;\n        this.shaderKey = 'tile';\n    }\n    getUserCode() {\n        const sourceCoords = getSourceCoords(this.rank, 'uniforms.');\n        const userCode = `\n      ${main('index')} {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          setOutputAtIndex(index, getA(${sourceCoords}));\n        }\n      }\n    `;\n        return userCode;\n    }\n}\nfunction getSourceCoords(rank, uniformPrefix = '') {\n    if (rank >= 5) {\n        throw Error(`Tile for rank ${rank} is not yet supported`);\n    }\n    if (rank === 1) {\n        return `(resRC % ${uniformPrefix}aShape)`;\n    }\n    const currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n    const sourceCoords = [];\n    for (let i = 0; i < rank; i++) {\n        sourceCoords.push(`(${currentCoords[i]} % ${uniformPrefix}aShape[${i}])`);\n    }\n    return sourceCoords.join();\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlsZV93ZWJncHUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy90aWxlX3dlYmdwdS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsbUJBQW1CLElBQUksSUFBSSxFQUFnQixNQUFNLGtCQUFrQixDQUFDO0FBQzVFLE9BQU8sRUFBQyxlQUFlLEVBQUUsa0JBQWtCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFbEUsTUFBTSxPQUFPLFdBQVc7SUFVdEIsWUFBWSxNQUFnQixFQUFFLElBQWM7UUFUNUMsa0JBQWEsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBS3RCLGtCQUFhLEdBQTZCLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNyRCxTQUFJLEdBQUcsSUFBSSxDQUFDO1FBSVYsTUFBTSxXQUFXLEdBQWEsSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3ZELEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxXQUFXLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzNDLFdBQVcsQ0FBQyxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ3RDO1FBQ0QsSUFBSSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUM7UUFDL0IsSUFBSSxDQUFDLGNBQWMsR0FBRyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxlQUFlLENBQzNCLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDL0QsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQztRQUNwQyxJQUFJLENBQUMsU0FBUyxHQUFHLE1BQU0sQ0FBQztJQUMxQixDQUFDO0lBRUQsV0FBVztRQUNULE1BQU0sWUFBWSxHQUFHLGVBQWUsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLFdBQVcsQ0FBQyxDQUFDO1FBRTdELE1BQU0sUUFBUSxHQUFHO1FBQ2IsSUFBSSxDQUFDLE9BQU8sQ0FBQzs7O3lDQUdvQixZQUFZOzs7S0FHaEQsQ0FBQztRQUNGLE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7Q0FDRjtBQUVELFNBQVMsZUFBZSxDQUFDLElBQVksRUFBRSxhQUFhLEdBQUcsRUFBRTtJQUN2RCxJQUFJLElBQUksSUFBSSxDQUFDLEVBQUU7UUFDYixNQUFNLEtBQUssQ0FBQyxpQkFBaUIsSUFBSSx1QkFBdUIsQ0FBQyxDQUFDO0tBQzNEO0lBQ0QsSUFBSSxJQUFJLEtBQUssQ0FBQyxFQUFFO1FBQ2QsT0FBTyxZQUFZLGFBQWEsU0FBUyxDQUFDO0tBQzNDO0lBRUQsTUFBTSxhQUFhLEdBQUcsQ0FBQyxTQUFTLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUNuRSxNQUFNLFlBQVksR0FBRyxFQUFFLENBQUM7SUFDeEIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUM3QixZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksYUFBYSxDQUFDLENBQUMsQ0FBQyxNQUFNLGFBQWEsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQzNFO0lBQ0QsT0FBTyxZQUFZLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDN0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtnZXRNYWluSGVhZGVyU3RyaW5nIGFzIG1haW4sIFdlYkdQVVByb2dyYW19IGZyb20gJy4vd2ViZ3B1X3Byb2dyYW0nO1xuaW1wb3J0IHtjb21wdXRlRGlzcGF0Y2gsIGZsYXREaXNwYXRjaExheW91dH0gZnJvbSAnLi93ZWJncHVfdXRpbCc7XG5cbmV4cG9ydCBjbGFzcyBUaWxlUHJvZ3JhbSBpbXBsZW1lbnRzIFdlYkdQVVByb2dyYW0ge1xuICB2YXJpYWJsZU5hbWVzID0gWydBJ107XG4gIG91dHB1dFNoYXBlOiBudW1iZXJbXTtcbiAgc2hhZGVyS2V5OiBzdHJpbmc7XG4gIGRpc3BhdGNoTGF5b3V0OiB7eDogbnVtYmVyW119O1xuICBkaXNwYXRjaDogW251bWJlciwgbnVtYmVyLCBudW1iZXJdO1xuICB3b3JrZ3JvdXBTaXplOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl0gPSBbNjQsIDEsIDFdO1xuICBzaXplID0gdHJ1ZTtcbiAgcmFuazogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKGFTaGFwZTogbnVtYmVyW10sIHJlcHM6IG51bWJlcltdKSB7XG4gICAgY29uc3Qgb3V0cHV0U2hhcGU6IG51bWJlcltdID0gbmV3IEFycmF5KGFTaGFwZS5sZW5ndGgpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgb3V0cHV0U2hhcGUubGVuZ3RoOyBpKyspIHtcbiAgICAgIG91dHB1dFNoYXBlW2ldID0gYVNoYXBlW2ldICogcmVwc1tpXTtcbiAgICB9XG4gICAgdGhpcy5vdXRwdXRTaGFwZSA9IG91dHB1dFNoYXBlO1xuICAgIHRoaXMuZGlzcGF0Y2hMYXlvdXQgPSBmbGF0RGlzcGF0Y2hMYXlvdXQodGhpcy5vdXRwdXRTaGFwZSk7XG4gICAgdGhpcy5kaXNwYXRjaCA9IGNvbXB1dGVEaXNwYXRjaChcbiAgICAgICAgdGhpcy5kaXNwYXRjaExheW91dCwgdGhpcy5vdXRwdXRTaGFwZSwgdGhpcy53b3JrZ3JvdXBTaXplKTtcbiAgICB0aGlzLnJhbmsgPSB0aGlzLm91dHB1dFNoYXBlLmxlbmd0aDtcbiAgICB0aGlzLnNoYWRlcktleSA9ICd0aWxlJztcbiAgfVxuXG4gIGdldFVzZXJDb2RlKCk6IHN0cmluZyB7XG4gICAgY29uc3Qgc291cmNlQ29vcmRzID0gZ2V0U291cmNlQ29vcmRzKHRoaXMucmFuaywgJ3VuaWZvcm1zLicpO1xuXG4gICAgY29uc3QgdXNlckNvZGUgPSBgXG4gICAgICAke21haW4oJ2luZGV4Jyl9IHtcbiAgICAgICAgaWYgKGluZGV4IDwgdW5pZm9ybXMuc2l6ZSkge1xuICAgICAgICAgIGxldCByZXNSQyA9IGdldENvb3Jkc0Zyb21JbmRleChpbmRleCk7XG4gICAgICAgICAgc2V0T3V0cHV0QXRJbmRleChpbmRleCwgZ2V0QSgke3NvdXJjZUNvb3Jkc30pKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIGA7XG4gICAgcmV0dXJuIHVzZXJDb2RlO1xuICB9XG59XG5cbmZ1bmN0aW9uIGdldFNvdXJjZUNvb3JkcyhyYW5rOiBudW1iZXIsIHVuaWZvcm1QcmVmaXggPSAnJyk6IHN0cmluZyB7XG4gIGlmIChyYW5rID49IDUpIHtcbiAgICB0aHJvdyBFcnJvcihgVGlsZSBmb3IgcmFuayAke3Jhbmt9IGlzIG5vdCB5ZXQgc3VwcG9ydGVkYCk7XG4gIH1cbiAgaWYgKHJhbmsgPT09IDEpIHtcbiAgICByZXR1cm4gYChyZXNSQyAlICR7dW5pZm9ybVByZWZpeH1hU2hhcGUpYDtcbiAgfVxuXG4gIGNvbnN0IGN1cnJlbnRDb29yZHMgPSBbJ3Jlc1JDLngnLCAncmVzUkMueScsICdyZXNSQy56JywgJ3Jlc1JDLncnXTtcbiAgY29uc3Qgc291cmNlQ29vcmRzID0gW107XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcmFuazsgaSsrKSB7XG4gICAgc291cmNlQ29vcmRzLnB1c2goYCgke2N1cnJlbnRDb29yZHNbaV19ICUgJHt1bmlmb3JtUHJlZml4fWFTaGFwZVske2l9XSlgKTtcbiAgfVxuICByZXR1cm4gc291cmNlQ29vcmRzLmpvaW4oKTtcbn1cbiJdfQ==","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer, Tile, util } from '@tensorflow/tfjs-core';\nimport { tileImplCPU } from '../kernel_utils/shared';\nimport { TileProgram } from '../tile_webgpu';\nexport function tile(params) {\n    const { inputs, backend, attrs } = params;\n    const { x } = inputs;\n    const { reps } = attrs;\n    // tile gpu program cannot handle rank >= 5 case.\n    if (backend.shouldExecuteOnCPU([x]) || x.dtype === 'string' ||\n        x.shape.length >= 5) {\n        // Even thought string tensor is always on CPU, just to be consistent on how\n        // to access tensor data.\n        const data = backend.readSync(x.dataId);\n        const value = x.dtype === 'string' ?\n            data.map(d => util.decodeString(d)) :\n            data;\n        const buf = buffer(x.shape, x.dtype, value);\n        const outBuf = tileImplCPU(buf, reps);\n        return backend.makeTensorInfo(outBuf.shape, outBuf.dtype, outBuf.values);\n    }\n    const program = new TileProgram(x.shape, reps);\n    const output = backend.runWebGPUProgram(program, [x], x.dtype);\n    return output;\n}\nexport const tileConfig = {\n    kernelName: Tile,\n    backendName: 'webgpu',\n    kernelFunc: tile,\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGlsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvVGlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsTUFBTSxFQUF3QyxJQUFJLEVBQXFDLElBQUksRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBR2xJLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUNuRCxPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFFM0MsTUFBTSxVQUFVLElBQUksQ0FDaEIsTUFBc0U7SUFFeEUsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFDLEdBQUcsTUFBTSxDQUFDO0lBQ3hDLE1BQU0sRUFBQyxDQUFDLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFDbkIsTUFBTSxFQUFDLElBQUksRUFBQyxHQUFHLEtBQUssQ0FBQztJQUVyQixpREFBaUQ7SUFDakQsSUFBSSxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLEtBQUssUUFBUTtRQUN2RCxDQUFDLENBQUMsS0FBSyxDQUFDLE1BQU0sSUFBSSxDQUFDLEVBQUU7UUFDdkIsNEVBQTRFO1FBQzVFLHlCQUF5QjtRQUN6QixNQUFNLElBQUksR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN4QyxNQUFNLEtBQUssR0FBRyxDQUFDLENBQUMsS0FBSyxLQUFLLFFBQVEsQ0FBQyxDQUFDO1lBQy9CLElBQXFCLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdkQsSUFBa0IsQ0FBQztRQUN2QixNQUFNLEdBQUcsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQzVDLE1BQU0sTUFBTSxHQUFHLFdBQVcsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDdEMsT0FBTyxPQUFPLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDMUU7SUFFRCxNQUFNLE9BQU8sR0FBRyxJQUFJLFdBQVcsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQy9DLE1BQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7SUFFL0QsT0FBTyxNQUFNLENBQUM7QUFDaEIsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBaUI7SUFDdEMsVUFBVSxFQUFFLElBQUk7SUFDaEIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLElBQTZCO0NBQzFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7YnVmZmVyLCBLZXJuZWxDb25maWcsIEtlcm5lbEZ1bmMsIFRlbnNvckluZm8sIFRpbGUsIFRpbGVBdHRycywgVGlsZUlucHV0cywgVHlwZWRBcnJheSwgdXRpbH0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge3RpbGVJbXBsQ1BVfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMvc2hhcmVkJztcbmltcG9ydCB7VGlsZVByb2dyYW19IGZyb20gJy4uL3RpbGVfd2ViZ3B1JztcblxuZXhwb3J0IGZ1bmN0aW9uIHRpbGUoXG4gICAgcGFyYW1zOiB7aW5wdXRzOiBUaWxlSW5wdXRzLCBiYWNrZW5kOiBXZWJHUFVCYWNrZW5kLCBhdHRyczogVGlsZUF0dHJzfSk6XG4gICAgVGVuc29ySW5mbyB7XG4gIGNvbnN0IHtpbnB1dHMsIGJhY2tlbmQsIGF0dHJzfSA9IHBhcmFtcztcbiAgY29uc3Qge3h9ID0gaW5wdXRzO1xuICBjb25zdCB7cmVwc30gPSBhdHRycztcblxuICAvLyB0aWxlIGdwdSBwcm9ncmFtIGNhbm5vdCBoYW5kbGUgcmFuayA+PSA1IGNhc2UuXG4gIGlmIChiYWNrZW5kLnNob3VsZEV4ZWN1dGVPbkNQVShbeF0pIHx8IHguZHR5cGUgPT09ICdzdHJpbmcnIHx8XG4gICAgICB4LnNoYXBlLmxlbmd0aCA+PSA1KSB7XG4gICAgLy8gRXZlbiB0aG91Z2h0IHN0cmluZyB0ZW5zb3IgaXMgYWx3YXlzIG9uIENQVSwganVzdCB0byBiZSBjb25zaXN0ZW50IG9uIGhvd1xuICAgIC8vIHRvIGFjY2VzcyB0ZW5zb3IgZGF0YS5cbiAgICBjb25zdCBkYXRhID0gYmFja2VuZC5yZWFkU3luYyh4LmRhdGFJZCk7XG4gICAgY29uc3QgdmFsdWUgPSB4LmR0eXBlID09PSAnc3RyaW5nJyA/XG4gICAgICAgIChkYXRhIGFzIFVpbnQ4QXJyYXlbXSkubWFwKGQgPT4gdXRpbC5kZWNvZGVTdHJpbmcoZCkpIDpcbiAgICAgICAgZGF0YSBhcyBUeXBlZEFycmF5O1xuICAgIGNvbnN0IGJ1ZiA9IGJ1ZmZlcih4LnNoYXBlLCB4LmR0eXBlLCB2YWx1ZSk7XG4gICAgY29uc3Qgb3V0QnVmID0gdGlsZUltcGxDUFUoYnVmLCByZXBzKTtcbiAgICByZXR1cm4gYmFja2VuZC5tYWtlVGVuc29ySW5mbyhvdXRCdWYuc2hhcGUsIG91dEJ1Zi5kdHlwZSwgb3V0QnVmLnZhbHVlcyk7XG4gIH1cblxuICBjb25zdCBwcm9ncmFtID0gbmV3IFRpbGVQcm9ncmFtKHguc2hhcGUsIHJlcHMpO1xuICBjb25zdCBvdXRwdXQgPSBiYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0ocHJvZ3JhbSwgW3hdLCB4LmR0eXBlKTtcblxuICByZXR1cm4gb3V0cHV0O1xufVxuXG5leHBvcnQgY29uc3QgdGlsZUNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBUaWxlLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IHRpbGUgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jLFxufTtcbiJdfQ==","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, SparseToDense, util } from '@tensorflow/tfjs-core';\nimport { scatterImplCPU } from '../kernel_utils/shared';\nimport { ScatterProgram } from '../scatter_webgpu';\nimport { identity } from './Identity';\nimport { reshape } from './Reshape';\nimport { tile } from './Tile';\nexport function sparseToDense(args) {\n    const { inputs, backend, attrs } = args;\n    const { sparseIndices, sparseValues, defaultValue } = inputs;\n    const { outputShape } = attrs;\n    const { sliceRank, numUpdates, sliceSize, strides, outputSize } = backend_util.calculateShapes(sparseValues, sparseIndices, outputShape);\n    const sumDupeIndices = false;\n    if (sparseValues.dtype === 'string') {\n        const indicesBuf = backend.bufferSync(sparseIndices);\n        const updatesBuf = backend.bufferSync(sparseValues);\n        const $defaultValue = util.decodeString(backend.readSync(defaultValue.dataId)[0]);\n        const outBuf = scatterImplCPU(indicesBuf, updatesBuf, outputShape, outputSize, sliceSize, numUpdates, sliceRank, strides, $defaultValue, sumDupeIndices);\n        return backend.makeTensorInfo(outputShape, outBuf.dtype, outBuf.values);\n    }\n    const flattenShape = [outputSize / sliceSize, sliceSize];\n    const $sparseIndices = reshape({\n        inputs: { x: sparseIndices },\n        backend,\n        attrs: { shape: [numUpdates, sliceRank] }\n    });\n    const $sparseValues = sparseValues.shape.length ?\n        reshape({\n            inputs: { x: sparseValues },\n            backend,\n            attrs: { shape: [numUpdates, sliceSize] }\n        }) :\n        identity({ inputs: { x: sparseValues }, backend });\n    const type = $sparseValues.dtype;\n    const zero = backend.makeTensorInfo([], type, util.makeZerosTypedArray(1, type));\n    // Fill output tensor with the default value.\n    const $defaultValue = reshape({\n        inputs: { x: defaultValue },\n        backend,\n        attrs: { shape: Array(flattenShape.length).fill(1) }\n    });\n    const $denseValues = tile({ inputs: { x: $defaultValue }, backend, attrs: { reps: flattenShape } });\n    const size = util.sizeFromShape([numUpdates, sliceSize]);\n    const uniformData = [\n        { type: 'int32', data: [sliceRank] },\n        { type: 'int32', data: strides },\n        { type: 'int32', data: [size] },\n    ];\n    switch (numUpdates) {\n        case 0:\n            break;\n        case 1:\n            if (true) {\n                const program = new ScatterProgram([numUpdates, sliceSize], sliceRank, $sparseIndices.shape.length, $sparseValues.shape.length, strides, flattenShape, type, sumDupeIndices);\n                backend.runWebGPUProgram(program, [$sparseValues, $sparseIndices], type, uniformData, $denseValues);\n            }\n            break;\n        default:\n            if (true) {\n                // First replace the default value with 0 at indices.\n                const program = new ScatterProgram([numUpdates, sliceSize], sliceRank, $sparseIndices.shape.length, zero.shape.length, strides, flattenShape, type, sumDupeIndices);\n                backend.runWebGPUProgram(program, [zero, $sparseIndices], type, uniformData, $denseValues);\n            }\n            {\n                // Then replace 0 with the (sum of) sparse value(s) at indices.\n                const program = new ScatterProgram([numUpdates, sliceSize], sliceRank, $sparseIndices.shape.length, $sparseValues.shape.length, strides, flattenShape, type);\n                backend.runWebGPUProgram(program, [$sparseValues, $sparseIndices], type, uniformData, $denseValues);\n            }\n    }\n    const denseValues = reshape({ inputs: { x: $denseValues }, backend, attrs: { shape: outputShape } });\n    backend.disposeData($sparseIndices.dataId);\n    backend.disposeData($sparseValues.dataId);\n    backend.disposeData($defaultValue.dataId);\n    backend.disposeData(zero.dataId);\n    backend.disposeData($denseValues.dataId);\n    return denseValues;\n}\nexport const sparseToDenseConfig = {\n    kernelName: SparseToDense,\n    backendName: 'webgpu',\n    kernelFunc: sparseToDense\n};\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, SplitV, util } from '@tensorflow/tfjs-core';\nimport { slice } from './Slice';\nexport function splitV(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { numOrSizeSplits, axis } = attrs;\n    const $axis = util.parseAxisParam(axis, x.shape)[0];\n    const splitSizes = backend_util.prepareSplitSize(x, numOrSizeSplits, $axis);\n    const xRank = x.shape.length;\n    const begin = new Array(xRank).fill(0);\n    const size = x.shape.slice();\n    return splitSizes.map(s => {\n        const sliceSize = [...size];\n        sliceSize[$axis] = s;\n        const sliceT = slice({ inputs: { x }, backend, attrs: { begin, size: sliceSize } });\n        begin[$axis] += s;\n        return sliceT;\n    });\n}\nexport const splitVConfig = {\n    kernelName: SplitV,\n    backendName: 'webgpu',\n    kernelFunc: splitV\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3BsaXRWLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9TcGxpdFYudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLFlBQVksRUFBNEIsTUFBTSxFQUF5QyxJQUFJLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUdsSSxPQUFPLEVBQUMsS0FBSyxFQUFDLE1BQU0sU0FBUyxDQUFDO0FBRTlCLE1BQU0sVUFBVSxNQUFNLENBQ2xCLElBQXdFO0lBRTFFLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QyxNQUFNLEVBQUMsQ0FBQyxFQUFDLEdBQUcsTUFBTSxDQUFDO0lBQ25CLE1BQU0sRUFBQyxlQUFlLEVBQUUsSUFBSSxFQUFDLEdBQUcsS0FBSyxDQUFDO0lBRXRDLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNwRCxNQUFNLFVBQVUsR0FBRyxZQUFZLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxFQUFFLGVBQWUsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUU1RSxNQUFNLEtBQUssR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQztJQUM3QixNQUFNLEtBQUssR0FBRyxJQUFJLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDdkMsTUFBTSxJQUFJLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUU3QixPQUFPLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUU7UUFDeEIsTUFBTSxTQUFTLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO1FBQzVCLFNBQVMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDckIsTUFBTSxNQUFNLEdBQ1IsS0FBSyxDQUFDLEVBQUMsTUFBTSxFQUFFLEVBQUMsQ0FBQyxFQUFDLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxFQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFDLEVBQUMsQ0FBQyxDQUFDO1FBQ25FLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDbEIsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFpQjtJQUN4QyxVQUFVLEVBQUUsTUFBTTtJQUNsQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsTUFBK0I7Q0FDNUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtiYWNrZW5kX3V0aWwsIEtlcm5lbENvbmZpZywgS2VybmVsRnVuYywgU3BsaXRWLCBTcGxpdFZBdHRycywgU3BsaXRWSW5wdXRzLCBUZW5zb3JJbmZvLCB1dGlsfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcbmltcG9ydCB7c2xpY2V9IGZyb20gJy4vU2xpY2UnO1xuXG5leHBvcnQgZnVuY3Rpb24gc3BsaXRWKFxuICAgIGFyZ3M6IHtpbnB1dHM6IFNwbGl0VklucHV0cywgYmFja2VuZDogV2ViR1BVQmFja2VuZCwgYXR0cnM6IFNwbGl0VkF0dHJzfSk6XG4gICAgVGVuc29ySW5mb1tdIHtcbiAgY29uc3Qge2lucHV0cywgYmFja2VuZCwgYXR0cnN9ID0gYXJncztcbiAgY29uc3Qge3h9ID0gaW5wdXRzO1xuICBjb25zdCB7bnVtT3JTaXplU3BsaXRzLCBheGlzfSA9IGF0dHJzO1xuXG4gIGNvbnN0ICRheGlzID0gdXRpbC5wYXJzZUF4aXNQYXJhbShheGlzLCB4LnNoYXBlKVswXTtcbiAgY29uc3Qgc3BsaXRTaXplcyA9IGJhY2tlbmRfdXRpbC5wcmVwYXJlU3BsaXRTaXplKHgsIG51bU9yU2l6ZVNwbGl0cywgJGF4aXMpO1xuXG4gIGNvbnN0IHhSYW5rID0geC5zaGFwZS5sZW5ndGg7XG4gIGNvbnN0IGJlZ2luID0gbmV3IEFycmF5KHhSYW5rKS5maWxsKDApO1xuICBjb25zdCBzaXplID0geC5zaGFwZS5zbGljZSgpO1xuXG4gIHJldHVybiBzcGxpdFNpemVzLm1hcChzID0+IHtcbiAgICBjb25zdCBzbGljZVNpemUgPSBbLi4uc2l6ZV07XG4gICAgc2xpY2VTaXplWyRheGlzXSA9IHM7XG4gICAgY29uc3Qgc2xpY2VUID1cbiAgICAgICAgc2xpY2Uoe2lucHV0czoge3h9LCBiYWNrZW5kLCBhdHRyczoge2JlZ2luLCBzaXplOiBzbGljZVNpemV9fSk7XG4gICAgYmVnaW5bJGF4aXNdICs9IHM7XG4gICAgcmV0dXJuIHNsaWNlVDtcbiAgfSk7XG59XG5cbmV4cG9ydCBjb25zdCBzcGxpdFZDb25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogU3BsaXRWLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IHNwbGl0ViBhcyB1bmtub3duIGFzIEtlcm5lbEZ1bmNcbn07XG4iXX0=","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sqrt } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { UnaryOpType } from '../unary_op_util';\nexport const sqrt = unaryKernelFunc({ opType: UnaryOpType.SQRT });\nexport const sqrtConfig = {\n    kernelName: Sqrt,\n    backendName: 'webgpu',\n    kernelFunc: sqrt\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3FydC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvU3FydC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQWUsSUFBSSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDekQsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9DQUFvQyxDQUFDO0FBQ25FLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUU3QyxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQUcsZUFBZSxDQUFDLEVBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxJQUFJLEVBQUMsQ0FBQyxDQUFDO0FBRWhFLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBaUI7SUFDdEMsVUFBVSxFQUFFLElBQUk7SUFDaEIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLElBQUk7Q0FDakIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtLZXJuZWxDb25maWcsIFNxcnR9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5pbXBvcnQge3VuYXJ5S2VybmVsRnVuY30gZnJvbSAnLi4va2VybmVsX3V0aWxzL2tlcm5lbF9mdW5jc191dGlscyc7XG5pbXBvcnQge1VuYXJ5T3BUeXBlfSBmcm9tICcuLi91bmFyeV9vcF91dGlsJztcblxuZXhwb3J0IGNvbnN0IHNxcnQgPSB1bmFyeUtlcm5lbEZ1bmMoe29wVHlwZTogVW5hcnlPcFR5cGUuU1FSVH0pO1xuXG5leHBvcnQgY29uc3Qgc3FydENvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBTcXJ0LFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IHNxcnRcbn07XG4iXX0=","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Square } from '@tensorflow/tfjs-core';\nimport { UnaryOpProgram } from '../unary_op_webgpu';\nimport { UnaryOpType } from '../unary_op_util';\nexport const squareConfig = {\n    kernelName: Square,\n    backendName: 'webgpu',\n    kernelFunc: ({ inputs, backend }) => {\n        const { x } = inputs;\n        const webGPUBackend = backend;\n        const program = new UnaryOpProgram(x.shape, UnaryOpType.SQUARE);\n        return webGPUBackend.runWebGPUProgram(program, [x], x.dtype);\n    }\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3F1YXJlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9TcXVhcmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFlLE1BQU0sRUFBZSxNQUFNLHVCQUF1QixDQUFDO0FBRXpFLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUNsRCxPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sa0JBQWtCLENBQUM7QUFFN0MsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFpQjtJQUN4QyxVQUFVLEVBQUUsTUFBTTtJQUNsQixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsQ0FBQyxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUMsRUFBRSxFQUFFO1FBQ2hDLE1BQU0sRUFBQyxDQUFDLEVBQUMsR0FBRyxNQUFzQixDQUFDO1FBQ25DLE1BQU0sYUFBYSxHQUFHLE9BQXdCLENBQUM7UUFDL0MsTUFBTSxPQUFPLEdBQUcsSUFBSSxjQUFjLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDaEUsT0FBTyxhQUFhLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQy9ELENBQUM7Q0FDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0tlcm5lbENvbmZpZywgU3F1YXJlLCBTcXVhcmVJbnB1dHN9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcbmltcG9ydCB7VW5hcnlPcFByb2dyYW19IGZyb20gJy4uL3VuYXJ5X29wX3dlYmdwdSc7XG5pbXBvcnQge1VuYXJ5T3BUeXBlfSBmcm9tICcuLi91bmFyeV9vcF91dGlsJztcblxuZXhwb3J0IGNvbnN0IHNxdWFyZUNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBTcXVhcmUsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogKHtpbnB1dHMsIGJhY2tlbmR9KSA9PiB7XG4gICAgY29uc3Qge3h9ID0gaW5wdXRzIGFzIFNxdWFyZUlucHV0cztcbiAgICBjb25zdCB3ZWJHUFVCYWNrZW5kID0gYmFja2VuZCBhcyBXZWJHUFVCYWNrZW5kO1xuICAgIGNvbnN0IHByb2dyYW0gPSBuZXcgVW5hcnlPcFByb2dyYW0oeC5zaGFwZSwgVW5hcnlPcFR5cGUuU1FVQVJFKTtcbiAgICByZXR1cm4gd2ViR1BVQmFja2VuZC5ydW5XZWJHUFVQcm9ncmFtKHByb2dyYW0sIFt4XSwgeC5kdHlwZSk7XG4gIH1cbn07XG4iXX0=","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { SquaredDifference } from '@tensorflow/tfjs-core';\nimport { BinaryOpType } from '../binary_op_util';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nexport const squaredDifference = binaryKernelFunc({\n    opType: BinaryOpType.SQUARED_DIFFERENCE,\n});\nexport const squaredDifferenceConfig = {\n    kernelName: SquaredDifference,\n    backendName: 'webgpu',\n    kernelFunc: squaredDifference\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3F1YXJlZERpZmZlcmVuY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9rZXJuZWxzL1NxdWFyZWREaWZmZXJlbmNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBZSxpQkFBaUIsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRXRFLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUMvQyxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUVwRSxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxnQkFBZ0IsQ0FBQztJQUNoRCxNQUFNLEVBQUUsWUFBWSxDQUFDLGtCQUFrQjtDQUN4QyxDQUFDLENBQUM7QUFFSCxNQUFNLENBQUMsTUFBTSx1QkFBdUIsR0FBaUI7SUFDbkQsVUFBVSxFQUFFLGlCQUFpQjtJQUM3QixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsaUJBQWlCO0NBQzlCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7S2VybmVsQ29uZmlnLCBTcXVhcmVkRGlmZmVyZW5jZX0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtCaW5hcnlPcFR5cGV9IGZyb20gJy4uL2JpbmFyeV9vcF91dGlsJztcbmltcG9ydCB7YmluYXJ5S2VybmVsRnVuY30gZnJvbSAnLi4va2VybmVsX3V0aWxzL2tlcm5lbF9mdW5jc191dGlscyc7XG5cbmV4cG9ydCBjb25zdCBzcXVhcmVkRGlmZmVyZW5jZSA9IGJpbmFyeUtlcm5lbEZ1bmMoe1xuICBvcFR5cGU6IEJpbmFyeU9wVHlwZS5TUVVBUkVEX0RJRkZFUkVOQ0UsXG59KTtcblxuZXhwb3J0IGNvbnN0IHNxdWFyZWREaWZmZXJlbmNlQ29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IFNxdWFyZWREaWZmZXJlbmNlLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IHNxdWFyZWREaWZmZXJlbmNlXG59O1xuIl19","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Step } from '@tensorflow/tfjs-core';\nimport { UnaryOpType } from '../unary_op_util';\nimport { UnaryOpProgram } from '../unary_op_webgpu';\nexport function step({ inputs, attrs, backend }) {\n    const { x } = inputs;\n    const program = new UnaryOpProgram(x.shape, UnaryOpType.STEP, 'stepAlpha : f32,');\n    const uniformData = [{ type: 'float32', data: [attrs.alpha] }];\n    return backend.runWebGPUProgram(program, [x], x.dtype, uniformData);\n}\nexport const stepConfig = {\n    kernelName: Step,\n    backendName: 'webgpu',\n    kernelFunc: step\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3RlcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvU3RlcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQTJCLElBQUksRUFBcUMsTUFBTSx1QkFBdUIsQ0FBQztBQUd6RyxPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sa0JBQWtCLENBQUM7QUFDN0MsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBRWxELE1BQU0sVUFBVSxJQUFJLENBQ2hCLEVBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQzRDO0lBRXJFLE1BQU0sRUFBQyxDQUFDLEVBQUMsR0FBRyxNQUFNLENBQUM7SUFDbkIsTUFBTSxPQUFPLEdBQ1QsSUFBSSxjQUFjLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxXQUFXLENBQUMsSUFBSSxFQUFFLGtCQUFrQixDQUFDLENBQUM7SUFDdEUsTUFBTSxXQUFXLEdBQUcsQ0FBQyxFQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxFQUFDLENBQUMsQ0FBQztJQUM3RCxPQUFPLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0FBQ3RFLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQWlCO0lBQ3RDLFVBQVUsRUFBRSxJQUFJO0lBQ2hCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxJQUE2QjtDQUMxQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjIgR29vZ2xlIExMQy5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0tlcm5lbENvbmZpZywgS2VybmVsRnVuYywgU3RlcCwgU3RlcEF0dHJzLCBUZW5zb3JJbmZvLCBVbmFyeUlucHV0c30gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge1VuYXJ5T3BUeXBlfSBmcm9tICcuLi91bmFyeV9vcF91dGlsJztcbmltcG9ydCB7VW5hcnlPcFByb2dyYW19IGZyb20gJy4uL3VuYXJ5X29wX3dlYmdwdSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBzdGVwKFxuICAgIHtpbnB1dHMsIGF0dHJzLCBiYWNrZW5kfTpcbiAgICAgICAge2lucHV0czogVW5hcnlJbnB1dHMsIGF0dHJzOiBTdGVwQXR0cnMsIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmR9KTpcbiAgICBUZW5zb3JJbmZvIHtcbiAgY29uc3Qge3h9ID0gaW5wdXRzO1xuICBjb25zdCBwcm9ncmFtID1cbiAgICAgIG5ldyBVbmFyeU9wUHJvZ3JhbSh4LnNoYXBlLCBVbmFyeU9wVHlwZS5TVEVQLCAnc3RlcEFscGhhIDogZjMyLCcpO1xuICBjb25zdCB1bmlmb3JtRGF0YSA9IFt7dHlwZTogJ2Zsb2F0MzInLCBkYXRhOiBbYXR0cnMuYWxwaGFdfV07XG4gIHJldHVybiBiYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0ocHJvZ3JhbSwgW3hdLCB4LmR0eXBlLCB1bmlmb3JtRGF0YSk7XG59XG5cbmV4cG9ydCBjb25zdCBzdGVwQ29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IFN0ZXAsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogc3RlcCBhcyB1bmtub3duIGFzIEtlcm5lbEZ1bmNcbn07XG4iXX0=","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType, getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class StridedSliceProgram {\n    constructor(destSize) {\n        this.variableNames = ['x'];\n        // TODO(xing.xu): Increase the workPerThread.\n        this.workPerThread = 1;\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = destSize;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize, [this.workPerThread, 1, 1]);\n        const dtype = getCoordsDataType(this.outputShape.length);\n        this.uniforms = `begin : ${dtype},  strides : ${dtype}, `;\n        this.shaderKey = 'stridedSlice';\n    }\n    getUserCode() {\n        const rank = this.outputShape.length;\n        let newCoords = '';\n        if (rank === 1) {\n            newCoords = 'coords * uniforms.strides + uniforms.begin';\n        }\n        else {\n            let outputAxis = 0;\n            newCoords =\n                this.outputShape\n                    .map((_, i) => {\n                    outputAxis++;\n                    return this.outputShape.length === 1 ?\n                        `coords * uniforms.strides[${i}] + uniforms.begin[${i}]` :\n                        `coords[${outputAxis - 1}] * uniforms.strides[${i}] + uniforms.begin[${i}]`;\n                })\n                    .join(',');\n        }\n        const userCode = `\n       ${main('index')} {\n         if (index < uniforms.size) {\n           let coords = getCoordsFromIndex(index);\n           setOutputAtIndex(index, getX(${newCoords}));\n         }\n       }\n     `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyaWRlZF9zbGljZV93ZWJncHUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9zdHJpZGVkX3NsaWNlX3dlYmdwdS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsaUJBQWlCLEVBQUUsbUJBQW1CLElBQUksSUFBSSxFQUFnQixNQUFNLGtCQUFrQixDQUFDO0FBQy9GLE9BQU8sRUFBQyxlQUFlLEVBQUUsa0JBQWtCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFbEUsTUFBTSxPQUFPLG1CQUFtQjtJQVk5QixZQUFZLFFBQWtCO1FBWDlCLGtCQUFhLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQU10Qiw2Q0FBNkM7UUFDN0Msa0JBQWEsR0FBRyxDQUFDLENBQUM7UUFDbEIsa0JBQWEsR0FBNkIsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3JELFNBQUksR0FBRyxJQUFJLENBQUM7UUFHVixJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQztRQUM1QixJQUFJLENBQUMsY0FBYyxHQUFHLGtCQUFrQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUMzRCxJQUFJLENBQUMsUUFBUSxHQUFHLGVBQWUsQ0FDM0IsSUFBSSxDQUFDLGNBQWMsRUFBRSxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxhQUFhLEVBQ3pELENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUVoQyxNQUFNLEtBQUssR0FBRyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3pELElBQUksQ0FBQyxRQUFRLEdBQUcsV0FBVyxLQUFLLGdCQUFnQixLQUFLLElBQUksQ0FBQztRQUMxRCxJQUFJLENBQUMsU0FBUyxHQUFHLGNBQWMsQ0FBQztJQUNsQyxDQUFDO0lBRUQsV0FBVztRQUNULE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDO1FBQ3JDLElBQUksU0FBUyxHQUFHLEVBQUUsQ0FBQztRQUNuQixJQUFJLElBQUksS0FBSyxDQUFDLEVBQUU7WUFDZCxTQUFTLEdBQUcsNENBQTRDLENBQUM7U0FDMUQ7YUFBTTtZQUNMLElBQUksVUFBVSxHQUFHLENBQUMsQ0FBQztZQUNuQixTQUFTO2dCQUNMLElBQUksQ0FBQyxXQUFXO3FCQUNYLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtvQkFDWixVQUFVLEVBQUUsQ0FBQztvQkFDYixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQyxDQUFDO3dCQUNsQyw2QkFBNkIsQ0FBQyxzQkFBc0IsQ0FBQyxHQUFHLENBQUMsQ0FBQzt3QkFDMUQsVUFBVSxVQUFVLEdBQUcsQ0FBQyx3QkFDcEIsQ0FBQyxzQkFBc0IsQ0FBQyxHQUFHLENBQUM7Z0JBQ3RDLENBQUMsQ0FBQztxQkFDRCxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDcEI7UUFFRCxNQUFNLFFBQVEsR0FBRztTQUNaLElBQUksQ0FBQyxPQUFPLENBQUM7OzswQ0FHb0IsU0FBUzs7O01BRzdDLENBQUM7UUFDSCxPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7Z2V0Q29vcmRzRGF0YVR5cGUsIGdldE1haW5IZWFkZXJTdHJpbmcgYXMgbWFpbiwgV2ViR1BVUHJvZ3JhbX0gZnJvbSAnLi93ZWJncHVfcHJvZ3JhbSc7XG5pbXBvcnQge2NvbXB1dGVEaXNwYXRjaCwgZmxhdERpc3BhdGNoTGF5b3V0fSBmcm9tICcuL3dlYmdwdV91dGlsJztcblxuZXhwb3J0IGNsYXNzIFN0cmlkZWRTbGljZVByb2dyYW0gaW1wbGVtZW50cyBXZWJHUFVQcm9ncmFtIHtcbiAgdmFyaWFibGVOYW1lcyA9IFsneCddO1xuICB1bmlmb3Jtczogc3RyaW5nO1xuICBvdXRwdXRTaGFwZTogbnVtYmVyW107XG4gIHNoYWRlcktleTogc3RyaW5nO1xuICBkaXNwYXRjaExheW91dDoge3g6IG51bWJlcltdfTtcbiAgZGlzcGF0Y2g6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXTtcbiAgLy8gVE9ETyh4aW5nLnh1KTogSW5jcmVhc2UgdGhlIHdvcmtQZXJUaHJlYWQuXG4gIHdvcmtQZXJUaHJlYWQgPSAxO1xuICB3b3JrZ3JvdXBTaXplOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl0gPSBbNjQsIDEsIDFdO1xuICBzaXplID0gdHJ1ZTtcblxuICBjb25zdHJ1Y3RvcihkZXN0U2l6ZTogbnVtYmVyW10pIHtcbiAgICB0aGlzLm91dHB1dFNoYXBlID0gZGVzdFNpemU7XG4gICAgdGhpcy5kaXNwYXRjaExheW91dCA9IGZsYXREaXNwYXRjaExheW91dCh0aGlzLm91dHB1dFNoYXBlKTtcbiAgICB0aGlzLmRpc3BhdGNoID0gY29tcHV0ZURpc3BhdGNoKFxuICAgICAgICB0aGlzLmRpc3BhdGNoTGF5b3V0LCB0aGlzLm91dHB1dFNoYXBlLCB0aGlzLndvcmtncm91cFNpemUsXG4gICAgICAgIFt0aGlzLndvcmtQZXJUaHJlYWQsIDEsIDFdKTtcblxuICAgIGNvbnN0IGR0eXBlID0gZ2V0Q29vcmRzRGF0YVR5cGUodGhpcy5vdXRwdXRTaGFwZS5sZW5ndGgpO1xuICAgIHRoaXMudW5pZm9ybXMgPSBgYmVnaW4gOiAke2R0eXBlfSwgIHN0cmlkZXMgOiAke2R0eXBlfSwgYDtcbiAgICB0aGlzLnNoYWRlcktleSA9ICdzdHJpZGVkU2xpY2UnO1xuICB9XG5cbiAgZ2V0VXNlckNvZGUoKTogc3RyaW5nIHtcbiAgICBjb25zdCByYW5rID0gdGhpcy5vdXRwdXRTaGFwZS5sZW5ndGg7XG4gICAgbGV0IG5ld0Nvb3JkcyA9ICcnO1xuICAgIGlmIChyYW5rID09PSAxKSB7XG4gICAgICBuZXdDb29yZHMgPSAnY29vcmRzICogdW5pZm9ybXMuc3RyaWRlcyArIHVuaWZvcm1zLmJlZ2luJztcbiAgICB9IGVsc2Uge1xuICAgICAgbGV0IG91dHB1dEF4aXMgPSAwO1xuICAgICAgbmV3Q29vcmRzID1cbiAgICAgICAgICB0aGlzLm91dHB1dFNoYXBlXG4gICAgICAgICAgICAgIC5tYXAoKF8sIGkpID0+IHtcbiAgICAgICAgICAgICAgICBvdXRwdXRBeGlzKys7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMub3V0cHV0U2hhcGUubGVuZ3RoID09PSAxID9cbiAgICAgICAgICAgICAgICAgICAgYGNvb3JkcyAqIHVuaWZvcm1zLnN0cmlkZXNbJHtpfV0gKyB1bmlmb3Jtcy5iZWdpblske2l9XWAgOlxuICAgICAgICAgICAgICAgICAgICBgY29vcmRzWyR7b3V0cHV0QXhpcyAtIDF9XSAqIHVuaWZvcm1zLnN0cmlkZXNbJHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGl9XSArIHVuaWZvcm1zLmJlZ2luWyR7aX1dYDtcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgLmpvaW4oJywnKTtcbiAgICB9XG5cbiAgICBjb25zdCB1c2VyQ29kZSA9IGBcbiAgICAgICAke21haW4oJ2luZGV4Jyl9IHtcbiAgICAgICAgIGlmIChpbmRleCA8IHVuaWZvcm1zLnNpemUpIHtcbiAgICAgICAgICAgbGV0IGNvb3JkcyA9IGdldENvb3Jkc0Zyb21JbmRleChpbmRleCk7XG4gICAgICAgICAgIHNldE91dHB1dEF0SW5kZXgoaW5kZXgsIGdldFgoJHtuZXdDb29yZHN9KSk7XG4gICAgICAgICB9XG4gICAgICAgfVxuICAgICBgO1xuICAgIHJldHVybiB1c2VyQ29kZTtcbiAgfVxufVxuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer, slice_util, StridedSlice, util } from '@tensorflow/tfjs-core';\nimport { stridedSliceImplCPU } from '../kernel_utils/shared';\nimport { reshape } from './Reshape';\nimport { slice } from './Slice';\nimport { StridedSliceProgram } from '../strided_slice_webgpu';\nexport function stridedSlice(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask } = attrs;\n    const { finalShapeSparse, finalShape, isIdentity, sliceDim0, isSimpleSlice, begin: $begin, end: $end, strides: $strides } = slice_util.sliceInfo(x.shape, begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask);\n    let result;\n    if (isIdentity) {\n        // Optimization #1, slice is a no-op plus reshape\n        result = reshape({ inputs: { x }, backend, attrs: { shape: finalShape } });\n    }\n    else if (sliceDim0 || isSimpleSlice) {\n        // Optimization #2, slice is memory contiguous (only occurs in dim 0)\n        util.assert(x.shape.length >= 1, () => `Input must have rank at least 1, got: ${x.shape.length}`);\n        const size = slice_util.computeOutShape($begin, $end, $strides);\n        // To tolerate begin[0] > end[0] (a 0-output slice), we min(begin, end).\n        const sliced = slice({ inputs: { x }, backend, attrs: { begin: $begin, size } });\n        result =\n            reshape({ inputs: { x: sliced }, backend, attrs: { shape: finalShape } });\n        backend.disposeData(sliced.dataId);\n    }\n    else {\n        const shouldExecuteOnCPU = backend.shouldExecuteOnCPU([x]);\n        if (shouldExecuteOnCPU) {\n            const values = backend.readSync(x.dataId);\n            const xBuf = buffer(x.shape, x.dtype, values);\n            const resultValues = stridedSliceImplCPU(finalShapeSparse, xBuf, $strides, $begin);\n            result = backend.makeTensorInfo(finalShape, x.dtype, resultValues.values);\n        }\n        else {\n            const program = new StridedSliceProgram(finalShapeSparse);\n            const uniformData = [{ type: 'int32', data: $begin }, { type: 'int32', data: $strides }];\n            const resultValues = backend.runWebGPUProgram(program, [x], x.dtype, uniformData);\n            result = reshape({ inputs: { x: resultValues }, backend, attrs: { shape: finalShape } });\n            backend.disposeData(resultValues.dataId);\n        }\n    }\n    return result;\n}\nexport const stridedSliceConfig = {\n    kernelName: StridedSlice,\n    backendName: 'webgpu',\n    kernelFunc: stridedSlice\n};\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { StringNGrams } from '@tensorflow/tfjs-core';\nimport { stringNGramsImplCPU } from '../kernel_utils/shared';\nexport function stringNGrams(args) {\n    const { inputs, backend, attrs } = args;\n    const { separator, nGramWidths, leftPad, rightPad, padWidth, preserveShortSequences } = attrs;\n    const { data, dataSplits } = inputs;\n    const $data = backend.readSync(data.dataId);\n    const $dataSplits = backend.readSync(dataSplits.dataId);\n    const [nGrams, nGramsSplits] = stringNGramsImplCPU($data, $dataSplits, separator, nGramWidths, leftPad, rightPad, padWidth, preserveShortSequences);\n    return [\n        backend.makeTensorInfo([nGrams.length], 'string', nGrams),\n        backend.makeTensorInfo(dataSplits.shape, 'int32', nGramsSplits),\n    ];\n}\nexport const stringNGramsConfig = {\n    kernelName: StringNGrams,\n    backendName: 'webgpu',\n    kernelFunc: stringNGrams,\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3RyaW5nTkdyYW1zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9TdHJpbmdOR3JhbXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUEyQixZQUFZLEVBQW9ELE1BQU0sdUJBQXVCLENBQUM7QUFHaEksT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0sd0JBQXdCLENBQUM7QUFFM0QsTUFBTSxVQUFVLFlBQVksQ0FBQyxJQUk1QjtJQUNDLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QyxNQUFNLEVBQ0osU0FBUyxFQUNULFdBQVcsRUFDWCxPQUFPLEVBQ1AsUUFBUSxFQUNSLFFBQVEsRUFDUixzQkFBc0IsRUFDdkIsR0FBRyxLQUFLLENBQUM7SUFDVixNQUFNLEVBQUMsSUFBSSxFQUFFLFVBQVUsRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUNsQyxNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQWlCLENBQUM7SUFDNUQsTUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFlLENBQUM7SUFFdEUsTUFBTSxDQUFDLE1BQU0sRUFBRSxZQUFZLENBQUMsR0FBRyxtQkFBbUIsQ0FDOUMsS0FBSyxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUN2RSxzQkFBc0IsQ0FBQyxDQUFDO0lBQzVCLE9BQU87UUFDTCxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUM7UUFDekQsT0FBTyxDQUFDLGNBQWMsQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxZQUFZLENBQUM7S0FDaEUsQ0FBQztBQUNKLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBaUI7SUFDOUMsVUFBVSxFQUFFLFlBQVk7SUFDeEIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLFlBQXFDO0NBQ2xELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7S2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBTdHJpbmdOR3JhbXMsIFN0cmluZ05HcmFtc0F0dHJzLCBTdHJpbmdOR3JhbXNJbnB1dHMsIFRlbnNvckluZm99IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuaW1wb3J0IHtzdHJpbmdOR3JhbXNJbXBsQ1BVfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMvc2hhcmVkJztcblxuZXhwb3J0IGZ1bmN0aW9uIHN0cmluZ05HcmFtcyhhcmdzOiB7XG4gIGlucHV0czogU3RyaW5nTkdyYW1zSW5wdXRzLFxuICBiYWNrZW5kOiBXZWJHUFVCYWNrZW5kLFxuICBhdHRyczogU3RyaW5nTkdyYW1zQXR0cnNcbn0pOiBbVGVuc29ySW5mbywgVGVuc29ySW5mb10ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7XG4gICAgc2VwYXJhdG9yLFxuICAgIG5HcmFtV2lkdGhzLFxuICAgIGxlZnRQYWQsXG4gICAgcmlnaHRQYWQsXG4gICAgcGFkV2lkdGgsXG4gICAgcHJlc2VydmVTaG9ydFNlcXVlbmNlc1xuICB9ID0gYXR0cnM7XG4gIGNvbnN0IHtkYXRhLCBkYXRhU3BsaXRzfSA9IGlucHV0cztcbiAgY29uc3QgJGRhdGEgPSBiYWNrZW5kLnJlYWRTeW5jKGRhdGEuZGF0YUlkKSBhcyBVaW50OEFycmF5W107XG4gIGNvbnN0ICRkYXRhU3BsaXRzID0gYmFja2VuZC5yZWFkU3luYyhkYXRhU3BsaXRzLmRhdGFJZCkgYXMgSW50MzJBcnJheTtcblxuICBjb25zdCBbbkdyYW1zLCBuR3JhbXNTcGxpdHNdID0gc3RyaW5nTkdyYW1zSW1wbENQVShcbiAgICAgICRkYXRhLCAkZGF0YVNwbGl0cywgc2VwYXJhdG9yLCBuR3JhbVdpZHRocywgbGVmdFBhZCwgcmlnaHRQYWQsIHBhZFdpZHRoLFxuICAgICAgcHJlc2VydmVTaG9ydFNlcXVlbmNlcyk7XG4gIHJldHVybiBbXG4gICAgYmFja2VuZC5tYWtlVGVuc29ySW5mbyhbbkdyYW1zLmxlbmd0aF0sICdzdHJpbmcnLCBuR3JhbXMpLFxuICAgIGJhY2tlbmQubWFrZVRlbnNvckluZm8oZGF0YVNwbGl0cy5zaGFwZSwgJ2ludDMyJywgbkdyYW1zU3BsaXRzKSxcbiAgXTtcbn1cblxuZXhwb3J0IGNvbnN0IHN0cmluZ05HcmFtc0NvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBTdHJpbmdOR3JhbXMsXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogc3RyaW5nTkdyYW1zIGFzIHVua25vd24gYXMgS2VybmVsRnVuYyxcbn07XG4iXX0=","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sub } from '@tensorflow/tfjs-core';\nimport { BinaryOpType } from '../binary_op_util';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { subImplCPU as cpuSub } from '../kernel_utils/shared';\nexport const sub = binaryKernelFunc({ opType: BinaryOpType.SUB, cpuKernelImpl: cpuSub, supportsComplex: true });\nexport const subConfig = {\n    kernelName: Sub,\n    backendName: 'webgpu',\n    kernelFunc: sub\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3ViLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9TdWIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFlLEdBQUcsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRXhELE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUMvQyxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUNwRSxPQUFPLEVBQUMsVUFBVSxJQUFJLE1BQU0sRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBRTVELE1BQU0sQ0FBQyxNQUFNLEdBQUcsR0FBRyxnQkFBZ0IsQ0FDL0IsRUFBQyxNQUFNLEVBQUUsWUFBWSxDQUFDLEdBQUcsRUFBRSxhQUFhLEVBQUUsTUFBTSxFQUFFLGVBQWUsRUFBRSxJQUFJLEVBQUMsQ0FBQyxDQUFDO0FBRTlFLE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBaUI7SUFDckMsVUFBVSxFQUFFLEdBQUc7SUFDZixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsR0FBRztDQUNoQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0tlcm5lbENvbmZpZywgU3VifSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge0JpbmFyeU9wVHlwZX0gZnJvbSAnLi4vYmluYXJ5X29wX3V0aWwnO1xuaW1wb3J0IHtiaW5hcnlLZXJuZWxGdW5jfSBmcm9tICcuLi9rZXJuZWxfdXRpbHMva2VybmVsX2Z1bmNzX3V0aWxzJztcbmltcG9ydCB7c3ViSW1wbENQVSBhcyBjcHVTdWJ9IGZyb20gJy4uL2tlcm5lbF91dGlscy9zaGFyZWQnO1xuXG5leHBvcnQgY29uc3Qgc3ViID0gYmluYXJ5S2VybmVsRnVuYyhcbiAgICB7b3BUeXBlOiBCaW5hcnlPcFR5cGUuU1VCLCBjcHVLZXJuZWxJbXBsOiBjcHVTdWIsIHN1cHBvcnRzQ29tcGxleDogdHJ1ZX0pO1xuXG5leHBvcnQgY29uc3Qgc3ViQ29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IFN1YixcbiAgYmFja2VuZE5hbWU6ICd3ZWJncHUnLFxuICBrZXJuZWxGdW5jOiBzdWJcbn07XG4iXX0=","/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Tan } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { UnaryOpType } from '../unary_op_util';\nexport const tan = unaryKernelFunc({ opType: UnaryOpType.TAN });\nexport const tanConfig = {\n    kernelName: Tan,\n    backendName: 'webgpu',\n    kernelFunc: tan\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGFuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9UYW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFlLEdBQUcsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRXhELE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUNuRSxPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sa0JBQWtCLENBQUM7QUFFN0MsTUFBTSxDQUFDLE1BQU0sR0FBRyxHQUFHLGVBQWUsQ0FBQyxFQUFDLE1BQU0sRUFBRSxXQUFXLENBQUMsR0FBRyxFQUFDLENBQUMsQ0FBQztBQUU5RCxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQWlCO0lBQ3JDLFVBQVUsRUFBRSxHQUFHO0lBQ2YsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLEdBQUc7Q0FDaEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIyIEdvb2dsZSBMTEMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtLZXJuZWxDb25maWcsIFRhbn0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHt1bmFyeUtlcm5lbEZ1bmN9IGZyb20gJy4uL2tlcm5lbF91dGlscy9rZXJuZWxfZnVuY3NfdXRpbHMnO1xuaW1wb3J0IHtVbmFyeU9wVHlwZX0gZnJvbSAnLi4vdW5hcnlfb3BfdXRpbCc7XG5cbmV4cG9ydCBjb25zdCB0YW4gPSB1bmFyeUtlcm5lbEZ1bmMoe29wVHlwZTogVW5hcnlPcFR5cGUuVEFOfSk7XG5cbmV4cG9ydCBjb25zdCB0YW5Db25maWc6IEtlcm5lbENvbmZpZyA9IHtcbiAga2VybmVsTmFtZTogVGFuLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IHRhblxufTtcbiJdfQ==","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Tanh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { UnaryOpType } from '../unary_op_util';\nexport const tanh = unaryKernelFunc({ opType: UnaryOpType.TANH });\nexport const tanhConfig = {\n    kernelName: Tanh,\n    backendName: 'webgpu',\n    kernelFunc: tanh\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGFuaC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvVGFuaC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQWUsSUFBSSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDekQsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9DQUFvQyxDQUFDO0FBQ25FLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUU3QyxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQUcsZUFBZSxDQUFDLEVBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxJQUFJLEVBQUMsQ0FBQyxDQUFDO0FBRWhFLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBaUI7SUFDdEMsVUFBVSxFQUFFLElBQUk7SUFDaEIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLElBQUk7Q0FDakIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtLZXJuZWxDb25maWcsIFRhbmh9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5pbXBvcnQge3VuYXJ5S2VybmVsRnVuY30gZnJvbSAnLi4va2VybmVsX3V0aWxzL2tlcm5lbF9mdW5jc191dGlscyc7XG5pbXBvcnQge1VuYXJ5T3BUeXBlfSBmcm9tICcuLi91bmFyeV9vcF91dGlsJztcblxuZXhwb3J0IGNvbnN0IHRhbmggPSB1bmFyeUtlcm5lbEZ1bmMoe29wVHlwZTogVW5hcnlPcFR5cGUuVEFOSH0pO1xuXG5leHBvcnQgY29uc3QgdGFuaENvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBUYW5oLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IHRhbmhcbn07XG4iXX0=","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, TensorScatterUpdate, util } from '@tensorflow/tfjs-core';\nimport { ScatterProgram } from '../scatter_webgpu';\nimport { reshape } from './Reshape';\nimport { tile } from './Tile';\nexport function tensorScatterUpdate(args) {\n    const { inputs, backend, attrs } = args;\n    const { tensor, indices, updates } = inputs;\n    const {} = attrs;\n    const { sliceRank, numUpdates, sliceSize, strides, outputSize } = backend_util.calculateShapes(updates, indices, tensor.shape);\n    const flattenShape = [outputSize / sliceSize, sliceSize];\n    if (outputSize === 0) {\n        return backend.makeTensorInfo(tensor.shape, indices.dtype);\n    }\n    const toDispose = [];\n    const flattenIndices = reshape({ inputs: { x: indices }, backend, attrs: { shape: [numUpdates, sliceRank] } });\n    toDispose.push(flattenIndices);\n    const flattenX = reshape({ inputs: { x: updates }, backend, attrs: { shape: [numUpdates, sliceSize] } });\n    toDispose.push(flattenX);\n    const flattenTensor = reshape({ inputs: { x: tensor }, backend, attrs: { shape: flattenShape } });\n    toDispose.push(flattenTensor);\n    const output = tile({\n        inputs: { x: flattenTensor },\n        backend,\n        attrs: { reps: Array(flattenShape.length).fill(1) }\n    });\n    const program = new ScatterProgram([numUpdates, sliceSize], sliceRank, flattenIndices.shape.length, flattenX.shape.length, strides, flattenShape, tensor.dtype, false);\n    const size = util.sizeFromShape([numUpdates, sliceSize]);\n    const uniformData = [\n        { type: 'int32', data: [sliceRank] },\n        { type: 'int32', data: strides },\n        { type: 'int32', data: [size] },\n    ];\n    const res = backend.runWebGPUProgram(program, [flattenX, flattenIndices], flattenTensor.dtype, uniformData, output);\n    toDispose.push(res);\n    const reshaped = reshape({ inputs: { x: res }, backend, attrs: { shape: tensor.shape } });\n    toDispose.forEach(t => backend.disposeData(t.dataId));\n    return reshaped;\n}\nexport const tensorScatterUpdateConfig = {\n    kernelName: TensorScatterUpdate,\n    backendName: 'webgpu',\n    kernelFunc: tensorScatterUpdate\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGVuc29yU2NhdHRlclVwZGF0ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC13ZWJncHUvc3JjL2tlcm5lbHMvVGVuc29yU2NhdHRlclVwZGF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsWUFBWSxFQUF3QyxtQkFBbUIsRUFBdUQsSUFBSSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFHekssT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLG1CQUFtQixDQUFDO0FBRWpELE9BQU8sRUFBQyxPQUFPLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFDbEMsT0FBTyxFQUFDLElBQUksRUFBQyxNQUFNLFFBQVEsQ0FBQztBQUU1QixNQUFNLFVBQVUsbUJBQW1CLENBQUMsSUFJbkM7SUFDQyxNQUFNLEVBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUMsR0FBRyxJQUFJLENBQUM7SUFDdEMsTUFBTSxFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFDLEdBQUcsTUFBTSxDQUFDO0lBQzFDLE1BQU0sRUFBRSxHQUFHLEtBQUssQ0FBQztJQUVqQixNQUFNLEVBQUMsU0FBUyxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFLFVBQVUsRUFBQyxHQUN6RCxZQUFZLENBQUMsZUFBZSxDQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBRWpFLE1BQU0sWUFBWSxHQUFHLENBQUMsVUFBVSxHQUFHLFNBQVMsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUV6RCxJQUFJLFVBQVUsS0FBSyxDQUFDLEVBQUU7UUFDcEIsT0FBTyxPQUFPLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0tBQzVEO0lBRUQsTUFBTSxTQUFTLEdB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QyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIzIEdvb2dsZSBMTEMuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtiYWNrZW5kX3V0aWwsIEtlcm5lbENvbmZpZywgS2VybmVsRnVuYywgVGVuc29ySW5mbywgVGVuc29yU2NhdHRlclVwZGF0ZSwgVGVuc29yU2NhdHRlclVwZGF0ZUF0dHJzLCBUZW5zb3JTY2F0dGVyVXBkYXRlSW5wdXRzLCB1dGlsfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcbmltcG9ydCB7U2NhdHRlclByb2dyYW19IGZyb20gJy4uL3NjYXR0ZXJfd2ViZ3B1JztcblxuaW1wb3J0IHtyZXNoYXBlfSBmcm9tICcuL1Jlc2hhcGUnO1xuaW1wb3J0IHt0aWxlfSBmcm9tICcuL1RpbGUnO1xuXG5leHBvcnQgZnVuY3Rpb24gdGVuc29yU2NhdHRlclVwZGF0ZShhcmdzOiB7XG4gIGlucHV0czogVGVuc29yU2NhdHRlclVwZGF0ZUlucHV0cyxcbiAgYmFja2VuZDogV2ViR1BVQmFja2VuZCxcbiAgYXR0cnM6IFRlbnNvclNjYXR0ZXJVcGRhdGVBdHRyc1xufSk6IFRlbnNvckluZm8ge1xuICBjb25zdCB7aW5wdXRzLCBiYWNrZW5kLCBhdHRyc30gPSBhcmdzO1xuICBjb25zdCB7dGVuc29yLCBpbmRpY2VzLCB1cGRhdGVzfSA9IGlucHV0cztcbiAgY29uc3Qge30gPSBhdHRycztcblxuICBjb25zdCB7c2xpY2VSYW5rLCBudW1VcGRhdGVzLCBzbGljZVNpemUsIHN0cmlkZXMsIG91dHB1dFNpemV9ID1cbiAgICAgIGJhY2tlbmRfdXRpbC5jYWxjdWxhdGVTaGFwZXModXBkYXRlcywgaW5kaWNlcywgdGVuc29yLnNoYXBlKTtcblxuICBjb25zdCBmbGF0dGVuU2hhcGUgPSBbb3V0cHV0U2l6ZSAvIHNsaWNlU2l6ZSwgc2xpY2VTaXplXTtcblxuICBpZiAob3V0cHV0U2l6ZSA9PT0gMCkge1xuICAgIHJldHVybiBiYWNrZW5kLm1ha2VUZW5zb3JJbmZvKHRlbnNvci5zaGFwZSwgaW5kaWNlcy5kdHlwZSk7XG4gIH1cblxuICBjb25zdCB0b0Rpc3Bvc2UgPSBbXTtcblxuICBjb25zdCBmbGF0dGVuSW5kaWNlcyA9IHJlc2hhcGUoXG4gICAgICB7aW5wdXRzOiB7eDogaW5kaWNlc30sIGJhY2tlbmQsIGF0dHJzOiB7c2hhcGU6IFtudW1VcGRhdGVzLCBzbGljZVJhbmtdfX0pO1xuICB0b0Rpc3Bvc2UucHVzaChmbGF0dGVuSW5kaWNlcyk7XG4gIGNvbnN0IGZsYXR0ZW5YID0gcmVzaGFwZShcbiAgICAgIHtpbnB1dHM6IHt4OiB1cGRhdGVzfSwgYmFja2VuZCwgYXR0cnM6IHtzaGFwZTogW251bVVwZGF0ZXMsIHNsaWNlU2l6ZV19fSk7XG4gIHRvRGlzcG9zZS5wdXNoKGZsYXR0ZW5YKTtcbiAgY29uc3QgZmxhdHRlblRlbnNvciA9XG4gICAgICByZXNoYXBlKHtpbnB1dHM6IHt4OiB0ZW5zb3J9LCBiYWNrZW5kLCBhdHRyczoge3NoYXBlOiBmbGF0dGVuU2hhcGV9fSk7XG4gIHRvRGlzcG9zZS5wdXNoKGZsYXR0ZW5UZW5zb3IpO1xuICBjb25zdCBvdXRwdXQgPSB0aWxlKHtcbiAgICBpbnB1dHM6IHt4OiBmbGF0dGVuVGVuc29yfSxcbiAgICBiYWNrZW5kLFxuICAgIGF0dHJzOiB7cmVwczogQXJyYXkoZmxhdHRlblNoYXBlLmxlbmd0aCkuZmlsbCgxKX1cbiAgfSk7XG4gIGNvbnN0IHByb2dyYW0gPSBuZXcgU2NhdHRlclByb2dyYW0oXG4gICAgICBbbnVtVXBkYXRlcywgc2xpY2VTaXplXSwgc2xpY2VSYW5rLCBmbGF0dGVuSW5kaWNlcy5zaGFwZS5sZW5ndGgsXG4gICAgICBmbGF0dGVuWC5zaGFwZS5sZW5ndGgsIHN0cmlkZXMsIGZsYXR0ZW5TaGFwZSwgdGVuc29yLmR0eXBlLCBmYWxzZSk7XG4gIGNvbnN0IHNpemUgPSB1dGlsLnNpemVGcm9tU2hhcGUoW251bVVwZGF0ZXMsIHNsaWNlU2l6ZV0pO1xuICBjb25zdCB1bmlmb3JtRGF0YSA9IFtcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogW3NsaWNlUmFua119LFxuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBzdHJpZGVzfSxcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogW3NpemVdfSxcbiAgXTtcbiAgY29uc3QgcmVzID0gYmFja2VuZC5ydW5XZWJHUFVQcm9ncmFtKFxuICAgICAgcHJvZ3JhbSwgW2ZsYXR0ZW5YLCBmbGF0dGVuSW5kaWNlc10sIGZsYXR0ZW5UZW5zb3IuZHR5cGUsIHVuaWZvcm1EYXRhLFxuICAgICAgb3V0cHV0KTtcbiAgdG9EaXNwb3NlLnB1c2gocmVzKTtcblxuICBjb25zdCByZXNoYXBlZCA9XG4gICAgICByZXNoYXBlKHtpbnB1dHM6IHt4OiByZXN9LCBiYWNrZW5kLCBhdHRyczoge3NoYXBlOiB0ZW5zb3Iuc2hhcGV9fSk7XG5cbiAgdG9EaXNwb3NlLmZvckVhY2godCA9PiBiYWNrZW5kLmRpc3Bvc2VEYXRhKHQuZGF0YUlkKSk7XG5cbiAgcmV0dXJuIHJlc2hhcGVkO1xufVxuXG5leHBvcnQgY29uc3QgdGVuc29yU2NhdHRlclVwZGF0ZUNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBUZW5zb3JTY2F0dGVyVXBkYXRlLFxuICBiYWNrZW5kTmFtZTogJ3dlYmdwdScsXG4gIGtlcm5lbEZ1bmM6IHRlbnNvclNjYXR0ZXJVcGRhdGUgYXMgdW5rbm93biBhcyBLZXJuZWxGdW5jXG59O1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\n// Based on Algorithm 2 of Bitonic Top K, ref:\n// https://anilshanbhag.in/static/papers/gputopk_sigmod18.pdf\n// The original algorithm is based on computing the top K only, however\n// since for TFJS we require the indices of the top K values as well then the\n// algorithm found here is a bit modified. Rather than producing the values\n// at each step, the indices containing the top K are generated instead.\n// The output values are not generated to reduce the number of outputs in the\n// GPU, the values can easily be retrieved from the indices using a gather\n// op.\nexport class SwapProgram {\n    constructor(shape) {\n        this.variableNames = ['x', 'indices'];\n        this.workgroupSize = [256, 1, 1];\n        this.size = true;\n        this.outputShape = shape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.uniforms = `inputSize : i32, firstPass : i32, negativeInf : f32,\n        dir : i32, inc : i32,`;\n        this.shaderKey = 'swap';\n    }\n    getUserCode() {\n        const userCode = `\n        ${main('index')} {\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // We compare elements pair-wise within a group of size 2 * inc.\n            // The comparing rule for each group alternates between ascending\n            // and descending. Within each group, we compare each pair at\n            // positions i and i+inc. To decide whether an element at position i\n            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n            // inc, it is in the first half of the group, we denote it as x0,\n            // otherwise we denote it as x1.\n            // For example, as shown in the Bitonic top K paper referenced\n            // above, Figure5(a) shows that element[1] is in the second half of\n            // the group when group size is 2, but it is in the first half of\n            // the group when group size is 4.\n            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;\n            var i = 0;\n            if (isFirstInPair) {\n              i = elemIdx;\n            } else {\n              i = elemIdx - uniforms.inc;\n            }\n\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.inc;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.inc));\n            }\n\n            var x0 = f32(0.0);\n            var x1 = f32(0.0);\n            if (i0 < uniforms.inputSize) {\n              x0 = getX(batch, i0);\n            } else {\n              x0 = uniforms.negativeInf;\n            }\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = uniforms.negativeInf;\n            }\n\n            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;\n            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n            if (reverse == isGreater) {\n              // Elements in opposite order of direction\n              let iTemp = i0;\n              i0 = i1;\n              i1 = iTemp;\n            }\n            if (isFirstInPair) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      `;\n        return userCode;\n    }\n}\nexport class MergeProgram {\n    constructor(shape) {\n        this.variableNames = ['x', 'indices'];\n        this.workgroupSize = [256, 1, 1];\n        this.size = true;\n        this.outputShape = shape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        // |n| Size of the original input of TopK\n        // |firstPass| indicates if this is the first time swap is being used which\n        // means no indices input containing the top K is present yet.\n        // |k| Top k elements desired\n        this.uniforms = `inputSize : i32, firstPass : i32, k : i32,`;\n        this.shaderKey = 'merge';\n    }\n    getUserCode() {\n        const userCode = `\n        ${main('index')} {\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // The output size is half of the previous size.\n            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _\n            // (k=4), we only need to output the indices at positions |, the\n            // indices at positions _ can be thrown away, see Figure5(b) After\n            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced\n            // above.\n            // For example, the paper shows we only need to output the orange\n            // bars. The output sequence should look like this | | | | | | | |.\n            // Because the sequence is halved, to map the output index back to\n            // the previous sequence to find the corresponding value, we need\n            // to double the index. When we double the index, we basically\n            // interpolate a position, so 2i looks like\n            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k\n            // position of each 2k positions by - elemIdx % k. E.g. for output\n            // at index 4,5,6,7, we want to get the corresponding element at\n            // original index 8,9,10,11, for output at index 8,9,10,11,\n            // we want to get the corresponding element at original index\n            // 16,17,18,19, so on and so forth.\n\n            var i = 0;\n            if (elemIdx < uniforms.k) {\n              i = elemIdx;\n            } else {\n              i = elemIdx * 2 - elemIdx % uniforms.k;\n            }\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.k;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.k));\n            }\n\n            let x0 = getX(batch, i0);\n            var x1 = f32(0.0);\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = x0;\n            }\n\n            if (x0 >= x1) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { TopK, util } from '@tensorflow/tfjs-core';\nimport { topKImplCPU } from '../kernel_utils/shared';\nimport { MergeProgram, SwapProgram } from '../top_k_webgpu';\nimport { fill } from './Fill';\nimport { gatherV2 } from './GatherV2';\nimport { reshape } from './Reshape';\nimport { slice } from './Slice';\nfunction disposeIntermediateTensorInfoOrNull(backend, tensorInfo) {\n    if (tensorInfo !== null) {\n        backend.disposeData(tensorInfo.dataId);\n    }\n}\nfunction roundUpToPow2(num) {\n    let pow2 = 1;\n    while (pow2 < num) {\n        pow2 *= 2;\n    }\n    return pow2;\n}\n// Based on Algorithm 2 of Bitonic Top K, ref:\n// https://anilshanbhag.in/static/papers/gputopk_sigmod18.pdf\nexport function topK(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { k, sorted } = attrs;\n    const xShape = x.shape;\n    const lastDim = xShape[xShape.length - 1];\n    if (backend.shouldExecuteOnCPU([x])) {\n        const xVals = backend.readSync(x.dataId);\n        const [allTopKVals, allTopKIndices] = topKImplCPU(xVals, xShape, x.dtype, k, sorted);\n        return [\n            backend.makeTensorInfo(allTopKVals.shape, allTopKVals.dtype, allTopKVals.values),\n            backend.makeTensorInfo(allTopKIndices.shape, allTopKIndices.dtype, allTopKIndices.values)\n        ];\n    }\n    if (k === 0) {\n        xShape[xShape.length - 1] = 0;\n        return [\n            backend.makeTensorInfo(xShape, x.dtype, []),\n            backend.makeTensorInfo(xShape, 'int32', [])\n        ];\n    }\n    if (lastDim === 1 /* firstPass */) {\n        return [\n            x, fill({ attrs: { shape: xShape, dtype: 'int32', value: 0 }, backend })\n        ];\n    }\n    // Reshape into a 2d tensor [batch, lastDim] and compute topk along lastDim.\n    const xSize = util.sizeFromShape(xShape);\n    const batch = xSize / lastDim;\n    const x2D = reshape({ inputs: { x }, attrs: { shape: [batch, lastDim] }, backend });\n    const kPow2 = roundUpToPow2(k);\n    const lastDimPow2 = roundUpToPow2(lastDim);\n    // Only the indices containing the top K are kept at every step to reduce\n    // number of outputs in the GPU algorithms, so once the final set of indices\n    // is computed then gather is used to grab the corresponding values\n    // from the original input.\n    let indices = null;\n    // GPU algorithm always takes in an indices input but this input is not used\n    // on the first run of a GPU algorithm, therefore if indices is null we simply\n    // pass in x2D instead of it but the value will not actually be used\n    const getInputs = () => indices === null ? [x2D, x2D] : [x2D, indices];\n    const runSwap = (dir, inc, shape) => {\n        const inputs = getInputs();\n        const program = new SwapProgram(shape);\n        const firstPass = indices === null ? 1 : 0;\n        const uniformDataSwap = [\n            { type: 'int32', data: [lastDim] },\n            { type: 'int32', data: [firstPass] },\n            { type: 'float32', data: [Number.NEGATIVE_INFINITY] },\n            { type: 'int32', data: [dir] },\n            { type: 'int32', data: [inc] }\n        ];\n        const prevIndices = indices;\n        indices = backend.runWebGPUProgram(program, inputs, 'int32', uniformDataSwap);\n        disposeIntermediateTensorInfoOrNull(backend, prevIndices);\n    };\n    // Step 1: local sort\n    for (let len = 1; len < kPow2; len *= 2) {\n        const dir = len * 2;\n        for (let inc = len; inc >= 1; inc /= 2) {\n            runSwap(dir, inc, [batch, lastDimPow2]);\n        }\n    }\n    // Step 2: merge\n    for (let indicesSize = lastDimPow2; indicesSize > kPow2; indicesSize /= 2) {\n        const inputs = getInputs();\n        const mergeProgram = new MergeProgram([batch, indicesSize / 2]);\n        const firstPass = indices === null ? 1 : 0;\n        const uniformDataMerge = [\n            { type: 'int32', data: [lastDim] },\n            { type: 'int32', data: [firstPass] },\n            { type: 'int32', data: [kPow2] }\n        ];\n        const prevIndices = indices;\n        indices = backend.runWebGPUProgram(mergeProgram, inputs, 'int32', uniformDataMerge);\n        disposeIntermediateTensorInfoOrNull(backend, prevIndices);\n        // Step 3: rebuild\n        const len = kPow2 / 2;\n        const dir = len * 2;\n        for (let inc = len; inc >= 1; inc /= 2) {\n            runSwap(dir, inc, indices.shape);\n        }\n    }\n    // Keep only the requested top K results instead of kPow2\n    let prevIndices = indices;\n    indices = slice({ inputs: { x: indices }, backend, attrs: { begin: 0, size: [batch, k] } });\n    disposeIntermediateTensorInfoOrNull(backend, prevIndices);\n    // Gather values on last dimension\n    let values = gatherV2({ inputs: { x: x2D, indices }, backend, attrs: { axis: 1, batchDims: 1 } });\n    disposeIntermediateTensorInfoOrNull(backend, x2D);\n    // Reshape back to the original input shape, except that the last\n    // dimension is k.\n    const newShape = xShape.slice(0, -1);\n    newShape.push(k);\n    prevIndices = indices;\n    indices = reshape({ inputs: { x: indices }, attrs: { shape: newShape }, backend });\n    disposeIntermediateTensorInfoOrNull(backend, prevIndices);\n    const prevValues = values;\n    values = reshape({ inputs: { x: values }, attrs: { shape: newShape }, backend });\n    disposeIntermediateTensorInfoOrNull(backend, prevValues);\n    return [values, indices];\n}\nexport const topKConfig = {\n    kernelName: TopK,\n    backendName: 'webgpu',\n    kernelFunc: topK\n};\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class TransformProgram {\n    constructor(outShape) {\n        this.variableNames = ['Image', 'Transforms'];\n        this.uniforms = 'interpolationModeId : i32, fillModeId : i32, fillValue : f32,';\n        this.workgroupSize = [64, 1, 1];\n        this.size = true;\n        this.outputShape = outShape;\n        this.dispatchLayout = flatDispatchLayout(this.outputShape);\n        this.dispatch = computeDispatch(this.dispatchLayout, this.outputShape, this.workgroupSize);\n        this.shaderKey = 'transform';\n    }\n    getUserCode() {\n        const userCode = `\n          fn mapCoord(outCoord : f32, len : f32) -> f32{\n            var inCoord = outCoord;\n            if(uniforms.fillModeId == 2) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  if (inCoord < sz2) {\n                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +\n                    inCoord;\n                  }\n                  if (inCoord < -len) {\n                    inCoord = inCoord + sz2;\n                  } else {\n                    inCoord = -inCoord - 1.0;\n                  }\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));\n                  if (inCoord >= len) {\n                    inCoord = sz2 - inCoord - 1.0;\n                  }\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 3) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 4) {\n              return clamp(outCoord, 0.0, len - 1.0);\n            }\n            return outCoord;\n          }\n          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,\n            channel : i32) -> f32 {\n            var outputValue : f32;\n            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {\n                outputValue = getImage(batch, coordY, coordX, channel);\n            } else {\n              outputValue = uniforms.fillValue;\n            }\n            return outputValue;\n          }\n\n          ${main('index')} {\n            if (index < uniforms.size) {\n              let coords = getCoordsFromIndex(index);\n              var outputValue : f32;\n              let batch = coords[0];\n              let x = coords[2];\n              let y = coords[1];\n              let channel = coords[3];\n              let xf = f32(x);\n              let yf = f32(y);\n              let a1 = getTransforms(batch, 0);\n              let a2 = getTransforms(batch, 1);\n              let a3 = getTransforms(batch, 2);\n              let b1 = getTransforms(batch, 3);\n              let b2 = getTransforms(batch, 4);\n              let b3 = getTransforms(batch, 5);\n              let c1 = getTransforms(batch, 6);\n              let c2 = getTransforms(batch, 7);\n              let projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = uniforms.fillValue;\n              } else {\n                let inX = (a1 * xf + a2 * yf + a3) / projection;\n                let inY = (b1 * xf + b2 * yf + b3) / projection;\n                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));\n                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));\n\n                if (uniforms.interpolationModeId == 1) {\n                  let coordY = i32(round(mapY));\n                  let coordX = i32(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  let yFloor = floor(mapY);\n                  let xFloor = floor(mapX);\n                  let yCeil = yFloor + 1.0;\n                  let xCeil = xFloor + 1.0;\n                  let valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);\n                  let valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutputAtIndex(index, outputValue);\n            }\n          }\n        `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Transform } from '@tensorflow/tfjs-core';\nimport { TransformProgram } from '../transform_webgpu';\nexport function transform(args) {\n    const { inputs, backend, attrs } = args;\n    const { image, transforms } = inputs;\n    const { interpolation, fillMode, fillValue, outputShape } = attrs;\n    const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n    const [outHeight, outWidth] = outputShape != null ? outputShape : [imageHeight, imageWidth];\n    const outShape = [batch, outHeight, outWidth,\n        numChannels];\n    const program = new TransformProgram(outShape);\n    const interpolationModeId = interpolation === 'nearest' ? 1 : 2;\n    let fillModeId;\n    switch (fillMode) {\n        case 'constant':\n            fillModeId = 1;\n            break;\n        case 'reflect':\n            fillModeId = 2;\n            break;\n        case 'wrap':\n            fillModeId = 3;\n            break;\n        case 'nearest':\n            fillModeId = 4;\n            break;\n        default:\n            fillModeId = 1;\n            break;\n    }\n    const uniformData = [\n        { type: 'int32', data: [interpolationModeId] },\n        { type: 'int32', data: [fillModeId] }, { type: 'float32', data: [fillValue] }\n    ];\n    return backend.runWebGPUProgram(program, [image, transforms], 'float32', uniformData);\n}\nexport const transformConfig = {\n    kernelName: Transform,\n    backendName: 'webgpu',\n    kernelFunc: transform\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVHJhbnNmb3JtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9UcmFuc2Zvcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUF1QyxTQUFTLEVBQWtDLE1BQU0sdUJBQXVCLENBQUM7QUFHdkgsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFFckQsTUFBTSxVQUFVLFNBQVMsQ0FBQyxJQUl6QjtJQUNDLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QyxNQUFNLEVBQUMsS0FBSyxFQUFFLFVBQVUsRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUNuQyxNQUFNLEVBQUMsYUFBYSxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFDLEdBQUcsS0FBSyxDQUFDO0lBRWhFLE1BQU0sQ0FBQyxLQUFLLEVBQUUsV0FBVyxFQUFFLFVBQVUsRUFBRSxXQUFXLENBQUMsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDO0lBQ2xFLE1BQU0sQ0FBQyxTQUFTLEVBQUUsUUFBUSxDQUFDLEdBQ3ZCLFdBQVcsSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUUsVUFBVSxDQUFDLENBQUM7SUFDbEUsTUFBTSxRQUFRLEdBQ1YsQ0FBQyxLQUFLLEVBQUUsU0FBUyxFQUFFLFFBQVE7UUFDMUIsV0FBVyxDQUFxQyxDQUFDO0lBRXRELE1BQU0sT0FBTyxHQUFHLElBQUksZ0JBQWdCLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDL0MsTUFBTSxtQkFBbUIsR0FBRyxhQUFhLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNoRSxJQUFJLFVBQWtCLENBQUM7SUFDdkIsUUFBUSxRQUFRLEVBQUU7UUFDaEIsS0FBSyxVQUFVO1lBQ2IsVUFBVSxHQUFHLENBQUMsQ0FBQztZQUNmLE1BQU07UUFDUixLQUFLLFNBQVM7WUFDWixVQUFVLEdBQUcsQ0FBQyxDQUFDO1lBQ2YsTUFBTTtRQUNSLEtBQUssTUFBTTtZQUNULFVBQVUsR0FBRyxDQUFDLENBQUM7WUFDZixNQUFNO1FBQ1IsS0FBSyxTQUFTO1lBQ1osVUFBVSxHQUFHLENBQUMsQ0FBQztZQUNmLE1BQU07UUFDUjtZQUNFLFVBQVUsR0FBRyxDQUFDLENBQUM7WUFDZixNQUFNO0tBQ1Q7SUFDRCxNQUFNLFdBQVcsR0FBRztRQUNsQixFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsbUJBQW1CLENBQUMsRUFBQztRQUM1QyxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsVUFBVSxDQUFDLEVBQUMsRUFBRSxFQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLENBQUMsU0FBUyxDQUFDLEVBQUM7S0FDMUUsQ0FBQztJQUNGLE9BQU8sT0FBTyxDQUFDLGdCQUFnQixDQUMzQixPQUFPLEVBQUUsQ0FBQyxLQUFLLEVBQUUsVUFBVSxDQUFDLEVBQUUsU0FBUyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0FBQzVELENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxlQUFlLEdBQWlCO0lBQzNDLFVBQVUsRUFBRSxTQUFTO0lBQ3JCLFdBQVcsRUFBRSxRQUFRO0lBQ3JCLFVBQVUsRUFBRSxTQUFrQztDQUMvQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0tlcm5lbENvbmZpZywgS2VybmVsRnVuYywgVGVuc29ySW5mbywgVHJhbnNmb3JtLCBUcmFuc2Zvcm1BdHRycywgVHJhbnNmb3JtSW5wdXRzfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge1dlYkdQVUJhY2tlbmR9IGZyb20gJy4uL2JhY2tlbmRfd2ViZ3B1JztcbmltcG9ydCB7VHJhbnNmb3JtUHJvZ3JhbX0gZnJvbSAnLi4vdHJhbnNmb3JtX3dlYmdwdSc7XG5cbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2Zvcm0oYXJnczoge1xuICBpbnB1dHM6IFRyYW5zZm9ybUlucHV0cyxcbiAgYmFja2VuZDogV2ViR1BVQmFja2VuZCxcbiAgYXR0cnM6IFRyYW5zZm9ybUF0dHJzXG59KTogVGVuc29ySW5mbyB7XG4gIGNvbnN0IHtpbnB1dHMsIGJhY2tlbmQsIGF0dHJzfSA9IGFyZ3M7XG4gIGNvbnN0IHtpbWFnZSwgdHJhbnNmb3Jtc30gPSBpbnB1dHM7XG4gIGNvbnN0IHtpbnRlcnBvbGF0aW9uLCBmaWxsTW9kZSwgZmlsbFZhbHVlLCBvdXRwdXRTaGFwZX0gPSBhdHRycztcblxuICBjb25zdCBbYmF0Y2gsIGltYWdlSGVpZ2h0LCBpbWFnZVdpZHRoLCBudW1DaGFubmVsc10gPSBpbWFnZS5zaGFwZTtcbiAgY29uc3QgW291dEhlaWdodCwgb3V0V2lkdGhdID1cbiAgICAgIG91dHB1dFNoYXBlICE9IG51bGwgPyBvdXRwdXRTaGFwZSA6IFtpbWFnZUhlaWdodCwgaW1hZ2VXaWR0aF07XG4gIGNvbnN0IG91dFNoYXBlID1cbiAgICAgIFtiYXRjaCwgb3V0SGVpZ2h0LCBvdXRXaWR0aCxcbiAgICAgICBudW1DaGFubmVsc10gYXMgW251bWJlciwgbnVtYmVyLCBudW1iZXIsIG51bWJlcl07XG5cbiAgY29uc3QgcHJvZ3JhbSA9IG5ldyBUcmFuc2Zvcm1Qcm9ncmFtKG91dFNoYXBlKTtcbiAgY29uc3QgaW50ZXJwb2xhdGlvbk1vZGVJZCA9IGludGVycG9sYXRpb24gPT09ICduZWFyZXN0JyA/IDEgOiAyO1xuICBsZXQgZmlsbE1vZGVJZDogbnVtYmVyO1xuICBzd2l0Y2ggKGZpbGxNb2RlKSB7XG4gICAgY2FzZSAnY29uc3RhbnQnOlxuICAgICAgZmlsbE1vZGVJZCA9IDE7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdyZWZsZWN0JzpcbiAgICAgIGZpbGxNb2RlSWQgPSAyO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnd3JhcCc6XG4gICAgICBmaWxsTW9kZUlkID0gMztcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ25lYXJlc3QnOlxuICAgICAgZmlsbE1vZGVJZCA9IDQ7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgZmlsbE1vZGVJZCA9IDE7XG4gICAgICBicmVhaztcbiAgfVxuICBjb25zdCB1bmlmb3JtRGF0YSA9IFtcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogW2ludGVycG9sYXRpb25Nb2RlSWRdfSxcbiAgICB7dHlwZTogJ2ludDMyJywgZGF0YTogW2ZpbGxNb2RlSWRdfSwge3R5cGU6ICdmbG9hdDMyJywgZGF0YTogW2ZpbGxWYWx1ZV19XG4gIF07XG4gIHJldHVybiBiYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0oXG4gICAgICBwcm9ncmFtLCBbaW1hZ2UsIHRyYW5zZm9ybXNdLCAnZmxvYXQzMicsIHVuaWZvcm1EYXRhKTtcbn1cblxuZXhwb3J0IGNvbnN0IHRyYW5zZm9ybUNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBUcmFuc2Zvcm0sXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogdHJhbnNmb3JtIGFzIHVua25vd24gYXMgS2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Unpack } from '@tensorflow/tfjs-core';\nimport { reshape } from './Reshape';\nimport { slice } from './Slice';\nexport function unpack(args) {\n    const { inputs, backend, attrs } = args;\n    const { value } = inputs;\n    let { axis } = attrs;\n    if (axis < 0) {\n        axis += value.shape.length;\n    }\n    const x = value;\n    const xRank = x.shape.length;\n    const num = value.shape[axis];\n    const outShape = new Array(xRank - 1);\n    let outIndex = 0;\n    for (let i = 0; i < xRank; i++) {\n        if (i !== axis) {\n            outShape[outIndex++] = x.shape[i];\n        }\n    }\n    const toDispose = [];\n    const begin = new Array(xRank).fill(0);\n    const size = x.shape.slice();\n    size[axis] = 1;\n    const res = new Array(num);\n    for (let i = 0; i < res.length; i++) {\n        begin[axis] = i;\n        const sliced = slice({ inputs: { x }, backend, attrs: { begin, size } });\n        const reshaped = reshape({ inputs: { x: sliced }, backend, attrs: { shape: outShape } });\n        res[i] = reshaped;\n        toDispose.push(sliced);\n    }\n    toDispose.forEach(t => backend.disposeData(t.dataId));\n    return res;\n}\nexport const unpackConfig = {\n    kernelName: Unpack,\n    backendName: 'webgpu',\n    kernelFunc: unpack\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVW5wYWNrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9VbnBhY2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUF1QyxNQUFNLEVBQTRCLE1BQU0sdUJBQXVCLENBQUM7QUFJOUcsT0FBTyxFQUFDLE9BQU8sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUNsQyxPQUFPLEVBQUMsS0FBSyxFQUFDLE1BQU0sU0FBUyxDQUFDO0FBRTlCLE1BQU0sVUFBVSxNQUFNLENBQ2xCLElBQ3NFO0lBRXhFLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QyxNQUFNLEVBQUMsS0FBSyxFQUFDLEdBQUcsTUFBTSxDQUFDO0lBQ3ZCLElBQUksRUFBQyxJQUFJLEVBQUMsR0FBRyxLQUFLLENBQUM7SUFFbkIsSUFBSSxJQUFJLEdBQUcsQ0FBQyxFQUFFO1FBQ1osSUFBSSxJQUFJLEtBQUssQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDO0tBQzVCO0lBRUQsTUFBTSxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQ2hCLE1BQU0sS0FBSyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDO0lBRTdCLE1BQU0sR0FBRyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDOUIsTUFBTSxRQUFRLEdBQWEsSUFBSSxLQUFLLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2hELElBQUksUUFBUSxHQUFHLENBQUMsQ0FBQztJQUNqQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQzlCLElBQUksQ0FBQyxLQUFLLElBQUksRUFBRTtZQUNkLFFBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDbkM7S0FDRjtJQUVELE1BQU0sU0FBUyxHQUFHLEVBQUUsQ0FBQztJQUVyQixNQUFNLEtBQUssR0FBRyxJQUFJLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDdkMsTUFBTSxJQUFJLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUM3QixJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2YsTUFBTSxHQUFHLEdBQWlCLElBQUksS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3pDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQ25DLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDaEIsTUFBTSxNQUFNLEdBQUcsS0FBSyxDQUFDLEVBQUMsTUFBTSxFQUFFLEVBQUMsQ0FBQyxFQUFDLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxFQUFDLEtBQUssRUFBRSxJQUFJLEVBQUMsRUFBQyxDQUFDLENBQUM7UUFDbkUsTUFBTSxRQUFRLEdBQ1YsT0FBTyxDQUFDLEVBQUMsTUFBTSxFQUFFLEVBQUMsQ0FBQyxFQUFFLE1BQU0sRUFBQyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsRUFBQyxLQUFLLEVBQUUsUUFBUSxFQUFDLEVBQUMsQ0FBQyxDQUFDO1FBQ3RFLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxRQUFRLENBQUM7UUFFbEIsU0FBUyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztLQUN4QjtJQUVELFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBQ3RELE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBaUI7SUFDeEMsVUFBVSxFQUFFLE1BQU07SUFDbEIsV0FBVyxFQUFFLFFBQVE7SUFDckIsVUFBVSxFQUFFLE1BQStCO0NBQzVDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7S2VybmVsQ29uZmlnLCBLZXJuZWxGdW5jLCBUZW5zb3JJbmZvLCBVbnBhY2ssIFVucGFja0F0dHJzLCBVbnBhY2tJbnB1dHN9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7V2ViR1BVQmFja2VuZH0gZnJvbSAnLi4vYmFja2VuZF93ZWJncHUnO1xuXG5pbXBvcnQge3Jlc2hhcGV9IGZyb20gJy4vUmVzaGFwZSc7XG5pbXBvcnQge3NsaWNlfSBmcm9tICcuL1NsaWNlJztcblxuZXhwb3J0IGZ1bmN0aW9uIHVucGFjayhcbiAgICBhcmdzOlxuICAgICAgICB7aW5wdXRzOiBVbnBhY2tJbnB1dHMsIGJhY2tlbmQ6IFdlYkdQVUJhY2tlbmQsIGF0dHJzOiBVbnBhY2tBdHRyc30pOlxuICAgIFRlbnNvckluZm9bXSB7XG4gIGNvbnN0IHtpbnB1dHMsIGJhY2tlbmQsIGF0dHJzfSA9IGFyZ3M7XG4gIGNvbnN0IHt2YWx1ZX0gPSBpbnB1dHM7XG4gIGxldCB7YXhpc30gPSBhdHRycztcblxuICBpZiAoYXhpcyA8IDApIHtcbiAgICBheGlzICs9IHZhbHVlLnNoYXBlLmxlbmd0aDtcbiAgfVxuXG4gIGNvbnN0IHggPSB2YWx1ZTtcbiAgY29uc3QgeFJhbmsgPSB4LnNoYXBlLmxlbmd0aDtcblxuICBjb25zdCBudW0gPSB2YWx1ZS5zaGFwZVtheGlzXTtcbiAgY29uc3Qgb3V0U2hhcGU6IG51bWJlcltdID0gbmV3IEFycmF5KHhSYW5rIC0gMSk7XG4gIGxldCBvdXRJbmRleCA9IDA7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgeFJhbms7IGkrKykge1xuICAgIGlmIChpICE9PSBheGlzKSB7XG4gICAgICBvdXRTaGFwZVtvdXRJbmRleCsrXSA9IHguc2hhcGVbaV07XG4gICAgfVxuICB9XG5cbiAgY29uc3QgdG9EaXNwb3NlID0gW107XG5cbiAgY29uc3QgYmVnaW4gPSBuZXcgQXJyYXkoeFJhbmspLmZpbGwoMCk7XG4gIGNvbnN0IHNpemUgPSB4LnNoYXBlLnNsaWNlKCk7XG4gIHNpemVbYXhpc10gPSAxO1xuICBjb25zdCByZXM6IFRlbnNvckluZm9bXSA9IG5ldyBBcnJheShudW0pO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHJlcy5sZW5ndGg7IGkrKykge1xuICAgIGJlZ2luW2F4aXNdID0gaTtcbiAgICBjb25zdCBzbGljZWQgPSBzbGljZSh7aW5wdXRzOiB7eH0sIGJhY2tlbmQsIGF0dHJzOiB7YmVnaW4sIHNpemV9fSk7XG4gICAgY29uc3QgcmVzaGFwZWQgPVxuICAgICAgICByZXNoYXBlKHtpbnB1dHM6IHt4OiBzbGljZWR9LCBiYWNrZW5kLCBhdHRyczoge3NoYXBlOiBvdXRTaGFwZX19KTtcbiAgICByZXNbaV0gPSByZXNoYXBlZDtcblxuICAgIHRvRGlzcG9zZS5wdXNoKHNsaWNlZCk7XG4gIH1cblxuICB0b0Rpc3Bvc2UuZm9yRWFjaCh0ID0+IGJhY2tlbmQuZGlzcG9zZURhdGEodC5kYXRhSWQpKTtcbiAgcmV0dXJuIHJlcztcbn1cblxuZXhwb3J0IGNvbnN0IHVucGFja0NvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBVbnBhY2ssXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogdW5wYWNrIGFzIHVua25vd24gYXMgS2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { atomicAddSnippet } from './shader_util';\nimport { getMainHeaderString as main } from './webgpu_program';\nimport { computeDispatch, flatDispatchLayout } from './webgpu_util';\nexport class UnsortedSegmentSumProgram {\n    constructor(inShape, outShape, outputDtype) {\n        this.outputShape = [];\n        this.variableNames = ['x', 'segmentIds'];\n        this.uniforms = 'numSegments : i32, xSize: i32,';\n        this.workgroupSize = [64, 1, 1];\n        this.atomic = true;\n        this.outputShape = outShape;\n        this.dispatchLayout = flatDispatchLayout(inShape);\n        this.dispatch =\n            computeDispatch(this.dispatchLayout, inShape, this.workgroupSize);\n        if (outputDtype !== 'float32' && outputDtype !== 'int32') {\n            throw new Error(`UnsortedSegmentSum only supports float32 and int32\n              types, does not support ${outputDtype} type.`);\n        }\n        this.type = outputDtype;\n        this.shaderKey = 'unsortedSegmentSum';\n    }\n    getUserCode() {\n        const userCode = `\n    ${main('index')} {\n      if (index < uniforms.xSize) {\n        let coords = getXCoordsFromIndex(index);\n        let b = coords[0];\n        let inCol = coords[1];\n\n        let segmentId = i32(getSegmentIds(inCol));\n        if (segmentId >= 0) {\n          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;\n          let value = getX(b, inCol);\n\n          ${atomicAddSnippet('&result[flatIndex]', 'value', this.type)}\n        }\n      }\n    }\n  `;\n        return userCode;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5zb3J0ZWRfc2VnbWVudF9zdW1fd2ViZ3B1LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMvdW5zb3J0ZWRfc2VnbWVudF9zdW1fd2ViZ3B1LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUlILE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMvQyxPQUFPLEVBQUMsbUJBQW1CLElBQUksSUFBSSxFQUFnQixNQUFNLGtCQUFrQixDQUFDO0FBQzVFLE9BQU8sRUFBQyxlQUFlLEVBQUUsa0JBQWtCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFbEUsTUFBTSxPQUFPLHlCQUF5QjtJQVdwQyxZQUFZLE9BQWlCLEVBQUUsUUFBa0IsRUFBRSxXQUFxQjtRQVZ4RSxnQkFBVyxHQUFhLEVBQUUsQ0FBQztRQUkzQixrQkFBYSxHQUFHLENBQUMsR0FBRyxFQUFFLFlBQVksQ0FBQyxDQUFDO1FBQ3BDLGFBQVEsR0FBRyxnQ0FBZ0MsQ0FBQztRQUM1QyxrQkFBYSxHQUE2QixDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDckQsV0FBTSxHQUFHLElBQUksQ0FBQztRQUlaLElBQUksQ0FBQyxXQUFXLEdBQUcsUUFBUSxDQUFDO1FBQzVCLElBQUksQ0FBQyxjQUFjLEdBQUcsa0JBQWtCLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDbEQsSUFBSSxDQUFDLFFBQVE7WUFDVCxlQUFlLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQ3RFLElBQUksV0FBVyxLQUFLLFNBQVMsSUFBSSxXQUFXLEtBQUssT0FBTyxFQUFFO1lBQ3hELE1BQU0sSUFBSSxLQUFLLENBQUM7d0NBQ2tCLFdBQVcsUUFBUSxDQUFDLENBQUM7U0FDeEQ7UUFDRCxJQUFJLENBQUMsSUFBSSxHQUFHLFdBQVcsQ0FBQztRQUN4QixJQUFJLENBQUMsU0FBUyxHQUFHLG9CQUFvQixDQUFDO0lBQ3hDLENBQUM7SUFFRCxXQUFXO1FBQ1QsTUFBTSxRQUFRLEdBQUc7TUFDZixJQUFJLENBQUMsT0FBTyxDQUFDOzs7Ozs7Ozs7OztZQVlYLGdCQUFnQixDQUNaLG9CQUFvQixFQUFFLE9BQU8sRUFBRSxJQUFJLENBQUMsSUFBMkIsQ0FBQzs7OztHQUl6RSxDQUFDO1FBQ0EsT0FBTyxRQUFRLENBQUM7SUFDbEIsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjMgR29vZ2xlIExMQy5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0RhdGFUeXBlfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge2F0b21pY0FkZFNuaXBwZXR9IGZyb20gJy4vc2hhZGVyX3V0aWwnO1xuaW1wb3J0IHtnZXRNYWluSGVhZGVyU3RyaW5nIGFzIG1haW4sIFdlYkdQVVByb2dyYW19IGZyb20gJy4vd2ViZ3B1X3Byb2dyYW0nO1xuaW1wb3J0IHtjb21wdXRlRGlzcGF0Y2gsIGZsYXREaXNwYXRjaExheW91dH0gZnJvbSAnLi93ZWJncHVfdXRpbCc7XG5cbmV4cG9ydCBjbGFzcyBVbnNvcnRlZFNlZ21lbnRTdW1Qcm9ncmFtIGltcGxlbWVudHMgV2ViR1BVUHJvZ3JhbSB7XG4gIG91dHB1dFNoYXBlOiBudW1iZXJbXSA9IFtdO1xuICBzaGFkZXJLZXk6IHN0cmluZztcbiAgZGlzcGF0Y2hMYXlvdXQ6IHt4OiBudW1iZXJbXX07XG4gIGRpc3BhdGNoOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl07XG4gIHZhcmlhYmxlTmFtZXMgPSBbJ3gnLCAnc2VnbWVudElkcyddO1xuICB1bmlmb3JtcyA9ICdudW1TZWdtZW50cyA6IGkzMiwgeFNpemU6IGkzMiwnO1xuICB3b3JrZ3JvdXBTaXplOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl0gPSBbNjQsIDEsIDFdO1xuICBhdG9taWMgPSB0cnVlO1xuICB0eXBlOiBEYXRhVHlwZTtcblxuICBjb25zdHJ1Y3RvcihpblNoYXBlOiBudW1iZXJbXSwgb3V0U2hhcGU6IG51bWJlcltdLCBvdXRwdXREdHlwZTogRGF0YVR5cGUpIHtcbiAgICB0aGlzLm91dHB1dFNoYXBlID0gb3V0U2hhcGU7XG4gICAgdGhpcy5kaXNwYXRjaExheW91dCA9IGZsYXREaXNwYXRjaExheW91dChpblNoYXBlKTtcbiAgICB0aGlzLmRpc3BhdGNoID1cbiAgICAgICAgY29tcHV0ZURpc3BhdGNoKHRoaXMuZGlzcGF0Y2hMYXlvdXQsIGluU2hhcGUsIHRoaXMud29ya2dyb3VwU2l6ZSk7XG4gICAgaWYgKG91dHB1dER0eXBlICE9PSAnZmxvYXQzMicgJiYgb3V0cHV0RHR5cGUgIT09ICdpbnQzMicpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVW5zb3J0ZWRTZWdtZW50U3VtIG9ubHkgc3VwcG9ydHMgZmxvYXQzMiBhbmQgaW50MzJcbiAgICAgICAgICAgICAgdHlwZXMsIGRvZXMgbm90IHN1cHBvcnQgJHtvdXRwdXREdHlwZX0gdHlwZS5gKTtcbiAgICB9XG4gICAgdGhpcy50eXBlID0gb3V0cHV0RHR5cGU7XG4gICAgdGhpcy5zaGFkZXJLZXkgPSAndW5zb3J0ZWRTZWdtZW50U3VtJztcbiAgfVxuXG4gIGdldFVzZXJDb2RlKCk6IHN0cmluZyB7XG4gICAgY29uc3QgdXNlckNvZGUgPSBgXG4gICAgJHttYWluKCdpbmRleCcpfSB7XG4gICAgICBpZiAoaW5kZXggPCB1bmlmb3Jtcy54U2l6ZSkge1xuICAgICAgICBsZXQgY29vcmRzID0gZ2V0WENvb3Jkc0Zyb21JbmRleChpbmRleCk7XG4gICAgICAgIGxldCBiID0gY29vcmRzWzBdO1xuICAgICAgICBsZXQgaW5Db2wgPSBjb29yZHNbMV07XG5cbiAgICAgICAgbGV0IHNlZ21lbnRJZCA9IGkzMihnZXRTZWdtZW50SWRzKGluQ29sKSk7XG4gICAgICAgIGlmIChzZWdtZW50SWQgPj0gMCkge1xuICAgICAgICAgIGxldCBmbGF0SW5kZXggPSBiICogdW5pZm9ybXMubnVtU2VnbWVudHMgKyBzZWdtZW50SWQgJSB1bmlmb3Jtcy5udW1TZWdtZW50cztcbiAgICAgICAgICBsZXQgdmFsdWUgPSBnZXRYKGIsIGluQ29sKTtcblxuICAgICAgICAgICR7XG4gICAgICAgIGF0b21pY0FkZFNuaXBwZXQoXG4gICAgICAgICAgICAnJnJlc3VsdFtmbGF0SW5kZXhdJywgJ3ZhbHVlJywgdGhpcy50eXBlIGFzICdmbG9hdDMyJyB8ICdpbnQzMicpfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICBgO1xuICAgIHJldHVybiB1c2VyQ29kZTtcbiAgfVxufVxuIl19","/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, UnsortedSegmentSum, util } from '@tensorflow/tfjs-core';\nimport { UnsortedSegmentSumProgram } from '../unsorted_segment_sum_webgpu';\nimport { fill } from './Fill';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport function unsortedSegmentSum(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, segmentIds } = inputs;\n    const { numSegments } = attrs;\n    const xRank = x.shape.length;\n    const toDispose = [];\n    let axis = 0;\n    const permutation = backend_util.getAxesPermutation([axis], xRank);\n    let permutedX = x;\n    if (permutation != null) {\n        permutedX = transpose({ inputs: { x }, backend, attrs: { perm: permutation } });\n        toDispose.push(permutedX);\n        axis = backend_util.getInnerMostAxes(1, xRank)[0];\n    }\n    const outShape = backend_util.segment_util.computeOutShape(permutedX.shape, axis, numSegments);\n    const inSize = util.sizeFromShape([permutedX.shape[axis]]);\n    const a2D = reshape({ inputs: { x: permutedX }, backend, attrs: { shape: [-1, inSize] } });\n    toDispose.push(a2D);\n    const dtype = x.dtype;\n    const shape = [a2D.shape[0], numSegments];\n    const output = fill({ backend, attrs: { shape, value: 0, dtype } });\n    const program = new UnsortedSegmentSumProgram(a2D.shape, shape, dtype);\n    const uniformData = [\n        { type: 'int32', data: [numSegments] },\n        { type: 'int32', data: [util.sizeFromShape(a2D.shape)] }\n    ];\n    const segResult = backend.runWebGPUProgram(program, [a2D, segmentIds], dtype, uniformData, output);\n    const reshaped = reshape({ inputs: { x: segResult }, backend, attrs: { shape: outShape } });\n    toDispose.push(segResult);\n    let result = reshaped;\n    if (permutation != null) {\n        toDispose.push(reshaped);\n        const perm = backend_util.getUndoAxesPermutation(permutation);\n        result = transpose({ inputs: { x: result }, backend, attrs: { perm } });\n    }\n    toDispose.forEach(t => backend.disposeData(t.dataId));\n    return result;\n}\nexport const unsortedSegmentSumConfig = {\n    kernelName: UnsortedSegmentSum,\n    backendName: 'webgpu',\n    kernelFunc: unsortedSegmentSum\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVW5zb3J0ZWRTZWdtZW50U3VtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMva2VybmVscy9VbnNvcnRlZFNlZ21lbnRTdW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLFlBQVksRUFBd0Msa0JBQWtCLEVBQXFELElBQUksRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBR3RLLE9BQU8sRUFBQyx5QkFBeUIsRUFBQyxNQUFNLGdDQUFnQyxDQUFDO0FBRXpFLE9BQU8sRUFBQyxJQUFJLEVBQUMsTUFBTSxRQUFRLENBQUM7QUFDNUIsT0FBTyxFQUFDLE9BQU8sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUNsQyxPQUFPLEVBQUMsU0FBUyxFQUFDLE1BQU0sYUFBYSxDQUFDO0FBRXRDLE1BQU0sVUFBVSxrQkFBa0IsQ0FBQyxJQUlsQztJQUNDLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QyxNQUFNLEVBQUMsQ0FBQyxFQUFFLFVBQVUsRUFBQyxHQUFHLE1BQU0sQ0FBQztJQUMvQixNQUFNLEVBQUMsV0FBVyxFQUFDLEdBQUcsS0FBSyxDQUFDO0lBRTVCLE1BQU0sS0FBSyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDO0lBRTdCLE1BQU0sU0FBUyxHQUFHLEVBQUUsQ0FBQztJQUVyQixJQUFJLElBQUksR0FBRyxDQUFDLENBQUM7SUFDYixNQUFNLFdBQVcsR0FBRyxZQUFZLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNuRSxJQUFJLFNBQVMsR0FBRyxDQUFDLENBQUM7SUFDbEIsSUFBSSxXQUFXLElBQUksSUFBSSxFQUFFO1FBQ3ZCLFNBQVMsR0FBRyxTQUFTLENBQUMsRUFBQyxNQUFNLEVBQUUsRUFBQyxDQUFDLEVBQUMsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLEVBQUMsSUFBSSxFQUFFLFdBQVcsRUFBQyxFQUFDLENBQUMsQ0FBQztRQUMxRSxTQUFTLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQzFCLElBQUksR0FBRyxZQUFZLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ25EO0lBRUQsTUFBTSxRQUFRLEdBQUcsWUFBWSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQ3RELFNBQVMsQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ3hDLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMzRCxNQUFNLEdBQUcsR0FDTCxPQUFPLENBQUMsRUFBQyxNQUFNLEVBQUUsRUFBQyxDQUFDLEVBQUUsU0FBUyxFQUFDLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxFQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxFQUFDLEVBQUMsQ0FBQyxDQUFDO0lBQzdFLFNBQVMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFFcEIsTUFBTSxLQUFLLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQztJQUN0QixNQUFNLEtBQUssR0FBRyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDMUMsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLEVBQUMsT0FBTyxFQUFFLEtBQUssRUFBRSxFQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBQyxFQUFDLENBQUMsQ0FBQztJQUNoRSxNQUFNLE9BQU8sR0FBRyxJQUFJLHlCQUF5QixDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3ZFLE1BQU0sV0FBVyxHQUFHO1FBQ2xCLEVBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxXQUFXLENBQUMsRUFBQztRQUNwQyxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBQztLQUN2RCxDQUFDO0lBQ0YsTUFBTSxTQUFTLEdBQUcsT0FBTyxDQUFDLGdCQUFnQixDQUN0QyxPQUFPLEVBQUUsQ0FBQyxHQUFHLEVBQUUsVUFBVSxDQUFDLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUU1RCxNQUFNLFFBQVEsR0FDVixPQUFPLENBQUMsRUFBQyxNQUFNLEVBQUUsRUFBQyxDQUFDLEVBQUUsU0FBUyxFQUFDLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxFQUFDLEtBQUssRUFBRSxRQUFRLEVBQUMsRUFBQyxDQUFDLENBQUM7SUFDekUsU0FBUyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUMxQixJQUFJLE1BQU0sR0FBRyxRQUFRLENBQUM7SUFDdEIsSUFBSSxXQUFXLElBQUksSUFBSSxFQUFFO1FBQ3ZCLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDekIsTUFBTSxJQUFJLEdBQUcsWUFBWSxDQUFDLHNCQUFzQixDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQzlELE1BQU0sR0FBRyxTQUFTLENBQUMsRUFBQyxNQUFNLEVBQUUsRUFBQyxDQUFDLEVBQUUsTUFBTSxFQUFDLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxFQUFDLElBQUksRUFBQyxFQUFDLENBQUMsQ0FBQztLQUNuRTtJQUVELFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBQ3RELE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSx3QkFBd0IsR0FBaUI7SUFDcEQsVUFBVSxFQUFFLGtCQUFrQjtJQUM5QixXQUFXLEVBQUUsUUFBUTtJQUNyQixVQUFVLEVBQUUsa0JBQTJDO0NBQ3hELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMyBHb29nbGUgTExDLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7YmFja2VuZF91dGlsLCBLZXJuZWxDb25maWcsIEtlcm5lbEZ1bmMsIFRlbnNvckluZm8sIFVuc29ydGVkU2VnbWVudFN1bSwgVW5zb3J0ZWRTZWdtZW50U3VtQXR0cnMsIFVuc29ydGVkU2VnbWVudFN1bUlucHV0cywgdXRpbH0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtXZWJHUFVCYWNrZW5kfSBmcm9tICcuLi9iYWNrZW5kX3dlYmdwdSc7XG5pbXBvcnQge1Vuc29ydGVkU2VnbWVudFN1bVByb2dyYW19IGZyb20gJy4uL3Vuc29ydGVkX3NlZ21lbnRfc3VtX3dlYmdwdSc7XG5cbmltcG9ydCB7ZmlsbH0gZnJvbSAnLi9GaWxsJztcbmltcG9ydCB7cmVzaGFwZX0gZnJvbSAnLi9SZXNoYXBlJztcbmltcG9ydCB7dHJhbnNwb3NlfSBmcm9tICcuL1RyYW5zcG9zZSc7XG5cbmV4cG9ydCBmdW5jdGlvbiB1bnNvcnRlZFNlZ21lbnRTdW0oYXJnczoge1xuICBpbnB1dHM6IFVuc29ydGVkU2VnbWVudFN1bUlucHV0cyxcbiAgYmFja2VuZDogV2ViR1BVQmFja2VuZCxcbiAgYXR0cnM6IFVuc29ydGVkU2VnbWVudFN1bUF0dHJzXG59KTogVGVuc29ySW5mbyB7XG4gIGNvbnN0IHtpbnB1dHMsIGJhY2tlbmQsIGF0dHJzfSA9IGFyZ3M7XG4gIGNvbnN0IHt4LCBzZWdtZW50SWRzfSA9IGlucHV0cztcbiAgY29uc3Qge251bVNlZ21lbnRzfSA9IGF0dHJzO1xuXG4gIGNvbnN0IHhSYW5rID0geC5zaGFwZS5sZW5ndGg7XG5cbiAgY29uc3QgdG9EaXNwb3NlID0gW107XG5cbiAgbGV0IGF4aXMgPSAwO1xuICBjb25zdCBwZXJtdXRhdGlvbiA9IGJhY2tlbmRfdXRpbC5nZXRBeGVzUGVybXV0YXRpb24oW2F4aXNdLCB4UmFuayk7XG4gIGxldCBwZXJtdXRlZFggPSB4O1xuICBpZiAocGVybXV0YXRpb24gIT0gbnVsbCkge1xuICAgIHBlcm11dGVkWCA9IHRyYW5zcG9zZSh7aW5wdXRzOiB7eH0sIGJhY2tlbmQsIGF0dHJzOiB7cGVybTogcGVybXV0YXRpb259fSk7XG4gICAgdG9EaXNwb3NlLnB1c2gocGVybXV0ZWRYKTtcbiAgICBheGlzID0gYmFja2VuZF91dGlsLmdldElubmVyTW9zdEF4ZXMoMSwgeFJhbmspWzBdO1xuICB9XG5cbiAgY29uc3Qgb3V0U2hhcGUgPSBiYWNrZW5kX3V0aWwuc2VnbWVudF91dGlsLmNvbXB1dGVPdXRTaGFwZShcbiAgICAgIHBlcm11dGVkWC5zaGFwZSwgYXhpcywgbnVtU2VnbWVudHMpO1xuICBjb25zdCBpblNpemUgPSB1dGlsLnNpemVGcm9tU2hhcGUoW3Blcm11dGVkWC5zaGFwZVtheGlzXV0pO1xuICBjb25zdCBhMkQgPVxuICAgICAgcmVzaGFwZSh7aW5wdXRzOiB7eDogcGVybXV0ZWRYfSwgYmFja2VuZCwgYXR0cnM6IHtzaGFwZTogWy0xLCBpblNpemVdfX0pO1xuICB0b0Rpc3Bvc2UucHVzaChhMkQpO1xuXG4gIGNvbnN0IGR0eXBlID0geC5kdHlwZTtcbiAgY29uc3Qgc2hhcGUgPSBbYTJELnNoYXBlWzBdLCBudW1TZWdtZW50c107XG4gIGNvbnN0IG91dHB1dCA9IGZpbGwoe2JhY2tlbmQsIGF0dHJzOiB7c2hhcGUsIHZhbHVlOiAwLCBkdHlwZX19KTtcbiAgY29uc3QgcHJvZ3JhbSA9IG5ldyBVbnNvcnRlZFNlZ21lbnRTdW1Qcm9ncmFtKGEyRC5zaGFwZSwgc2hhcGUsIGR0eXBlKTtcbiAgY29uc3QgdW5pZm9ybURhdGEgPSBbXG4gICAge3R5cGU6ICdpbnQzMicsIGRhdGE6IFtudW1TZWdtZW50c119LFxuICAgIHt0eXBlOiAnaW50MzInLCBkYXRhOiBbdXRpbC5zaXplRnJvbVNoYXBlKGEyRC5zaGFwZSldfVxuICBdO1xuICBjb25zdCBzZWdSZXN1bHQgPSBiYWNrZW5kLnJ1bldlYkdQVVByb2dyYW0oXG4gICAgICBwcm9ncmFtLCBbYTJELCBzZWdtZW50SWRzXSwgZHR5cGUsIHVuaWZvcm1EYXRhLCBvdXRwdXQpO1xuXG4gIGNvbnN0IHJlc2hhcGVkID1cbiAgICAgIHJlc2hhcGUoe2lucHV0czoge3g6IHNlZ1Jlc3VsdH0sIGJhY2tlbmQsIGF0dHJzOiB7c2hhcGU6IG91dFNoYXBlfX0pO1xuICB0b0Rpc3Bvc2UucHVzaChzZWdSZXN1bHQpO1xuICBsZXQgcmVzdWx0ID0gcmVzaGFwZWQ7XG4gIGlmIChwZXJtdXRhdGlvbiAhPSBudWxsKSB7XG4gICAgdG9EaXNwb3NlLnB1c2gocmVzaGFwZWQpO1xuICAgIGNvbnN0IHBlcm0gPSBiYWNrZW5kX3V0aWwuZ2V0VW5kb0F4ZXNQZXJtdXRhdGlvbihwZXJtdXRhdGlvbik7XG4gICAgcmVzdWx0ID0gdHJhbnNwb3NlKHtpbnB1dHM6IHt4OiByZXN1bHR9LCBiYWNrZW5kLCBhdHRyczoge3Blcm19fSk7XG4gIH1cblxuICB0b0Rpc3Bvc2UuZm9yRWFjaCh0ID0+IGJhY2tlbmQuZGlzcG9zZURhdGEodC5kYXRhSWQpKTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGNvbnN0IHVuc29ydGVkU2VnbWVudFN1bUNvbmZpZzogS2VybmVsQ29uZmlnID0ge1xuICBrZXJuZWxOYW1lOiBVbnNvcnRlZFNlZ21lbnRTdW0sXG4gIGJhY2tlbmROYW1lOiAnd2ViZ3B1JyxcbiAga2VybmVsRnVuYzogdW5zb3J0ZWRTZWdtZW50U3VtIGFzIHVua25vd24gYXMgS2VybmVsRnVuY1xufTtcbiJdfQ==","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { registerKernel } from '@tensorflow/tfjs-core';\nimport { _fusedMatMulConfig } from './kernels/_FusedMatMul';\nimport { absConfig } from './kernels/Abs';\nimport { acosConfig } from './kernels/Acos';\nimport { acoshConfig } from './kernels/Acosh';\nimport { addConfig } from './kernels/Add';\nimport { addNConfig } from './kernels/AddN';\nimport { allConfig } from './kernels/All';\nimport { anyConfig } from './kernels/Any';\nimport { argMaxConfig } from './kernels/ArgMax';\nimport { argMinConfig } from './kernels/ArgMin';\nimport { asinConfig } from './kernels/Asin';\nimport { asinhConfig } from './kernels/Asinh';\nimport { atanConfig } from './kernels/Atan';\nimport { atan2Config } from './kernels/Atan2';\nimport { atanhConfig } from './kernels/Atanh';\nimport { avgPoolConfig } from './kernels/AvgPool';\nimport { avgPool3DConfig } from './kernels/AvgPool3D';\nimport { avgPool3DGradConfig } from './kernels/AvgPool3DGrad';\nimport { avgPoolGradConfig } from './kernels/AvgPoolGrad';\nimport { batchMatMulConfig } from './kernels/BatchMatMul';\nimport { batchToSpaceNDConfig } from './kernels/BatchToSpaceND';\nimport { bincountConfig } from './kernels/Bincount';\nimport { broadcastArgsConfig } from './kernels/BroadcastArgs';\nimport { castConfig } from './kernels/Cast';\nimport { ceilConfig } from './kernels/Ceil';\nimport { clipByValueConfig } from './kernels/ClipByValue';\nimport { complexConfig } from './kernels/Complex';\nimport { complexAbsConfig } from './kernels/ComplexAbs';\nimport { concatConfig } from './kernels/Concat';\nimport { conv2DConfig } from './kernels/Conv2D';\nimport { conv2DBackpropFilterConfig } from './kernels/Conv2DBackpropFilter';\nimport { conv2DBackpropInputConfig } from './kernels/Conv2DBackpropInput';\nimport { conv3DConfig } from './kernels/Conv3D';\nimport { conv3DBackpropFilterV2Config } from './kernels/Conv3DBackpropFilterV2';\nimport { conv3DBackpropInputV2Config } from './kernels/Conv3DBackpropInputV2';\nimport { cosConfig } from './kernels/Cos';\nimport { coshConfig } from './kernels/Cosh';\nimport { cropAndResizeConfig } from './kernels/CropAndResize';\nimport { cumprodConfig } from './kernels/Cumprod';\nimport { cumsumConfig } from './kernels/Cumsum';\nimport { denseBincountConfig } from './kernels/DenseBincount';\nimport { depthToSpaceConfig } from './kernels/DepthToSpace';\nimport { depthwiseConv2dNativeConfig } from './kernels/DepthwiseConv2dNative';\nimport { depthwiseConv2dNativeBackpropFilterConfig } from './kernels/DepthwiseConv2dNativeBackpropFilter';\nimport { depthwiseConv2dNativeBackpropInputConfig } from './kernels/DepthwiseConv2dNativeBackpropInput';\nimport { diagConfig } from './kernels/Diag';\nimport { dilation2DConfig } from './kernels/Dilation2D';\nimport { dilation2DBackpropFilterConfig } from './kernels/Dilation2DBackpropFilter';\nimport { dilation2DBackpropInputConfig } from './kernels/Dilation2DBackpropInput';\nimport { drawConfig } from './kernels/Draw';\nimport { einsumConfig } from './kernels/Einsum';\nimport { eluConfig } from './kernels/Elu';\nimport { eluGradConfig } from './kernels/EluGrad';\nimport { equalConfig } from './kernels/Equal';\nimport { erfConfig } from './kernels/Erf';\nimport { expConfig } from './kernels/Exp';\nimport { expandDimsConfig } from './kernels/ExpandDims';\nimport { expm1Config } from './kernels/Expm1';\nimport { fftConfig } from './kernels/FFT';\nimport { fillConfig } from './kernels/Fill';\nimport { flipLeftRightConfig } from './kernels/FlipLeftRight';\nimport { floorConfig } from './kernels/Floor';\nimport { floorDivConfig } from './kernels/FloorDiv';\nimport { fromPixelsConfig } from './kernels/FromPixels';\nimport { fusedBatchNormConfig } from './kernels/FusedBatchNorm';\nimport { fusedConv2DConfig } from './kernels/FusedConv2D';\nimport { fusedDepthwiseConv2DConfig } from './kernels/FusedDepthwiseConv2D';\nimport { gatherNdConfig } from './kernels/GatherNd';\nimport { gatherV2Config } from './kernels/GatherV2';\nimport { greaterConfig } from './kernels/Greater';\nimport { greaterEqualConfig } from './kernels/GreaterEqual';\nimport { identityConfig } from './kernels/Identity';\nimport { ifftConfig } from './kernels/IFFT';\nimport { imagConfig } from './kernels/Imag';\nimport { isFiniteConfig } from './kernels/IsFinite';\nimport { isInfConfig } from './kernels/IsInf';\nimport { isNaNConfig } from './kernels/IsNaN';\nimport { leakyReluConfig } from './kernels/LeakyRelu';\nimport { lessConfig } from './kernels/Less';\nimport { lessEqualConfig } from './kernels/LessEqual';\nimport { linSpaceConfig } from './kernels/LinSpace';\nimport { logConfig } from './kernels/Log';\nimport { log1pConfig } from './kernels/Log1p';\nimport { logicalAndConfig } from './kernels/LogicalAnd';\nimport { logicalNotConfig } from './kernels/LogicalNot';\nimport { logicalOrConfig } from './kernels/LogicalOr';\nimport { lrnConfig } from './kernels/LRN';\nimport { lrnGradConfig } from './kernels/LRNGrad';\nimport { maxConfig } from './kernels/Max';\nimport { maximumConfig } from './kernels/Maximum';\nimport { maxPoolConfig } from './kernels/MaxPool';\nimport { maxPool3DConfig } from './kernels/MaxPool3D';\nimport { maxPool3DGradConfig } from './kernels/MaxPool3DGrad';\nimport { maxPoolGradConfig } from './kernels/MaxPoolGrad';\nimport { maxPoolWithArgmaxConfig } from './kernels/MaxPoolWithArgmax';\nimport { meanConfig } from './kernels/Mean';\nimport { minConfig } from './kernels/Min';\nimport { minimumConfig } from './kernels/Minimum';\nimport { mirrorPadConfig } from './kernels/MirrorPad';\nimport { modConfig } from './kernels/Mod';\nimport { multinomialConfig } from './kernels/Multinomial';\nimport { multiplyConfig } from './kernels/Multiply';\nimport { negConfig } from './kernels/Neg';\nimport { nonMaxSuppressionV3Config } from './kernels/NonMaxSuppressionV3';\nimport { nonMaxSuppressionV5Config } from './kernels/NonMaxSuppressionV5';\nimport { notEqualConfig } from './kernels/NotEqual';\nimport { oneHotConfig } from './kernels/OneHot';\nimport { onesLikeConfig } from './kernels/OnesLike';\nimport { packConfig } from './kernels/Pack';\nimport { padV2Config } from './kernels/PadV2';\nimport { powConfig } from './kernels/Pow';\nimport { preluConfig } from './kernels/Prelu';\nimport { prodConfig } from './kernels/Prod';\nimport { rangeConfig } from './kernels/Range';\nimport { realConfig } from './kernels/Real';\nimport { realDivConfig } from './kernels/RealDiv';\nimport { reciprocalConfig } from './kernels/Reciprocal';\nimport { reluConfig } from './kernels/Relu';\nimport { relu6Config } from './kernels/Relu6';\nimport { reshapeConfig } from './kernels/Reshape';\nimport { resizeBilinearConfig } from './kernels/ResizeBilinear';\nimport { resizeBilinearGradConfig } from './kernels/ResizeBilinearGrad';\nimport { resizeNearestNeighborConfig } from './kernels/ResizeNearestNeighbor';\nimport { resizeNearestNeighborGradConfig } from './kernels/ResizeNearestNeighborGrad';\nimport { reverseConfig } from './kernels/Reverse';\nimport { rotateWithOffsetConfig } from './kernels/RotateWithOffset';\nimport { roundConfig } from './kernels/Round';\nimport { rsqrtConfig } from './kernels/Rsqrt';\nimport { scatterNdConfig } from './kernels/ScatterNd';\nimport { searchSortedConfig } from './kernels/SearchSorted';\nimport { selectConfig } from './kernels/Select';\nimport { seluConfig } from './kernels/Selu';\nimport { sigmoidConfig } from './kernels/Sigmoid';\nimport { signConfig } from './kernels/Sign';\nimport { sinConfig } from './kernels/Sin';\nimport { sinhConfig } from './kernels/Sinh';\nimport { sliceConfig } from './kernels/Slice';\nimport { softmaxConfig } from './kernels/Softmax';\nimport { softplusConfig } from './kernels/Softplus';\nimport { spaceToBatchNDConfig } from './kernels/SpaceToBatchND';\nimport { sparseSegmentMeanConfig } from './kernels/SparseSegmentMean';\nimport { sparseSegmentSumConfig } from './kernels/SparseSegmentSum';\nimport { sparseToDenseConfig } from './kernels/SparseToDense';\nimport { splitVConfig } from './kernels/SplitV';\nimport { sqrtConfig } from './kernels/Sqrt';\nimport { squareConfig } from './kernels/Square';\nimport { squaredDifferenceConfig } from './kernels/SquaredDifference';\nimport { stepConfig } from './kernels/Step';\nimport { stridedSliceConfig } from './kernels/StridedSlice';\nimport { stringNGramsConfig } from './kernels/StringNGrams';\nimport { subConfig } from './kernels/Sub';\nimport { sumConfig } from './kernels/Sum';\nimport { tanConfig } from './kernels/Tan';\nimport { tanhConfig } from './kernels/Tanh';\nimport { tensorScatterUpdateConfig } from './kernels/TensorScatterUpdate';\nimport { tileConfig } from './kernels/Tile';\nimport { topKConfig } from './kernels/TopK';\nimport { transformConfig } from './kernels/Transform';\nimport { transposeConfig } from './kernels/Transpose';\nimport { unpackConfig } from './kernels/Unpack';\nimport { unsortedSegmentSumConfig } from './kernels/UnsortedSegmentSum';\nimport { zerosLikeConfig } from './kernels/ZerosLike';\n// List all kernel configs here\nconst kernelConfigs = [\n    _fusedMatMulConfig,\n    absConfig,\n    acosConfig,\n    acoshConfig,\n    addConfig,\n    addNConfig,\n    allConfig,\n    anyConfig,\n    argMaxConfig,\n    argMinConfig,\n    asinConfig,\n    asinhConfig,\n    atanConfig,\n    atan2Config,\n    atanhConfig,\n    avgPoolConfig,\n    avgPool3DConfig,\n    avgPool3DGradConfig,\n    avgPoolGradConfig,\n    batchMatMulConfig,\n    batchToSpaceNDConfig,\n    bincountConfig,\n    broadcastArgsConfig,\n    castConfig,\n    ceilConfig,\n    clipByValueConfig,\n    complexConfig,\n    complexAbsConfig,\n    concatConfig,\n    conv2DConfig,\n    conv2DBackpropFilterConfig,\n    conv2DBackpropInputConfig,\n    conv3DConfig,\n    conv3DBackpropFilterV2Config,\n    conv3DBackpropInputV2Config,\n    cosConfig,\n    coshConfig,\n    cropAndResizeConfig,\n    cumprodConfig,\n    cumsumConfig,\n    denseBincountConfig,\n    depthToSpaceConfig,\n    depthwiseConv2dNativeBackpropFilterConfig,\n    depthwiseConv2dNativeBackpropInputConfig,\n    depthwiseConv2dNativeConfig,\n    diagConfig,\n    dilation2DConfig,\n    dilation2DBackpropFilterConfig,\n    dilation2DBackpropInputConfig,\n    drawConfig,\n    einsumConfig,\n    eluConfig,\n    eluGradConfig,\n    equalConfig,\n    erfConfig,\n    expConfig,\n    expandDimsConfig,\n    expm1Config,\n    fftConfig,\n    fillConfig,\n    flipLeftRightConfig,\n    fromPixelsConfig,\n    floorConfig,\n    floorDivConfig,\n    fusedBatchNormConfig,\n    fusedConv2DConfig,\n    fusedDepthwiseConv2DConfig,\n    gatherNdConfig,\n    gatherV2Config,\n    greaterConfig,\n    greaterEqualConfig,\n    identityConfig,\n    ifftConfig,\n    imagConfig,\n    isFiniteConfig,\n    isInfConfig,\n    isNaNConfig,\n    leakyReluConfig,\n    lessConfig,\n    lessEqualConfig,\n    linSpaceConfig,\n    log1pConfig,\n    logConfig,\n    logicalAndConfig,\n    logicalNotConfig,\n    logicalOrConfig,\n    lrnConfig,\n    lrnGradConfig,\n    maxConfig,\n    maximumConfig,\n    maxPoolConfig,\n    maxPoolGradConfig,\n    maxPool3DConfig,\n    maxPool3DGradConfig,\n    maxPoolWithArgmaxConfig,\n    meanConfig,\n    minConfig,\n    minimumConfig,\n    mirrorPadConfig,\n    modConfig,\n    multinomialConfig,\n    multiplyConfig,\n    negConfig,\n    nonMaxSuppressionV3Config,\n    nonMaxSuppressionV5Config,\n    notEqualConfig,\n    oneHotConfig,\n    onesLikeConfig,\n    packConfig,\n    padV2Config,\n    powConfig,\n    preluConfig,\n    prodConfig,\n    rangeConfig,\n    realConfig,\n    realDivConfig,\n    reciprocalConfig,\n    reluConfig,\n    relu6Config,\n    reshapeConfig,\n    resizeBilinearConfig,\n    resizeBilinearGradConfig,\n    resizeNearestNeighborConfig,\n    resizeNearestNeighborGradConfig,\n    reverseConfig,\n    rotateWithOffsetConfig,\n    roundConfig,\n    rsqrtConfig,\n    scatterNdConfig,\n    searchSortedConfig,\n    selectConfig,\n    seluConfig,\n    sigmoidConfig,\n    signConfig,\n    sinConfig,\n    sinhConfig,\n    sliceConfig,\n    stepConfig,\n    stridedSliceConfig,\n    stringNGramsConfig,\n    softmaxConfig,\n    softplusConfig,\n    spaceToBatchNDConfig,\n    sparseSegmentMeanConfig,\n    sparseSegmentSumConfig,\n    sparseToDenseConfig,\n    splitVConfig,\n    sqrtConfig,\n    squareConfig,\n    squaredDifferenceConfig,\n    subConfig,\n    sumConfig,\n    tanConfig,\n    tanhConfig,\n    tensorScatterUpdateConfig,\n    tileConfig,\n    topKConfig,\n    transformConfig,\n    transposeConfig,\n    unpackConfig,\n    unsortedSegmentSumConfig,\n    zerosLikeConfig\n];\nfor (const kernelConfig of kernelConfigs) {\n    registerKernel(kernelConfig);\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport * from './base';\nimport './register_all_kernels';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtd2ViZ3B1L3NyYy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxjQUFjLFFBQVEsQ0FBQztBQUN2QixPQUFPLHdCQUF3QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5leHBvcnQgKiBmcm9tICcuL2Jhc2UnO1xuaW1wb3J0ICcuL3JlZ2lzdGVyX2FsbF9rZXJuZWxzJztcbiJdfQ=="],"names":["fromPixels2DContext","PixelsOpType","MatMulProgramType","BinaryOpType","UnaryOpType","CumOpType","ENV","dist","OBj","registerFlag","AdapterInfo","constructor","adapterInfo","vendor","architecture","intelGPUGeneration","getIntelGPUGeneration","isIntel","startsWith","Number","match","BufferManager","device","numUsedBuffers","numFreeBuffers","freeBuffers","Map","usedBuffers","numBytesUsed","numBytesAllocated","acquireBuffer","size","usage","mappedAtCreation","reuse","buffer","key","has","set","get","length","pop","createBuffer","push","releaseBuffer","bufferArray","index","indexOf","destroy","getNumUsedBuffers","getNumFreeBuffers","dispose","forEach","buffers","TextureManager","numUsedTextures","numFreeTextures","freeTextures","usedTextures","acquireTexture","width","height","format","bytesPerElement","getBytesPerElement","byteSize","getTextureKey","newTexture","shift","createTexture","releaseTexture","texture","textureList","textureIndex","splice","getNumUsedTextures","getNumFreeTextures","textures","atomicAddSnippet","ptr","v","type","compileProgram","program","inputsData","output","parallelCompilation","outputData","dtype","shape","source","makeShader","inputInfo","uniformShader","stridesDataType","prefixSnippets","flatWorkgroupSize","workgroupSize","outputComponent","isFlatDispatch","pixelsOpType","inoutSnippet","FROM_PIXELS","dataTypeToGPUType","outShapeStridesType","useGlobalIndex","isFlatDispatchLayout","commonSnippet","join","getCoordsFromIndexSnippet","getUserCode","getStartHeaderString","uniformDeclaration","variableNames","x","i","perDataType","getCoordsDataType","charAt","toLowerCase","slice","outputDataType","uniforms","replace","_","p1","p2","atomic","variableComponents","coordsSnippet","getOutputCoordsSnippet","outShape","dispatchLayout","y","z","outRank","rank","snippet","gatherDimensionsStr","dims","arr","strides","symbolicallyComputeStrides","indicesArr","variableName","Math","max","numCoords","map","d","indicesStr","j","dimensions","sources","isInfSnippet","getOutputIndexFromCoordsSnippet","D5U","assert","setOutputSnippet","outBufferType","component","gpuType","typeSnippet","inputSnippet","getInputSnippet","res","getInputAtCoordsSnippet","texName","name","funcName","toUpperCase","inputs","shapeStr","rankStr","inShape","getInputByOutputSnippet","texFuncSnippet","inRank","arraysEqual","broadcastDims","backend_util","getBroadcastDims","rankDiff","getCoordsXYZ","unpackedCoordsSnippet","coordsType","coordsValues","s","module","createShaderModule","code","label","printShaderString","printShaderArray","split","some","item","shaderKey","includes","console","group","debug","groupEnd","createComputePipelineAsync","compute","entryPoint","layout","createComputePipeline","Error","getMainHeaderString","params","stridesName","computeStrides","coords","line1","line2","dispatch","hasOwnProperty","arrayProduct","product","tilesFitEvenlyIntoShape","tileSize","every","dim","dimIdx","computeDispatch","outputShape","elementsPerThread","dispatchX","dispatchY","dispatchZ","ceil","computeWorkgroupInfoForMatMul","dimAOuter","dimInner","dimBOuter","transposeA","computeWorkgroupSizeForConv2d","isVec4","dim0","dim1","computeWorkPerThreadForConv2d","flatDispatchLayout","GPUBytesPerElement","isWebGPUSupported","globalThis","navigator","gpu","assertNotComplex","tensor","opName","Array","isArray","t","CPU_HANDOFF_SIZE_THRESHOLD","getNumber","reshapeDispatch","MAX_COMPUTE_PER_DIMENSION_DISPATCH_SIZE","limits","maxComputeWorkgroupsPerDimension","undefined","dispatchAverage","sqrt","cbrt","WebGPUBackend","Zuw","nextDataId","commandQueueOwnedIds","WeakSet","dispatchCountInPass","disposed","downloadWaitMs","tensorDataPendingDisposal","queryResolveBuffer","querySet","querySetCount","stagingPendingDisposal","uniformPendingDisposal","uploadWaitMs","hasReadSyncWarned","hasTimestampQueryWarned","pipelineCache","queue","commandEncoder","computePassEncoder","supportTimestampQuery","features","thresholdToIncreaseWorkgroups","bufferManager","textureManager","tensorMap","JLz","SRH","getBool","dummyCanvas","document","createElement","dummyContext","getContext","configure","body","appendChild","floatPrecision","disposeData","dataId","force","tensorData","refCount","complexTensorInfos","real","imag","releaseResource","delete","memory","numBytesInGPU","numBytesAllocatedInGPU","unreliable","resource","external","GPUBuffer","GPUTexture","incRef","decRef","write","values","id","move","submitQueue","submit","finish","b","ensureCommandEncoderReady","createCommandEncoder","endComputePassEncoder","end","checkCompileCompletionAsync","pipelines","Promise","all","Object","e","message","keys","getBufferData","warn","stagingBuffer","GPUBufferUsage","COPY_DST","MAP_READ","copyBufferToBuffer","mapAsync","GPUMapMode","READ","getMappedRange","unmap","getCurrentTexture","convertAndCacheOnCPU","data","readSync","realValues","imagValues","complexVals","convertBackendValuesAndArrayBuffer","mergeRealAndImagArrays","alphaModes","bufferSize","pixelsSize","valsGPU","ArrayBuffer","stagingDeviceStorage","OffscreenCanvas","stagingHostStorage","storage","context","GPUTextureUsage","alphaMode","readDataGPUToCPU","offset","copyBufferToTexture","bytesPerRow","canvasWidth","willReadFrequently","clearRect","drawImage","stagingValues","getImageData","span","Uint8ClampedArray","k","value","fullyReadCount","floor","remainSize","vals","read","ps","copyBuffer","srcBuffer","dstBuffer","createTensorFromGPUData","webGPUData","zeroCopy","sizeFromShape","STORAGE","COPY_SRC","makeTensorFromDataId","readToGPU","srcTensorData","tensorInfo","makeTensorInfo","tensorRef","makeTensorFromTensorInfo","bufferSync","strings","decodeString","f3b","_a","time","f","oldActiveTimers","activeTimers","newActiveTimers","outerMostTime","programTimersStack","flattenedActiveTimerQueries","flatten","query","filter","flattenedActiveTimerNames","kernelMs","wallMs","sum","ms","isString","encodeString","tensorToBinding","createView","uploadToGPU","mapState","MAP_WRITE","arrayBuffer","Int32Array","Float32Array","makeUniforms","programUniform","currentOffset","preLength","offsets","maxAlignmentOfField","baseAlignment","Uint32Array","uniformBuffer","UNIFORM","writeBuffer","runWebGPUProgram","outputDtype","programDefinedUniform","getTypedArrayFromDType","input","makeShaderKey","shapes","types","element","inputShapesEqualsOutShape","broadcastDimsKey","flatDispatchString","pipeline","recordAndSubmit","bufferShapes","uniformsType","NaN","Infinity","concat","bindings","add","bindGroup","createBindGroup","getBindGroupLayout","entries","binding","shouldTimeProgram","computePassDescriptor","createQuerySet","count","timestampWrites","beginningOfPassWriteIndex","endOfPassWriteIndex","beginComputePass","setPipeline","setBindGroup","dispatchWorkgroups","DRAW","getQueryTime","QUERY_RESOLVE","resolveQuerySet","queryStagingBuffer","BigUint64Array","shouldExecuteOnCPU","sizeThreshold","numDataIds","jqO","gpuDescriptor","powerPreference","adapter","requestAdapter","deviceDescriptor","requiredFeatures","adapterLimits","requiredLimits","maxComputeWorkgroupStorageSize","maxStorageBufferBindingSize","maxBufferSize","maxComputeWorkgroupSizeX","maxComputeInvocationsPerWorkgroup","requestDevice","requestAdapterInfo","EQUAL","FLOOR_DIV","GREATER","GREATER_EQUAL","LESS","LESS_EQUAL","LOGICAL_AND_VEC4","LOGICAL_OR_VEC4","MOD","MOD_VEC4","NOT_EQUAL","NOT_EQUAL_VEC4","POW","POW_VEC4","PRELU_VEC4","getBinaryOpString","useVec4","doOpSnippet","isNaN","dTypeN","boolN","ATAN2","MAX","MIN","ADD","COMPLEX_MULTIPLY_IMAG","COMPLEX_MULTIPLY_REAL","DIV","ELU_DER","LOGICAL_AND","LOGICAL_OR","MUL","PRELU","SQUARED_DIFFERENCE","SUB","ACOS","ACOSH","ASIN","ATAN","ATANH","COSH","ELU_VEC4","ERF","ERF_P","ERF_A1","ERF_A2","ERF_A3","ERF_A4","ERF_A5","LOG","LOG1P","LEAKYRELU_VEC4","RELU_VEC4","SELU","SELU_SCALE","SELU_SCALEALPHA","SINH","SOFTPLUS","STEP","TANH","getUnaryOpString","ABS","ASINH","COS","CEIL","ELU","EXP","EXPM1","FLOOR","IS_FINITE","IS_INF","IS_NAN","LINEAR","LOGICAL_NOT","NEG","LEAKYRELU","RECIPROCAL","RELU","RELU6","ROUND","RSQRT","SIGMOID","SIGN","SIN","SQRT","SQUARE","TAN","TO_INT","activationFnSnippet","activation","hasPreluActivationWeights","packed","coordsLength","activationOpSnippet","elementSize","dataType","biasActivationSnippet","hasBias","matMulReadFnSource","transposeB","fitAOuter","fitBOuter","fitInner","sampleA","matMulReadWriteFnSource","writeDataToSubAVec4Snippet","transpose","innerElementSize","calculateResultSnippet","rowPerThread","tileInner","bCachedStr","accStr","makeMatMulPackedVec4Source","workPerThread","splitK","splitedDimInner","broadcastBatch","tileAOuter","tileBOuter","tileAWidth","tileAHight","rowPerThreadB","colPerThread","writeDataToSubASnippet","readDataFromSubASnippet","makeMatMulPackedSource","sequentialAccessByThreads","rowPerThreadA","colPerThreadA","matmulSnippet","readVectorASnippet","MatMulPackedProgram","aShape","bias","preluActivationWeights","isVectorA","workgroupInfo","addBias","getShapeFit","userCode","makeVectorMatrixProductSource","MatMulReduceProgram","workgroupSizeX","MatMulSmallOutputSizeProgram","bShape","makeMatMulSmallOutputSizeSource","MatMulSplitKProgram","BiasActivationProgram","FillProgram","fill","args","backend","attrs","inferDtype","getArrayFromDType","uniformData","fillConfig","kernelName","deh","backendName","kernelFunc","reshape","xSize","$shape","inferFromImplicitShape","$xSize","reshapeConfig","HZH","batchMatMulImpl","a","leakyreluAlpha","out","aRank","bRank","innerShapeA","innerShapeB","outerShapeA","outerShapeB","outerDimsA","outerDimsB","batchDimA","batchDimB","outShapeOuterDims","Jyw","assertAndGetBroadcastShape","a3dShape","b3dShape","a3d","b3d","intermediates","batchDim","matmulProgramType","thresholdFlagValue","workgroupsBy32x32","hasFewWorkgroups","biasActivationProgram","activationInputs","outActivated","outReshaped","_fusedMatMulConfig","usg","BinaryOpComplexProgram","op","opStr","BinaryOpProgram","useSharedMemoryWithA","useSharedMemoryWithB","lastDimensionSize","aDivisibleBy4","bDivisibleBy4","isScalarShape","dType","opFnStr","sharedIndexSnippet","accessDataSnippet","identity","identityConfig","iJz","complex","complexInfo","realTensorInfo","imagTensorInfo","complexConfig","Zz9","UnaryOpProgram","unaryKernelFunc","opType","cpuKernelImpl","$dtype","webgpuBackend","xData","outValues","binaryKernelFunc","supportsComplex","aData","bData","complexParts","aPart","bPart","aHandle","bHandle","x8V","realProgram","imagProgram","complexOutput","decodedAVals","fromUint8ToStringArray","decodedBVals","addImpl","addImplCPU","castImpl","castImplCPU","ceilImpl","ceilImplCPU","concatImpl","concatImplCPU","equalImpl","equalImplCPU","expImpl","expImplCPU","expm1Impl","expm1ImplCPU","floorImpl","floorImplCPU","floorDivImpl","floorDivImplCPU","gatherNdImpl","gatherNdImplCPU","gatherV2Impl","gatherV2ImplCPU","greaterEqualImpl","greaterEqualImplCPU","greaterImpl","greaterImplCPU","lessEqualImpl","lessEqualImplCPU","lessImpl","lessImplCPU","logImpl","logImplCPU","maxImpl","maxImplCPU","maximumImpl","maximumImplCPU","minimumImpl","minimumImplCPU","multiplyImpl","multiplyImplCPU","negImpl","negImplCPU","notEqualImpl","notEqualImplCPU","prodImpl","prodImplCPU","rangeImpl","rangeImplCPU","rsqrtImpl","rsqrtImplCPU","scatterImpl","scatterImplCPU","simpleAbsImpl","simpleAbsImplCPU","sliceImpl","sliceImplCPU","stridedSliceImpl","stridedSliceImplCPU","stringNGramsImpl","stringNGramsImplCPU","subImpl","subImplCPU","tileImpl","tileImplCPU","topKImpl","topKImplCPU","transposeImpl","transposeImplCPU","uniqueImpl","uniqueImplCPU","shared","abs","absConfig","SYM","acos","acosConfig","VGw","acosh","acoshConfig","SpW","addKernelFunc","addConfig","mm_","AddNPackedProgram","snippets","variable","operation","addNConfig","Xze","tensors","reduce","d1","d2","TransposeSharedProgram","newDim","TransposeProgram","switched","getSwitchedCoords","switchedCoords","perm","xRank","newShape","transposeConfig","G3Y","ReduceProgram","reduceInfo","reduceType","inputShape","batchSize","inSize","computeOutAndReduceShapes","reduceOp","initValue","outputSnippet","sharedMemorySnippet","RETURN_TYPES","axis","keepDims","toDispose","origAxes","parseAxisParam","axes","permutedAxes","getAxesPermutation","getInnerMostAxes","assertAxesAreInnerMostDims","reduceOutShape","reduceShape","resOutShape","expandShapeToKeepDim","xVals","outVals","outDtype","z4k","windowSize","outSize","reduced","allConfig","oT6","anyConfig","IKK","ArgMinMaxProgram","getInputShapeLastDim","splitOutputCoords","argMaxConfig","sJF","$x","intermediateTensorInfos","NEGATIVE_INFINITY","argMinConfig","aJk","POSITIVE_INFINITY","asin","asinConfig","M2y","asinh","asinhConfig","qw7","atan","atanConfig","jMg","atan2","atan2Config","QCc","atanh","atanhConfig","Oyi","PoolWithFilterSizeEqualsOneProgram","convInfo","Pool2DProgram","poolType","computePositions","flattenPositions","includeBatchIndex","updateSnippet","positionStr","returnValue","Pool3DProgram","reductionIndices","maxConfig","YoZ","mean","meanConfig","q2K","poolImpl","filterWidth","filterHeight","inWidth","inHeight","padInfo","reduceX","reshapeX","result","strideHeight","strideWidth","top","left","dilationHeight","dilationWidth","effectiveFilterHeight","effectiveFilterWidth","avgPoolConfig","JhU","filterSize","pad","dimRoundingMode","computePool2DInfo","avgPool3DConfig","_k9","dataFormat","computePool3DInfo","avgPoolProgram","strideDepth","front","inDepth","effectiveFilterDepth","AvgPool2DBackpropProgram","AvgPool3DBackpropProgram","avgPool3DGradConfig","IMb","dy","avgMultiplier","filterDepth","outDepth","outHeight","outWidth","avgPoolGradConfig","ROF","batchMatMulConfig","XLW","SliceProgram","start","destSize","coordSum","sourceCoords","getCoords","coord","begin","$begin","$size","kuN","parseSliceParams","assertParamsValid","xTensorData","sliceConfig","p2w","batchToSpaceNDConfig","zws","blockShape","crops","prod","reshaped","getReshaped","permuted","getPermuted","reshapedPermuted","getReshapedPermuted","sliceBeginCoords","getSliceBeginCoords","sliceSize","getSliceSize","reshapedIntermediate","transposedIntermediate","reshapedIntermediate2","sliced","writeSnippet","binaryWriteSnippet","BincountProgram","hasWeights","binaryOutput","bincountConfig","zvY","weights","weightsSize","bincountInputs","BroadcastArgsProgram","broadcastArgsConfig","eEB","s0","s1","s0TensorInfo","s1TensorInfo","s0Vals","s1Vals","broadcastShape","from","s0Size","s1Size","outputSize","notEqual","notEqualConfig","yQU","inputData","realConfig","xJR","castConfig","RFZ","cast","zerosTensor","lls","floatX","realPart","hasEncodingLoss","resultShape","resultType","resultData","int_int","zerosTensorInfo","ceilConfig","gJX","ClipVec4Program","ClipProgram","clipByValueConfig","xnO","clipValueMin","clipValueMax","ComplexAbsProgram","makeComplexComponentTensorInfo","complexTensor","complexPart","complexAbsConfig","yj2","programInputs","ConcatProgram","computeOutShape","offsetLength","lastIndex","lastShiftIndex","imagConfig","J_u","$axis","assertParamsConsistent","$inputs","reals","imags","realConcated","imagConcated","r","runOnCpu","tensors2D","innerSize","inputsValShapes","simplyConcat","finalOutShape","outInfo","maxInputNum","maxStorageBuffersPerShaderStage","reducedInputs","subArray","computeTensors2D","reshapedResult","concatConfig","Eh3","Conv2DMMProgram","isChannelsLast","inChannels","outChannels","matMulSource","elementsSize","conv2dCommonSnippet","innerElementSizeX","innerElementSizeW","coordASnippet","coordResSnippet","row","col","readXSnippet","getXSnippet","sampleX","sampleW","getWSnippet","resType","aType","bType","Conv2DNaiveProgram","Im2ColProgram","rowDim","colDim","getShapeForBatchMatMul","conv2DImpl","sameSize","useNaiveConv2d","conv2dByMatMul","xReshaped","filterReshaped","sharedDim","targetShape","conv2dWithIm2Col","numCols","x2ColShape","im2ColProgram","x2Col","inputVar","conv2DConfig","mhS","dilations","$dataFormat","convertConv2DDataFormat","computeConv2DInfo","Conv2DDerInputProgram","channelDim","vec4Snippet","Conv2DDerFilterProgram","filterShape","Conv3DDerFilterProgram","Conv3DDerInputProgram","conv2DBackpropFilterConfig","wUP","Conv2DDerInputMMProgram","conv2dTransposeCommonSnippet","readASnippet","conv2DBackpropInputConfig","wm","Conv3DNaiveProgram","conv3DConfig","x12","computeConv3DInfo","dilationDepth","conv3DBackpropFilterV2Config","o2y","conv3DBackpropInputV2Config","ik2","cos","cosConfig","mc4","cosh","coshConfig","TR1","CropAndResizeProgram","channnel","boxShape","cropSize","method","numBoxes","methodId","cropHeightBiggerThan1","cropWidthBiggerThan1","inputHeightFloat","inputWidthFloat","heightRatio","heightScale","inY","widthRatio","widthScale","inX","cropAndResizeConfig","VcC","image","boxes","boxInd","extrapolationValue","CumProgram","exclusive","reverse","initVal","Prod","val","cum_webgpu_getCoords","condition","idxString","getFinalCoord","cumImpl","permutation","permutedX","permutedAxis","log2","prevResult","reversePermutation","getUndoAxesPermutation","reverseTransposedResult","cumprodConfig","Byc","cumsumConfig","iHb","Sum","denseBincountConfig","QRR","xRankOne","DepthToSpaceProgram","getHeightCoordString","getWidthCoordString","getDepthCoordString","getOutputDepthSize","getInputSamplingString","depthToSpaceConfig","T0n","blockSize","inputHeight","inputWidth","inputDepth","outputHeight","outputWidth","outputDepth","DepthwiseConv2DNCHWSharedProgram","hasPreluActivation","tileAHeight","DepthwiseConv2DVec4Program","virtualWidth","virtualOutputShape","xNumber","DepthwiseConv2DProgram","depthwiseConv2dNativeConfig","cie","$dilations","DepthwiseConv2DDerFilterProgram","DepthwiseConv2DDerInputProgram","depthwiseConv2dNativeBackpropFilterConfig","sL$","depthwiseConv2dNativeBackpropInputConfig","y7R","DiagProgram","diagConfig","$w","flat","Dilation2DProgram","dilation2DConfig","p4S","computeDilation2DInfo","Dilation2DBackpropInputProgram","Dilation2DBackpropFilterProgram","dilation2DBackpropFilterConfig","Vn9","dilation2DBackpropInputConfig","ekb","DrawProgram","textureFormat","calculateResult","drawConfig","hGc","canvasWebGPU","canvas","options","imageOptions","alpha","gpuContext","numChannels","STORAGE_BINDING","info","canvas2dContext","multiplyKernelFunc","multiplyConfig","wYn","sumConfig","GBy","einsumConfig","$g6","equation","allDims","summedDims","idDims","decodeEinsumEquation","checkEinsumDimSizes","path","steps","getEinsumComputePath","nSteps","numDimsRemaining","tensorsToDispose","idTerm","permutationIndices","expandDims","dimsToExpand","getEinsumPermutation","isIdentityPermutation","elu","eluConfig","SX0","eluGradConfig","HEU","equal","equalConfig","hdR","erf","erfConfig","Omj","exp","expConfig","NEP","inputRank","$dim","expandDimsConfig","YFo","expm1","expm1Config","Y0y","FFTProgram","opString","fftImpl","inverse","inputSize","innerDimensionSize","batch","input2D","xShape","denominator","PI","imagPart","complexOutputReshaped","fftConfig","vwp","FlipLeftRightProgram","imageShape","flipLeftRightConfig","Uyb","floorConfig","OR","floorDiv","floorDivConfig","jeX","FromPixelsProgram","importVideo","textureLoad","textureType","fromPixelsConfig","eBW","pixels","isVideo","HTMLVideoElement","isImage","HTMLImageElement","isCanvas","HTMLCanvasElement","isImageBitmap","ImageBitmap","videoWidth","videoHeight","isVideoOrImage","importExternalTexture","newWillReadFrequently","RENDER_ATTACHMENT","TEXTURE_BINDING","copyExternalImageToTexture","imageData","pixelArray","Uint8Array","dataLength","BatchNormProgram","meanShape","varianceShape","offsetShape","scaleShape","offsetSnippet","scaleSnippet","fusedBatchNormConfig","sHE","scale","variance","varianceEpsilon","batchNormInputs","webGPUBackend","fusedConv2DConfig","_V0","fusedDepthwiseConv2DConfig","luS","eitherStridesOrDilationsAreOne","GatherNDProgram","sliceDim","strideString","gatherNdConfig","q1x","indices","indicesShape","sliceRank","paramsSize","numSlices","prepareAndValidate","flattenIndices","flattenX","indicesData","paramsBuf","outValue","GatherProgram","getSourceCoords","currentCoords","gatherV2","batchDims","parsedAxis","shapeInfo","segment_util","collectGatherOpShapeInfo","indicesSize","outerSize","dimSize","flattenIndex","flattenOutputShape","indicesTensorData","indicesValues","indicesBuffer","flattenXTensorData","xValues","xBuffer","outBuf","gatherV2Config","qi_","greater","greaterConfig","iZT","greaterEqual","greaterEqualConfig","Acj","ifftConfig","Qg5","IsFinite_isFinite","isFiniteConfig","avt","isInf","isInfConfig","iWB","IsNaN_isNaN","isNaNConfig","r7n","leakyReluConfig","J$2","less","lessConfig","vtC","lessEqual","lessEqualConfig","CAk","LinSpaceProgram","linSpaceConfig","e7N","stop","num","step","log","logConfig","ZbH","log1p","log1pConfig","kU","logicalAnd","logicalAndConfig","PYm","logicalNot","logicalNotConfig","VfG","logicalOr","logicalOrConfig","MZg","powOperatorSnippet","LRNProgram","LRNSharedProgram","radius","maxAllowRadius","elementsPerWorkgroup","lrnConfig","eZ0","depthRadius","beta","LRNGradProgram","lrnGradConfig","Hhh","maximum","maximumConfig","BMI","maxPoolConfig","mTV","maxPool3DConfig","OAf","maxPoolProgram","MaxPool2DBackpropProgram","MaxPool3DBackpropProgram","maxPool3DGradConfig","OU7","maxPool3dPositionsProgram","maxPool3dPositions","maxPool3dBackpropProgram","maxPoolGradConfig","OV7","maxPoolPositionsProgram","maxPoolPositions","maxPoolBackpropProgram","maxPoolWithArgmaxConfig","vFR","includeBatchInIndex","poolOutput","indexOutput","minConfig","c17","minimum","minimumConfig","q8u","MirrorPadProgram","paddings","mode","p","shaderStart","shaderEnd","shaderOutC","unpackedCoords","mirrorPadConfig","jQs","mod","modConfig","Vbg","MultinomialProgram","numSamples","SoftmaxProgram","softmax","logits","logitsReshaped","resReshaped","softmaxConfig","Gcp","multinomialConfig","NZg","seed","normalized","probs","numOutcomes","negConfig","kuV","nonMaxSuppressionV3Config","uv1","scores","maxOutputSize","iouThreshold","scoreThreshold","boxesVals","scoresVals","selectedIndices","GDt","nonMaxSuppressionV3Impl","nonMaxSuppressionV5Config","W0H","softNmsSigma","selectedScores","nonMaxSuppressionV5Impl","OneHotProgram","numIndices","depth","oneHotConfig","we_","onValue","offValue","zerosLike","zerosLikeConfig","RuY","onesLikeConfig","qWM","onesLike","packConfig","QiL","assertShapesMatch","expandedTensors","expandedT","padCommon","fillZero","startValue","endValue","leftPadCondition","rightPadCondition","PadProgram","padV2Config","lyA","constantValue","pow","powConfig","pe_","preluConfig","o0g","prodConfig","DlI","rangeConfig","e6w","realDiv","realDivConfig","oHH","reciprocal","reciprocalConfig","$HU","relu","reluConfig","qkr","relu6","relu6Config","SbG","ResizeBilinearProgram","newHeight","newWidth","resizeBilinearConfig","_Yw","images","alignCorners","halfPixelCenters","adjustHeight","adjustWidth","ResizeBilinearBackpropProgram","resizeBilinearGradConfig","zbQ","xHeight","xWidth","yHeight","yWidth","effectiveXSize","effectiveYSize","invHeightScale","invWidthScale","winHeight","winWidth","ResizeNearestNeighborProgram","sourceFracIndexRC","resizeNearestNeighborConfig","dpD","ResizeNearestNeigborBackpropProgram","resizeNearestNeighborGradConfig","Hmb","ReverseProgram","reverseCoordsSnippet","reverseConfig","mKl","xShape4D","dims4D","ax","RotateProgram","fillValue","fillSnippet","rotateWithOffsetConfig","b9H","radians","center","centerX","centerY","getImageCenter","sin","parseFloat","toFixed","round","roundConfig","e07","rsqrt","rsqrtConfig","bV0","ScatterProgram","flattenXShape","indicesRank","updatesRank","sumDupeIndices","sliceDimGreaterThanOne","stridesType","indicesString","indicesSnippet","outCoordsString","getUpdatesCoordsFromFlatIndex","updatesString","idx","updatesSnippet","scatterNdConfig","xQA","updates","numUpdates","calculateShapes","flattenShape","SearchSortedProgram","side","boundComparator","searchSortedConfig","nr8","sortedSequence","SelectProgram","cRank","cCoords","abCoords","cCoordVars","abCoordVars","selectConfig","PhF","selu","seluConfig","oFR","sigmoid","sigmoidConfig","a5O","sign","signConfig","i5y","sinConfig","RQH","sinh","sinhConfig","wYB","softplus","softplusConfig","MRv","SpaceToBatchNDProgram","paddedXShape","reshapedPaddedXShape","paddedXShapeStridesShapeLength","spaceToBatchNDConfig","TQc","completePaddings","reshapedPaddedShape","permutedReshapedPaddedPermutation","paddedXShapeStrides","paddedXT","SparseSegmentSumProgram","sparseSize","SparseSegmentIdCountProgram","segmentIdsShape","SparseSegmentMeanProgram","sparseSegmentReduce","segmentIds","isSum","segmentSize","$segmentIds","lastSegmentIdPlusOne","sparseSegmentSum","$sparseSegmentSum","sparseSegmentIdCount","$sparseSegmentIdCount","sparseSegmentMean","$sparseSegmentMean","sparseSegmentMeanConfig","w3H","sparseSegmentSumConfig","ZjV","TileProgram","reps","tile_webgpu_getSourceCoords","uniformPrefix","tile","buf","tileConfig","n9L","sparseToDenseConfig","D2d","sparseIndices","sparseValues","defaultValue","indicesBuf","updatesBuf","$defaultValue","$sparseIndices","$sparseValues","zero","makeZerosTypedArray","$denseValues","denseValues","splitVConfig","L8s","numOrSizeSplits","splitSizes","prepareSplitSize","sliceT","sqrtConfig","FKq","squareConfig","bK0","squaredDifference","squaredDifferenceConfig","_tC","stepConfig","h8e","StridedSliceProgram","newCoords","outputAxis","stridedSliceConfig","jQk","beginMask","endMask","ellipsisMask","newAxisMask","shrinkAxisMask","finalShapeSparse","finalShape","isIdentity","sliceDim0","isSimpleSlice","$end","$strides","sliceInfo","xBuf","resultValues","stringNGramsConfig","_JP","separator","nGramWidths","leftPad","rightPad","padWidth","preserveShortSequences","dataSplits","$data","$dataSplits","nGrams","nGramsSplits","sub","subConfig","Tr8","tan","tanConfig","sEM","tanh","tanhConfig","MIZ","tensorScatterUpdateConfig","SIB","flattenTensor","SwapProgram","MergeProgram","disposeIntermediateTensorInfoOrNull","roundUpToPow2","pow2","topKConfig","cWu","sorted","lastDim","allTopKVals","allTopKIndices","x2D","kPow2","lastDimPow2","getInputs","runSwap","dir","inc","firstPass","uniformDataSwap","prevIndices","len","mergeProgram","uniformDataMerge","prevValues","TransformProgram","transformConfig","wx7","fillModeId","transforms","interpolation","fillMode","imageHeight","imageWidth","unpackConfig","ToN","outIndex","UnsortedSegmentSumProgram","unsortedSegmentSumConfig","Qvg","numSegments","a2D","segResult","kernelConfig","wCN"],"sourceRoot":""}