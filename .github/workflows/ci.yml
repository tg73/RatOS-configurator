name: "CI"
env:
  RATOS_CONFIGURATION_PATH: ${{ github.workspace }}/ratos-configurator/configuration
  KLIPPER_CONFIG_PATH: ${{ github.workspace }}/config
  RATOS_SCRIPT_DIR: ${{ github.workspace }}/ratos-configurator/src/scripts
  KLIPPER_DIR: ${{ github.workspace }}/klipper
  KLIPPER_ENV: ${{ github.workspace }}/klippy-env
  MOONRAKER_DIR: ${{ github.workspace }}/moonraker
  LOG_FILE: ${{ github.workspace }}/ratos-configurator.log
  RATOS_DATA_DIR: ${{ github.workspace }}/ratos-data
on:
  push:
    branches:
      - "development"
      - "v2.1.x"
      - "monorepo"
      - "**/devpub/**"
  pull_request:
    branches:
      - "**"

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  checkout_dependencies:
    name: Lint, Typecheck and Tests
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump input context
        env:
          INPUT_CONTEXT: ${{ toJson(inputs) }}
        run: echo "$INPUT_CONTEXT"	
      - name: Dump needs context
        env:
          NEEDS_CONTEXT: ${{ toJson(needs) }}
        run: echo "$NEEDS_CONTEXT"	

      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: Rat-OS/RatOS-configurator
          path: "ratos-configurator"
          fetch-tags: true
      - name: Extract target branch name
        shell: bash
        run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Install Node
        uses: actions/setup-node@v4.0.1
        with:
          # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
          node-version: 20.x # Tests currently require node 20

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: false
          version: 9.1

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
  
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Dependencies
        working-directory: ratos-configurator/src
        run: pnpm install --frozen-lockfile

      - name: Checkout RatOS Configuration
        uses: actions/checkout@v4
        if: github.ref_name != 'monorepo' && !contains(github.ref_name, '/devpub/')
        with:
          repository: Rat-OS/RatOS-configuration
          path: "ratos-configuration"
          ref: ${{ github.base_ref || github.ref_name }}

      - name: Checkout Klipper
        uses: actions/checkout@v4
        with:
          repository: klipper3d/klipper
          path: "klipper"

      - name: Checkout Moonraker
        uses: actions/checkout@v4
        with:
          repository: Arksine/moonraker
          path: "moonraker"

      - name: Lint
        working-directory: ratos-configurator/src
        run: pnpm run lint:ci

      - name: Typecheck
        uses: fersilva16/ts-report-action@1.1.0
        if: success() || failure() # run this step even if previous step failed
        with:
          project: ratos-configurator/src/tsconfig.json
          
      - name: Run test suite
        working-directory: ratos-configurator/src
        if: success() || failure() # run this step even if previous step failed
        run: pnpm run test:ci --outputFile=./report.xml

      - name: Upload reports
        uses: actions/upload-artifact@v3 # upload test results
        if: success() || failure() # run this step even if previous step failed
        with:
          name: test-results
          path: |
            ratos-configurator/src/report.xml
            ratos-configurator/src/eslint_report.json

      - name: Report status
        if: ${{ failure() }}
        run: exit 1
